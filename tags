!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon7
ALT	kern/console.c	/^#define ALT	/;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	/^#define ARRAYSIZE /;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	/^#define ASM /;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	/^	#define ASSERT /;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	/^	#define BCAST /;"	d	file:
BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	/^	#define BUSY /;"	d	file:
C	kern/console.c	/^#define C(/;"	d	file:
CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
CHECK	user/faultregs.c	/^#define CHECK(/;"	d	file:
CHECK	user/faultregs.c	/^#undef CHECK$/;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	/^#define COM1	/;"	d	file:
COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon6
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon6
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon6
CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
CTL	kern/console.c	/^#define CTL	/;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	/^	#define DEASSERT /;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	/^#define DEBUG_SPINLOCK$/;"	d
DELIVS	kern/lapic.c	/^	#define DELIVS /;"	d	file:
DEPTH	user/forktree.c	/^#define DEPTH /;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
ENABLE	kern/lapic.c	/^	#define ENABLE /;"	d	file:
ENVGENSHIFT	kern/env.c	/^#define ENVGENSHIFT	/;"	d	file:
ENVX	inc/env.h	/^#define ENVX(/;"	d
ENV_CREATE	kern/env.h	/^#define ENV_CREATE(/;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon1
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon1
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon1
ENV_PASTE3	kern/env.h	/^#define ENV_PASTE3(/;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon1
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon1
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	/^#define EOI /;"	d	file:
ERROR	kern/lapic.c	/^#define ERROR /;"	d	file:
ESR	kern/lapic.c	/^#define ESR /;"	d	file:
EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_EOF	inc/error.h	/^	E_EOF		= 9,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 8,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
FIXED	kern/lapic.c	/^	#define FIXED /;"	d	file:
FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	/^#define ICRHI /;"	d	file:
ICRLO	kern/lapic.c	/^#define ICRLO /;"	d	file:
ID	kern/lapic.c	/^#define ID /;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	/^	#define INIT /;"	d	file:
IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
IO_PIC1	kern/picirq.h	/^#define IO_PIC1	/;"	d
IO_PIC2	kern/picirq.h	/^#define IO_PIC2	/;"	d
IO_RTC	kern/kclock.h	/^#define	IO_RTC	/;"	d
IO_RTC	kern/lapic.c	/^#define IO_RTC /;"	d	file:
IRQ_ERROR	inc/trap.h	/^#define IRQ_ERROR /;"	d
IRQ_IDE	inc/trap.h	/^#define IRQ_IDE /;"	d
IRQ_KBD	inc/trap.h	/^#define IRQ_KBD /;"	d
IRQ_OFFSET	inc/trap.h	/^#define IRQ_OFFSET	/;"	d
IRQ_SERIAL	inc/trap.h	/^#define IRQ_SERIAL /;"	d
IRQ_SLAVE	kern/picirq.h	/^#define IRQ_SLAVE	/;"	d
IRQ_SPURIOUS	inc/trap.h	/^#define IRQ_SPURIOUS /;"	d
IRQ_TIMER	inc/trap.h	/^#define IRQ_TIMER /;"	d
JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
JOS_INC_CPU_H	kern/cpu.h	/^#define JOS_INC_CPU_H$/;"	d
JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
JOS_INC_ENV_H	inc/env.h	/^#define JOS_INC_ENV_H$/;"	d
JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
JOS_INC_LIB_H	inc/lib.h	/^#define JOS_INC_LIB_H /;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	/^#define JOS_INC_SPINLOCK_H$/;"	d
JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	/^#define JOS_INC_SYSCALL_H$/;"	d
JOS_INC_TRAP_H	inc/trap.h	/^#define JOS_INC_TRAP_H$/;"	d
JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
JOS_KERN_ENV_H	kern/env.h	/^#define JOS_KERN_ENV_H$/;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	/^#define JOS_KERN_KCLOCK_H$/;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	/^#define JOS_KERN_PICIRQ_H$/;"	d
JOS_KERN_PMAP_H	kern/pmap.h	/^#define JOS_KERN_PMAP_H$/;"	d
JOS_KERN_SCHED_H	kern/sched.h	/^#define JOS_KERN_SCHED_H$/;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	/^#define JOS_KERN_SYSCALL_H$/;"	d
JOS_KERN_TRAP_H	kern/trap.h	/^#define JOS_KERN_TRAP_H$/;"	d
JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
KADDR	kern/pmap.h	/^#define KADDR(/;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	/^	#define LEVEL /;"	d	file:
LINT0	kern/lapic.c	/^#define LINT0 /;"	d	file:
LINT1	kern/lapic.c	/^#define LINT1 /;"	d	file:
LOAD_REGS	user/faultregs.c	/^#define LOAD_REGS(/;"	d	file:
LOG2NENV	inc/env.h	/^#define LOG2NENV	/;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	/^	#define MASKED /;"	d	file:
MAX	inc/types.h	/^#define MAX(/;"	d
MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAX_IRQS	kern/picirq.h	/^#define MAX_IRQS	/;"	d
MC_NVRAM_SIZE	kern/kclock.h	/^#define	MC_NVRAM_SIZE	/;"	d
MC_NVRAM_START	kern/kclock.h	/^#define	MC_NVRAM_START	/;"	d
MIN	inc/types.h	/^#define MIN(/;"	d
MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	/^#define MPBUS /;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	/^#define MPENTRY_PADDR	/;"	d
MPIOAPIC	kern/mpconfig.c	/^#define MPIOAPIC /;"	d	file:
MPIOINTR	kern/mpconfig.c	/^#define MPIOINTR /;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	/^#define MPLINTR /;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	/^#define MPPROC /;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	/^#define MPPROC_BOOT /;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	/^#define NCOMMANDS /;"	d	file:
NCPU	kern/cpu.h	/^#define NCPU /;"	d
NENV	inc/env.h	/^#define NENV	/;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	/^#define NO	/;"	d	file:
NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
NULL	inc/stdio.h	/^#define NULL	/;"	d
NULL	inc/types.h	/^#define NULL /;"	d
NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
NVRAM_BASEHI	kern/kclock.h	/^#define NVRAM_BASEHI	/;"	d
NVRAM_BASELO	kern/kclock.h	/^#define NVRAM_BASELO	/;"	d
NVRAM_CENTURY	kern/kclock.h	/^#define NVRAM_CENTURY	/;"	d
NVRAM_EXTHI	kern/kclock.h	/^#define NVRAM_EXTHI	/;"	d
NVRAM_EXTLO	kern/kclock.h	/^#define NVRAM_EXTLO	/;"	d
NVRAM_PEXTHI	kern/kclock.h	/^#define NVRAM_PEXTHI	/;"	d
NVRAM_PEXTLO	kern/kclock.h	/^#define NVRAM_PEXTLO	/;"	d
N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
N_PC	inc/stab.h	/^#define	N_PC	/;"	d
N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
N_SO	inc/stab.h	/^#define	N_SO	/;"	d
N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	/^	#define OTHERS /;"	d	file:
O_ACCMODE	inc/lib.h	/^#define	O_ACCMODE	/;"	d
O_CREAT	inc/lib.h	/^#define	O_CREAT	/;"	d
O_EXCL	inc/lib.h	/^#define	O_EXCL	/;"	d
O_MKDIR	inc/lib.h	/^#define O_MKDIR	/;"	d
O_RDONLY	inc/lib.h	/^#define	O_RDONLY	/;"	d
O_RDWR	inc/lib.h	/^#define	O_RDWR	/;"	d
O_TRUNC	inc/lib.h	/^#define	O_TRUNC	/;"	d
O_WRONLY	inc/lib.h	/^#define	O_WRONLY	/;"	d
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 8 09:40:26 EDT 2014$/;"	m
PADDR	kern/pmap.h	/^#define PADDR(/;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	/^#define PCINT /;"	d	file:
PDX	inc/mmu.h	/^#define PDX(/;"	d
PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
PERIODIC	kern/lapic.c	/^	#define PERIODIC /;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
PTE_COW	lib/fork.c	/^#define PTE_COW	/;"	d	file:
PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
PTE_SHARE	inc/lib.h	/^#define	PTE_SHARE	/;"	d
PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
PTX	inc/mmu.h	/^#define PTX(/;"	d
PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	/^#define SAVE_REGS(/;"	d	file:
SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
SEG	inc/mmu.h	/^#define SEG(/;"	d
SEG16	inc/mmu.h	/^#define SEG16(/;"	d
SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	/^	#define STARTUP /;"	d	file:
STA_A	inc/mmu.h	/^#define STA_A	/;"	d
STA_C	inc/mmu.h	/^#define STA_C	/;"	d
STA_E	inc/mmu.h	/^#define STA_E	/;"	d
STA_R	inc/mmu.h	/^#define STA_R	/;"	d
STA_W	inc/mmu.h	/^#define STA_W	/;"	d
STA_X	inc/mmu.h	/^#define STA_X	/;"	d
STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
SVR	kern/lapic.c	/^#define SVR /;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon3
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon3
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon3
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon3
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon3
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon3
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon3
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon3
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon3
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	/^#define TCCR /;"	d	file:
TDCR	kern/lapic.c	/^#define TDCR /;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	/^#define TICR /;"	d	file:
TIMER	kern/lapic.c	/^#define TIMER /;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	/^#define TPR /;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	/^#define T_ALIGN /;"	d
T_BOUND	inc/trap.h	/^#define T_BOUND /;"	d
T_BRKPT	inc/trap.h	/^#define T_BRKPT /;"	d
T_DBLFLT	inc/trap.h	/^#define T_DBLFLT /;"	d
T_DEBUG	inc/trap.h	/^#define T_DEBUG /;"	d
T_DEFAULT	inc/trap.h	/^#define T_DEFAULT /;"	d
T_DEVICE	inc/trap.h	/^#define T_DEVICE /;"	d
T_DIVIDE	inc/trap.h	/^#define T_DIVIDE /;"	d
T_FPERR	inc/trap.h	/^#define T_FPERR /;"	d
T_GPFLT	inc/trap.h	/^#define T_GPFLT /;"	d
T_ILLOP	inc/trap.h	/^#define T_ILLOP /;"	d
T_MCHK	inc/trap.h	/^#define T_MCHK /;"	d
T_NMI	inc/trap.h	/^#define T_NMI /;"	d
T_OFLOW	inc/trap.h	/^#define T_OFLOW /;"	d
T_PGFLT	inc/trap.h	/^#define T_PGFLT /;"	d
T_SEGNP	inc/trap.h	/^#define T_SEGNP /;"	d
T_SIMDERR	inc/trap.h	/^#define T_SIMDERR /;"	d
T_STACK	inc/trap.h	/^#define T_STACK /;"	d
T_SYSCALL	inc/trap.h	/^#define T_SYSCALL /;"	d
T_TSS	inc/trap.h	/^#define T_TSS /;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UDWtype	obj/kern/kernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/badsegment.asm	/^UDWtype$/;"	l
UDWtype	obj/user/breakpoint.asm	/^UDWtype$/;"	l
UDWtype	obj/user/buggyhello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/buggyhello2.asm	/^UDWtype$/;"	l
UDWtype	obj/user/divzero.asm	/^UDWtype$/;"	l
UDWtype	obj/user/dumbfork.asm	/^UDWtype$/;"	l
UDWtype	obj/user/evilhello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/fairness.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultalloc.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultallocbad.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultbadhandler.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultdie.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultevilhandler.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultnostack.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultread.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultreadkernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultregs.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultwrite.asm	/^UDWtype$/;"	l
UDWtype	obj/user/faultwritekernel.asm	/^UDWtype$/;"	l
UDWtype	obj/user/forktree.asm	/^UDWtype$/;"	l
UDWtype	obj/user/hello.asm	/^UDWtype$/;"	l
UDWtype	obj/user/idle.asm	/^UDWtype$/;"	l
UDWtype	obj/user/pingpong.asm	/^UDWtype$/;"	l
UDWtype	obj/user/pingpongs.asm	/^UDWtype$/;"	l
UDWtype	obj/user/primes.asm	/^UDWtype$/;"	l
UDWtype	obj/user/sendpage.asm	/^UDWtype$/;"	l
UDWtype	obj/user/softint.asm	/^UDWtype$/;"	l
UDWtype	obj/user/spin.asm	/^UDWtype$/;"	l
UDWtype	obj/user/stresssched.asm	/^UDWtype$/;"	l
UDWtype	obj/user/testbss.asm	/^UDWtype$/;"	l
UDWtype	obj/user/yield.asm	/^UDWtype$/;"	l
UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
USED	inc/lib.h	/^#define USED(/;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	/^#define VER /;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
X1	kern/lapic.c	/^	#define X1 /;"	d	file:
_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
__udivdi3	obj/kern/kernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/badsegment.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/breakpoint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/buggyhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/buggyhello2.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/divzero.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/dumbfork.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/evilhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/fairness.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultalloc.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultallocbad.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultbadhandler.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultdie.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultevilhandler.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultnostack.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultread.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultreadkernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultregs.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultwrite.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/faultwritekernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/forktree.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/hello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/idle.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/pingpong.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/pingpongs.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/primes.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/sendpage.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/softint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/spin.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/stresssched.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/testbss.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivdi3	obj/user/yield.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
__udivmoddi4	obj/kern/kernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/badsegment.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/breakpoint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/buggyhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/buggyhello2.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/divzero.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/dumbfork.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/evilhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/fairness.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultalloc.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultallocbad.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultbadhandler.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultdie.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultevilhandler.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultnostack.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultread.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultreadkernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultregs.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultwrite.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/faultwritekernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/forktree.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/hello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/idle.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/pingpong.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/pingpongs.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/primes.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/sendpage.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/softint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/spin.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/stresssched.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/testbss.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__udivmoddi4	obj/user/yield.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
__umoddi3	obj/kern/kernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/badsegment.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/breakpoint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/buggyhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/buggyhello2.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/divzero.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/dumbfork.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/evilhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/fairness.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultalloc.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultallocbad.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultbadhandler.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultdie.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultevilhandler.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultnostack.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultread.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultreadkernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultregs.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultwrite.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/faultwritekernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/forktree.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/hello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/idle.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/pingpong.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/pingpongs.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/primes.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/sendpage.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/softint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/spin.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/stresssched.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/testbss.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
__umoddi3	obj/user/yield.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr	obj/user/forktree.asm	/^                addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^                addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^                addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^                addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sendpage.asm	/^                addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^                addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^                addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	/^#define assert(/;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
b	obj/kern/kernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/badsegment.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/breakpoint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/buggyhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/buggyhello2.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/divzero.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/dumbfork.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/evilhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/fairness.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultalloc.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultallocbad.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultbadhandler.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultdie.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultevilhandler.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultnostack.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultread.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultreadkernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultregs.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultwrite.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/faultwritekernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/forktree.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/hello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/idle.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/pingpong.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/pingpongs.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/primes.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/sendpage.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/softint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/spin.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/stresssched.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/testbss.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
b	obj/user/yield.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^                        base = 8;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^                        base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^                        base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^                        base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^                        base = 8;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^                        base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^                        base = 8;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^                        base = 8;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^                        base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^                        base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^                        base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^                        base = 8;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^                        base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^                        base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^                        base = 8;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^                        base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^                        base = 8;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^                        base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^                        base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^                        base = 8;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^                        base = 8;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^                        base = 8;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^                        base = 8;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^                        base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^                        base = 8;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^                        base = 8;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^                        base = 8;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^                        base = 8;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^                        base = 8;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^                        base = 8;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^                        base = 8;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^                        base = 8;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon5	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon5	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
cur_id	obj/kern/kernel.asm	/^            cur_id = 0;$/;"	d
cur_id	obj/kern/kernel.asm	/^            cur_id = ENVX(idle->env_id);$/;"	d
curenv	kern/env.h	/^#define curenv /;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^            curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
d0	obj/kern/kernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/kern/kernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/kern/kernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/badsegment.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/badsegment.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/badsegment.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/breakpoint.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/breakpoint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/breakpoint.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/buggyhello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/buggyhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/buggyhello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/buggyhello2.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/buggyhello2.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/buggyhello2.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/divzero.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/divzero.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/divzero.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/dumbfork.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/dumbfork.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/dumbfork.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/evilhello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/evilhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/evilhello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/fairness.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/fairness.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/fairness.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultalloc.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultalloc.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultalloc.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultallocbad.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultallocbad.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultallocbad.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultbadhandler.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultbadhandler.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultbadhandler.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultdie.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultdie.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultdie.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultevilhandler.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultevilhandler.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultevilhandler.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultnostack.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultnostack.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultnostack.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultread.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultread.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultread.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultreadkernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultreadkernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultreadkernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultregs.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultregs.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultregs.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultwrite.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultwrite.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultwrite.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/faultwritekernel.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/faultwritekernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/faultwritekernel.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/forktree.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/forktree.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/forktree.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/hello.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/hello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/hello.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/idle.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/idle.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/idle.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/pingpong.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/pingpong.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/pingpong.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/pingpongs.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/pingpongs.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/pingpongs.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/primes.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/primes.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/primes.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/sendpage.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/sendpage.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/sendpage.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/softint.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/softint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/softint.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/spin.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/spin.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/spin.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/stresssched.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/stresssched.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/stresssched.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/testbss.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/testbss.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/testbss.asm	/^  d0 = dd.s.low;$/;"	d
d0	obj/user/yield.asm	/^	      d0 = d0 << bm;$/;"	d
d0	obj/user/yield.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
d0	obj/user/yield.asm	/^  d0 = dd.s.low;$/;"	d
d1	obj/kern/kernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/kern/kernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/badsegment.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/badsegment.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/breakpoint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/breakpoint.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/buggyhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/buggyhello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/buggyhello2.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/buggyhello2.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/divzero.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/divzero.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/dumbfork.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/dumbfork.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/evilhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/evilhello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/fairness.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/fairness.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultalloc.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultalloc.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultallocbad.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultallocbad.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultbadhandler.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultbadhandler.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultdie.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultdie.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultevilhandler.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultevilhandler.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultnostack.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultnostack.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultread.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultread.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultreadkernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultreadkernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultregs.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultregs.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultwrite.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultwrite.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/faultwritekernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/faultwritekernel.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/forktree.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/forktree.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/hello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/hello.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/idle.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/idle.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/pingpong.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/pingpong.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/pingpongs.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/pingpongs.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/primes.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/primes.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/sendpage.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/sendpage.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/softint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/softint.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/spin.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/spin.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/stresssched.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/stresssched.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/testbss.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/testbss.asm	/^  d1 = dd.s.high;$/;"	d
d1	obj/user/yield.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
d1	obj/user/yield.asm	/^  d1 = dd.s.high;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/kern/kernel.asm	/^            default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp	obj/kern/kernel.asm	/^            ebp = old_ebp;$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^        entry = pgdir_walk(pgdir, va, 1);    \/\/通过pgdir_walk函数求出va对应的页表项$/;"	d
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^            env_free_list = &envs[i];$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^        envs = (struct Env*)boot_alloc(sizeof(struct Env)*NENV);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^        eph = ph + elfhdr->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 70 12 00       	mov    $0x127000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 70 12 f0       	mov    $0xf0127000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 f0 00 00 00       	call   f010012e <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 80 de 32 f0 00 	cmpl   $0x0,0xf032de80$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 80 de 32 f0    	mov    %esi,0xf032de80$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 14 62 00 00       	call   f0106278 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 40 69 10 f0 	movl   $0xf0106940,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 8c 3f 00 00       	call   f010400e <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 4d 3f 00 00       	call   f0103fdb <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 d6 7a 10 f0 	movl   $0xf0107ad6,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 74 3f 00 00       	call   f010400e <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 c9 08 00 00       	call   f010096f <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <mp_main>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	77 20                	ja     f01000da <mp_main+0x32>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	f0 $/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	00 $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	c7 04 24 ab 69 10 f0 	movl   $0xf01069ab,(%esp)$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	e8 66 ff ff ff       	call   f0100040 <_panic>$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 91 61 00 00       	call   f0106278 <cpunum>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 b7 69 10 f0 	movl   $0xf01069b7,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 17 3f 00 00       	call   f010400e <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	e8 97 61 00 00       	call   f0106293 <lapic_init>$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 e4 35 00 00       	call   f01036e5 <env_init_percpu>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 22 3f 00 00       	call   f0104028 <trap_init_percpu>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	e8 6d 61 00 00       	call   f0106278 <cpunum>$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	81 c2 20 e0 32 f0    	add    $0xf032e020,%edx$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	c7 04 24 c0 93 12 f0 	movl   $0xf01293c0,(%esp)$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	e8 0e 64 00 00       	call   f0106537 <spin_lock>$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	e8 14 4a 00 00       	call   f0104b42 <sched_yield>$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e <i386_init>:$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	55                   	push   %ebp$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	53                   	push   %ebx$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	b8 08 f0 36 f0       	mov    $0xf036f008,%eax$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	2d 2e c0 32 f0       	sub    $0xf032c02e,%eax$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	00 $/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	c7 04 24 2e c0 32 f0 	movl   $0xf032c02e,(%esp)$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	e8 f3 5a 00 00       	call   f0105c4a <memset>$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	e8 17 05 00 00       	call   f0100673 <cons_init>$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	00 $/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	c7 04 24 cd 69 10 f0 	movl   $0xf01069cd,(%esp)$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 9e 3e 00 00       	call   f010400e <cprintf>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 b3 12 00 00       	call   f0101428 <mem_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 95 35 00 00       	call   f010370f <env_init>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	e8 9d 3f 00 00       	call   f010411c <trap_init>$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	e8 0c 5e 00 00       	call   f0105f90 <mp_init>$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	e8 0a 61 00 00       	call   f0106293 <lapic_init>$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	e8 d6 3d 00 00       	call   f0103f64 <pic_init>$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	c7 04 24 c0 93 12 f0 	movl   $0xf01293c0,(%esp)$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	e8 9d 63 00 00       	call   f0106537 <spin_lock>$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	83 3d 88 de 32 f0 07 	cmpl   $0x7,0xf032de88$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	77 24                	ja     f01001c7 <i386_init+0x99>$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	00 $/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	f0 $/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	c7 44 24 04 59 00 00 	movl   $0x59,0x4(%esp)$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	00 $/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	c7 04 24 ab 69 10 f0 	movl   $0xf01069ab,(%esp)$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	e8 79 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	b8 ba 5e 10 f0       	mov    $0xf0105eba,%eax$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	2d 40 5e 10 f0       	sub    $0xf0105e40,%eax$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	c7 44 24 04 40 5e 10 	movl   $0xf0105e40,0x4(%esp)$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	f0 $/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	e8 ab 5a 00 00       	call   f0105c94 <memmove>$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	bb 20 e0 32 f0       	mov    $0xf032e020,%ebx$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	eb 6f                	jmp    f010025f <i386_init+0x131>$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	e8 83 60 00 00       	call   f0106278 <cpunum>$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	29 c2                	sub    %eax,%edx$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	8d 04 85 20 e0 32 f0 	lea    -0xfcd1fe0(,%eax,4),%eax$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	39 c3                	cmp    %eax,%ebx$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	74 50                	je     f010025c <i386_init+0x12e>$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	89 d8                	mov    %ebx,%eax$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	2d 20 e0 32 f0       	sub    $0xf032e020,%eax$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	8d 14 d0             	lea    (%eax,%edx,8),%edx$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	89 d1                	mov    %edx,%ecx$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	29 d1                	sub    %edx,%ecx$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	89 d1                	mov    %edx,%ecx$/;"	l
f0100228	obj/kern/kernel.asm	/^f0100228:	c1 e1 0e             	shl    $0xe,%ecx$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	29 d1                	sub    %edx,%ecx$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	8d 14 88             	lea    (%eax,%ecx,4),%edx$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	8d 44 90 01          	lea    0x1(%eax,%edx,4),%eax$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100237	obj/kern/kernel.asm	/^f0100237:	05 00 f0 32 f0       	add    $0xf032f000,%eax$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	a3 84 de 32 f0       	mov    %eax,0xf032de84$/;"	l
f0100241	obj/kern/kernel.asm	/^f0100241:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	00 $/;"	l
f0100249	obj/kern/kernel.asm	/^f0100249:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	e8 98 61 00 00       	call   f01063ec <lapic_startap>$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	75 f8                	jne    f0100254 <i386_init+0x126>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	a1 c4 e3 32 f0       	mov    0xf032e3c4,%eax$/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	29 c2                	sub    %eax,%edx$/;"	l
f010026d	obj/kern/kernel.asm	/^f010026d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	8d 04 85 20 e0 32 f0 	lea    -0xfcd1fe0(,%eax,4),%eax$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	0f 82 71 ff ff ff    	jb     f01001f0 <i386_init+0xc2>$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	00 $/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	c7 04 24 99 77 2b f0 	movl   $0xf02b7799,(%esp)$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	e8 9d 36 00 00       	call   f0103930 <env_create>$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	e8 aa 48 00 00       	call   f0104b42 <sched_yield>$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298 <_warn>:$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	55                   	push   %ebp$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	89 e5                	mov    %esp,%ebp$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	53                   	push   %ebx$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	c7 04 24 e8 69 10 f0 	movl   $0xf01069e8,(%esp)$/;"	l
f01002b7	obj/kern/kernel.asm	/^f01002b7:	e8 52 3d 00 00       	call   f010400e <cprintf>$/;"	l
f01002bc	obj/kern/kernel.asm	/^f01002bc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	e8 10 3d 00 00       	call   f0103fdb <vcprintf>$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	c7 04 24 d6 7a 10 f0 	movl   $0xf0107ad6,(%esp)$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	e8 37 3d 00 00       	call   f010400e <cprintf>$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	5b                   	pop    %ebx$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	5d                   	pop    %ebp$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	c3                   	ret    $/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	00 00                	add    %al,(%eax)$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0 <delay>:$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	55                   	push   %ebp$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	ec                   	in     (%dx),%al$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	ec                   	in     (%dx),%al$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	ec                   	in     (%dx),%al$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	ec                   	in     (%dx),%al$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	5d                   	pop    %ebp$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	c3                   	ret    $/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee <serial_proc_data>:$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	55                   	push   %ebp$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	ec                   	in     (%dx),%al$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	a8 01                	test   $0x1,%al$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	74 08                	je     f0100303 <serial_proc_data+0x15>$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	ec                   	in     (%dx),%al$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	eb 05                	jmp    f0100308 <serial_proc_data+0x1a>$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100308	obj/kern/kernel.asm	/^f0100308:	5d                   	pop    %ebp$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	c3                   	ret    $/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a <cons_intr>:$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	55                   	push   %ebp$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	89 e5                	mov    %esp,%ebp$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	53                   	push   %ebx$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	89 c3                	mov    %eax,%ebx$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	eb 29                	jmp    f010033e <cons_intr+0x34>$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	85 c0                	test   %eax,%eax$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	74 25                	je     f010033e <cons_intr+0x34>$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	8b 15 24 d2 32 f0    	mov    0xf032d224,%edx$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	88 82 20 d0 32 f0    	mov    %al,-0xfcd2fe0(%edx)$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	a3 24 d2 32 f0       	mov    %eax,0xf032d224$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100332	obj/kern/kernel.asm	/^f0100332:	75 0a                	jne    f010033e <cons_intr+0x34>$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	c7 05 24 d2 32 f0 00 	movl   $0x0,0xf032d224$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	00 00 00 $/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	ff d3                	call   *%ebx$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	75 d0                	jne    f0100315 <cons_intr+0xb>$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	5b                   	pop    %ebx$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	5d                   	pop    %ebp$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	c3                   	ret    $/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b <cons_putc>:$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	55                   	push   %ebp$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	89 e5                	mov    %esp,%ebp$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	57                   	push   %edi$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	56                   	push   %esi$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	53                   	push   %ebx$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	89 c6                	mov    %eax,%esi$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	eb 05                	jmp    f0100367 <cons_putc+0x1c>$/;"	l
f0100362	obj/kern/kernel.asm	/^f0100362:	e8 79 ff ff ff       	call   f01002e0 <delay>$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	89 fa                	mov    %edi,%edx$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	ec                   	in     (%dx),%al$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	a8 20                	test   $0x20,%al$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	75 03                	jne    f0100371 <cons_putc+0x26>$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	4b                   	dec    %ebx$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	75 f1                	jne    f0100362 <cons_putc+0x17>$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	89 f2                	mov    %esi,%edx$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 f0                	mov    %esi,%eax$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	ee                   	out    %al,(%dx)$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	eb 05                	jmp    f010038f <cons_putc+0x44>$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	e8 51 ff ff ff       	call   f01002e0 <delay>$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	89 fa                	mov    %edi,%edx$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	ec                   	in     (%dx),%al$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	84 c0                	test   %al,%al$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	78 03                	js     f0100399 <cons_putc+0x4e>$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	4b                   	dec    %ebx$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	75 f1                	jne    f010038a <cons_putc+0x3f>$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	ee                   	out    %al,(%dx)$/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	b0 0d                	mov    $0xd,%al$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	ee                   	out    %al,(%dx)$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	b0 08                	mov    $0x8,%al$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	ee                   	out    %al,(%dx)$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	75 06                	jne    f01003b8 <cons_putc+0x6d>$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	89 f0                	mov    %esi,%eax$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	74 78                	je     f010043c <cons_putc+0xf1>$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	7f 0b                	jg     f01003d4 <cons_putc+0x89>$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	0f 85 9e 00 00 00    	jne    f0100470 <cons_putc+0x125>$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	eb 10                	jmp    f01003e4 <cons_putc+0x99>$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	74 39                	je     f0100412 <cons_putc+0xc7>$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	0f 85 8e 00 00 00    	jne    f0100470 <cons_putc+0x125>$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	eb 36                	jmp    f010041a <cons_putc+0xcf>$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	66 a1 34 d2 32 f0    	mov    0xf032d234,%ax$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	66 85 c0             	test   %ax,%ax$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	0f 84 e2 00 00 00    	je     f01004d5 <cons_putc+0x18a>$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	48                   	dec    %eax$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	66 a3 34 d2 32 f0    	mov    %ax,0xf032d234$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01003fd	obj/kern/kernel.asm	/^f01003fd:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	83 ce 20             	or     $0x20,%esi$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	8b 15 30 d2 32 f0    	mov    0xf032d230,%edx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	eb 78                	jmp    f010048a <cons_putc+0x13f>$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	66 83 05 34 d2 32 f0 	addw   $0x50,0xf032d234$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	50 $/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	66 8b 0d 34 d2 32 f0 	mov    0xf032d234,%cx$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	89 c8                	mov    %ecx,%eax$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	66 f7 f3             	div    %bx$/;"	l
f0100430	obj/kern/kernel.asm	/^f0100430:	66 29 d1             	sub    %dx,%cx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	66 89 0d 34 d2 32 f0 	mov    %cx,0xf032d234$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	eb 4e                	jmp    f010048a <cons_putc+0x13f>$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100441	obj/kern/kernel.asm	/^f0100441:	e8 05 ff ff ff       	call   f010034b <cons_putc>$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010044b	obj/kern/kernel.asm	/^f010044b:	e8 fb fe ff ff       	call   f010034b <cons_putc>$/;"	l
f0100450	obj/kern/kernel.asm	/^f0100450:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	e8 f1 fe ff ff       	call   f010034b <cons_putc>$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	e8 e7 fe ff ff       	call   f010034b <cons_putc>$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	e8 dd fe ff ff       	call   f010034b <cons_putc>$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	eb 1a                	jmp    f010048a <cons_putc+0x13f>$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	66 a1 34 d2 32 f0    	mov    0xf032d234,%ax$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	8b 15 30 d2 32 f0    	mov    0xf032d230,%edx$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	40                   	inc    %eax$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	66 a3 34 d2 32 f0    	mov    %ax,0xf032d234$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	66 81 3d 34 d2 32 f0 	cmpw   $0x7cf,0xf032d234$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	cf 07 $/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	76 40                	jbe    f01004d5 <cons_putc+0x18a>$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	a1 30 d2 32 f0       	mov    0xf032d230,%eax$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	00 $/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	e8 e0 57 00 00       	call   f0105c94 <memmove>$/;"	l
f01004b4	obj/kern/kernel.asm	/^f01004b4:	8b 15 30 d2 32 f0    	mov    0xf032d230,%edx$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01004c5	obj/kern/kernel.asm	/^f01004c5:	40                   	inc    %eax$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	75 f2                	jne    f01004bf <cons_putc+0x174>$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	66 83 2d 34 d2 32 f0 	subw   $0x50,0xf032d234$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	50 $/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	8b 0d 2c d2 32 f0    	mov    0xf032d22c,%ecx$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	b0 0e                	mov    $0xe,%al$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	89 ca                	mov    %ecx,%edx$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	ee                   	out    %al,(%dx)$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	66 8b 35 34 d2 32 f0 	mov    0xf032d234,%si$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01004ea	obj/kern/kernel.asm	/^f01004ea:	89 f0                	mov    %esi,%eax$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	89 da                	mov    %ebx,%edx$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	ee                   	out    %al,(%dx)$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	b0 0f                	mov    $0xf,%al$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	89 ca                	mov    %ecx,%edx$/;"	l
f01004f7	obj/kern/kernel.asm	/^f01004f7:	ee                   	out    %al,(%dx)$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	89 f0                	mov    %esi,%eax$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	89 da                	mov    %ebx,%edx$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	ee                   	out    %al,(%dx)$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	5b                   	pop    %ebx$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	5e                   	pop    %esi$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	5f                   	pop    %edi$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	5d                   	pop    %ebp$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	c3                   	ret    $/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505 <kbd_proc_data>:$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	55                   	push   %ebp$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	89 e5                	mov    %esp,%ebp$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	53                   	push   %ebx$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	ec                   	in     (%dx),%al$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	a8 01                	test   $0x1,%al$/;"	l
f0100514	obj/kern/kernel.asm	/^f0100514:	0f 84 d8 00 00 00    	je     f01005f2 <kbd_proc_data+0xed>$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	b2 60                	mov    $0x60,%dl$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	ec                   	in     (%dx),%al$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	88 c2                	mov    %al,%dl$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	75 11                	jne    f0100534 <kbd_proc_data+0x2f>$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	83 0d 28 d2 32 f0 40 	orl    $0x40,0xf032d228$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010052f	obj/kern/kernel.asm	/^f010052f:	e9 c3 00 00 00       	jmp    f01005f7 <kbd_proc_data+0xf2>$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	84 c0                	test   %al,%al$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	79 33                	jns    f010056b <kbd_proc_data+0x66>$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	8b 0d 28 d2 32 f0    	mov    0xf032d228,%ecx$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	75 05                	jne    f0100548 <kbd_proc_data+0x43>$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	88 c2                	mov    %al,%dl$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	8a 82 40 6a 10 f0    	mov    -0xfef95c0(%edx),%al$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	f7 d0                	not    %eax$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	21 c1                	and    %eax,%ecx$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	89 0d 28 d2 32 f0    	mov    %ecx,0xf032d228$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	e9 8c 00 00 00       	jmp    f01005f7 <kbd_proc_data+0xf2>$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	8b 0d 28 d2 32 f0    	mov    0xf032d228,%ecx$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	74 0e                	je     f0100584 <kbd_proc_data+0x7f>$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	88 c2                	mov    %al,%dl$/;"	l
f0100578	obj/kern/kernel.asm	/^f0100578:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	89 0d 28 d2 32 f0    	mov    %ecx,0xf032d228$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	0f b6 82 40 6a 10 f0 	movzbl -0xfef95c0(%edx),%eax$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	0b 05 28 d2 32 f0    	or     0xf032d228,%eax$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	0f b6 8a 40 6b 10 f0 	movzbl -0xfef94c0(%edx),%ecx$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	31 c8                	xor    %ecx,%eax$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	a3 28 d2 32 f0       	mov    %eax,0xf032d228$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	89 c1                	mov    %eax,%ecx$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	8b 0c 8d 40 6c 10 f0 	mov    -0xfef93c0(,%ecx,4),%ecx$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	a8 08                	test   $0x8,%al$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	74 18                	je     f01005ce <kbd_proc_data+0xc9>$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	77 05                	ja     f01005c3 <kbd_proc_data+0xbe>$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	eb 0b                	jmp    f01005ce <kbd_proc_data+0xc9>$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	77 03                	ja     f01005ce <kbd_proc_data+0xc9>$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	f7 d0                	not    %eax$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	a8 06                	test   $0x6,%al$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	75 23                	jne    f01005f7 <kbd_proc_data+0xf2>$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	75 1b                	jne    f01005f7 <kbd_proc_data+0xf2>$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	c7 04 24 02 6a 10 f0 	movl   $0xf0106a02,(%esp)$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	e8 26 3a 00 00       	call   f010400e <cprintf>$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	b0 03                	mov    $0x3,%al$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	ee                   	out    %al,(%dx)$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	eb 05                	jmp    f01005f7 <kbd_proc_data+0xf2>$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	89 d8                	mov    %ebx,%eax$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	83 c4 14             	add    $0x14,%esp$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	5b                   	pop    %ebx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	5d                   	pop    %ebp$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	c3                   	ret    $/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff <serial_intr>:$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	55                   	push   %ebp$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	89 e5                	mov    %esp,%ebp$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100605	obj/kern/kernel.asm	/^f0100605:	80 3d 00 d0 32 f0 00 	cmpb   $0x0,0xf032d000$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	74 0a                	je     f0100618 <serial_intr+0x19>$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	b8 ee 02 10 f0       	mov    $0xf01002ee,%eax$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	e8 f2 fc ff ff       	call   f010030a <cons_intr>$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	c9                   	leave  $/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	c3                   	ret    $/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a <kbd_intr>:$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	55                   	push   %ebp$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	89 e5                	mov    %esp,%ebp$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	b8 05 05 10 f0       	mov    $0xf0100505,%eax$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	e8 e0 fc ff ff       	call   f010030a <cons_intr>$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	c9                   	leave  $/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	c3                   	ret    $/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c <cons_getc>:$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	55                   	push   %ebp$/;"	l
f010062d	obj/kern/kernel.asm	/^f010062d:	89 e5                	mov    %esp,%ebp$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	e8 c8 ff ff ff       	call   f01005ff <serial_intr>$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	e8 de ff ff ff       	call   f010061a <kbd_intr>$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	8b 15 20 d2 32 f0    	mov    0xf032d220,%edx$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	3b 15 24 d2 32 f0    	cmp    0xf032d224,%edx$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	74 22                	je     f010066c <cons_getc+0x40>$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	0f b6 82 20 d0 32 f0 	movzbl -0xfcd2fe0(%edx),%eax$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	42                   	inc    %edx$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	89 15 20 d2 32 f0    	mov    %edx,0xf032d220$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	75 11                	jne    f0100671 <cons_getc+0x45>$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	c7 05 20 d2 32 f0 00 	movl   $0x0,0xf032d220$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	00 00 00 $/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	eb 05                	jmp    f0100671 <cons_getc+0x45>$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	c9                   	leave  $/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	c3                   	ret    $/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673 <cons_init>:$/;"	l
f0100673	obj/kern/kernel.asm	/^f0100673:	55                   	push   %ebp$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	89 e5                	mov    %esp,%ebp$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	57                   	push   %edi$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	56                   	push   %esi$/;"	l
f0100678	obj/kern/kernel.asm	/^f0100678:	53                   	push   %ebx$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	5a a5 $/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	74 11                	je     f01006a9 <cons_init+0x36>$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	c7 05 2c d2 32 f0 b4 	movl   $0x3b4,0xf032d22c$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	03 00 00 $/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01006a7	obj/kern/kernel.asm	/^f01006a7:	eb 16                	jmp    f01006bf <cons_init+0x4c>$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	c7 05 2c d2 32 f0 d4 	movl   $0x3d4,0xf032d22c$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	03 00 00 $/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	8b 0d 2c d2 32 f0    	mov    0xf032d22c,%ecx$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	b0 0e                	mov    $0xe,%al$/;"	l
f01006c7	obj/kern/kernel.asm	/^f01006c7:	89 ca                	mov    %ecx,%edx$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	ee                   	out    %al,(%dx)$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	89 da                	mov    %ebx,%edx$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	ec                   	in     (%dx),%al$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	0f b6 f8             	movzbl %al,%edi$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	b0 0f                	mov    $0xf,%al$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	89 ca                	mov    %ecx,%edx$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	ee                   	out    %al,(%dx)$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	89 da                	mov    %ebx,%edx$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	ec                   	in     (%dx),%al$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	89 35 30 d2 32 f0    	mov    %esi,0xf032d230$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	09 df                	or     %ebx,%edi$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	66 89 3d 34 d2 32 f0 	mov    %di,0xf032d234$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	e8 25 ff ff ff       	call   f010061a <kbd_intr>$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	0f b7 05 a8 93 12 f0 	movzwl 0xf01293a8,%eax$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	e8 e7 37 00 00       	call   f0103ef0 <irq_setmask_8259A>$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	b0 00                	mov    $0x0,%al$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	89 da                	mov    %ebx,%edx$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	ee                   	out    %al,(%dx)$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	b0 80                	mov    $0x80,%al$/;"	l
f0100717	obj/kern/kernel.asm	/^f0100717:	ee                   	out    %al,(%dx)$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	b0 0c                	mov    $0xc,%al$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	ee                   	out    %al,(%dx)$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	b0 00                	mov    $0x0,%al$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	ee                   	out    %al,(%dx)$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	b0 03                	mov    $0x3,%al$/;"	l
f010072b	obj/kern/kernel.asm	/^f010072b:	ee                   	out    %al,(%dx)$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	b2 fc                	mov    $0xfc,%dl$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	b0 00                	mov    $0x0,%al$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	ee                   	out    %al,(%dx)$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	b0 01                	mov    $0x1,%al$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	ee                   	out    %al,(%dx)$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	ec                   	in     (%dx),%al$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	3c ff                	cmp    $0xff,%al$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	0f 95 45 e7          	setne  -0x19(%ebp)$/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	a2 00 d0 32 f0       	mov    %al,0xf032d000$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	89 da                	mov    %ebx,%edx$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	ec                   	in     (%dx),%al$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	89 ca                	mov    %ecx,%edx$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	ec                   	in     (%dx),%al$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	75 0c                	jne    f010075f <cons_init+0xec>$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	c7 04 24 0e 6a 10 f0 	movl   $0xf0106a0e,(%esp)$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	e8 af 38 00 00       	call   f010400e <cprintf>$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	5b                   	pop    %ebx$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	5e                   	pop    %esi$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	5f                   	pop    %edi$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	5d                   	pop    %ebp$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	c3                   	ret    $/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767 <cputchar>:$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	55                   	push   %ebp$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	89 e5                	mov    %esp,%ebp$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	e8 d6 fb ff ff       	call   f010034b <cons_putc>$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	c9                   	leave  $/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	c3                   	ret    $/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777 <getchar>:$/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777:	55                   	push   %ebp$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	89 e5                	mov    %esp,%ebp$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	e8 aa fe ff ff       	call   f010062c <cons_getc>$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	85 c0                	test   %eax,%eax$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	74 f7                	je     f010077d <getchar+0x6>$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	c9                   	leave  $/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	c3                   	ret    $/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788 <iscons>:$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	55                   	push   %ebp$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	89 e5                	mov    %esp,%ebp$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	5d                   	pop    %ebp$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	c3                   	ret    $/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794 <mon_kerninfo>:$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	55                   	push   %ebp$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	89 e5                	mov    %esp,%ebp$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	c7 04 24 50 6c 10 f0 	movl   $0xf0106c50,(%esp)$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	e8 68 38 00 00       	call   f010400e <cprintf>$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	00 $/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	c7 04 24 f8 6c 10 f0 	movl   $0xf0106cf8,(%esp)$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	e8 54 38 00 00       	call   f010400e <cprintf>$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	00 $/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	f0 $/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	c7 04 24 20 6d 10 f0 	movl   $0xf0106d20,(%esp)$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	e8 38 38 00 00       	call   f010400e <cprintf>$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	c7 44 24 08 36 69 10 	movl   $0x106936,0x8(%esp)$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	00 $/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	c7 44 24 04 36 69 10 	movl   $0xf0106936,0x4(%esp)$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	f0 $/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	c7 04 24 44 6d 10 f0 	movl   $0xf0106d44,(%esp)$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	e8 1c 38 00 00       	call   f010400e <cprintf>$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	c7 44 24 08 2e c0 32 	movl   $0x32c02e,0x8(%esp)$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	00 $/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	c7 44 24 04 2e c0 32 	movl   $0xf032c02e,0x4(%esp)$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	f0 $/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	c7 04 24 68 6d 10 f0 	movl   $0xf0106d68,(%esp)$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	e8 00 38 00 00       	call   f010400e <cprintf>$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	c7 44 24 08 08 f0 36 	movl   $0x36f008,0x8(%esp)$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	00 $/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	c7 44 24 04 08 f0 36 	movl   $0xf036f008,0x4(%esp)$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	f0 $/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	c7 04 24 8c 6d 10 f0 	movl   $0xf0106d8c,(%esp)$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	e8 e4 37 00 00       	call   f010400e <cprintf>$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	b8 07 f4 36 f0       	mov    $0xf036f407,%eax$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	89 c2                	mov    %eax,%edx$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	85 c0                	test   %eax,%eax$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	79 06                	jns    f0100845 <mon_kerninfo+0xb1>$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	c7 04 24 b0 6d 10 f0 	movl   $0xf0106db0,(%esp)$/;"	l
f0100853	obj/kern/kernel.asm	/^f0100853:	e8 b6 37 00 00       	call   f010400e <cprintf>$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	c9                   	leave  $/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	c3                   	ret    $/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f <mon_help>:$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	55                   	push   %ebp$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	89 e5                	mov    %esp,%ebp$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	53                   	push   %ebx$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	8b 83 a4 6e 10 f0    	mov    -0xfef915c(%ebx),%eax$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	8b 83 a0 6e 10 f0    	mov    -0xfef9160(%ebx),%eax$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	c7 04 24 69 6c 10 f0 	movl   $0xf0106c69,(%esp)$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	e8 83 37 00 00       	call   f010400e <cprintf>$/;"	l
f010088b	obj/kern/kernel.asm	/^f010088b:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	83 fb 24             	cmp    $0x24,%ebx$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	75 d8                	jne    f010086b <mon_help+0xc>$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	83 c4 14             	add    $0x14,%esp$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	5b                   	pop    %ebx$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	5d                   	pop    %ebp$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	c3                   	ret    $/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e <mon_backtrace>:$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	55                   	push   %ebp$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	89 e5                	mov    %esp,%ebp$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	57                   	push   %edi$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	56                   	push   %esi$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	53                   	push   %ebx$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	81 ec 8c 00 00 00    	sub    $0x8c,%esp$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	c7 04 24 72 6c 10 f0 	movl   $0xf0106c72,(%esp)$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	e8 58 37 00 00       	call   f010400e <cprintf>$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	89 e8                	mov    %ebp,%eax$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	89 c3                	mov    %eax,%ebx$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	8b 38                	mov    (%eax),%edi$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	e9 8d 00 00 00       	jmp    f0100957 <mon_backtrace+0xb9>$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	8b 54 83 08          	mov    0x8(%ebx,%eax,4),%edx$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	89 54 85 d4          	mov    %edx,-0x2c(%ebp,%eax,4)$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	40                   	inc    %eax$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	75 f2                	jne    f01008cf <mon_backtrace+0x31>$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	8d 55 bc             	lea    -0x44(%ebp),%edx$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	e8 69 48 00 00       	call   f0105155 <debuginfo_eip>$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	89 f0                	mov    %esi,%eax$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	89 44 24 30          	mov    %eax,0x30(%esp)$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	89 44 24 2c          	mov    %eax,0x2c(%esp)$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	89 44 24 28          	mov    %eax,0x28(%esp)$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	89 44 24 24          	mov    %eax,0x24(%esp)$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	89 44 24 20          	mov    %eax,0x20(%esp)$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	c7 04 24 dc 6d 10 f0 	movl   $0xf0106ddc,(%esp)$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	e8 c6 36 00 00       	call   f010400e <cprintf>$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	8b 07                	mov    (%edi),%eax$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	89 fb                	mov    %edi,%ebx$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	8b 75 b4             	mov    -0x4c(%ebp),%esi$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0100952	obj/kern/kernel.asm	/^f0100952:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
f0100955	obj/kern/kernel.asm	/^f0100955:	89 c7                	mov    %eax,%edi$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	85 db                	test   %ebx,%ebx$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	0f 85 6b ff ff ff    	jne    f01008ca <mon_backtrace+0x2c>$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	81 c4 8c 00 00 00    	add    $0x8c,%esp$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	5b                   	pop    %ebx$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	5e                   	pop    %esi$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	5f                   	pop    %edi$/;"	l
f010096d	obj/kern/kernel.asm	/^f010096d:	5d                   	pop    %ebp$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	c3                   	ret    $/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f <monitor>:$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	55                   	push   %ebp$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	89 e5                	mov    %esp,%ebp$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	57                   	push   %edi$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	56                   	push   %esi$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	53                   	push   %ebx$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100978	obj/kern/kernel.asm	/^f0100978:	c7 04 24 24 6e 10 f0 	movl   $0xf0106e24,(%esp)$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	e8 8a 36 00 00       	call   f010400e <cprintf>$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	c7 04 24 48 6e 10 f0 	movl   $0xf0106e48,(%esp)$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	e8 7e 36 00 00       	call   f010400e <cprintf>$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	74 0b                	je     f01009a1 <monitor+0x32>$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	e8 df 3a 00 00       	call   f0104480 <print_trapframe>$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	c7 04 24 84 6c 10 f0 	movl   $0xf0106c84,(%esp)$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	e8 73 50 00 00       	call   f0105a20 <readline>$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	89 c3                	mov    %eax,%ebx$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	85 c0                	test   %eax,%eax$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	74 ee                	je     f01009a1 <monitor+0x32>$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	eb 04                	jmp    f01009c5 <monitor+0x56>$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	43                   	inc    %ebx$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	8a 03                	mov    (%ebx),%al$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	84 c0                	test   %al,%al$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	74 5e                	je     f0100a29 <monitor+0xba>$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	0f be c0             	movsbl %al,%eax$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	c7 04 24 88 6c 10 f0 	movl   $0xf0106c88,(%esp)$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	e8 37 52 00 00       	call   f0105c15 <strchr>$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	85 c0                	test   %eax,%eax$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	75 df                	jne    f01009c1 <monitor+0x52>$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	74 42                	je     f0100a29 <monitor+0xba>$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	75 16                	jne    f0100a02 <monitor+0x93>$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	00 $/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	c7 04 24 8d 6c 10 f0 	movl   $0xf0106c8d,(%esp)$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	e8 0e 36 00 00       	call   f010400e <cprintf>$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	eb 9f                	jmp    f01009a1 <monitor+0x32>$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100a06	obj/kern/kernel.asm	/^f0100a06:	46                   	inc    %esi$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	eb 01                	jmp    f0100a0a <monitor+0x9b>$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	43                   	inc    %ebx$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	8a 03                	mov    (%ebx),%al$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	84 c0                	test   %al,%al$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	74 b5                	je     f01009c5 <monitor+0x56>$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	c7 04 24 88 6c 10 f0 	movl   $0xf0106c88,(%esp)$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	e8 f2 51 00 00       	call   f0105c15 <strchr>$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	85 c0                	test   %eax,%eax$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	74 e2                	je     f0100a09 <monitor+0x9a>$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	eb 9c                	jmp    f01009c5 <monitor+0x56>$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	00 $/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	85 f6                	test   %esi,%esi$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	0f 84 68 ff ff ff    	je     f01009a1 <monitor+0x32>$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	bb a0 6e 10 f0       	mov    $0xf0106ea0,%ebx$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	e8 6e 51 00 00       	call   f0105bc2 <strcmp>$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	85 c0                	test   %eax,%eax$/;"	l
f0100a56	obj/kern/kernel.asm	/^f0100a56:	75 24                	jne    f0100a7c <monitor+0x10d>$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	ff 14 85 a8 6e 10 f0 	call   *-0xfef9158(,%eax,4)$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	85 c0                	test   %eax,%eax$/;"	l
f0100a75	obj/kern/kernel.asm	/^f0100a75:	78 26                	js     f0100a9d <monitor+0x12e>$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	e9 25 ff ff ff       	jmp    f01009a1 <monitor+0x32>$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	47                   	inc    %edi$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	83 ff 03             	cmp    $0x3,%edi$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	75 be                	jne    f0100a43 <monitor+0xd4>$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	c7 04 24 aa 6c 10 f0 	movl   $0xf0106caa,(%esp)$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	e8 76 35 00 00       	call   f010400e <cprintf>$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	e9 04 ff ff ff       	jmp    f01009a1 <monitor+0x32>$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	5b                   	pop    %ebx$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	5e                   	pop    %esi$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	5f                   	pop    %edi$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	5d                   	pop    %ebp$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	c3                   	ret    $/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	00 00                	add    %al,(%eax)$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8 <boot_alloc>:$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	55                   	push   %ebp$/;"	l
f0100aa9	obj/kern/kernel.asm	/^f0100aa9:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	83 3d 3c d2 32 f0 00 	cmpl   $0x0,0xf032d23c$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	75 11                	jne    f0100ac5 <boot_alloc+0x1d>$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	ba 07 00 37 f0       	mov    $0xf0370007,%edx$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	89 15 3c d2 32 f0    	mov    %edx,0xf032d23c$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	85 c0                	test   %eax,%eax$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	74 19                	je     f0100ae2 <boot_alloc+0x3a>$/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	8b 15 3c d2 32 f0    	mov    0xf032d23c,%edx$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	a3 3c d2 32 f0       	mov    %eax,0xf032d23c$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	eb 06                	jmp    f0100ae8 <boot_alloc+0x40>$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	8b 15 3c d2 32 f0    	mov    0xf032d23c,%edx$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	89 d0                	mov    %edx,%eax$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	5d                   	pop    %ebp$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	c3                   	ret    $/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec <check_va2pa>:$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	55                   	push   %ebp$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	89 d1                	mov    %edx,%ecx$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	a8 01                	test   $0x1,%al$/;"	l
f0100afc	obj/kern/kernel.asm	/^f0100afc:	74 4d                	je     f0100b4b <check_va2pa+0x5f>$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	89 c1                	mov    %eax,%ecx$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	3b 0d 88 de 32 f0    	cmp    0xf032de88,%ecx$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	72 20                	jb     f0100b30 <check_va2pa+0x44>$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	f0 $/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	00 $/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	e8 10 f5 ff ff       	call   f0100040 <_panic>$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	a8 01                	test   $0x1,%al$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	74 0e                	je     f0100b52 <check_va2pa+0x66>$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	eb 0c                	jmp    f0100b57 <check_va2pa+0x6b>$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	eb 05                	jmp    f0100b57 <check_va2pa+0x6b>$/;"	l
f0100b52	obj/kern/kernel.asm	/^f0100b52:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	c9                   	leave  $/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	c3                   	ret    $/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59 <nvram_read>:$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	55                   	push   %ebp$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	56                   	push   %esi$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	53                   	push   %ebx$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	89 c3                	mov    %eax,%ebx$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	e8 5d 33 00 00       	call   f0103ec8 <mc146818_read>$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	89 c6                	mov    %eax,%esi$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	43                   	inc    %ebx$/;"	l
f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	e8 52 33 00 00       	call   f0103ec8 <mc146818_read>$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	09 f0                	or     %esi,%eax$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	5b                   	pop    %ebx$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	5e                   	pop    %esi$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	5d                   	pop    %ebp$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	c3                   	ret    $/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82 <check_page_free_list>:$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	55                   	push   %ebp$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	57                   	push   %edi$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	56                   	push   %esi$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	53                   	push   %ebx$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	3c 01                	cmp    $0x1,%al$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	19 f6                	sbb    %esi,%esi$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	46                   	inc    %esi$/;"	l
f0100b96	obj/kern/kernel.asm	/^f0100b96:	8b 15 40 d2 32 f0    	mov    0xf032d240,%edx$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	85 d2                	test   %edx,%edx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	75 1c                	jne    f0100bbc <check_page_free_list+0x3a>$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	c7 44 24 08 c4 6e 10 	movl   $0xf0106ec4,0x8(%esp)$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	f0 $/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	00 $/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	e8 84 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	84 c0                	test   %al,%al$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	74 4b                	je     f0100c0b <check_page_free_list+0x89>$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	89 d0                	mov    %edx,%eax$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	39 c6                	cmp    %eax,%esi$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	0f 96 c0             	setbe  %al$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	8b 4c 85 d8          	mov    -0x28(%ebp,%eax,4),%ecx$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	89 11                	mov    %edx,(%ecx)$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	89 54 85 d8          	mov    %edx,-0x28(%ebp,%eax,4)$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	8b 12                	mov    (%edx),%edx$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	85 d2                	test   %edx,%edx$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	75 da                	jne    f0100bcc <check_page_free_list+0x4a>$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	89 10                	mov    %edx,(%eax)$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	8b 1d 40 d2 32 f0    	mov    0xf032d240,%ebx$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	eb 63                	jmp    f0100c76 <check_page_free_list+0xf4>$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	89 c2                	mov    %eax,%edx$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	39 d6                	cmp    %edx,%esi$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	76 4a                	jbe    f0100c74 <check_page_free_list+0xf2>$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	89 c2                	mov    %eax,%edx$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	72 20                	jb     f0100c57 <check_page_free_list+0xd5>$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c3b	obj/kern/kernel.asm	/^f0100c3b:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	f0 $/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	00 $/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	e8 e9 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	00 $/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	00 $/;"	l
f0100c67	obj/kern/kernel.asm	/^f0100c67:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	e8 d6 4f 00 00       	call   f0105c4a <memset>$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	85 db                	test   %ebx,%ebx$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	75 99                	jne    f0100c13 <check_page_free_list+0x91>$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	e8 24 fe ff ff       	call   f0100aa8 <boot_alloc>$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 15 40 d2 32 f0    	mov    0xf032d240,%edx$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	8b 0d 90 de 32 f0    	mov    0xf032de90,%ecx$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	a1 88 de 32 f0       	mov    0xf032de88,%eax$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	e9 c4 01 00 00       	jmp    f0100e75 <check_page_free_list+0x2f3>$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	73 24                	jae    f0100cda <check_page_free_list+0x158>$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	c7 44 24 0c fb 77 10 	movl   $0xf01077fb,0xc(%esp)$/;"	l
f0100cbd	obj/kern/kernel.asm	/^f0100cbd:	f0 $/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	f0 $/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	c7 44 24 04 17 03 00 	movl   $0x317,0x4(%esp)$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	00 $/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	e8 66 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	72 24                	jb     f0100d03 <check_page_free_list+0x181>$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	c7 44 24 0c 1c 78 10 	movl   $0xf010781c,0xc(%esp)$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	f0 $/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	f0 $/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	c7 44 24 04 18 03 00 	movl   $0x318,0x4(%esp)$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	00 $/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	e8 3d f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	89 d0                	mov    %edx,%eax$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	a8 07                	test   $0x7,%al$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	74 24                	je     f0100d30 <check_page_free_list+0x1ae>$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	c7 44 24 0c e8 6e 10 	movl   $0xf0106ee8,0xc(%esp)$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	f0 $/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	f0 $/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	c7 44 24 04 19 03 00 	movl   $0x319,0x4(%esp)$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	00 $/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	e8 10 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	75 24                	jne    f0100d5c <check_page_free_list+0x1da>$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	c7 44 24 0c 30 78 10 	movl   $0xf0107830,0xc(%esp)$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	f0 $/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	f0 $/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	c7 44 24 04 1c 03 00 	movl   $0x31c,0x4(%esp)$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	00 $/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	e8 e4 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	75 24                	jne    f0100d87 <check_page_free_list+0x205>$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	c7 44 24 0c 41 78 10 	movl   $0xf0107841,0xc(%esp)$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	f0 $/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	f0 $/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	c7 44 24 04 1d 03 00 	movl   $0x31d,0x4(%esp)$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	00 $/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	e8 b9 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	75 24                	jne    f0100db2 <check_page_free_list+0x230>$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	c7 44 24 0c 1c 6f 10 	movl   $0xf0106f1c,0xc(%esp)$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	f0 $/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	f0 $/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	c7 44 24 04 1e 03 00 	movl   $0x31e,0x4(%esp)$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	00 $/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	e8 8e f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100db7	obj/kern/kernel.asm	/^f0100db7:	75 24                	jne    f0100ddd <check_page_free_list+0x25b>$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	c7 44 24 0c 5a 78 10 	movl   $0xf010785a,0xc(%esp)$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	f0 $/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	f0 $/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	c7 44 24 04 1f 03 00 	movl   $0x31f,0x4(%esp)$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	00 $/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	e8 63 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	76 59                	jbe    f0100e3d <check_page_free_list+0x2bb>$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	89 c1                	mov    %eax,%ecx$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	77 20                	ja     f0100e0e <check_page_free_list+0x28c>$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	f0 $/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	00 $/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	e8 32 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	8d b8 00 00 00 f0    	lea    -0x10000000(%eax),%edi$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	39 7d c4             	cmp    %edi,-0x3c(%ebp)$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	76 24                	jbe    f0100e3d <check_page_free_list+0x2bb>$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	c7 44 24 0c 40 6f 10 	movl   $0xf0106f40,0xc(%esp)$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	f0 $/;"	l
f0100e21	obj/kern/kernel.asm	/^f0100e21:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	f0 $/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	c7 44 24 04 20 03 00 	movl   $0x320,0x4(%esp)$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	00 $/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	e8 03 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	75 24                	jne    f0100e68 <check_page_free_list+0x2e6>$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	c7 44 24 0c 74 78 10 	movl   $0xf0107874,0xc(%esp)$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	f0 $/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	f0 $/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	c7 44 24 04 22 03 00 	movl   $0x322,0x4(%esp)$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	00 $/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	e8 d8 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e68	obj/kern/kernel.asm	/^f0100e68:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	77 03                	ja     f0100e72 <check_page_free_list+0x2f0>$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	46                   	inc    %esi$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	eb 01                	jmp    f0100e73 <check_page_free_list+0x2f1>$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	43                   	inc    %ebx$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	8b 12                	mov    (%edx),%edx$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	85 d2                	test   %edx,%edx$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	0f 85 34 fe ff ff    	jne    f0100cb1 <check_page_free_list+0x12f>$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	85 f6                	test   %esi,%esi$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	7f 24                	jg     f0100ea5 <check_page_free_list+0x323>$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	c7 44 24 0c 91 78 10 	movl   $0xf0107891,0xc(%esp)$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	f0 $/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	f0 $/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	c7 44 24 04 2a 03 00 	movl   $0x32a,0x4(%esp)$/;"	l
f0100e98	obj/kern/kernel.asm	/^f0100e98:	00 $/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100ea0	obj/kern/kernel.asm	/^f0100ea0:	e8 9b f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	85 db                	test   %ebx,%ebx$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	7f 24                	jg     f0100ecd <check_page_free_list+0x34b>$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	c7 44 24 0c a3 78 10 	movl   $0xf01078a3,0xc(%esp)$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	f0 $/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	f0 $/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	00 $/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	e8 73 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	5b                   	pop    %ebx$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	5e                   	pop    %esi$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	5f                   	pop    %edi$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	5d                   	pop    %ebp$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	c3                   	ret    $/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5 <page_init>:$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	55                   	push   %ebp$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	56                   	push   %esi$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	53                   	push   %ebx$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	e9 c4 00 00 00       	jmp    f0100fad <page_init+0xd8>$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	85 db                	test   %ebx,%ebx$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	75 16                	jne    f0100f03 <page_init+0x2e>$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	a1 90 de 32 f0       	mov    0xf032de90,%eax$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100ef8	obj/kern/kernel.asm	/^f0100ef8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	e9 a6 00 00 00       	jmp    f0100fa9 <page_init+0xd4>$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	0f 84 9d 00 00 00    	je     f0100fa9 <page_init+0xd4>$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	3b 1d 38 d2 32 f0    	cmp    0xf032d238,%ebx$/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	73 25                	jae    f0100f39 <page_init+0x64>$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	89 f0                	mov    %esi,%eax$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	8b 15 40 d2 32 f0    	mov    0xf032d240,%edx$/;"	l
f0100f28	obj/kern/kernel.asm	/^f0100f28:	89 10                	mov    %edx,(%eax)$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	89 f0                	mov    %esi,%eax$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	eb 70                	jmp    f0100fa9 <page_init+0xd4>$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	8d 83 60 ff ff ff    	lea    -0xa0(%ebx),%eax$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	83 f8 5f             	cmp    $0x5f,%eax$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	77 16                	ja     f0100f5a <page_init+0x85>$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	89 f0                	mov    %esi,%eax$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	eb 4f                	jmp    f0100fa9 <page_init+0xd4>$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	e8 44 fb ff ff       	call   f0100aa8 <boot_alloc>$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	73 16                	jae    f0100f86 <page_init+0xb1>$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	89 f0                	mov    %esi,%eax$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0100f7e	obj/kern/kernel.asm	/^f0100f7e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	eb 23                	jmp    f0100fa9 <page_init+0xd4>$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	89 f0                	mov    %esi,%eax$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	8b 15 40 d2 32 f0    	mov    0xf032d240,%edx$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	89 10                	mov    %edx,(%eax)$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	89 f0                	mov    %esi,%eax$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	43                   	inc    %ebx$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	83 c6 08             	add    $0x8,%esi$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	3b 1d 88 de 32 f0    	cmp    0xf032de88,%ebx$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	0f 82 30 ff ff ff    	jb     f0100ee9 <page_init+0x14>$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	5b                   	pop    %ebx$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	5e                   	pop    %esi$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	5d                   	pop    %ebp$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	c3                   	ret    $/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd <page_alloc>:$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	55                   	push   %ebp$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	53                   	push   %ebx$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	8b 1d 40 d2 32 f0    	mov    0xf032d240,%ebx$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	85 db                	test   %ebx,%ebx$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	74 6b                	je     f0101039 <page_alloc+0x7c>$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	74 58                	je     f0101039 <page_alloc+0x7c>$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	89 d8                	mov    %ebx,%eax$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	89 c2                	mov    %eax,%edx$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	72 20                	jb     f010101c <page_alloc+0x5f>$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	f0 $/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	00 $/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	e8 24 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	00 $/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	00 $/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	e8 11 4c 00 00       	call   f0105c4a <memset>$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	89 d8                	mov    %ebx,%eax$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	5b                   	pop    %ebx$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	5d                   	pop    %ebp$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	c3                   	ret    $/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041 <page_free>:$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	55                   	push   %ebp$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	89 e5                	mov    %esp,%ebp$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	75 05                	jne    f0101056 <page_free+0x15>$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	74 1c                	je     f0101072 <page_free+0x31>$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	c7 44 24 08 b4 78 10 	movl   $0xf01078b4,0x8(%esp)$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	f0 $/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	c7 44 24 04 a2 01 00 	movl   $0x1a2,0x4(%esp)$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	00 $/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	e8 ce ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	8b 15 40 d2 32 f0    	mov    0xf032d240,%edx$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	89 10                	mov    %edx,(%eax)$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	a3 40 d2 32 f0       	mov    %eax,0xf032d240$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	c9                   	leave  $/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	c3                   	ret    $/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081 <page_decref>:$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	55                   	push   %ebp$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	89 e5                	mov    %esp,%ebp$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	4a                   	dec    %edx$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	66 85 d2             	test   %dx,%dx$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	75 08                	jne    f010109f <page_decref+0x1e>$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	e8 a2 ff ff ff       	call   f0101041 <page_free>$/;"	l
f010109f	obj/kern/kernel.asm	/^f010109f:	c9                   	leave  $/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	c3                   	ret    $/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1 <pgdir_walk>:$/;"	l
f01010a1	obj/kern/kernel.asm	/^f01010a1:	55                   	push   %ebp$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	56                   	push   %esi$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	53                   	push   %ebx$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	89 f3                	mov    %esi,%ebx$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f01010b7	obj/kern/kernel.asm	/^f01010b7:	8b 03                	mov    (%ebx),%eax$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	85 c0                	test   %eax,%eax$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	75 75                	jne    f0101132 <pgdir_walk+0x91>$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	0f 84 d0 00 00 00    	je     f0101197 <pgdir_walk+0xf6>$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	e8 ea fe ff ff       	call   f0100fbd <page_alloc>$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	85 c0                	test   %eax,%eax$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	0f 84 c3 00 00 00    	je     f010119e <pgdir_walk+0xfd>$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	89 c2                	mov    %eax,%edx$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	83 ca 07             	or     $0x7,%edx$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	89 13                	mov    %edx,(%ebx)$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f01010f8	obj/kern/kernel.asm	/^f01010f8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	89 c2                	mov    %eax,%edx$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	72 20                	jb     f010112b <pgdir_walk+0x8a>$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	f0 $/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	00 $/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	e8 15 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	eb 58                	jmp    f010118a <pgdir_walk+0xe9>$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	8b 15 88 de 32 f0    	mov    0xf032de88,%edx$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	39 d0                	cmp    %edx,%eax$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	72 1c                	jb     f010115b <pgdir_walk+0xba>$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	c7 44 24 08 88 6f 10 	movl   $0xf0106f88,0x8(%esp)$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	f0 $/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	00 $/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	e8 e5 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	89 c1                	mov    %eax,%ecx$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	39 d0                	cmp    %edx,%eax$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	72 20                	jb     f0101184 <pgdir_walk+0xe3>$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	f0 $/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	00 $/;"	l
f0101178	obj/kern/kernel.asm	/^f0101178:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	e8 bc ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	8d 81 00 00 00 f0    	lea    -0x10000000(%ecx),%eax$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	01 f0                	add    %esi,%eax$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	eb 0c                	jmp    f01011a3 <pgdir_walk+0x102>$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	eb 05                	jmp    f01011a3 <pgdir_walk+0x102>$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	5b                   	pop    %ebx$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	5e                   	pop    %esi$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	5d                   	pop    %ebp$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	c3                   	ret    $/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa <boot_map_region>:$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	55                   	push   %ebp$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	57                   	push   %edi$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	56                   	push   %esi$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	53                   	push   %ebx$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	89 d3                	mov    %edx,%ebx$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	83 c8 01             	or     $0x1,%eax$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	eb 2f                	jmp    f0101200 <boot_map_region+0x56>$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	00 $/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	e8 b9 fe ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	85 c0                	test   %eax,%eax$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	74 19                	je     f0101205 <boot_map_region+0x5b>$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	09 fa                	or     %edi,%edx$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	89 10                	mov    %edx,(%eax)$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	46                   	inc    %esi$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	75 cc                	jne    f01011d1 <boot_map_region+0x27>$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	5b                   	pop    %ebx$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	5e                   	pop    %esi$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	5f                   	pop    %edi$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	5d                   	pop    %ebp$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	c3                   	ret    $/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d <page_lookup>:$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	55                   	push   %ebp$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	53                   	push   %ebx$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	00 $/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	e8 70 fe ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	85 c0                	test   %eax,%eax$/;"	l
f0101233	obj/kern/kernel.asm	/^f0101233:	74 3a                	je     f010126f <page_lookup+0x62>$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	85 db                	test   %ebx,%ebx$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	74 02                	je     f010123b <page_lookup+0x2e>$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	89 03                	mov    %eax,(%ebx)$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	8b 00                	mov    (%eax),%eax$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	72 1c                	jb     f0101264 <page_lookup+0x57>$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	c7 44 24 08 88 6f 10 	movl   $0xf0106f88,0x8(%esp)$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	f0 $/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	00 $/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	e8 dc ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	eb 05                	jmp    f0101274 <page_lookup+0x67>$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	5b                   	pop    %ebx$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	5d                   	pop    %ebp$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	c3                   	ret    $/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a <tlb_invalidate>:$/;"	l
f010127a	obj/kern/kernel.asm	/^f010127a:	55                   	push   %ebp$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	89 e5                	mov    %esp,%ebp$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	e8 f3 4f 00 00       	call   f0106278 <cpunum>$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	29 c2                	sub    %eax,%edx$/;"	l
f010128e	obj/kern/kernel.asm	/^f010128e:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	83 3c 85 28 e0 32 f0 	cmpl   $0x0,-0xfcd1fd8(,%eax,4)$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	00 $/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	74 20                	je     f01012bb <tlb_invalidate+0x41>$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	e8 d8 4f 00 00       	call   f0106278 <cpunum>$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	29 c2                	sub    %eax,%edx$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	75 06                	jne    f01012c1 <tlb_invalidate+0x47>$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	0f 01 38             	invlpg (%eax)$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	c9                   	leave  $/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	c3                   	ret    $/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3 <page_remove>:$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	55                   	push   %ebp$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	56                   	push   %esi$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	53                   	push   %ebx$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	00 $/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	e8 bc fd ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	e8 12 ff ff ff       	call   f010120d <page_lookup>$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	85 c0                	test   %eax,%eax$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	74 2a                	je     f0101329 <page_remove+0x66>$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	4a                   	dec    %edx$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	66 85 d2             	test   %dx,%dx$/;"	l
f010130a	obj/kern/kernel.asm	/^f010130a:	75 08                	jne    f0101314 <page_remove+0x51>$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	e8 2d fd ff ff       	call   f0101041 <page_free>$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	e8 51 ff ff ff       	call   f010127a <tlb_invalidate>$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	83 c4 20             	add    $0x20,%esp$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	5b                   	pop    %ebx$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	5e                   	pop    %esi$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	5d                   	pop    %ebp$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	c3                   	ret    $/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330 <page_insert>:$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	55                   	push   %ebp$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	89 e5                	mov    %esp,%ebp$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	57                   	push   %edi$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	56                   	push   %esi$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	53                   	push   %ebx$/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	00 $/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	e8 4b fd ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	89 c6                	mov    %eax,%esi$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	85 c0                	test   %eax,%eax$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	74 50                	je     f01013ac <page_insert+0x7c>$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	66 ff 43 04          	incw   0x4(%ebx)$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	74 1e                	je     f0101383 <page_insert+0x53>$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	e8 06 ff ff ff       	call   f010127a <tlb_invalidate>$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	e8 40 ff ff ff       	call   f01012c3 <page_remove>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	2b 1d 90 de 32 f0    	sub    0xf032de90,%ebx$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	09 c3                	or     %eax,%ebx$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	09 14 87             	or     %edx,(%edi,%eax,4)$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	eb 05                	jmp    f01013b1 <page_insert+0x81>$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	5b                   	pop    %ebx$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	5e                   	pop    %esi$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	5f                   	pop    %edi$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	5d                   	pop    %ebp$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	c3                   	ret    $/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9 <mmio_map_region>:$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	55                   	push   %ebp$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	53                   	push   %ebx$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	81 c3 ff 0f 00 00    	add    $0xfff,%ebx$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	8b 15 00 93 12 f0    	mov    0xf0129300,%edx$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	8d 04 13             	lea    (%ebx,%edx,1),%eax$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	76 1c                	jbe    f01013fb <mmio_map_region+0x42>$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	f0 $/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	c7 44 24 04 a5 02 00 	movl   $0x2a5,0x4(%esp)$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	00 $/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	e8 45 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	00 $/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	89 d9                	mov    %ebx,%ecx$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	e8 95 fd ff ff       	call   f01011aa <boot_map_region>$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	a1 00 93 12 f0       	mov    0xf0129300,%eax$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	01 c3                	add    %eax,%ebx$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	89 1d 00 93 12 f0    	mov    %ebx,0xf0129300$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	5b                   	pop    %ebx$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	5d                   	pop    %ebp$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	c3                   	ret    $/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428 <mem_init>:$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	55                   	push   %ebp$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	89 e5                	mov    %esp,%ebp$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	57                   	push   %edi$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	56                   	push   %esi$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	53                   	push   %ebx$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	e8 1e f7 ff ff       	call   f0100b59 <nvram_read>$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	89 c2                	mov    %eax,%edx$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	85 c0                	test   %eax,%eax$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	79 06                	jns    f010144a <mem_init+0x22>$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	89 15 38 d2 32 f0    	mov    %edx,0xf032d238$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	e8 fc f6 ff ff       	call   f0100b59 <nvram_read>$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	89 c2                	mov    %eax,%edx$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	89 d0                	mov    %edx,%eax$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	85 d2                	test   %edx,%edx$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	79 06                	jns    f010146e <mem_init+0x46>$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	74 0e                	je     f0101481 <mem_init+0x59>$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	89 15 88 de 32 f0    	mov    %edx,0xf032de88$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	eb 0c                	jmp    f010148d <mem_init+0x65>$/;"	l
f0101481	obj/kern/kernel.asm	/^f0101481:	8b 15 38 d2 32 f0    	mov    0xf032d238,%edx$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	89 15 88 de 32 f0    	mov    %edx,0xf032de88$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	a1 38 d2 32 f0       	mov    0xf032d238,%eax$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	a1 88 de 32 f0       	mov    0xf032de88,%eax$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	c7 04 24 c8 6f 10 f0 	movl   $0xf0106fc8,(%esp)$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	e8 4d 2b 00 00       	call   f010400e <cprintf>$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01014c6	obj/kern/kernel.asm	/^f01014c6:	e8 dd f5 ff ff       	call   f0100aa8 <boot_alloc>$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	a3 8c de 32 f0       	mov    %eax,0xf032de8c$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	00 $/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	00 $/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	e8 62 47 00 00       	call   f0105c4a <memset>$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01014f2	obj/kern/kernel.asm	/^f01014f2:	77 20                	ja     f0101514 <mem_init+0xec>$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	f0 $/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	c7 44 24 04 95 00 00 	movl   $0x95,0x4(%esp)$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	00 $/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	e8 2c eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	83 ca 05             	or     $0x5,%edx$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	a1 88 de 32 f0       	mov    0xf032de88,%eax$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	e8 78 f5 ff ff       	call   f0100aa8 <boot_alloc>$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	a3 90 de 32 f0       	mov    %eax,0xf032de90$/;"	l
f0101535	obj/kern/kernel.asm	/^f0101535:	8b 15 88 de 32 f0    	mov    0xf032de88,%edx$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	00 $/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	e8 f8 46 00 00       	call   f0105c4a <memset>$/;"	l
f0101552	obj/kern/kernel.asm	/^f0101552:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	e8 4c f5 ff ff       	call   f0100aa8 <boot_alloc>$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	a3 48 d2 32 f0       	mov    %eax,0xf032d248$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	00 $/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	00 $/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	e8 d1 46 00 00       	call   f0105c4a <memset>$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	e8 57 f9 ff ff       	call   f0100ed5 <page_init>$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	e8 fa f5 ff ff       	call   f0100b82 <check_page_free_list>$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	83 3d 90 de 32 f0 00 	cmpl   $0x0,0xf032de90$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	75 1c                	jne    f01015ad <mem_init+0x185>$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	c7 44 24 08 c9 78 10 	movl   $0xf01078c9,0x8(%esp)$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	f0 $/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	00 $/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	e8 93 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	a1 40 d2 32 f0       	mov    0xf032d240,%eax$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	eb 03                	jmp    f01015bc <mem_init+0x194>$/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	43                   	inc    %ebx$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	8b 00                	mov    (%eax),%eax$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	85 c0                	test   %eax,%eax$/;"	l
f01015be	obj/kern/kernel.asm	/^f01015be:	75 f9                	jne    f01015b9 <mem_init+0x191>$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015c7	obj/kern/kernel.asm	/^f01015c7:	e8 f1 f9 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	89 c6                	mov    %eax,%esi$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	85 c0                	test   %eax,%eax$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	75 24                	jne    f01015f6 <mem_init+0x1ce>$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	c7 44 24 0c e4 78 10 	movl   $0xf01078e4,0xc(%esp)$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	f0 $/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	f0 $/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	c7 44 24 04 44 03 00 	movl   $0x344,0x4(%esp)$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	00 $/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	e8 4a ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01015fd	obj/kern/kernel.asm	/^f01015fd:	e8 bb f9 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	89 c7                	mov    %eax,%edi$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	85 c0                	test   %eax,%eax$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	75 24                	jne    f010162c <mem_init+0x204>$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	c7 44 24 0c fa 78 10 	movl   $0xf01078fa,0xc(%esp)$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	f0 $/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	f0 $/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	c7 44 24 04 45 03 00 	movl   $0x345,0x4(%esp)$/;"	l
f010161f	obj/kern/kernel.asm	/^f010161f:	00 $/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	e8 14 ea ff ff       	call   f0100040 <_panic>$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	e8 85 f9 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	85 c0                	test   %eax,%eax$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	75 24                	jne    f0101663 <mem_init+0x23b>$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	c7 44 24 0c 10 79 10 	movl   $0xf0107910,0xc(%esp)$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	f0 $/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	f0 $/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	c7 44 24 04 46 03 00 	movl   $0x346,0x4(%esp)$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	00 $/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010165e	obj/kern/kernel.asm	/^f010165e:	e8 dd e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	39 fe                	cmp    %edi,%esi$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	75 24                	jne    f010168b <mem_init+0x263>$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	c7 44 24 0c 26 79 10 	movl   $0xf0107926,0xc(%esp)$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	f0 $/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	f0 $/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	00 $/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	e8 b5 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	74 05                	je     f0101695 <mem_init+0x26d>$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	75 24                	jne    f01016b9 <mem_init+0x291>$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	c7 44 24 0c 04 70 10 	movl   $0xf0107004,0xc(%esp)$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	f0 $/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	f0 $/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	c7 44 24 04 4a 03 00 	movl   $0x34a,0x4(%esp)$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	00 $/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	e8 87 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	8b 15 90 de 32 f0    	mov    0xf032de90,%edx$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	a1 88 de 32 f0       	mov    0xf032de88,%eax$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01016c7	obj/kern/kernel.asm	/^f01016c7:	89 f1                	mov    %esi,%ecx$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	29 d1                	sub    %edx,%ecx$/;"	l
f01016cb	obj/kern/kernel.asm	/^f01016cb:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	39 c1                	cmp    %eax,%ecx$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	72 24                	jb     f01016f9 <mem_init+0x2d1>$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	c7 44 24 0c 38 79 10 	movl   $0xf0107938,0xc(%esp)$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	f0 $/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	f0 $/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	c7 44 24 04 4b 03 00 	movl   $0x34b,0x4(%esp)$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	00 $/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	e8 47 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	89 f9                	mov    %edi,%ecx$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	29 d1                	sub    %edx,%ecx$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	77 24                	ja     f010172b <mem_init+0x303>$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	c7 44 24 0c 55 79 10 	movl   $0xf0107955,0xc(%esp)$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	f0 $/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	f0 $/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	c7 44 24 04 4c 03 00 	movl   $0x34c,0x4(%esp)$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	00 $/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	e8 15 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	29 d1                	sub    %edx,%ecx$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	89 ca                	mov    %ecx,%edx$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	39 d0                	cmp    %edx,%eax$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	77 24                	ja     f0101760 <mem_init+0x338>$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	c7 44 24 0c 72 79 10 	movl   $0xf0107972,0xc(%esp)$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	f0 $/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	f0 $/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	c7 44 24 04 4d 03 00 	movl   $0x34d,0x4(%esp)$/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	00 $/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	e8 e0 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	a1 40 d2 32 f0       	mov    0xf032d240,%eax$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	c7 05 40 d2 32 f0 00 	movl   $0x0,0xf032d240$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	00 00 00 $/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	e8 3f f8 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	85 c0                	test   %eax,%eax$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	74 24                	je     f01017a6 <mem_init+0x37e>$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	c7 44 24 0c 8f 79 10 	movl   $0xf010798f,0xc(%esp)$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	f0 $/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	f0 $/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	00 $/;"	l
f010179a	obj/kern/kernel.asm	/^f010179a:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	e8 9a e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	e8 93 f8 ff ff       	call   f0101041 <page_free>$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	e8 8b f8 ff ff       	call   f0101041 <page_free>$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	e8 80 f8 ff ff       	call   f0101041 <page_free>$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	e8 f0 f7 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	89 c6                	mov    %eax,%esi$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	85 c0                	test   %eax,%eax$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	75 24                	jne    f01017f7 <mem_init+0x3cf>$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	c7 44 24 0c e4 78 10 	movl   $0xf01078e4,0xc(%esp)$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	f0 $/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	f0 $/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	c7 44 24 04 5b 03 00 	movl   $0x35b,0x4(%esp)$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	00 $/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	e8 49 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	e8 ba f7 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	89 c7                	mov    %eax,%edi$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	85 c0                	test   %eax,%eax$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	75 24                	jne    f010182d <mem_init+0x405>$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	c7 44 24 0c fa 78 10 	movl   $0xf01078fa,0xc(%esp)$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	f0 $/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	f0 $/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	c7 44 24 04 5c 03 00 	movl   $0x35c,0x4(%esp)$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	00 $/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	e8 13 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	e8 84 f7 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	85 c0                	test   %eax,%eax$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	75 24                	jne    f0101864 <mem_init+0x43c>$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	c7 44 24 0c 10 79 10 	movl   $0xf0107910,0xc(%esp)$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	f0 $/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	f0 $/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	c7 44 24 04 5d 03 00 	movl   $0x35d,0x4(%esp)$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	00 $/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010185f	obj/kern/kernel.asm	/^f010185f:	e8 dc e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	39 fe                	cmp    %edi,%esi$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	75 24                	jne    f010188c <mem_init+0x464>$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	c7 44 24 0c 26 79 10 	movl   $0xf0107926,0xc(%esp)$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	f0 $/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	f0 $/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	c7 44 24 04 5f 03 00 	movl   $0x35f,0x4(%esp)$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	00 $/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101887	obj/kern/kernel.asm	/^f0101887:	e8 b4 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	74 05                	je     f0101896 <mem_init+0x46e>$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	75 24                	jne    f01018ba <mem_init+0x492>$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	c7 44 24 0c 04 70 10 	movl   $0xf0107004,0xc(%esp)$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	f0 $/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	f0 $/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	c7 44 24 04 60 03 00 	movl   $0x360,0x4(%esp)$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	00 $/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	e8 86 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	e8 f7 f6 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	85 c0                	test   %eax,%eax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	74 24                	je     f01018ee <mem_init+0x4c6>$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	c7 44 24 0c 8f 79 10 	movl   $0xf010798f,0xc(%esp)$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	f0 $/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	f0 $/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	c7 44 24 04 61 03 00 	movl   $0x361,0x4(%esp)$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	00 $/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	e8 52 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	89 f0                	mov    %esi,%eax$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	89 c2                	mov    %eax,%edx$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	72 20                	jb     f0101929 <mem_init+0x501>$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	f0 $/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	00 $/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	e8 17 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	00 $/;"	l
f0101931	obj/kern/kernel.asm	/^f0101931:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	00 $/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	e8 04 43 00 00       	call   f0105c4a <memset>$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	e8 f3 f6 ff ff       	call   f0101041 <page_free>$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	e8 63 f6 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	85 c0                	test   %eax,%eax$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	75 24                	jne    f0101982 <mem_init+0x55a>$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	c7 44 24 0c 9e 79 10 	movl   $0xf010799e,0xc(%esp)$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	f0 $/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	f0 $/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	c7 44 24 04 66 03 00 	movl   $0x366,0x4(%esp)$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	00 $/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	e8 be e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	39 c6                	cmp    %eax,%esi$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	74 24                	je     f01019aa <mem_init+0x582>$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	c7 44 24 0c bc 79 10 	movl   $0xf01079bc,0xc(%esp)$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	f0 $/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	f0 $/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	c7 44 24 04 67 03 00 	movl   $0x367,0x4(%esp)$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	00 $/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	e8 96 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	89 f2                	mov    %esi,%edx$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	89 d0                	mov    %edx,%eax$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f01019c3	obj/kern/kernel.asm	/^f01019c3:	72 20                	jb     f01019e5 <mem_init+0x5bd>$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	f0 $/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	00 $/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	e8 5b e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01019eb	obj/kern/kernel.asm	/^f01019eb:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	74 24                	je     f0101a1a <mem_init+0x5f2>$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	c7 44 24 0c cc 79 10 	movl   $0xf01079cc,0xc(%esp)$/;"	l
f01019fd	obj/kern/kernel.asm	/^f01019fd:	f0 $/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101a05	obj/kern/kernel.asm	/^f0101a05:	f0 $/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	c7 44 24 04 6a 03 00 	movl   $0x36a,0x4(%esp)$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	00 $/;"	l
f0101a0e	obj/kern/kernel.asm	/^f0101a0e:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	e8 26 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	40                   	inc    %eax$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	39 d0                	cmp    %edx,%eax$/;"	l
f0101a1d	obj/kern/kernel.asm	/^f0101a1d:	75 d2                	jne    f01019f1 <mem_init+0x5c9>$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0101a22	obj/kern/kernel.asm	/^f0101a22:	89 15 40 d2 32 f0    	mov    %edx,0xf032d240$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	e8 11 f6 ff ff       	call   f0101041 <page_free>$/;"	l
f0101a30	obj/kern/kernel.asm	/^f0101a30:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	e8 09 f6 ff ff       	call   f0101041 <page_free>$/;"	l
f0101a38	obj/kern/kernel.asm	/^f0101a38:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	e8 fe f5 ff ff       	call   f0101041 <page_free>$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	a1 40 d2 32 f0       	mov    0xf032d240,%eax$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	eb 03                	jmp    f0101a4d <mem_init+0x625>$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	4b                   	dec    %ebx$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	8b 00                	mov    (%eax),%eax$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	85 c0                	test   %eax,%eax$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	75 f9                	jne    f0101a4a <mem_init+0x622>$/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	85 db                	test   %ebx,%ebx$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	74 24                	je     f0101a79 <mem_init+0x651>$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	c7 44 24 0c d6 79 10 	movl   $0xf01079d6,0xc(%esp)$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	f0 $/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	f0 $/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	c7 44 24 04 77 03 00 	movl   $0x377,0x4(%esp)$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	00 $/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	e8 c7 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	c7 04 24 24 70 10 f0 	movl   $0xf0107024,(%esp)$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	e8 89 25 00 00       	call   f010400e <cprintf>$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	e8 2c f5 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	89 c7                	mov    %eax,%edi$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	85 c0                	test   %eax,%eax$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	75 24                	jne    f0101abb <mem_init+0x693>$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	c7 44 24 0c e4 78 10 	movl   $0xf01078e4,0xc(%esp)$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	f0 $/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	f0 $/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	00 $/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	e8 85 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	e8 f6 f4 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	89 c6                	mov    %eax,%esi$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	85 c0                	test   %eax,%eax$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	75 24                	jne    f0101af1 <mem_init+0x6c9>$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	c7 44 24 0c fa 78 10 	movl   $0xf01078fa,0xc(%esp)$/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	f0 $/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	f0 $/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	00 $/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	e8 4f e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101af1	obj/kern/kernel.asm	/^f0101af1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	e8 c0 f4 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	89 c3                	mov    %eax,%ebx$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	85 c0                	test   %eax,%eax$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	75 24                	jne    f0101b27 <mem_init+0x6ff>$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	c7 44 24 0c 10 79 10 	movl   $0xf0107910,0xc(%esp)$/;"	l
f0101b0a	obj/kern/kernel.asm	/^f0101b0a:	f0 $/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	f0 $/;"	l
f0101b13	obj/kern/kernel.asm	/^f0101b13:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	00 $/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	e8 19 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	39 f7                	cmp    %esi,%edi$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	75 24                	jne    f0101b4f <mem_init+0x727>$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	c7 44 24 0c 26 79 10 	movl   $0xf0107926,0xc(%esp)$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	f0 $/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	f0 $/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	00 $/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	e8 f1 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	39 c6                	cmp    %eax,%esi$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	74 04                	je     f0101b57 <mem_init+0x72f>$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	39 c7                	cmp    %eax,%edi$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	75 24                	jne    f0101b7b <mem_init+0x753>$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	c7 44 24 0c 04 70 10 	movl   $0xf0107004,0xc(%esp)$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	f0 $/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	f0 $/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	00 $/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	e8 c5 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	8b 15 40 d2 32 f0    	mov    0xf032d240,%edx$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	c7 05 40 d2 32 f0 00 	movl   $0x0,0xf032d240$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	00 00 00 $/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	e8 23 f4 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	85 c0                	test   %eax,%eax$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	74 24                	je     f0101bc2 <mem_init+0x79a>$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	c7 44 24 0c 8f 79 10 	movl   $0xf010798f,0xc(%esp)$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	f0 $/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	f0 $/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	c7 44 24 04 eb 03 00 	movl   $0x3eb,0x4(%esp)$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	00 $/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	e8 7e e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	00 $/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	e8 2f f6 ff ff       	call   f010120d <page_lookup>$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	85 c0                	test   %eax,%eax$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	74 24                	je     f0101c06 <mem_init+0x7de>$/;"	l
f0101be2	obj/kern/kernel.asm	/^f0101be2:	c7 44 24 0c 44 70 10 	movl   $0xf0107044,0xc(%esp)$/;"	l
f0101be9	obj/kern/kernel.asm	/^f0101be9:	f0 $/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	f0 $/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	00 $/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	e8 3a e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	00 $/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101c15	obj/kern/kernel.asm	/^f0101c15:	00 $/;"	l
f0101c16	obj/kern/kernel.asm	/^f0101c16:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	e8 09 f7 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	85 c0                	test   %eax,%eax$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	78 24                	js     f0101c4f <mem_init+0x827>$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	c7 44 24 0c 7c 70 10 	movl   $0xf010707c,0xc(%esp)$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	f0 $/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	f0 $/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	c7 44 24 04 f2 03 00 	movl   $0x3f2,0x4(%esp)$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	00 $/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	e8 f1 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	e8 ea f3 ff ff       	call   f0101041 <page_free>$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	00 $/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	00 $/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	e8 b8 f6 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	85 c0                	test   %eax,%eax$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	74 24                	je     f0101ca0 <mem_init+0x878>$/;"	l
f0101c7c	obj/kern/kernel.asm	/^f0101c7c:	c7 44 24 0c ac 70 10 	movl   $0xf01070ac,0xc(%esp)$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	f0 $/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	f0 $/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	c7 44 24 04 f6 03 00 	movl   $0x3f6,0x4(%esp)$/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	00 $/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	e8 a0 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	8b 0d 8c de 32 f0    	mov    0xf032de8c,%ecx$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	a1 90 de 32 f0       	mov    0xf032de90,%eax$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	8b 11                	mov    (%ecx),%edx$/;"	l
f0101cb3	obj/kern/kernel.asm	/^f0101cb3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	89 f8                	mov    %edi,%eax$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	39 c2                	cmp    %eax,%edx$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	74 24                	je     f0101cec <mem_init+0x8c4>$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	c7 44 24 0c dc 70 10 	movl   $0xf01070dc,0xc(%esp)$/;"	l
f0101ccf	obj/kern/kernel.asm	/^f0101ccf:	f0 $/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	f0 $/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	00 $/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	e8 54 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	e8 f3 ed ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	89 f2                	mov    %esi,%edx$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	39 d0                	cmp    %edx,%eax$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	74 24                	je     f0101d2c <mem_init+0x904>$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	c7 44 24 0c 04 71 10 	movl   $0xf0107104,0xc(%esp)$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	f0 $/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	f0 $/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	00 $/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	e8 14 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	74 24                	je     f0101d57 <mem_init+0x92f>$/;"	l
f0101d33	obj/kern/kernel.asm	/^f0101d33:	c7 44 24 0c e1 79 10 	movl   $0xf01079e1,0xc(%esp)$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	f0 $/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	f0 $/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	c7 44 24 04 f9 03 00 	movl   $0x3f9,0x4(%esp)$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	00 $/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	e8 e9 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	74 24                	je     f0101d82 <mem_init+0x95a>$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	c7 44 24 0c f2 79 10 	movl   $0xf01079f2,0xc(%esp)$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	f0 $/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	f0 $/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	c7 44 24 04 fa 03 00 	movl   $0x3fa,0x4(%esp)$/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	00 $/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	e8 be e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	00 $/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	00 $/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	e8 8f f5 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	85 c0                	test   %eax,%eax$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	74 24                	je     f0101dc9 <mem_init+0x9a1>$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	c7 44 24 0c 34 71 10 	movl   $0xf0107134,0xc(%esp)$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	f0 $/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	f0 $/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	c7 44 24 04 fd 03 00 	movl   $0x3fd,0x4(%esp)$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	00 $/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	e8 77 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	e8 14 ed ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	89 da                	mov    %ebx,%edx$/;"	l
f0101dda	obj/kern/kernel.asm	/^f0101dda:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	39 d0                	cmp    %edx,%eax$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	74 24                	je     f0101e0e <mem_init+0x9e6>$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	c7 44 24 0c 70 71 10 	movl   $0xf0107170,0xc(%esp)$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	f0 $/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	f0 $/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	c7 44 24 04 fe 03 00 	movl   $0x3fe,0x4(%esp)$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	00 $/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	e8 32 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	74 24                	je     f0101e39 <mem_init+0xa11>$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	c7 44 24 0c 03 7a 10 	movl   $0xf0107a03,0xc(%esp)$/;"	l
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	f0 $/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	f0 $/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	c7 44 24 04 ff 03 00 	movl   $0x3ff,0x4(%esp)$/;"	l
f0101e2c	obj/kern/kernel.asm	/^f0101e2c:	00 $/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	e8 07 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	e8 78 f1 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	85 c0                	test   %eax,%eax$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	74 24                	je     f0101e6d <mem_init+0xa45>$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	c7 44 24 0c 8f 79 10 	movl   $0xf010798f,0xc(%esp)$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	f0 $/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	f0 $/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	00 $/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	e8 d3 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e6d	obj/kern/kernel.asm	/^f0101e6d:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	00 $/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	00 $/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e89	obj/kern/kernel.asm	/^f0101e89:	e8 a2 f4 ff ff       	call   f0101330 <page_insert>$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	85 c0                	test   %eax,%eax$/;"	l
f0101e90	obj/kern/kernel.asm	/^f0101e90:	74 24                	je     f0101eb6 <mem_init+0xa8e>$/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	c7 44 24 0c 34 71 10 	movl   $0xf0107134,0xc(%esp)$/;"	l
f0101e99	obj/kern/kernel.asm	/^f0101e99:	f0 $/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	f0 $/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)$/;"	l
f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	00 $/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	e8 8a e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	e8 27 ec ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0101ec5	obj/kern/kernel.asm	/^f0101ec5:	89 da                	mov    %ebx,%edx$/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ed3	obj/kern/kernel.asm	/^f0101ed3:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	74 24                	je     f0101efb <mem_init+0xad3>$/;"	l
f0101ed7	obj/kern/kernel.asm	/^f0101ed7:	c7 44 24 0c 70 71 10 	movl   $0xf0107170,0xc(%esp)$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	f0 $/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	f0 $/;"	l
f0101ee7	obj/kern/kernel.asm	/^f0101ee7:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	00 $/;"	l
f0101eef	obj/kern/kernel.asm	/^f0101eef:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	e8 45 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	74 24                	je     f0101f26 <mem_init+0xafe>$/;"	l
f0101f02	obj/kern/kernel.asm	/^f0101f02:	c7 44 24 0c 03 7a 10 	movl   $0xf0107a03,0xc(%esp)$/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	f0 $/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	f0 $/;"	l
f0101f12	obj/kern/kernel.asm	/^f0101f12:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	00 $/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	e8 1a e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	e8 8b f0 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	85 c0                	test   %eax,%eax$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	74 24                	je     f0101f5a <mem_init+0xb32>$/;"	l
f0101f36	obj/kern/kernel.asm	/^f0101f36:	c7 44 24 0c 8f 79 10 	movl   $0xf010798f,0xc(%esp)$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	f0 $/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	f0 $/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	c7 44 24 04 0b 04 00 	movl   $0x40b,0x4(%esp)$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	00 $/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101f55	obj/kern/kernel.asm	/^f0101f55:	e8 e6 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f5a	obj/kern/kernel.asm	/^f0101f5a:	8b 15 8c de 32 f0    	mov    0xf032de8c,%edx$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	8b 02                	mov    (%edx),%eax$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	89 c1                	mov    %eax,%ecx$/;"	l
f0101f69	obj/kern/kernel.asm	/^f0101f69:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	3b 0d 88 de 32 f0    	cmp    0xf032de88,%ecx$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	72 20                	jb     f0101f94 <mem_init+0xb6c>$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	f0 $/;"	l
f0101f80	obj/kern/kernel.asm	/^f0101f80:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f0101f87	obj/kern/kernel.asm	/^f0101f87:	00 $/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	e8 ac e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	00 $/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0101fab	obj/kern/kernel.asm	/^f0101fab:	00 $/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	e8 ed f0 ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	83 c2 04             	add    $0x4,%edx$/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	39 d0                	cmp    %edx,%eax$/;"	l
f0101fbc	obj/kern/kernel.asm	/^f0101fbc:	74 24                	je     f0101fe2 <mem_init+0xbba>$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	c7 44 24 0c a0 71 10 	movl   $0xf01071a0,0xc(%esp)$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	f0 $/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	f0 $/;"	l
f0101fce	obj/kern/kernel.asm	/^f0101fce:	c7 44 24 04 0f 04 00 	movl   $0x40f,0x4(%esp)$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	00 $/;"	l
f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0101fdd	obj/kern/kernel.asm	/^f0101fdd:	e8 5e e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	00 $/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	00 $/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0101ffb	obj/kern/kernel.asm	/^f0101ffb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	e8 2d f3 ff ff       	call   f0101330 <page_insert>$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	85 c0                	test   %eax,%eax$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	74 24                	je     f010202b <mem_init+0xc03>$/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	c7 44 24 0c e0 71 10 	movl   $0xf01071e0,0xc(%esp)$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	f0 $/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	f0 $/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	c7 44 24 04 12 04 00 	movl   $0x412,0x4(%esp)$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	00 $/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	e8 15 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	8b 0d 8c de 32 f0    	mov    0xf032de8c,%ecx$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	89 c8                	mov    %ecx,%eax$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	e8 ac ea ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	89 da                	mov    %ebx,%edx$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010204e	obj/kern/kernel.asm	/^f010204e:	39 d0                	cmp    %edx,%eax$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	74 24                	je     f0102076 <mem_init+0xc4e>$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	c7 44 24 0c 70 71 10 	movl   $0xf0107170,0xc(%esp)$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	f0 $/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	f0 $/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
f0102069	obj/kern/kernel.asm	/^f0102069:	00 $/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	e8 ca df ff ff       	call   f0100040 <_panic>$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	74 24                	je     f01020a1 <mem_init+0xc79>$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	c7 44 24 0c 03 7a 10 	movl   $0xf0107a03,0xc(%esp)$/;"	l
f0102084	obj/kern/kernel.asm	/^f0102084:	f0 $/;"	l
f0102085	obj/kern/kernel.asm	/^f0102085:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010208c	obj/kern/kernel.asm	/^f010208c:	f0 $/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
f0102094	obj/kern/kernel.asm	/^f0102094:	00 $/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	e8 9f df ff ff       	call   f0100040 <_panic>$/;"	l
f01020a1	obj/kern/kernel.asm	/^f01020a1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01020a8	obj/kern/kernel.asm	/^f01020a8:	00 $/;"	l
f01020a9	obj/kern/kernel.asm	/^f01020a9:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01020b0	obj/kern/kernel.asm	/^f01020b0:	00 $/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	e8 e5 ef ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01020bf	obj/kern/kernel.asm	/^f01020bf:	75 24                	jne    f01020e5 <mem_init+0xcbd>$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	c7 44 24 0c 20 72 10 	movl   $0xf0107220,0xc(%esp)$/;"	l
f01020c8	obj/kern/kernel.asm	/^f01020c8:	f0 $/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	f0 $/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f01020d8	obj/kern/kernel.asm	/^f01020d8:	00 $/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	e8 5b df ff ff       	call   f0100040 <_panic>$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	75 24                	jne    f0102113 <mem_init+0xceb>$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	c7 44 24 0c 14 7a 10 	movl   $0xf0107a14,0xc(%esp)$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	f0 $/;"	l
f01020f7	obj/kern/kernel.asm	/^f01020f7:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01020fe	obj/kern/kernel.asm	/^f01020fe:	f0 $/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	c7 44 24 04 16 04 00 	movl   $0x416,0x4(%esp)$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	00 $/;"	l
f0102107	obj/kern/kernel.asm	/^f0102107:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	e8 2d df ff ff       	call   f0100040 <_panic>$/;"	l
f0102113	obj/kern/kernel.asm	/^f0102113:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	00 $/;"	l
f010211b	obj/kern/kernel.asm	/^f010211b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	00 $/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	e8 01 f2 ff ff       	call   f0101330 <page_insert>$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	85 c0                	test   %eax,%eax$/;"	l
f0102131	obj/kern/kernel.asm	/^f0102131:	74 24                	je     f0102157 <mem_init+0xd2f>$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	c7 44 24 0c 34 71 10 	movl   $0xf0107134,0xc(%esp)$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	f0 $/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	f0 $/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	c7 44 24 04 19 04 00 	movl   $0x419,0x4(%esp)$/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	00 $/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	e8 e9 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	00 $/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	00 $/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010216c	obj/kern/kernel.asm	/^f010216c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	e8 2d ef ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	75 24                	jne    f010219d <mem_init+0xd75>$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	c7 44 24 0c 54 72 10 	movl   $0xf0107254,0xc(%esp)$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	f0 $/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102188	obj/kern/kernel.asm	/^f0102188:	f0 $/;"	l
f0102189	obj/kern/kernel.asm	/^f0102189:	c7 44 24 04 1a 04 00 	movl   $0x41a,0x4(%esp)$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	00 $/;"	l
f0102191	obj/kern/kernel.asm	/^f0102191:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102198	obj/kern/kernel.asm	/^f0102198:	e8 a3 de ff ff       	call   f0100040 <_panic>$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01021a4	obj/kern/kernel.asm	/^f01021a4:	00 $/;"	l
f01021a5	obj/kern/kernel.asm	/^f01021a5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	00 $/;"	l
f01021ad	obj/kern/kernel.asm	/^f01021ad:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	e8 e7 ee ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	74 24                	je     f01021e3 <mem_init+0xdbb>$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	c7 44 24 0c 88 72 10 	movl   $0xf0107288,0xc(%esp)$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	f0 $/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	f0 $/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	c7 44 24 04 1b 04 00 	movl   $0x41b,0x4(%esp)$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	00 $/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	e8 5d de ff ff       	call   f0100040 <_panic>$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	00 $/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	00 $/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	e8 2c f1 ff ff       	call   f0101330 <page_insert>$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	85 c0                	test   %eax,%eax$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	78 24                	js     f010222c <mem_init+0xe04>$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	c7 44 24 0c c0 72 10 	movl   $0xf01072c0,0xc(%esp)$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	f0 $/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102217	obj/kern/kernel.asm	/^f0102217:	f0 $/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	c7 44 24 04 1e 04 00 	movl   $0x41e,0x4(%esp)$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	00 $/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	e8 14 de ff ff       	call   f0100040 <_panic>$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102233	obj/kern/kernel.asm	/^f0102233:	00 $/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	00 $/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102245	obj/kern/kernel.asm	/^f0102245:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	e8 e3 f0 ff ff       	call   f0101330 <page_insert>$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	85 c0                	test   %eax,%eax$/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	74 24                	je     f0102275 <mem_init+0xe4d>$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	c7 44 24 0c f8 72 10 	movl   $0xf01072f8,0xc(%esp)$/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	f0 $/;"	l
f0102259	obj/kern/kernel.asm	/^f0102259:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	f0 $/;"	l
f0102261	obj/kern/kernel.asm	/^f0102261:	c7 44 24 04 21 04 00 	movl   $0x421,0x4(%esp)$/;"	l
f0102268	obj/kern/kernel.asm	/^f0102268:	00 $/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102270	obj/kern/kernel.asm	/^f0102270:	e8 cb dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	00 $/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	00 $/;"	l
f0102285	obj/kern/kernel.asm	/^f0102285:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	e8 0f ee ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102295	obj/kern/kernel.asm	/^f0102295:	74 24                	je     f01022bb <mem_init+0xe93>$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	c7 44 24 0c 88 72 10 	movl   $0xf0107288,0xc(%esp)$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	f0 $/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	f0 $/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	c7 44 24 04 22 04 00 	movl   $0x422,0x4(%esp)$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	00 $/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	e8 85 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022bb	obj/kern/kernel.asm	/^f01022bb:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	e8 1f e8 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	89 f0                	mov    %esi,%eax$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01022db	obj/kern/kernel.asm	/^f01022db:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	74 24                	je     f0102307 <mem_init+0xedf>$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	c7 44 24 0c 34 73 10 	movl   $0xf0107334,0xc(%esp)$/;"	l
f01022ea	obj/kern/kernel.asm	/^f01022ea:	f0 $/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01022f2	obj/kern/kernel.asm	/^f01022f2:	f0 $/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	c7 44 24 04 25 04 00 	movl   $0x425,0x4(%esp)$/;"	l
f01022fa	obj/kern/kernel.asm	/^f01022fa:	00 $/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	e8 39 dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010230c	obj/kern/kernel.asm	/^f010230c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	e8 d8 e7 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	74 24                	je     f010233d <mem_init+0xf15>$/;"	l
f0102319	obj/kern/kernel.asm	/^f0102319:	c7 44 24 0c 60 73 10 	movl   $0xf0107360,0xc(%esp)$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	f0 $/;"	l
f0102321	obj/kern/kernel.asm	/^f0102321:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	f0 $/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	00 $/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	e8 03 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	66 83 7e 04 02       	cmpw   $0x2,0x4(%esi)$/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	74 24                	je     f0102368 <mem_init+0xf40>$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	c7 44 24 0c 2a 7a 10 	movl   $0xf0107a2a,0xc(%esp)$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	f0 $/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102353	obj/kern/kernel.asm	/^f0102353:	f0 $/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	c7 44 24 04 28 04 00 	movl   $0x428,0x4(%esp)$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	00 $/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	e8 d8 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	74 24                	je     f0102393 <mem_init+0xf6b>$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	c7 44 24 0c 3b 7a 10 	movl   $0xf0107a3b,0xc(%esp)$/;"	l
f0102376	obj/kern/kernel.asm	/^f0102376:	f0 $/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010237e	obj/kern/kernel.asm	/^f010237e:	f0 $/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	c7 44 24 04 29 04 00 	movl   $0x429,0x4(%esp)$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	00 $/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	e8 ad dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102393	obj/kern/kernel.asm	/^f0102393:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010239a	obj/kern/kernel.asm	/^f010239a:	e8 1e ec ff ff       	call   f0100fbd <page_alloc>$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	85 c0                	test   %eax,%eax$/;"	l
f01023a1	obj/kern/kernel.asm	/^f01023a1:	74 04                	je     f01023a7 <mem_init+0xf7f>$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	39 c3                	cmp    %eax,%ebx$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	74 24                	je     f01023cb <mem_init+0xfa3>$/;"	l
f01023a7	obj/kern/kernel.asm	/^f01023a7:	c7 44 24 0c 90 73 10 	movl   $0xf0107390,0xc(%esp)$/;"	l
f01023ae	obj/kern/kernel.asm	/^f01023ae:	f0 $/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	f0 $/;"	l
f01023b7	obj/kern/kernel.asm	/^f01023b7:	c7 44 24 04 2c 04 00 	movl   $0x42c,0x4(%esp)$/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	00 $/;"	l
f01023bf	obj/kern/kernel.asm	/^f01023bf:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	e8 75 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	00 $/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01023d8	obj/kern/kernel.asm	/^f01023d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	e8 e3 ee ff ff       	call   f01012c3 <page_remove>$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	8b 15 8c de 32 f0    	mov    0xf032de8c,%edx$/;"	l
f01023e6	obj/kern/kernel.asm	/^f01023e6:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	e8 f6 e6 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	74 24                	je     f010241f <mem_init+0xff7>$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	c7 44 24 0c b4 73 10 	movl   $0xf01073b4,0xc(%esp)$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	f0 $/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	f0 $/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	c7 44 24 04 30 04 00 	movl   $0x430,0x4(%esp)$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	00 $/;"	l
f0102413	obj/kern/kernel.asm	/^f0102413:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	e8 21 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010241f	obj/kern/kernel.asm	/^f010241f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	e8 c0 e6 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	89 f2                	mov    %esi,%edx$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010243a	obj/kern/kernel.asm	/^f010243a:	39 d0                	cmp    %edx,%eax$/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	74 24                	je     f0102462 <mem_init+0x103a>$/;"	l
f010243e	obj/kern/kernel.asm	/^f010243e:	c7 44 24 0c 60 73 10 	movl   $0xf0107360,0xc(%esp)$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	f0 $/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	f0 $/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	c7 44 24 04 31 04 00 	movl   $0x431,0x4(%esp)$/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	00 $/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	e8 de db ff ff       	call   f0100040 <_panic>$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	74 24                	je     f010248d <mem_init+0x1065>$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	c7 44 24 0c e1 79 10 	movl   $0xf01079e1,0xc(%esp)$/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	f0 $/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	f0 $/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	c7 44 24 04 32 04 00 	movl   $0x432,0x4(%esp)$/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	00 $/;"	l
f0102481	obj/kern/kernel.asm	/^f0102481:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	e8 b3 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	74 24                	je     f01024b8 <mem_init+0x1090>$/;"	l
f0102494	obj/kern/kernel.asm	/^f0102494:	c7 44 24 0c 3b 7a 10 	movl   $0xf0107a3b,0xc(%esp)$/;"	l
f010249b	obj/kern/kernel.asm	/^f010249b:	f0 $/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	f0 $/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	c7 44 24 04 33 04 00 	movl   $0x433,0x4(%esp)$/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	00 $/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	e8 88 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01024bf	obj/kern/kernel.asm	/^f01024bf:	00 $/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	00 $/;"	l
f01024c8	obj/kern/kernel.asm	/^f01024c8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01024d2	obj/kern/kernel.asm	/^f01024d2:	e8 59 ee ff ff       	call   f0101330 <page_insert>$/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	85 c0                	test   %eax,%eax$/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	74 24                	je     f01024ff <mem_init+0x10d7>$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	c7 44 24 0c d8 73 10 	movl   $0xf01073d8,0xc(%esp)$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	f0 $/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01024ea	obj/kern/kernel.asm	/^f01024ea:	f0 $/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	c7 44 24 04 36 04 00 	movl   $0x436,0x4(%esp)$/;"	l
f01024f2	obj/kern/kernel.asm	/^f01024f2:	00 $/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01024fa	obj/kern/kernel.asm	/^f01024fa:	e8 41 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	75 24                	jne    f010252a <mem_init+0x1102>$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	c7 44 24 0c 4c 7a 10 	movl   $0xf0107a4c,0xc(%esp)$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	f0 $/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	f0 $/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	c7 44 24 04 37 04 00 	movl   $0x437,0x4(%esp)$/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	00 $/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	e8 16 db ff ff       	call   f0100040 <_panic>$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f010252d	obj/kern/kernel.asm	/^f010252d:	74 24                	je     f0102553 <mem_init+0x112b>$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	c7 44 24 0c 58 7a 10 	movl   $0xf0107a58,0xc(%esp)$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	f0 $/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	f0 $/;"	l
f010253f	obj/kern/kernel.asm	/^f010253f:	c7 44 24 04 38 04 00 	movl   $0x438,0x4(%esp)$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	00 $/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	e8 ed da ff ff       	call   f0100040 <_panic>$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	00 $/;"	l
f010255b	obj/kern/kernel.asm	/^f010255b:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102563	obj/kern/kernel.asm	/^f0102563:	e8 5b ed ff ff       	call   f01012c3 <page_remove>$/;"	l
f0102568	obj/kern/kernel.asm	/^f0102568:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	e8 72 e5 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	74 24                	je     f01025a3 <mem_init+0x117b>$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	c7 44 24 0c b4 73 10 	movl   $0xf01073b4,0xc(%esp)$/;"	l
f0102586	obj/kern/kernel.asm	/^f0102586:	f0 $/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	f0 $/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	c7 44 24 04 3c 04 00 	movl   $0x43c,0x4(%esp)$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	00 $/;"	l
f0102597	obj/kern/kernel.asm	/^f0102597:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010259e	obj/kern/kernel.asm	/^f010259e:	e8 9d da ff ff       	call   f0100040 <_panic>$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01025ab	obj/kern/kernel.asm	/^f01025ab:	e8 3c e5 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01025b3	obj/kern/kernel.asm	/^f01025b3:	74 24                	je     f01025d9 <mem_init+0x11b1>$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	c7 44 24 0c 10 74 10 	movl   $0xf0107410,0xc(%esp)$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	f0 $/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	f0 $/;"	l
f01025c5	obj/kern/kernel.asm	/^f01025c5:	c7 44 24 04 3d 04 00 	movl   $0x43d,0x4(%esp)$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	00 $/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01025d4	obj/kern/kernel.asm	/^f01025d4:	e8 67 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01025de	obj/kern/kernel.asm	/^f01025de:	74 24                	je     f0102604 <mem_init+0x11dc>$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	c7 44 24 0c 6d 7a 10 	movl   $0xf0107a6d,0xc(%esp)$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	f0 $/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	f0 $/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	c7 44 24 04 3e 04 00 	movl   $0x43e,0x4(%esp)$/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	00 $/;"	l
f01025f8	obj/kern/kernel.asm	/^f01025f8:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01025ff	obj/kern/kernel.asm	/^f01025ff:	e8 3c da ff ff       	call   f0100040 <_panic>$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102609	obj/kern/kernel.asm	/^f0102609:	74 24                	je     f010262f <mem_init+0x1207>$/;"	l
f010260b	obj/kern/kernel.asm	/^f010260b:	c7 44 24 0c 3b 7a 10 	movl   $0xf0107a3b,0xc(%esp)$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	f0 $/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	f0 $/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	c7 44 24 04 3f 04 00 	movl   $0x43f,0x4(%esp)$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	00 $/;"	l
f0102623	obj/kern/kernel.asm	/^f0102623:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	e8 11 da ff ff       	call   f0100040 <_panic>$/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	e8 82 e9 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	85 c0                	test   %eax,%eax$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	74 04                	je     f0102643 <mem_init+0x121b>$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	39 c6                	cmp    %eax,%esi$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	74 24                	je     f0102667 <mem_init+0x123f>$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	c7 44 24 0c 38 74 10 	movl   $0xf0107438,0xc(%esp)$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	f0 $/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	f0 $/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	c7 44 24 04 42 04 00 	movl   $0x442,0x4(%esp)$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	00 $/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	e8 d9 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	e8 4a e9 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	85 c0                	test   %eax,%eax$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	74 24                	je     f010269b <mem_init+0x1273>$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	c7 44 24 0c 8f 79 10 	movl   $0xf010798f,0xc(%esp)$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	f0 $/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	f0 $/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	c7 44 24 04 45 04 00 	movl   $0x445,0x4(%esp)$/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	00 $/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	e8 a5 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	8b 08                	mov    (%eax),%ecx$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	89 fa                	mov    %edi,%edx$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	39 d1                	cmp    %edx,%ecx$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	74 24                	je     f01026de <mem_init+0x12b6>$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	c7 44 24 0c dc 70 10 	movl   $0xf01070dc,0xc(%esp)$/;"	l
f01026c1	obj/kern/kernel.asm	/^f01026c1:	f0 $/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01026c9	obj/kern/kernel.asm	/^f01026c9:	f0 $/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	00 $/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	e8 62 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01026e9	obj/kern/kernel.asm	/^f01026e9:	74 24                	je     f010270f <mem_init+0x12e7>$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	c7 44 24 0c f2 79 10 	movl   $0xf01079f2,0xc(%esp)$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	f0 $/;"	l
f01026f3	obj/kern/kernel.asm	/^f01026f3:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	f0 $/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	00 $/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	e8 31 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
f0102715	obj/kern/kernel.asm	/^f0102715:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102718	obj/kern/kernel.asm	/^f0102718:	e8 24 e9 ff ff       	call   f0101041 <page_free>$/;"	l
f010271d	obj/kern/kernel.asm	/^f010271d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102724	obj/kern/kernel.asm	/^f0102724:	00 $/;"	l
f0102725	obj/kern/kernel.asm	/^f0102725:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	00 $/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	e8 67 e9 ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	8b 0d 8c de 32 f0    	mov    0xf032de8c,%ecx$/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f0102746	obj/kern/kernel.asm	/^f0102746:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010274c	obj/kern/kernel.asm	/^f010274c:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	8b 15 88 de 32 f0    	mov    0xf032de88,%edx$/;"	l
f0102755	obj/kern/kernel.asm	/^f0102755:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0102761	obj/kern/kernel.asm	/^f0102761:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	39 55 d0             	cmp    %edx,-0x30(%ebp)$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	72 23                	jb     f010278c <mem_init+0x1364>$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	f0 $/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	c7 44 24 04 51 04 00 	movl   $0x451,0x4(%esp)$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	00 $/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	e8 b4 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	39 d0                	cmp    %edx,%eax$/;"	l
f0102797	obj/kern/kernel.asm	/^f0102797:	74 24                	je     f01027bd <mem_init+0x1395>$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	c7 44 24 0c 7e 7a 10 	movl   $0xf0107a7e,0xc(%esp)$/;"	l
f01027a0	obj/kern/kernel.asm	/^f01027a0:	f0 $/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01027a8	obj/kern/kernel.asm	/^f01027a8:	f0 $/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	c7 44 24 04 52 04 00 	movl   $0x452,0x4(%esp)$/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	00 $/;"	l
f01027b1	obj/kern/kernel.asm	/^f01027b1:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	e8 83 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
f01027ca	obj/kern/kernel.asm	/^f01027ca:	89 f8                	mov    %edi,%eax$/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01027d5	obj/kern/kernel.asm	/^f01027d5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	89 c1                	mov    %eax,%ecx$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f01027e0	obj/kern/kernel.asm	/^f01027e0:	77 20                	ja     f0102802 <mem_init+0x13da>$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f01027ed	obj/kern/kernel.asm	/^f01027ed:	f0 $/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01027f5	obj/kern/kernel.asm	/^f01027f5:	00 $/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	e8 3e d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	00 $/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	00 $/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	e8 2b 34 00 00       	call   f0105c4a <memset>$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	e8 1a e8 ff ff       	call   f0101041 <page_free>$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010282e	obj/kern/kernel.asm	/^f010282e:	00 $/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	00 $/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	e8 5d e8 ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	89 fa                	mov    %edi,%edx$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	89 d0                	mov    %edx,%eax$/;"	l
f0102854	obj/kern/kernel.asm	/^f0102854:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102857	obj/kern/kernel.asm	/^f0102857:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	72 20                	jb     f010287f <mem_init+0x1457>$/;"	l
f010285f	obj/kern/kernel.asm	/^f010285f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102863	obj/kern/kernel.asm	/^f0102863:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	f0 $/;"	l
f010286b	obj/kern/kernel.asm	/^f010286b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	00 $/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	e8 c1 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102888	obj/kern/kernel.asm	/^f0102888:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	74 24                	je     f01028b7 <mem_init+0x148f>$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	c7 44 24 0c 96 7a 10 	movl   $0xf0107a96,0xc(%esp)$/;"	l
f010289a	obj/kern/kernel.asm	/^f010289a:	f0 $/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	f0 $/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	c7 44 24 04 5c 04 00 	movl   $0x45c,0x4(%esp)$/;"	l
f01028aa	obj/kern/kernel.asm	/^f01028aa:	00 $/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	e8 89 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028b7	obj/kern/kernel.asm	/^f01028b7:	83 c0 04             	add    $0x4,%eax$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	39 d0                	cmp    %edx,%eax$/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	75 d0                	jne    f010288e <mem_init+0x1466>$/;"	l
f01028be	obj/kern/kernel.asm	/^f01028be:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
f01028cf	obj/kern/kernel.asm	/^f01028cf:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01028d2	obj/kern/kernel.asm	/^f01028d2:	89 0d 40 d2 32 f0    	mov    %ecx,0xf032d240$/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	e8 61 e7 ff ff       	call   f0101041 <page_free>$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	e8 59 e7 ff ff       	call   f0101041 <page_free>$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	e8 51 e7 ff ff       	call   f0101041 <page_free>$/;"	l
f01028f0	obj/kern/kernel.asm	/^f01028f0:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f01028f7	obj/kern/kernel.asm	/^f01028f7:	00 $/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01028ff	obj/kern/kernel.asm	/^f01028ff:	e8 b5 ea ff ff       	call   f01013b9 <mmio_map_region>$/;"	l
f0102904	obj/kern/kernel.asm	/^f0102904:	89 c3                	mov    %eax,%ebx$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	00 $/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	e8 9f ea ff ff       	call   f01013b9 <mmio_map_region>$/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	89 c6                	mov    %eax,%esi$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	76 0d                	jbe    f0102931 <mem_init+0x1509>$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f010292f	obj/kern/kernel.asm	/^f010292f:	76 24                	jbe    f0102955 <mem_init+0x152d>$/;"	l
f0102931	obj/kern/kernel.asm	/^f0102931:	c7 44 24 0c 5c 74 10 	movl   $0xf010745c,0xc(%esp)$/;"	l
f0102938	obj/kern/kernel.asm	/^f0102938:	f0 $/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	f0 $/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	c7 44 24 04 6c 04 00 	movl   $0x46c,0x4(%esp)$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	00 $/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	e8 eb d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	76 0e                	jbe    f010296b <mem_init+0x1543>$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	76 24                	jbe    f010298f <mem_init+0x1567>$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	c7 44 24 0c 84 74 10 	movl   $0xf0107484,0xc(%esp)$/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	f0 $/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	f0 $/;"	l
f010297b	obj/kern/kernel.asm	/^f010297b:	c7 44 24 04 6d 04 00 	movl   $0x46d,0x4(%esp)$/;"	l
f0102982	obj/kern/kernel.asm	/^f0102982:	00 $/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010298a	obj/kern/kernel.asm	/^f010298a:	e8 b1 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010298f	obj/kern/kernel.asm	/^f010298f:	89 da                	mov    %ebx,%edx$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	09 f2                	or     %esi,%edx$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	74 24                	je     f01029bf <mem_init+0x1597>$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	c7 44 24 0c ac 74 10 	movl   $0xf01074ac,0xc(%esp)$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	f0 $/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01029aa	obj/kern/kernel.asm	/^f01029aa:	f0 $/;"	l
f01029ab	obj/kern/kernel.asm	/^f01029ab:	c7 44 24 04 6f 04 00 	movl   $0x46f,0x4(%esp)$/;"	l
f01029b2	obj/kern/kernel.asm	/^f01029b2:	00 $/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01029ba	obj/kern/kernel.asm	/^f01029ba:	e8 81 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	39 c6                	cmp    %eax,%esi$/;"	l
f01029c1	obj/kern/kernel.asm	/^f01029c1:	73 24                	jae    f01029e7 <mem_init+0x15bf>$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	c7 44 24 0c ad 7a 10 	movl   $0xf0107aad,0xc(%esp)$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	f0 $/;"	l
f01029cb	obj/kern/kernel.asm	/^f01029cb:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	f0 $/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	c7 44 24 04 71 04 00 	movl   $0x471,0x4(%esp)$/;"	l
f01029da	obj/kern/kernel.asm	/^f01029da:	00 $/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	e8 59 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	8b 3d 8c de 32 f0    	mov    0xf032de8c,%edi$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	89 da                	mov    %ebx,%edx$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	89 f8                	mov    %edi,%eax$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	e8 f6 e0 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	85 c0                	test   %eax,%eax$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	74 24                	je     f0102a1e <mem_init+0x15f6>$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	c7 44 24 0c d4 74 10 	movl   $0xf01074d4,0xc(%esp)$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	f0 $/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	f0 $/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	c7 44 24 04 73 04 00 	movl   $0x473,0x4(%esp)$/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	00 $/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	e8 22 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a1e	obj/kern/kernel.asm	/^f0102a1e:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	89 c2                	mov    %eax,%edx$/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	89 f8                	mov    %edi,%eax$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	e8 bc e0 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	74 24                	je     f0102a5b <mem_init+0x1633>$/;"	l
f0102a37	obj/kern/kernel.asm	/^f0102a37:	c7 44 24 0c f8 74 10 	movl   $0xf01074f8,0xc(%esp)$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	f0 $/;"	l
f0102a3f	obj/kern/kernel.asm	/^f0102a3f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	f0 $/;"	l
f0102a47	obj/kern/kernel.asm	/^f0102a47:	c7 44 24 04 74 04 00 	movl   $0x474,0x4(%esp)$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	00 $/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102a56	obj/kern/kernel.asm	/^f0102a56:	e8 e5 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a5b	obj/kern/kernel.asm	/^f0102a5b:	89 f2                	mov    %esi,%edx$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	89 f8                	mov    %edi,%eax$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	e8 88 e0 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	85 c0                	test   %eax,%eax$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	74 24                	je     f0102a8c <mem_init+0x1664>$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	c7 44 24 0c 28 75 10 	movl   $0xf0107528,0xc(%esp)$/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	f0 $/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	f0 $/;"	l
f0102a78	obj/kern/kernel.asm	/^f0102a78:	c7 44 24 04 75 04 00 	movl   $0x475,0x4(%esp)$/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	00 $/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	e8 b4 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	89 f8                	mov    %edi,%eax$/;"	l
f0102a94	obj/kern/kernel.asm	/^f0102a94:	e8 53 e0 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	74 24                	je     f0102ac2 <mem_init+0x169a>$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	c7 44 24 0c 4c 75 10 	movl   $0xf010754c,0xc(%esp)$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	f0 $/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	f0 $/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	c7 44 24 04 76 04 00 	movl   $0x476,0x4(%esp)$/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	00 $/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	e8 7e d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	00 $/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	e8 cb e5 ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	75 24                	jne    f0102aff <mem_init+0x16d7>$/;"	l
f0102adb	obj/kern/kernel.asm	/^f0102adb:	c7 44 24 0c 78 75 10 	movl   $0xf0107578,0xc(%esp)$/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	f0 $/;"	l
f0102ae3	obj/kern/kernel.asm	/^f0102ae3:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102aea	obj/kern/kernel.asm	/^f0102aea:	f0 $/;"	l
f0102aeb	obj/kern/kernel.asm	/^f0102aeb:	c7 44 24 04 78 04 00 	movl   $0x478,0x4(%esp)$/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	00 $/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	e8 41 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b06	obj/kern/kernel.asm	/^f0102b06:	00 $/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	e8 89 e5 ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	74 24                	je     f0102b41 <mem_init+0x1719>$/;"	l
f0102b1d	obj/kern/kernel.asm	/^f0102b1d:	c7 44 24 0c bc 75 10 	movl   $0xf01075bc,0xc(%esp)$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	f0 $/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102b2c	obj/kern/kernel.asm	/^f0102b2c:	f0 $/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	c7 44 24 04 79 04 00 	movl   $0x479,0x4(%esp)$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	00 $/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	e8 ff d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b41	obj/kern/kernel.asm	/^f0102b41:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b48	obj/kern/kernel.asm	/^f0102b48:	00 $/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	e8 47 e5 ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	00 $/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	e8 25 e5 ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102b82	obj/kern/kernel.asm	/^f0102b82:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b89	obj/kern/kernel.asm	/^f0102b89:	00 $/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102b8e	obj/kern/kernel.asm	/^f0102b8e:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102b93	obj/kern/kernel.asm	/^f0102b93:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	e8 06 e5 ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	c7 04 24 bf 7a 10 f0 	movl   $0xf0107abf,(%esp)$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	e8 61 14 00 00       	call   f010400e <cprintf>$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	a1 90 de 32 f0       	mov    0xf032de90,%eax$/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	77 20                	ja     f0102bd9 <mem_init+0x17b1>$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	f0 $/;"	l
f0102bc5	obj/kern/kernel.asm	/^f0102bc5:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	00 $/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	e8 67 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	8b 15 88 de 32 f0    	mov    0xf032de88,%edx$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102be6	obj/kern/kernel.asm	/^f0102be6:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	00 $/;"	l
f0102bf4	obj/kern/kernel.asm	/^f0102bf4:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bfc	obj/kern/kernel.asm	/^f0102bfc:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	e8 9f e5 ff ff       	call   f01011aa <boot_map_region>$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	a1 48 d2 32 f0       	mov    0xf032d248,%eax$/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	77 20                	ja     f0102c37 <mem_init+0x180f>$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0102c22	obj/kern/kernel.asm	/^f0102c22:	f0 $/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	c7 44 24 04 d4 00 00 	movl   $0xd4,0x4(%esp)$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	00 $/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	e8 09 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	8b 15 88 de 32 f0    	mov    0xf032de88,%edx$/;"	l
f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102c51	obj/kern/kernel.asm	/^f0102c51:	00 $/;"	l
f0102c52	obj/kern/kernel.asm	/^f0102c52:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	e8 41 e5 ff ff       	call   f01011aa <boot_map_region>$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	b8 00 f0 11 f0       	mov    $0xf011f000,%eax$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	77 20                	ja     f0102c95 <mem_init+0x186d>$/;"	l
f0102c75	obj/kern/kernel.asm	/^f0102c75:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	f0 $/;"	l
f0102c81	obj/kern/kernel.asm	/^f0102c81:	c7 44 24 04 e6 00 00 	movl   $0xe6,0x4(%esp)$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	00 $/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	e8 ab d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c95	obj/kern/kernel.asm	/^f0102c95:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	00 $/;"	l
f0102c9d	obj/kern/kernel.asm	/^f0102c9d:	c7 04 24 00 f0 11 00 	movl   $0x11f000,(%esp)$/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	e8 f2 e4 ff ff       	call   f01011aa <boot_map_region>$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	00 $/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	e8 cf e4 ff ff       	call   f01011aa <boot_map_region>$/;"	l
f0102cdb	obj/kern/kernel.asm	/^f0102cdb:	c7 45 cc 00 f0 32 f0 	movl   $0xf032f000,-0x34(%ebp)$/;"	l
f0102ce2	obj/kern/kernel.asm	/^f0102ce2:	bb 00 f0 32 f0       	mov    $0xf032f000,%ebx$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	77 20                	ja     f0102d14 <mem_init+0x18ec>$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0102cff	obj/kern/kernel.asm	/^f0102cff:	f0 $/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	c7 44 24 04 2f 01 00 	movl   $0x12f,0x4(%esp)$/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	00 $/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	e8 2c d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	00 $/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	89 f2                	mov    %esi,%edx$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0102d31	obj/kern/kernel.asm	/^f0102d31:	e8 74 e4 ff ff       	call   f01011aa <boot_map_region>$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	75 a2                	jne    f0102cec <mem_init+0x18c4>$/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	8b 1d 8c de 32 f0    	mov    0xf032de8c,%ebx$/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	8b 0d 88 de 32 f0    	mov    0xf032de88,%ecx$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	8d 3c cd ff 0f 00 00 	lea    0xfff(,%ecx,8),%edi$/;"	l
f0102d60	obj/kern/kernel.asm	/^f0102d60:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	eb 70                	jmp    f0102ddd <mem_init+0x19b5>$/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edx$/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	89 d8                	mov    %ebx,%eax$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	e8 72 dd ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	8b 15 90 de 32 f0    	mov    0xf032de90,%edx$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102d86	obj/kern/kernel.asm	/^f0102d86:	77 20                	ja     f0102da8 <mem_init+0x1980>$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102d8c	obj/kern/kernel.asm	/^f0102d8c:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	f0 $/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	c7 44 24 04 8f 03 00 	movl   $0x38f,0x4(%esp)$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	00 $/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	e8 98 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102da8	obj/kern/kernel.asm	/^f0102da8:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
f0102daf	obj/kern/kernel.asm	/^f0102daf:	39 d0                	cmp    %edx,%eax$/;"	l
f0102db1	obj/kern/kernel.asm	/^f0102db1:	74 24                	je     f0102dd7 <mem_init+0x19af>$/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	c7 44 24 0c f0 75 10 	movl   $0xf01075f0,0xc(%esp)$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	f0 $/;"	l
f0102dbb	obj/kern/kernel.asm	/^f0102dbb:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	f0 $/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	c7 44 24 04 8f 03 00 	movl   $0x38f,0x4(%esp)$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	00 $/;"	l
f0102dcb	obj/kern/kernel.asm	/^f0102dcb:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	e8 69 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	39 f7                	cmp    %esi,%edi$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	77 8c                	ja     f0102d6d <mem_init+0x1945>$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	8d 96 00 00 c0 ee    	lea    -0x11400000(%esi),%edx$/;"	l
f0102dec	obj/kern/kernel.asm	/^f0102dec:	89 d8                	mov    %ebx,%eax$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	e8 f9 dc ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	8b 15 48 d2 32 f0    	mov    0xf032d248,%edx$/;"	l
f0102df9	obj/kern/kernel.asm	/^f0102df9:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	77 20                	ja     f0102e21 <mem_init+0x19f9>$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	f0 $/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	00 $/;"	l
f0102e15	obj/kern/kernel.asm	/^f0102e15:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	e8 1f d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e21	obj/kern/kernel.asm	/^f0102e21:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	39 d0                	cmp    %edx,%eax$/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	74 24                	je     f0102e50 <mem_init+0x1a28>$/;"	l
f0102e2c	obj/kern/kernel.asm	/^f0102e2c:	c7 44 24 0c 24 76 10 	movl   $0xf0107624,0xc(%esp)$/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	f0 $/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102e3b	obj/kern/kernel.asm	/^f0102e3b:	f0 $/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
f0102e43	obj/kern/kernel.asm	/^f0102e43:	00 $/;"	l
f0102e44	obj/kern/kernel.asm	/^f0102e44:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102e4b	obj/kern/kernel.asm	/^f0102e4b:	e8 f0 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102e56	obj/kern/kernel.asm	/^f0102e56:	81 fe 00 f0 01 00    	cmp    $0x1f000,%esi$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	75 88                	jne    f0102de6 <mem_init+0x19be>$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	eb 3b                	jmp    f0102ea6 <mem_init+0x1a7e>$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edx$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	89 d8                	mov    %ebx,%eax$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	e8 74 dc ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	39 c6                	cmp    %eax,%esi$/;"	l
f0102e7a	obj/kern/kernel.asm	/^f0102e7a:	74 24                	je     f0102ea0 <mem_init+0x1a78>$/;"	l
f0102e7c	obj/kern/kernel.asm	/^f0102e7c:	c7 44 24 0c 58 76 10 	movl   $0xf0107658,0xc(%esp)$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	f0 $/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	f0 $/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	c7 44 24 04 98 03 00 	movl   $0x398,0x4(%esp)$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	00 $/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	e8 a0 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	39 fe                	cmp    %edi,%esi$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	72 c1                	jb     f0102e6b <mem_init+0x1a43>$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	bf 00 00 ff ef       	mov    $0xefff0000,%edi$/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102eb8	obj/kern/kernel.asm	/^f0102eb8:	8d 9f 00 80 00 00    	lea    0x8000(%edi),%ebx$/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	89 c6                	mov    %eax,%esi$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	81 c6 00 00 00 10    	add    $0x10000000,%esi$/;"	l
f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	8d 97 00 00 01 00    	lea    0x10000(%edi),%edx$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	89 da                	mov    %ebx,%edx$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	e8 13 dc ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	77 23                	ja     f0102f05 <mem_init+0x1add>$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	f0 $/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
f0102ef8	obj/kern/kernel.asm	/^f0102ef8:	00 $/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	e8 3b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	39 f0                	cmp    %esi,%eax$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	74 24                	je     f0102f2d <mem_init+0x1b05>$/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	c7 44 24 0c 80 76 10 	movl   $0xf0107680,0xc(%esp)$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	f0 $/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	f0 $/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
f0102f20	obj/kern/kernel.asm	/^f0102f20:	00 $/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102f28	obj/kern/kernel.asm	/^f0102f28:	e8 13 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f33	obj/kern/kernel.asm	/^f0102f33:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	3b 5d d0             	cmp    -0x30(%ebp),%ebx$/;"	l
f0102f3c	obj/kern/kernel.asm	/^f0102f3c:	0f 85 55 05 00 00    	jne    f0103497 <mem_init+0x206f>$/;"	l
f0102f42	obj/kern/kernel.asm	/^f0102f42:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	8d 14 1f             	lea    (%edi,%ebx,1),%edx$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	89 f0                	mov    %esi,%eax$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	e8 98 db ff ff       	call   f0100aec <check_va2pa>$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	74 24                	je     f0102f7d <mem_init+0x1b55>$/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	c7 44 24 0c c8 76 10 	movl   $0xf01076c8,0xc(%esp)$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	f0 $/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	f0 $/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	00 $/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	e8 c3 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	75 bf                	jne    f0102f4a <mem_init+0x1b22>$/;"	l
f0102f8b	obj/kern/kernel.asm	/^f0102f8b:	81 ef 00 00 01 00    	sub    $0x10000,%edi$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	81 45 cc 00 80 00 00 	addl   $0x8000,-0x34(%ebp)$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	81 ff 00 00 f7 ef    	cmp    $0xeff70000,%edi$/;"	l
f0102f9e	obj/kern/kernel.asm	/^f0102f9e:	0f 85 0e ff ff ff    	jne    f0102eb2 <mem_init+0x1a8a>$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	77 2e                	ja     f0102fe5 <mem_init+0x1bbd>$/;"	l
f0102fb7	obj/kern/kernel.asm	/^f0102fb7:	f6 04 83 01          	testb  $0x1,(%ebx,%eax,4)$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	0f 85 aa 00 00 00    	jne    f010306b <mem_init+0x1c43>$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	c7 44 24 0c d8 7a 10 	movl   $0xf0107ad8,0xc(%esp)$/;"	l
f0102fc8	obj/kern/kernel.asm	/^f0102fc8:	f0 $/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	f0 $/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f0102fd8	obj/kern/kernel.asm	/^f0102fd8:	00 $/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	e8 5b d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	76 55                	jbe    f0103041 <mem_init+0x1c19>$/;"	l
f0102fec	obj/kern/kernel.asm	/^f0102fec:	8b 14 83             	mov    (%ebx,%eax,4),%edx$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	75 24                	jne    f0103018 <mem_init+0x1bf0>$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	c7 44 24 0c d8 7a 10 	movl   $0xf0107ad8,0xc(%esp)$/;"	l
f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	f0 $/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	f0 $/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	00 $/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	e8 28 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103018	obj/kern/kernel.asm	/^f0103018:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	75 4e                	jne    f010306b <mem_init+0x1c43>$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	c7 44 24 0c e9 7a 10 	movl   $0xf0107ae9,0xc(%esp)$/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	f0 $/;"	l
f0103025	obj/kern/kernel.asm	/^f0103025:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	f0 $/;"	l
f010302d	obj/kern/kernel.asm	/^f010302d:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	00 $/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	e8 ff cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	83 3c 83 00          	cmpl   $0x0,(%ebx,%eax,4)$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	74 24                	je     f010306b <mem_init+0x1c43>$/;"	l
f0103047	obj/kern/kernel.asm	/^f0103047:	c7 44 24 0c fa 7a 10 	movl   $0xf0107afa,0xc(%esp)$/;"	l
f010304e	obj/kern/kernel.asm	/^f010304e:	f0 $/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	f0 $/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	00 $/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	e8 d5 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	40                   	inc    %eax$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	0f 85 35 ff ff ff    	jne    f0102fac <mem_init+0x1b84>$/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	c7 04 24 ec 76 10 f0 	movl   $0xf01076ec,(%esp)$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	e8 8b 0f 00 00       	call   f010400e <cprintf>$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010308d	obj/kern/kernel.asm	/^f010308d:	77 20                	ja     f01030af <mem_init+0x1c87>$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f010309a	obj/kern/kernel.asm	/^f010309a:	f0 $/;"	l
f010309b	obj/kern/kernel.asm	/^f010309b:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)$/;"	l
f01030a2	obj/kern/kernel.asm	/^f01030a2:	00 $/;"	l
f01030a3	obj/kern/kernel.asm	/^f01030a3:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01030aa	obj/kern/kernel.asm	/^f01030aa:	e8 91 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	e8 c1 da ff ff       	call   f0100b82 <check_page_free_list>$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	e8 e2 de ff ff       	call   f0100fbd <page_alloc>$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	89 c6                	mov    %eax,%esi$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	85 c0                	test   %eax,%eax$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	75 24                	jne    f0103105 <mem_init+0x1cdd>$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	c7 44 24 0c e4 78 10 	movl   $0xf01078e4,0xc(%esp)$/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	f0 $/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01030f0	obj/kern/kernel.asm	/^f01030f0:	f0 $/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	c7 44 24 04 8e 04 00 	movl   $0x48e,0x4(%esp)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	00 $/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0103100	obj/kern/kernel.asm	/^f0103100:	e8 3b cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010310c	obj/kern/kernel.asm	/^f010310c:	e8 ac de ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	89 c7                	mov    %eax,%edi$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	85 c0                	test   %eax,%eax$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	75 24                	jne    f010313b <mem_init+0x1d13>$/;"	l
f0103117	obj/kern/kernel.asm	/^f0103117:	c7 44 24 0c fa 78 10 	movl   $0xf01078fa,0xc(%esp)$/;"	l
f010311e	obj/kern/kernel.asm	/^f010311e:	f0 $/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	f0 $/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	c7 44 24 04 8f 04 00 	movl   $0x48f,0x4(%esp)$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	00 $/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	e8 05 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010313b	obj/kern/kernel.asm	/^f010313b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103142	obj/kern/kernel.asm	/^f0103142:	e8 76 de ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0103147	obj/kern/kernel.asm	/^f0103147:	89 c3                	mov    %eax,%ebx$/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	85 c0                	test   %eax,%eax$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	75 24                	jne    f0103171 <mem_init+0x1d49>$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	c7 44 24 0c 10 79 10 	movl   $0xf0107910,0xc(%esp)$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	f0 $/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	f0 $/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	c7 44 24 04 90 04 00 	movl   $0x490,0x4(%esp)$/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	00 $/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	e8 cf ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	e8 c8 de ff ff       	call   f0101041 <page_free>$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	89 f8                	mov    %edi,%eax$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	89 c2                	mov    %eax,%edx$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0103192	obj/kern/kernel.asm	/^f0103192:	72 20                	jb     f01031b4 <mem_init+0x1d8c>$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	f0 $/;"	l
f01031a0	obj/kern/kernel.asm	/^f01031a0:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	00 $/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	e8 8c ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01031bb	obj/kern/kernel.asm	/^f01031bb:	00 $/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	00 $/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	e8 79 2a 00 00       	call   f0105c4a <memset>$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	89 d8                	mov    %ebx,%eax$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031df	obj/kern/kernel.asm	/^f01031df:	89 c2                	mov    %eax,%edx$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	72 20                	jb     f010320c <mem_init+0x1de4>$/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01031f0	obj/kern/kernel.asm	/^f01031f0:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f01031f7	obj/kern/kernel.asm	/^f01031f7:	f0 $/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	00 $/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	e8 34 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103213	obj/kern/kernel.asm	/^f0103213:	00 $/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	00 $/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	e8 21 2a 00 00       	call   f0105c4a <memset>$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	00 $/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	00 $/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	e8 e6 e0 ff ff       	call   f0101330 <page_insert>$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010324f	obj/kern/kernel.asm	/^f010324f:	74 24                	je     f0103275 <mem_init+0x1e4d>$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	c7 44 24 0c e1 79 10 	movl   $0xf01079e1,0xc(%esp)$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	f0 $/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0103260	obj/kern/kernel.asm	/^f0103260:	f0 $/;"	l
f0103261	obj/kern/kernel.asm	/^f0103261:	c7 44 24 04 95 04 00 	movl   $0x495,0x4(%esp)$/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	00 $/;"	l
f0103269	obj/kern/kernel.asm	/^f0103269:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	e8 cb cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	01 01 01 $/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	74 24                	je     f01032a5 <mem_init+0x1e7d>$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	c7 44 24 0c 0c 77 10 	movl   $0xf010770c,0xc(%esp)$/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	f0 $/;"	l
f0103289	obj/kern/kernel.asm	/^f0103289:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	f0 $/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	c7 44 24 04 96 04 00 	movl   $0x496,0x4(%esp)$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	00 $/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	e8 9b cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032a5	obj/kern/kernel.asm	/^f01032a5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	00 $/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	00 $/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	e8 6a e0 ff ff       	call   f0101330 <page_insert>$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	02 02 02 $/;"	l
f01032d0	obj/kern/kernel.asm	/^f01032d0:	74 24                	je     f01032f6 <mem_init+0x1ece>$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	c7 44 24 0c 30 77 10 	movl   $0xf0107730,0xc(%esp)$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	f0 $/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	f0 $/;"	l
f01032e2	obj/kern/kernel.asm	/^f01032e2:	c7 44 24 04 98 04 00 	movl   $0x498,0x4(%esp)$/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	00 $/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	e8 4a cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01032fb	obj/kern/kernel.asm	/^f01032fb:	74 24                	je     f0103321 <mem_init+0x1ef9>$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	c7 44 24 0c 03 7a 10 	movl   $0xf0107a03,0xc(%esp)$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	f0 $/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	f0 $/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	c7 44 24 04 99 04 00 	movl   $0x499,0x4(%esp)$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	00 $/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c:	e8 1f cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103321	obj/kern/kernel.asm	/^f0103321:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	74 24                	je     f010334c <mem_init+0x1f24>$/;"	l
f0103328	obj/kern/kernel.asm	/^f0103328:	c7 44 24 0c 6d 7a 10 	movl   $0xf0107a6d,0xc(%esp)$/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	f0 $/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	f0 $/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	c7 44 24 04 9a 04 00 	movl   $0x49a,0x4(%esp)$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	00 $/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0103347	obj/kern/kernel.asm	/^f0103347:	e8 f4 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010334c	obj/kern/kernel.asm	/^f010334c:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	03 03 03 $/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	89 d8                	mov    %ebx,%eax$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	89 c2                	mov    %eax,%edx$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	72 20                	jb     f0103391 <mem_init+0x1f69>$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	f0 $/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	00 $/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	e8 af cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	03 03 03 $/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	74 24                	je     f01033c1 <mem_init+0x1f99>$/;"	l
f010339d	obj/kern/kernel.asm	/^f010339d:	c7 44 24 0c 54 77 10 	movl   $0xf0107754,0xc(%esp)$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	f0 $/;"	l
f01033a5	obj/kern/kernel.asm	/^f01033a5:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	f0 $/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	c7 44 24 04 9c 04 00 	movl   $0x49c,0x4(%esp)$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	00 $/;"	l
f01033b5	obj/kern/kernel.asm	/^f01033b5:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	e8 7f cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033c1	obj/kern/kernel.asm	/^f01033c1:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	00 $/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	e8 ed de ff ff       	call   f01012c3 <page_remove>$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01033db	obj/kern/kernel.asm	/^f01033db:	74 24                	je     f0103401 <mem_init+0x1fd9>$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	c7 44 24 0c 3b 7a 10 	movl   $0xf0107a3b,0xc(%esp)$/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	f0 $/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	f0 $/;"	l
f01033ed	obj/kern/kernel.asm	/^f01033ed:	c7 44 24 04 9e 04 00 	movl   $0x49e,0x4(%esp)$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	00 $/;"	l
f01033f5	obj/kern/kernel.asm	/^f01033f5:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	e8 3f cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	89 f2                	mov    %esi,%edx$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	2b 15 90 de 32 f0    	sub    0xf032de90,%edx$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103419	obj/kern/kernel.asm	/^f0103419:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010341c	obj/kern/kernel.asm	/^f010341c:	39 d1                	cmp    %edx,%ecx$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	74 24                	je     f0103444 <mem_init+0x201c>$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	c7 44 24 0c dc 70 10 	movl   $0xf01070dc,0xc(%esp)$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	f0 $/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010342f	obj/kern/kernel.asm	/^f010342f:	f0 $/;"	l
f0103430	obj/kern/kernel.asm	/^f0103430:	c7 44 24 04 a1 04 00 	movl   $0x4a1,0x4(%esp)$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	00 $/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	e8 fc cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010344a	obj/kern/kernel.asm	/^f010344a:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010344f	obj/kern/kernel.asm	/^f010344f:	74 24                	je     f0103475 <mem_init+0x204d>$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	c7 44 24 0c f2 79 10 	movl   $0xf01079f2,0xc(%esp)$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	f0 $/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	f0 $/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	c7 44 24 04 a3 04 00 	movl   $0x4a3,0x4(%esp)$/;"	l
f0103468	obj/kern/kernel.asm	/^f0103468:	00 $/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	c7 04 24 e1 77 10 f0 	movl   $0xf01077e1,(%esp)$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	e8 cb cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	e8 be db ff ff       	call   f0101041 <page_free>$/;"	l
f0103483	obj/kern/kernel.asm	/^f0103483:	c7 04 24 80 77 10 f0 	movl   $0xf0107780,(%esp)$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	e8 7f 0b 00 00       	call   f010400e <cprintf>$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	5b                   	pop    %ebx$/;"	l
f0103493	obj/kern/kernel.asm	/^f0103493:	5e                   	pop    %esi$/;"	l
f0103494	obj/kern/kernel.asm	/^f0103494:	5f                   	pop    %edi$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	5d                   	pop    %ebp$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	c3                   	ret    $/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	89 da                	mov    %ebx,%edx$/;"	l
f0103499	obj/kern/kernel.asm	/^f0103499:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010349c	obj/kern/kernel.asm	/^f010349c:	e8 4b d6 ff ff       	call   f0100aec <check_va2pa>$/;"	l
f01034a1	obj/kern/kernel.asm	/^f01034a1:	e9 5f fa ff ff       	jmp    f0102f05 <mem_init+0x1add>$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6 <user_mem_check>:$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	55                   	push   %ebp$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01034a9	obj/kern/kernel.asm	/^f01034a9:	57                   	push   %edi$/;"	l
f01034aa	obj/kern/kernel.asm	/^f01034aa:	56                   	push   %esi$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	53                   	push   %ebx$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01034af	obj/kern/kernel.asm	/^f01034af:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	83 cf 05             	or     $0x5,%edi$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	eb 61                	jmp    f0103537 <user_mem_check+0x91>$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	76 16                	jbe    f01034f4 <user_mem_check+0x4e>$/;"	l
f01034de	obj/kern/kernel.asm	/^f01034de:	89 d8                	mov    %ebx,%eax$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	3b 5d 0c             	cmp    0xc(%ebp),%ebx$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	73 03                	jae    f01034e8 <user_mem_check+0x42>$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	a3 44 d2 32 f0       	mov    %eax,0xf032d244$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	eb 4d                	jmp    f0103541 <user_mem_check+0x9b>$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	00 $/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	e8 96 db ff ff       	call   f01010a1 <pgdir_walk>$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	85 c0                	test   %eax,%eax$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	74 0c                	je     f010351b <user_mem_check+0x75>$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	8b 00                	mov    (%eax),%eax$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	a8 01                	test   $0x1,%al$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	74 06                	je     f010351b <user_mem_check+0x75>$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	21 f8                	and    %edi,%eax$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	39 c7                	cmp    %eax,%edi$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	74 16                	je     f0103531 <user_mem_check+0x8b>$/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	89 d8                	mov    %ebx,%eax$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	3b 5d 0c             	cmp    0xc(%ebp),%ebx$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	73 03                	jae    f0103525 <user_mem_check+0x7f>$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103525	obj/kern/kernel.asm	/^f0103525:	a3 44 d2 32 f0       	mov    %eax,0xf032d244$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	eb 10                	jmp    f0103541 <user_mem_check+0x9b>$/;"	l
f0103531	obj/kern/kernel.asm	/^f0103531:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f010353a	obj/kern/kernel.asm	/^f010353a:	72 9a                	jb     f01034d6 <user_mem_check+0x30>$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	5b                   	pop    %ebx$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	5e                   	pop    %esi$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	5f                   	pop    %edi$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	5d                   	pop    %ebp$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	c3                   	ret    $/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549 <user_mem_assert>:$/;"	l
f0103549	obj/kern/kernel.asm	/^f0103549:	55                   	push   %ebp$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	89 e5                	mov    %esp,%ebp$/;"	l
f010354c	obj/kern/kernel.asm	/^f010354c:	53                   	push   %ebx$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103560	obj/kern/kernel.asm	/^f0103560:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103567	obj/kern/kernel.asm	/^f0103567:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010356b	obj/kern/kernel.asm	/^f010356b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	e8 33 ff ff ff       	call   f01034a6 <user_mem_check>$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	85 c0                	test   %eax,%eax$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	79 24                	jns    f010359b <user_mem_assert+0x52>$/;"	l
f0103577	obj/kern/kernel.asm	/^f0103577:	a1 44 d2 32 f0       	mov    0xf032d244,%eax$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	c7 04 24 ac 77 10 f0 	movl   $0xf01077ac,(%esp)$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	e8 7b 0a 00 00       	call   f010400e <cprintf>$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103596	obj/kern/kernel.asm	/^f0103596:	e8 37 07 00 00       	call   f0103cd2 <env_destroy>$/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	5b                   	pop    %ebx$/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f:	5d                   	pop    %ebp$/;"	l
f01035a0	obj/kern/kernel.asm	/^f01035a0:	c3                   	ret    $/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	00 00                	add    %al,(%eax)$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4 <region_alloc>:$/;"	l
f01035a4	obj/kern/kernel.asm	/^f01035a4:	55                   	push   %ebp$/;"	l
f01035a5	obj/kern/kernel.asm	/^f01035a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	57                   	push   %edi$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	56                   	push   %esi$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	53                   	push   %ebx$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	89 c6                	mov    %eax,%esi$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	89 d3                	mov    %edx,%ebx$/;"	l
f01035b1	obj/kern/kernel.asm	/^f01035b1:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	8d bc 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%edi$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	eb 4d                	jmp    f0103613 <region_alloc+0x6f>$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	e8 eb d9 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	85 c0                	test   %eax,%eax$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	75 1c                	jne    f01035f2 <region_alloc+0x4e>$/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	c7 44 24 08 08 7b 10 	movl   $0xf0107b08,0x8(%esp)$/;"	l
f01035dd	obj/kern/kernel.asm	/^f01035dd:	f0 $/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	c7 44 24 04 2c 01 00 	movl   $0x12c,0x4(%esp)$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	00 $/;"	l
f01035e6	obj/kern/kernel.asm	/^f01035e6:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f01035ed	obj/kern/kernel.asm	/^f01035ed:	e8 4e ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	00 $/;"	l
f01035fa	obj/kern/kernel.asm	/^f01035fa:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103608	obj/kern/kernel.asm	/^f0103608:	e8 23 dd ff ff       	call   f0101330 <page_insert>$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	72 af                	jb     f01035c6 <region_alloc+0x22>$/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	5b                   	pop    %ebx$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	5e                   	pop    %esi$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	5f                   	pop    %edi$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	5d                   	pop    %ebp$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	c3                   	ret    $/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f <envid2env>:$/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	55                   	push   %ebp$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	89 e5                	mov    %esp,%ebp$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	57                   	push   %edi$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	56                   	push   %esi$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	53                   	push   %ebx$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	8a 55 10             	mov    0x10(%ebp),%dl$/;"	l
f0103631	obj/kern/kernel.asm	/^f0103631:	85 c0                	test   %eax,%eax$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	75 24                	jne    f0103659 <envid2env+0x3a>$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	e8 3e 2c 00 00       	call   f0106278 <cpunum>$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	29 c2                	sub    %eax,%edx$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f010364d	obj/kern/kernel.asm	/^f010364d:	89 06                	mov    %eax,(%esi)$/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	e9 84 00 00 00       	jmp    f01036dd <envid2env+0xbe>$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	89 c3                	mov    %eax,%ebx$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103661	obj/kern/kernel.asm	/^f0103661:	8d 0c 9d 00 00 00 00 	lea    0x0(,%ebx,4),%ecx$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	29 cb                	sub    %ecx,%ebx$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	03 1d 48 d2 32 f0    	add    0xf032d248,%ebx$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	74 05                	je     f010367e <envid2env+0x5f>$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	74 0d                	je     f010368b <envid2env+0x6c>$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	eb 52                	jmp    f01036dd <envid2env+0xbe>$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	84 d2                	test   %dl,%dl$/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	74 47                	je     f01036d6 <envid2env+0xb7>$/;"	l
f010368f	obj/kern/kernel.asm	/^f010368f:	e8 e4 2b 00 00       	call   f0106278 <cpunum>$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	29 c2                	sub    %eax,%edx$/;"	l
f010369d	obj/kern/kernel.asm	/^f010369d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	39 1c 85 28 e0 32 f0 	cmp    %ebx,-0xfcd1fd8(,%eax,4)$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	74 2d                	je     f01036d6 <envid2env+0xb7>$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	e8 c7 2b 00 00       	call   f0106278 <cpunum>$/;"	l
f01036b1	obj/kern/kernel.asm	/^f01036b1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	29 c2                	sub    %eax,%edx$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	74 0d                	je     f01036d6 <envid2env+0xb7>$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01036d4	obj/kern/kernel.asm	/^f01036d4:	eb 07                	jmp    f01036dd <envid2env+0xbe>$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	89 1e                	mov    %ebx,(%esi)$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	5b                   	pop    %ebx$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	5e                   	pop    %esi$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	5f                   	pop    %edi$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	5d                   	pop    %ebp$/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4:	c3                   	ret    $/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5 <env_init_percpu>:$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	55                   	push   %ebp$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	b8 20 93 12 f0       	mov    $0xf0129320,%eax$/;"	l
f01036ed	obj/kern/kernel.asm	/^f01036ed:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	8e e8                	mov    %eax,%gs$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	8e e0                	mov    %eax,%fs$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	b0 10                	mov    $0x10,%al$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	8e c0                	mov    %eax,%es$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	8e d8                	mov    %eax,%ds$/;"	l
f01036ff	obj/kern/kernel.asm	/^f01036ff:	8e d0                	mov    %eax,%ss$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	ea 08 37 10 f0 08 00 	ljmp   $0x8,$0xf0103708$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	b0 00                	mov    $0x0,%al$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	0f 00 d0             	lldt   %ax$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	5d                   	pop    %ebp$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	c3                   	ret    $/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f <env_init>:$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	55                   	push   %ebp$/;"	l
f0103710	obj/kern/kernel.asm	/^f0103710:	89 e5                	mov    %esp,%ebp$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	56                   	push   %esi$/;"	l
f0103713	obj/kern/kernel.asm	/^f0103713:	53                   	push   %ebx$/;"	l
f0103714	obj/kern/kernel.asm	/^f0103714:	8b 35 48 d2 32 f0    	mov    0xf032d248,%esi$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	8b 0d 4c d2 32 f0    	mov    0xf032d24c,%ecx$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	eb 02                	jmp    f010372f <env_init+0x20>$/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010372f	obj/kern/kernel.asm	/^f010372f:	89 c3                	mov    %eax,%ebx$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	4a                   	dec    %edx$/;"	l
f010373c	obj/kern/kernel.asm	/^f010373c:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	75 e9                	jne    f010372d <env_init+0x1e>$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	89 35 4c d2 32 f0    	mov    %esi,0xf032d24c$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	e8 96 ff ff ff       	call   f01036e5 <env_init_percpu>$/;"	l
f010374f	obj/kern/kernel.asm	/^f010374f:	5b                   	pop    %ebx$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	5e                   	pop    %esi$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	5d                   	pop    %ebp$/;"	l
f0103752	obj/kern/kernel.asm	/^f0103752:	c3                   	ret    $/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753 <env_alloc>:$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	55                   	push   %ebp$/;"	l
f0103754	obj/kern/kernel.asm	/^f0103754:	89 e5                	mov    %esp,%ebp$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	56                   	push   %esi$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	53                   	push   %ebx$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	8b 1d 4c d2 32 f0    	mov    0xf032d24c,%ebx$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	85 db                	test   %ebx,%ebx$/;"	l
f0103763	obj/kern/kernel.asm	/^f0103763:	0f 84 b4 01 00 00    	je     f010391d <env_alloc+0x1ca>$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	e8 48 d8 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0103775	obj/kern/kernel.asm	/^f0103775:	85 c0                	test   %eax,%eax$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	0f 84 a7 01 00 00    	je     f0103924 <env_alloc+0x1d1>$/;"	l
f010377d	obj/kern/kernel.asm	/^f010377d:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	2b 05 90 de 32 f0    	sub    0xf032de90,%eax$/;"	l
f0103787	obj/kern/kernel.asm	/^f0103787:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	89 c2                	mov    %eax,%edx$/;"	l
f010378f	obj/kern/kernel.asm	/^f010378f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	3b 15 88 de 32 f0    	cmp    0xf032de88,%edx$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	72 20                	jb     f01037ba <env_alloc+0x67>$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	f0 $/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01037ad	obj/kern/kernel.asm	/^f01037ad:	00 $/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	e8 86 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01037bf	obj/kern/kernel.asm	/^f01037bf:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	00 $/;"	l
f01037ca	obj/kern/kernel.asm	/^f01037ca:	8b 15 8c de 32 f0    	mov    0xf032de8c,%edx$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01037d4	obj/kern/kernel.asm	/^f01037d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	e8 22 25 00 00       	call   f0105cfe <memcpy>$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	77 20                	ja     f0103806 <env_alloc+0xb3>$/;"	l
f01037e6	obj/kern/kernel.asm	/^f01037e6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	f0 $/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	00 $/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	e8 3a c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	83 ca 05             	or     $0x5,%edx$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103815	obj/kern/kernel.asm	/^f0103815:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	89 c1                	mov    %eax,%ecx$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	81 e1 00 fc ff ff    	and    $0xfffffc00,%ecx$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	7f 05                	jg     f010382c <env_alloc+0xd9>$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	89 d8                	mov    %ebx,%eax$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	2b 05 48 d2 32 f0    	sub    0xf032d248,%eax$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	89 c6                	mov    %eax,%esi$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	89 c2                	mov    %eax,%edx$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	01 f2                	add    %esi,%edx$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	01 c2                	add    %eax,%edx$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	89 d6                	mov    %edx,%esi$/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	c1 e6 0f             	shl    $0xf,%esi$/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	01 f2                	add    %esi,%edx$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	c1 e2 05             	shl    $0x5,%edx$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	01 d0                	add    %edx,%eax$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	f7 d8                	neg    %eax$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	09 c1                	or     %eax,%ecx$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	89 4b 48             	mov    %ecx,0x48(%ebx)$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010385b	obj/kern/kernel.asm	/^f010385b:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103865	obj/kern/kernel.asm	/^f0103865:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f010387a	obj/kern/kernel.asm	/^f010387a:	00 $/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103882	obj/kern/kernel.asm	/^f0103882:	00 $/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	e8 bf 23 00 00       	call   f0105c4a <memset>$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01038aa	obj/kern/kernel.asm	/^f01038aa:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	a3 4c d2 32 f0       	mov    %eax,0xf032d24c$/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	89 18                	mov    %ebx,(%eax)$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	e8 ae 29 00 00       	call   f0106278 <cpunum>$/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	29 c2                	sub    %eax,%edx$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	83 3c 85 28 e0 32 f0 	cmpl   $0x0,-0xfcd1fd8(,%eax,4)$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	00 $/;"	l
f01038de	obj/kern/kernel.asm	/^f01038de:	74 1d                	je     f01038fd <env_alloc+0x1aa>$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	e8 93 29 00 00       	call   f0106278 <cpunum>$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	29 c2                	sub    %eax,%edx$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	eb 05                	jmp    f0103902 <env_alloc+0x1af>$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	c7 04 24 28 7b 10 f0 	movl   $0xf0107b28,(%esp)$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	e8 f8 06 00 00       	call   f010400e <cprintf>$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	eb 0c                	jmp    f0103929 <env_alloc+0x1d6>$/;"	l
f010391d	obj/kern/kernel.asm	/^f010391d:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	eb 05                	jmp    f0103929 <env_alloc+0x1d6>$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	83 c4 10             	add    $0x10,%esp$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	5b                   	pop    %ebx$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	5e                   	pop    %esi$/;"	l
f010392e	obj/kern/kernel.asm	/^f010392e:	5d                   	pop    %ebp$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	c3                   	ret    $/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930 <env_create>:$/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930:	55                   	push   %ebp$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	89 e5                	mov    %esp,%ebp$/;"	l
f0103933	obj/kern/kernel.asm	/^f0103933:	57                   	push   %edi$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	56                   	push   %esi$/;"	l
f0103935	obj/kern/kernel.asm	/^f0103935:	53                   	push   %ebx$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	00 $/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010394a	obj/kern/kernel.asm	/^f010394a:	e8 04 fe ff ff       	call   f0103753 <env_alloc>$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	85 c0                	test   %eax,%eax$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	79 1c                	jns    f010396f <env_create+0x3f>$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	c7 44 24 08 78 7b 10 	movl   $0xf0107b78,0x8(%esp)$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	f0 $/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	c7 44 24 04 97 01 00 	movl   $0x197,0x4(%esp)$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	00 $/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	e8 d1 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103975	obj/kern/kernel.asm	/^f0103975:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	74 1c                	je     f0103999 <env_create+0x69>$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	c7 44 24 08 3d 7b 10 	movl   $0xf0107b3d,0x8(%esp)$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	f0 $/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	c7 44 24 04 6d 01 00 	movl   $0x16d,0x4(%esp)$/;"	l
f010398c	obj/kern/kernel.asm	/^f010398c:	00 $/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	e8 a7 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	89 fb                	mov    %edi,%ebx$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f01039a2	obj/kern/kernel.asm	/^f01039a2:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	01 de                	add    %ebx,%esi$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01039aa	obj/kern/kernel.asm	/^f01039aa:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01039b2	obj/kern/kernel.asm	/^f01039b2:	77 20                	ja     f01039d4 <env_create+0xa4>$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	f0 $/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	c7 44 24 04 72 01 00 	movl   $0x172,0x4(%esp)$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	00 $/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	e8 6c c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01039d9	obj/kern/kernel.asm	/^f01039d9:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	eb 6c                	jmp    f0103a4a <env_create+0x11a>$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	75 64                	jne    f0103a47 <env_create+0x117>$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	39 4b 10             	cmp    %ecx,0x10(%ebx)$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	76 1c                	jbe    f0103a07 <env_create+0xd7>$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	c7 44 24 08 98 7b 10 	movl   $0xf0107b98,0x8(%esp)$/;"	l
f01039f2	obj/kern/kernel.asm	/^f01039f2:	f0 $/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	c7 44 24 04 77 01 00 	movl   $0x177,0x4(%esp)$/;"	l
f01039fa	obj/kern/kernel.asm	/^f01039fa:	00 $/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103a02	obj/kern/kernel.asm	/^f0103a02:	e8 39 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103a0a	obj/kern/kernel.asm	/^f0103a0a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	e8 92 fb ff ff       	call   f01035a4 <region_alloc>$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	00 $/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	e8 1e 22 00 00       	call   f0105c4a <memset>$/;"	l
f0103a2c	obj/kern/kernel.asm	/^f0103a2c:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	89 f8                	mov    %edi,%eax$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	e8 4d 22 00 00       	call   f0105c94 <memmove>$/;"	l
f0103a47	obj/kern/kernel.asm	/^f0103a47:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	39 de                	cmp    %ebx,%esi$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	77 90                	ja     f01039de <env_create+0xae>$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a58	obj/kern/kernel.asm	/^f0103a58:	77 20                	ja     f0103a7a <env_create+0x14a>$/;"	l
f0103a5a	obj/kern/kernel.asm	/^f0103a5a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	f0 $/;"	l
f0103a66	obj/kern/kernel.asm	/^f0103a66:	c7 44 24 04 7e 01 00 	movl   $0x17e,0x4(%esp)$/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	00 $/;"	l
f0103a6e	obj/kern/kernel.asm	/^f0103a6e:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	e8 c6 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	e8 07 fb ff ff       	call   f01035a4 <region_alloc>$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	5b                   	pop    %ebx$/;"	l
f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	5e                   	pop    %esi$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	5f                   	pop    %edi$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	5d                   	pop    %ebp$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	c3                   	ret    $/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae <env_free>:$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	55                   	push   %ebp$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ab1	obj/kern/kernel.asm	/^f0103ab1:	57                   	push   %edi$/;"	l
f0103ab2	obj/kern/kernel.asm	/^f0103ab2:	56                   	push   %esi$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	53                   	push   %ebx$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103aba	obj/kern/kernel.asm	/^f0103aba:	e8 b9 27 00 00       	call   f0106278 <cpunum>$/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	29 c2                	sub    %eax,%edx$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103acb	obj/kern/kernel.asm	/^f0103acb:	39 3c 85 28 e0 32 f0 	cmp    %edi,-0xfcd1fd8(,%eax,4)$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	75 34                	jne    f0103b08 <env_free+0x5a>$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	77 20                	ja     f0103b00 <env_free+0x52>$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	f0 $/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	c7 44 24 04 ac 01 00 	movl   $0x1ac,0x4(%esp)$/;"	l
f0103af3	obj/kern/kernel.asm	/^f0103af3:	00 $/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103afb	obj/kern/kernel.asm	/^f0103afb:	e8 40 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0103b0b	obj/kern/kernel.asm	/^f0103b0b:	e8 68 27 00 00       	call   f0106278 <cpunum>$/;"	l
f0103b10	obj/kern/kernel.asm	/^f0103b10:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	29 c2                	sub    %eax,%edx$/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	83 3c 85 28 e0 32 f0 	cmpl   $0x0,-0xfcd1fd8(,%eax,4)$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	00 $/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	74 1d                	je     f0103b43 <env_free+0x95>$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	e8 4d 27 00 00       	call   f0106278 <cpunum>$/;"	l
f0103b2b	obj/kern/kernel.asm	/^f0103b2b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103b32	obj/kern/kernel.asm	/^f0103b32:	29 c2                	sub    %eax,%edx$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	eb 05                	jmp    f0103b48 <env_free+0x9a>$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103b4c	obj/kern/kernel.asm	/^f0103b4c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	c7 04 24 55 7b 10 f0 	movl   $0xf0107b55,(%esp)$/;"	l
f0103b57	obj/kern/kernel.asm	/^f0103b57:	e8 b2 04 00 00       	call   f010400e <cprintf>$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	0f 84 b6 00 00 00    	je     f0103c37 <env_free+0x189>$/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	89 f0                	mov    %esi,%eax$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	72 20                	jb     f0103bb7 <env_free+0x109>$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	f0 $/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	c7 44 24 04 bb 01 00 	movl   $0x1bb,0x4(%esp)$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	00 $/;"	l
f0103bab	obj/kern/kernel.asm	/^f0103bab:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	e8 89 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	01 $/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	74 17                	je     f0103be6 <env_free+0x138>$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	89 d8                	mov    %ebx,%eax$/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103bd7	obj/kern/kernel.asm	/^f0103bd7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103bdb	obj/kern/kernel.asm	/^f0103bdb:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103bde	obj/kern/kernel.asm	/^f0103bde:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103be1	obj/kern/kernel.asm	/^f0103be1:	e8 dd d6 ff ff       	call   f01012c3 <page_remove>$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	43                   	inc    %ebx$/;"	l
f0103be7	obj/kern/kernel.asm	/^f0103be7:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	75 d6                	jne    f0103bc5 <env_free+0x117>$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103bf5	obj/kern/kernel.asm	/^f0103bf5:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f0103c05	obj/kern/kernel.asm	/^f0103c05:	72 1c                	jb     f0103c23 <env_free+0x175>$/;"	l
f0103c07	obj/kern/kernel.asm	/^f0103c07:	c7 44 24 08 88 6f 10 	movl   $0xf0106f88,0x8(%esp)$/;"	l
f0103c0e	obj/kern/kernel.asm	/^f0103c0e:	f0 $/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	00 $/;"	l
f0103c17	obj/kern/kernel.asm	/^f0103c17:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	e8 1d c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	e8 4a d4 ff ff       	call   f0101081 <page_decref>$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	0f 85 1c ff ff ff    	jne    f0103b63 <env_free+0xb5>$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	77 20                	ja     f0103c71 <env_free+0x1c3>$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	f0 $/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	c7 44 24 04 c9 01 00 	movl   $0x1c9,0x4(%esp)$/;"	l
f0103c64	obj/kern/kernel.asm	/^f0103c64:	00 $/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	e8 cf c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	72 1c                	jb     f0103ca4 <env_free+0x1f6>$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	c7 44 24 08 88 6f 10 	movl   $0xf0106f88,0x8(%esp)$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	f0 $/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103c97	obj/kern/kernel.asm	/^f0103c97:	00 $/;"	l
f0103c98	obj/kern/kernel.asm	/^f0103c98:	c7 04 24 ed 77 10 f0 	movl   $0xf01077ed,(%esp)$/;"	l
f0103c9f	obj/kern/kernel.asm	/^f0103c9f:	e8 9c c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	03 05 90 de 32 f0    	add    0xf032de90,%eax$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	e8 cc d3 ff ff       	call   f0101081 <page_decref>$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	a1 4c d2 32 f0       	mov    0xf032d24c,%eax$/;"	l
f0103cc1	obj/kern/kernel.asm	/^f0103cc1:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	89 3d 4c d2 32 f0    	mov    %edi,0xf032d24c$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	5b                   	pop    %ebx$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	5e                   	pop    %esi$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	5f                   	pop    %edi$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	5d                   	pop    %ebp$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	c3                   	ret    $/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2 <env_destroy>:$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	55                   	push   %ebp$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	53                   	push   %ebx$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	75 23                	jne    f0103d05 <env_destroy+0x33>$/;"	l
f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	e8 91 25 00 00       	call   f0106278 <cpunum>$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	29 c2                	sub    %eax,%edx$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	39 1c 85 28 e0 32 f0 	cmp    %ebx,-0xfcd1fd8(,%eax,4)$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	74 09                	je     f0103d05 <env_destroy+0x33>$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	eb 39                	jmp    f0103d3e <env_destroy+0x6c>$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	e8 a1 fd ff ff       	call   f0103aae <env_free>$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	e8 66 25 00 00       	call   f0106278 <cpunum>$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	29 c2                	sub    %eax,%edx$/;"	l
f0103d1b	obj/kern/kernel.asm	/^f0103d1b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103d1e	obj/kern/kernel.asm	/^f0103d1e:	39 1c 85 28 e0 32 f0 	cmp    %ebx,-0xfcd1fd8(,%eax,4)$/;"	l
f0103d25	obj/kern/kernel.asm	/^f0103d25:	75 17                	jne    f0103d3e <env_destroy+0x6c>$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	e8 4c 25 00 00       	call   f0106278 <cpunum>$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	c7 80 28 e0 32 f0 00 	movl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f0103d36	obj/kern/kernel.asm	/^f0103d36:	00 00 00 $/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	e8 04 0e 00 00       	call   f0104b42 <sched_yield>$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	5b                   	pop    %ebx$/;"	l
f0103d42	obj/kern/kernel.asm	/^f0103d42:	5d                   	pop    %ebp$/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	c3                   	ret    $/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44 <env_pop_tf>:$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	55                   	push   %ebp$/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	53                   	push   %ebx$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	e8 28 25 00 00       	call   f0106278 <cpunum>$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103d57	obj/kern/kernel.asm	/^f0103d57:	29 c2                	sub    %eax,%edx$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103d5c	obj/kern/kernel.asm	/^f0103d5c:	8b 1c 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%ebx$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	e8 10 25 00 00       	call   f0106278 <cpunum>$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	61                   	popa   $/;"	l
f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	07                   	pop    %es$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	1f                   	pop    %ds$/;"	l
f0103d71	obj/kern/kernel.asm	/^f0103d71:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	cf                   	iret   $/;"	l
f0103d75	obj/kern/kernel.asm	/^f0103d75:	c7 44 24 08 6b 7b 10 	movl   $0xf0107b6b,0x8(%esp)$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	f0 $/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	c7 44 24 04 ff 01 00 	movl   $0x1ff,0x4(%esp)$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	00 $/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	e8 af c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91 <env_run>:$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	55                   	push   %ebp$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	53                   	push   %ebx$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	e8 d8 24 00 00       	call   f0106278 <cpunum>$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	29 c2                	sub    %eax,%edx$/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	39 1c 85 28 e0 32 f0 	cmp    %ebx,-0xfcd1fd8(,%eax,4)$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	0f 84 e0 00 00 00    	je     f0103e99 <env_run+0x108>$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	e8 ba 24 00 00       	call   f0106278 <cpunum>$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103dc5	obj/kern/kernel.asm	/^f0103dc5:	29 c2                	sub    %eax,%edx$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	83 3c 85 28 e0 32 f0 	cmpl   $0x0,-0xfcd1fd8(,%eax,4)$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	00 $/;"	l
f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	74 29                	je     f0103dfd <env_run+0x6c>$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	e8 9f 24 00 00       	call   f0106278 <cpunum>$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	75 15                	jne    f0103dfd <env_run+0x6c>$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	e8 8b 24 00 00       	call   f0106278 <cpunum>$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	e8 76 24 00 00       	call   f0106278 <cpunum>$/;"	l
f0103e02	obj/kern/kernel.asm	/^f0103e02:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	29 c2                	sub    %eax,%edx$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	89 1c 85 28 e0 32 f0 	mov    %ebx,-0xfcd1fd8(,%eax,4)$/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	e8 5e 24 00 00       	call   f0106278 <cpunum>$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e21	obj/kern/kernel.asm	/^f0103e21:	29 c2                	sub    %eax,%edx$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	e8 3f 24 00 00       	call   f0106278 <cpunum>$/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	29 c2                	sub    %eax,%edx$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	ff 40 58             	incl   0x58(%eax)$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	e8 24 24 00 00       	call   f0106278 <cpunum>$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	29 c2                	sub    %eax,%edx$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0103e67	obj/kern/kernel.asm	/^f0103e67:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e6f	obj/kern/kernel.asm	/^f0103e6f:	77 20                	ja     f0103e91 <env_run+0x100>$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	f0 $/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	c7 44 24 04 2c 02 00 	movl   $0x22c,0x4(%esp)$/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	00 $/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	c7 04 24 1d 7b 10 f0 	movl   $0xf0107b1d,(%esp)$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	e8 af c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103e99	obj/kern/kernel.asm	/^f0103e99:	c7 04 24 c0 93 12 f0 	movl   $0xf01293c0,(%esp)$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	e8 35 27 00 00       	call   f01065da <spin_unlock>$/;"	l
f0103ea5	obj/kern/kernel.asm	/^f0103ea5:	f3 90                	pause  $/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	e8 cc 23 00 00       	call   f0106278 <cpunum>$/;"	l
f0103eac	obj/kern/kernel.asm	/^f0103eac:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	29 c2                	sub    %eax,%edx$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	e8 7d fe ff ff       	call   f0103d44 <env_pop_tf>$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8 <mc146818_read>:$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	55                   	push   %ebp$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	ee                   	out    %al,(%dx)$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	b2 71                	mov    $0x71,%dl$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	ec                   	in     (%dx),%al$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	5d                   	pop    %ebp$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	c3                   	ret    $/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc <mc146818_write>:$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	55                   	push   %ebp$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	89 e5                	mov    %esp,%ebp$/;"	l
f0103edf	obj/kern/kernel.asm	/^f0103edf:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	ee                   	out    %al,(%dx)$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	b2 71                	mov    $0x71,%dl$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	ee                   	out    %al,(%dx)$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	5d                   	pop    %ebp$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	c3                   	ret    $/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0 <irq_setmask_8259A>:$/;"	l
f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	55                   	push   %ebp$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	56                   	push   %esi$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	53                   	push   %ebx$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	89 c6                	mov    %eax,%esi$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	66 a3 a8 93 12 f0    	mov    %ax,0xf01293a8$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	80 3d 50 d2 32 f0 00 	cmpb   $0x0,0xf032d250$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	74 51                	je     f0103f5d <irq_setmask_8259A+0x6d>$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	ee                   	out    %al,(%dx)$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	89 f0                	mov    %esi,%eax$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	ee                   	out    %al,(%dx)$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	c7 04 24 c5 7b 10 f0 	movl   $0xf0107bc5,(%esp)$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	e8 e7 00 00 00       	call   f010400e <cprintf>$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	f7 d6                	not    %esi$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	89 f0                	mov    %esi,%eax$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	88 d9                	mov    %bl,%cl$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	d3 f8                	sar    %cl,%eax$/;"	d
f0103f37	obj/kern/kernel.asm	/^f0103f37:	a8 01                	test   $0x1,%al$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	74 10                	je     f0103f4b <irq_setmask_8259A+0x5b>$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	c7 04 24 73 80 10 f0 	movl   $0xf0108073,(%esp)$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	e8 c3 00 00 00       	call   f010400e <cprintf>$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	43                   	inc    %ebx$/;"	l
f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	75 e0                	jne    f0103f31 <irq_setmask_8259A+0x41>$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	c7 04 24 d6 7a 10 f0 	movl   $0xf0107ad6,(%esp)$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	e8 b1 00 00 00       	call   f010400e <cprintf>$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	5b                   	pop    %ebx$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	5e                   	pop    %esi$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	5d                   	pop    %ebp$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	c3                   	ret    $/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64 <pic_init>:$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	55                   	push   %ebp$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f67	obj/kern/kernel.asm	/^f0103f67:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	c6 05 50 d2 32 f0 01 	movb   $0x1,0xf032d250$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	b0 ff                	mov    $0xff,%al$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	ee                   	out    %al,(%dx)$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	ee                   	out    %al,(%dx)$/;"	l
f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f7e	obj/kern/kernel.asm	/^f0103f7e:	b0 11                	mov    $0x11,%al$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	ee                   	out    %al,(%dx)$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	b2 21                	mov    $0x21,%dl$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	b0 20                	mov    $0x20,%al$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	ee                   	out    %al,(%dx)$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	b0 04                	mov    $0x4,%al$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	ee                   	out    %al,(%dx)$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	b0 03                	mov    $0x3,%al$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	ee                   	out    %al,(%dx)$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	b0 11                	mov    $0x11,%al$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	ee                   	out    %al,(%dx)$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	b0 28                	mov    $0x28,%al$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	ee                   	out    %al,(%dx)$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	b0 02                	mov    $0x2,%al$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	ee                   	out    %al,(%dx)$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	b0 01                	mov    $0x1,%al$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	ee                   	out    %al,(%dx)$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	b2 20                	mov    $0x20,%dl$/;"	l
f0103f9e	obj/kern/kernel.asm	/^f0103f9e:	b0 68                	mov    $0x68,%al$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	ee                   	out    %al,(%dx)$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	b0 0a                	mov    $0xa,%al$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	ee                   	out    %al,(%dx)$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103fa6	obj/kern/kernel.asm	/^f0103fa6:	b0 68                	mov    $0x68,%al$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	ee                   	out    %al,(%dx)$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	b0 0a                	mov    $0xa,%al$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	ee                   	out    %al,(%dx)$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	66 a1 a8 93 12 f0    	mov    0xf01293a8,%ax$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	74 0b                	je     f0103fc3 <pic_init+0x5f>$/;"	l
f0103fb8	obj/kern/kernel.asm	/^f0103fb8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103fbb	obj/kern/kernel.asm	/^f0103fbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	e8 2d ff ff ff       	call   f0103ef0 <irq_setmask_8259A>$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	c9                   	leave  $/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	c3                   	ret    $/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	00 00                	add    %al,(%eax)$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8 <putch>:$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	55                   	push   %ebp$/;"	l
f0103fc9	obj/kern/kernel.asm	/^f0103fc9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	e8 8e c7 ff ff       	call   f0100767 <cputchar>$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	c9                   	leave  $/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	c3                   	ret    $/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb <vcprintf>:$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	55                   	push   %ebp$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103fe1	obj/kern/kernel.asm	/^f0103fe1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ffd	obj/kern/kernel.asm	/^f0103ffd:	c7 04 24 c8 3f 10 f0 	movl   $0xf0103fc8,(%esp)$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	e8 01 16 00 00       	call   f010560a <vprintfmt>$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	c9                   	leave  $/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	c3                   	ret    $/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e <cprintf>:$/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	55                   	push   %ebp$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010401e	obj/kern/kernel.asm	/^f010401e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	e8 b5 ff ff ff       	call   f0103fdb <vcprintf>$/;"	l
f0104026	obj/kern/kernel.asm	/^f0104026:	c9                   	leave  $/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	c3                   	ret    $/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028 <trap_init_percpu>:$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	55                   	push   %ebp$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	89 e5                	mov    %esp,%ebp$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	57                   	push   %edi$/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	56                   	push   %esi$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	53                   	push   %ebx$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	e8 42 22 00 00       	call   f0106278 <cpunum>$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	89 c3                	mov    %eax,%ebx$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	e8 3b 22 00 00       	call   f0106278 <cpunum>$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104044	obj/kern/kernel.asm	/^f0104044:	29 c2                	sub    %eax,%edx$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	89 da                	mov    %ebx,%edx$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	f7 da                	neg    %edx$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	89 14 85 30 e0 32 f0 	mov    %edx,-0xfcd1fd0(,%eax,4)$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	e8 16 22 00 00       	call   f0106278 <cpunum>$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	29 c2                	sub    %eax,%edx$/;"	l
f010406b	obj/kern/kernel.asm	/^f010406b:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	66 c7 04 85 34 e0 32 	movw   $0x10,-0xfcd1fcc(,%eax,4)$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	f0 10 00 $/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	83 c3 05             	add    $0x5,%ebx$/;"	l
f010407b	obj/kern/kernel.asm	/^f010407b:	e8 f8 21 00 00       	call   f0106278 <cpunum>$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	89 c6                	mov    %eax,%esi$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	e8 f1 21 00 00       	call   f0106278 <cpunum>$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	89 c7                	mov    %eax,%edi$/;"	l
f0104089	obj/kern/kernel.asm	/^f0104089:	e8 ea 21 00 00       	call   f0106278 <cpunum>$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	66 c7 04 dd 40 93 12 	movw   $0x67,-0xfed6cc0(,%ebx,8)$/;"	l
f0104095	obj/kern/kernel.asm	/^f0104095:	f0 67 00 $/;"	l
f0104098	obj/kern/kernel.asm	/^f0104098:	8d 14 f5 00 00 00 00 	lea    0x0(,%esi,8),%edx$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	29 f2                	sub    %esi,%edx$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	8d 14 95 2c e0 32 f0 	lea    -0xfcd1fd4(,%edx,4),%edx$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	66 89 14 dd 42 93 12 	mov    %dx,-0xfed6cbe(,%ebx,8)$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	f0 $/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	8d 14 fd 00 00 00 00 	lea    0x0(,%edi,8),%edx$/;"	l
f01040ba	obj/kern/kernel.asm	/^f01040ba:	29 fa                	sub    %edi,%edx$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f01040bf	obj/kern/kernel.asm	/^f01040bf:	8d 14 95 2c e0 32 f0 	lea    -0xfcd1fd4(,%edx,4),%edx$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01040c9	obj/kern/kernel.asm	/^f01040c9:	88 14 dd 44 93 12 f0 	mov    %dl,-0xfed6cbc(,%ebx,8)$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	c6 04 dd 46 93 12 f0 	movb   $0x40,-0xfed6cba(,%ebx,8)$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	40 $/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	29 c2                	sub    %eax,%edx$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	8d 04 85 2c e0 32 f0 	lea    -0xfcd1fd4(,%eax,4),%eax$/;"	l
f01040eb	obj/kern/kernel.asm	/^f01040eb:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	88 04 dd 47 93 12 f0 	mov    %al,-0xfed6cb9(,%ebx,8)$/;"	l
f01040f5	obj/kern/kernel.asm	/^f01040f5:	c6 04 dd 45 93 12 f0 	movb   $0x89,-0xfed6cbb(,%ebx,8)$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	89 $/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	e8 76 21 00 00       	call   f0106278 <cpunum>$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	8d 04 c5 28 00 00 00 	lea    0x28(,%eax,8),%eax$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	0f 00 d8             	ltr    %ax$/;"	l
f010410c	obj/kern/kernel.asm	/^f010410c:	b8 ac 93 12 f0       	mov    $0xf01293ac,%eax$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	0f 01 18             	lidtl  (%eax)$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104117	obj/kern/kernel.asm	/^f0104117:	5b                   	pop    %ebx$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	5e                   	pop    %esi$/;"	l
f0104119	obj/kern/kernel.asm	/^f0104119:	5f                   	pop    %edi$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	5d                   	pop    %ebp$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	c3                   	ret    $/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c <trap_init>:$/;"	l
f010411c	obj/kern/kernel.asm	/^f010411c:	55                   	push   %ebp$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	89 e5                	mov    %esp,%ebp$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	b8 ec 49 10 f0       	mov    $0xf01049ec,%eax$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	66 a3 60 d2 32 f0    	mov    %ax,0xf032d260$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	66 c7 05 62 d2 32 f0 	movw   $0x8,0xf032d262$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	08 00 $/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	c6 05 64 d2 32 f0 00 	movb   $0x0,0xf032d264$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	c6 05 65 d2 32 f0 8e 	movb   $0x8e,0xf032d265$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	66 a3 66 d2 32 f0    	mov    %ax,0xf032d266$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	b8 f2 49 10 f0       	mov    $0xf01049f2,%eax$/;"	l
f0104152	obj/kern/kernel.asm	/^f0104152:	66 a3 68 d2 32 f0    	mov    %ax,0xf032d268$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	66 c7 05 6a d2 32 f0 	movw   $0x8,0xf032d26a$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	08 00 $/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	c6 05 6c d2 32 f0 00 	movb   $0x0,0xf032d26c$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	c6 05 6d d2 32 f0 8e 	movb   $0x8e,0xf032d26d$/;"	l
f010416f	obj/kern/kernel.asm	/^f010416f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	66 a3 6e d2 32 f0    	mov    %ax,0xf032d26e$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	b8 f8 49 10 f0       	mov    $0xf01049f8,%eax$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	66 a3 78 d2 32 f0    	mov    %ax,0xf032d278$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	66 c7 05 7a d2 32 f0 	movw   $0x8,0xf032d27a$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	08 00 $/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	c6 05 7c d2 32 f0 00 	movb   $0x0,0xf032d27c$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	c6 05 7d d2 32 f0 ee 	movb   $0xee,0xf032d27d$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010419d	obj/kern/kernel.asm	/^f010419d:	66 a3 7e d2 32 f0    	mov    %ax,0xf032d27e$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	b8 fe 49 10 f0       	mov    $0xf01049fe,%eax$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	66 a3 80 d2 32 f0    	mov    %ax,0xf032d280$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	66 c7 05 82 d2 32 f0 	movw   $0x8,0xf032d282$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	08 00 $/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	c6 05 84 d2 32 f0 00 	movb   $0x0,0xf032d284$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	c6 05 85 d2 32 f0 8e 	movb   $0x8e,0xf032d285$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	66 a3 86 d2 32 f0    	mov    %ax,0xf032d286$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	b8 04 4a 10 f0       	mov    $0xf0104a04,%eax$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	66 a3 88 d2 32 f0    	mov    %ax,0xf032d288$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	66 c7 05 8a d2 32 f0 	movw   $0x8,0xf032d28a$/;"	l
f01041e0	obj/kern/kernel.asm	/^f01041e0:	08 00 $/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	c6 05 8c d2 32 f0 00 	movb   $0x0,0xf032d28c$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	c6 05 8d d2 32 f0 8e 	movb   $0x8e,0xf032d28d$/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	66 a3 8e d2 32 f0    	mov    %ax,0xf032d28e$/;"	l
f01041f9	obj/kern/kernel.asm	/^f01041f9:	b8 0a 4a 10 f0       	mov    $0xf0104a0a,%eax$/;"	l
f01041fe	obj/kern/kernel.asm	/^f01041fe:	66 a3 90 d2 32 f0    	mov    %ax,0xf032d290$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	66 c7 05 92 d2 32 f0 	movw   $0x8,0xf032d292$/;"	l
f010420b	obj/kern/kernel.asm	/^f010420b:	08 00 $/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	c6 05 94 d2 32 f0 00 	movb   $0x0,0xf032d294$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	c6 05 95 d2 32 f0 8e 	movb   $0x8e,0xf032d295$/;"	l
f010421b	obj/kern/kernel.asm	/^f010421b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010421e	obj/kern/kernel.asm	/^f010421e:	66 a3 96 d2 32 f0    	mov    %ax,0xf032d296$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	b8 10 4a 10 f0       	mov    $0xf0104a10,%eax$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	66 a3 98 d2 32 f0    	mov    %ax,0xf032d298$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	66 c7 05 9a d2 32 f0 	movw   $0x8,0xf032d29a$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	08 00 $/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	c6 05 9c d2 32 f0 00 	movb   $0x0,0xf032d29c$/;"	l
f010423f	obj/kern/kernel.asm	/^f010423f:	c6 05 9d d2 32 f0 8e 	movb   $0x8e,0xf032d29d$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	66 a3 9e d2 32 f0    	mov    %ax,0xf032d29e$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	b8 16 4a 10 f0       	mov    $0xf0104a16,%eax$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	66 a3 a0 d2 32 f0    	mov    %ax,0xf032d2a0$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	66 c7 05 a2 d2 32 f0 	movw   $0x8,0xf032d2a2$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	08 00 $/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	c6 05 a4 d2 32 f0 00 	movb   $0x0,0xf032d2a4$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	c6 05 a5 d2 32 f0 8e 	movb   $0x8e,0xf032d2a5$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	66 a3 a6 d2 32 f0    	mov    %ax,0xf032d2a6$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	b8 1a 4a 10 f0       	mov    $0xf0104a1a,%eax$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	66 a3 a8 d2 32 f0    	mov    %ax,0xf032d2a8$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	66 c7 05 aa d2 32 f0 	movw   $0x8,0xf032d2aa$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	08 00 $/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	c6 05 ac d2 32 f0 00 	movb   $0x0,0xf032d2ac$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	c6 05 ad d2 32 f0 8e 	movb   $0x8e,0xf032d2ad$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	66 a3 ae d2 32 f0    	mov    %ax,0xf032d2ae$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	b8 20 4a 10 f0       	mov    $0xf0104a20,%eax$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	66 a3 b0 d2 32 f0    	mov    %ax,0xf032d2b0$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	66 c7 05 b2 d2 32 f0 	movw   $0x8,0xf032d2b2$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	08 00 $/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	c6 05 b4 d2 32 f0 00 	movb   $0x0,0xf032d2b4$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	c6 05 b5 d2 32 f0 8e 	movb   $0x8e,0xf032d2b5$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	66 a3 b6 d2 32 f0    	mov    %ax,0xf032d2b6$/;"	l
f01042d0	obj/kern/kernel.asm	/^f01042d0:	b8 24 4a 10 f0       	mov    $0xf0104a24,%eax$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	66 a3 b8 d2 32 f0    	mov    %ax,0xf032d2b8$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	66 c7 05 ba d2 32 f0 	movw   $0x8,0xf032d2ba$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	08 00 $/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	c6 05 bc d2 32 f0 00 	movb   $0x0,0xf032d2bc$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	c6 05 bd d2 32 f0 8e 	movb   $0x8e,0xf032d2bd$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	66 a3 be d2 32 f0    	mov    %ax,0xf032d2be$/;"	l
f01042fb	obj/kern/kernel.asm	/^f01042fb:	b8 28 4a 10 f0       	mov    $0xf0104a28,%eax$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	66 a3 c0 d2 32 f0    	mov    %ax,0xf032d2c0$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	66 c7 05 c2 d2 32 f0 	movw   $0x8,0xf032d2c2$/;"	l
f010430d	obj/kern/kernel.asm	/^f010430d:	08 00 $/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	c6 05 c4 d2 32 f0 00 	movb   $0x0,0xf032d2c4$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	c6 05 c5 d2 32 f0 8e 	movb   $0x8e,0xf032d2c5$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	66 a3 c6 d2 32 f0    	mov    %ax,0xf032d2c6$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	b8 2c 4a 10 f0       	mov    $0xf0104a2c,%eax$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	66 a3 c8 d2 32 f0    	mov    %ax,0xf032d2c8$/;"	l
f0104331	obj/kern/kernel.asm	/^f0104331:	66 c7 05 ca d2 32 f0 	movw   $0x8,0xf032d2ca$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	08 00 $/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	c6 05 cc d2 32 f0 00 	movb   $0x0,0xf032d2cc$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	c6 05 cd d2 32 f0 8e 	movb   $0x8e,0xf032d2cd$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010434b	obj/kern/kernel.asm	/^f010434b:	66 a3 ce d2 32 f0    	mov    %ax,0xf032d2ce$/;"	l
f0104351	obj/kern/kernel.asm	/^f0104351:	b8 30 4a 10 f0       	mov    $0xf0104a30,%eax$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	66 a3 d0 d2 32 f0    	mov    %ax,0xf032d2d0$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	66 c7 05 d2 d2 32 f0 	movw   $0x8,0xf032d2d2$/;"	l
f0104363	obj/kern/kernel.asm	/^f0104363:	08 00 $/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	c6 05 d4 d2 32 f0 00 	movb   $0x0,0xf032d2d4$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	c6 05 d5 d2 32 f0 8e 	movb   $0x8e,0xf032d2d5$/;"	l
f0104373	obj/kern/kernel.asm	/^f0104373:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104376	obj/kern/kernel.asm	/^f0104376:	66 a3 d6 d2 32 f0    	mov    %ax,0xf032d2d6$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	b8 34 4a 10 f0       	mov    $0xf0104a34,%eax$/;"	l
f0104381	obj/kern/kernel.asm	/^f0104381:	66 a3 e0 d2 32 f0    	mov    %ax,0xf032d2e0$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	66 c7 05 e2 d2 32 f0 	movw   $0x8,0xf032d2e2$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	08 00 $/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	c6 05 e4 d2 32 f0 00 	movb   $0x0,0xf032d2e4$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	c6 05 e5 d2 32 f0 8e 	movb   $0x8e,0xf032d2e5$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	66 a3 e6 d2 32 f0    	mov    %ax,0xf032d2e6$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	b8 3a 4a 10 f0       	mov    $0xf0104a3a,%eax$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	66 a3 e0 d3 32 f0    	mov    %ax,0xf032d3e0$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	66 c7 05 e2 d3 32 f0 	movw   $0x8,0xf032d3e2$/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	08 00 $/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	c6 05 e4 d3 32 f0 00 	movb   $0x0,0xf032d3e4$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	c6 05 e5 d3 32 f0 ee 	movb   $0xee,0xf032d3e5$/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	66 a3 e6 d3 32 f0    	mov    %ax,0xf032d3e6$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	e8 51 fc ff ff       	call   f0104028 <trap_init_percpu>$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	c9                   	leave  $/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	c3                   	ret    $/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9 <print_regs>:$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	55                   	push   %ebp$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	89 e5                	mov    %esp,%ebp$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	53                   	push   %ebx$/;"	l
f01043dd	obj/kern/kernel.asm	/^f01043dd:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	8b 03                	mov    (%ebx),%eax$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043e9	obj/kern/kernel.asm	/^f01043e9:	c7 04 24 d9 7b 10 f0 	movl   $0xf0107bd9,(%esp)$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	e8 19 fc ff ff       	call   f010400e <cprintf>$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	c7 04 24 e8 7b 10 f0 	movl   $0xf0107be8,(%esp)$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	e8 06 fc ff ff       	call   f010400e <cprintf>$/;"	l
f0104408	obj/kern/kernel.asm	/^f0104408:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	c7 04 24 f7 7b 10 f0 	movl   $0xf0107bf7,(%esp)$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	e8 f3 fb ff ff       	call   f010400e <cprintf>$/;"	l
f010441b	obj/kern/kernel.asm	/^f010441b:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	c7 04 24 06 7c 10 f0 	movl   $0xf0107c06,(%esp)$/;"	l
f0104429	obj/kern/kernel.asm	/^f0104429:	e8 e0 fb ff ff       	call   f010400e <cprintf>$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104435	obj/kern/kernel.asm	/^f0104435:	c7 04 24 15 7c 10 f0 	movl   $0xf0107c15,(%esp)$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	e8 cd fb ff ff       	call   f010400e <cprintf>$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104444	obj/kern/kernel.asm	/^f0104444:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	c7 04 24 24 7c 10 f0 	movl   $0xf0107c24,(%esp)$/;"	l
f010444f	obj/kern/kernel.asm	/^f010444f:	e8 ba fb ff ff       	call   f010400e <cprintf>$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	c7 04 24 33 7c 10 f0 	movl   $0xf0107c33,(%esp)$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	e8 a7 fb ff ff       	call   f010400e <cprintf>$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f010446a	obj/kern/kernel.asm	/^f010446a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010446e	obj/kern/kernel.asm	/^f010446e:	c7 04 24 42 7c 10 f0 	movl   $0xf0107c42,(%esp)$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	e8 94 fb ff ff       	call   f010400e <cprintf>$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	83 c4 14             	add    $0x14,%esp$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	5b                   	pop    %ebx$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	5d                   	pop    %ebp$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	c3                   	ret    $/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480 <print_trapframe>:$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	55                   	push   %ebp$/;"	l
f0104481	obj/kern/kernel.asm	/^f0104481:	89 e5                	mov    %esp,%ebp$/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	53                   	push   %ebx$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	e8 e9 1d 00 00       	call   f0106278 <cpunum>$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104497	obj/kern/kernel.asm	/^f0104497:	c7 04 24 a6 7c 10 f0 	movl   $0xf0107ca6,(%esp)$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	e8 6b fb ff ff       	call   f010400e <cprintf>$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	e8 2e ff ff ff       	call   f01043d9 <print_regs>$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	c7 04 24 c4 7c 10 f0 	movl   $0xf0107cc4,(%esp)$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	e8 4f fb ff ff       	call   f010400e <cprintf>$/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	c7 04 24 d7 7c 10 f0 	movl   $0xf0107cd7,(%esp)$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	e8 3b fb ff ff       	call   f010400e <cprintf>$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	77 09                	ja     f01044e4 <print_trapframe+0x64>$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	8b 14 85 60 7f 10 f0 	mov    -0xfef80a0(,%eax,4),%edx$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	eb 20                	jmp    f0104504 <print_trapframe+0x84>$/;"	l
f01044e4	obj/kern/kernel.asm	/^f01044e4:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	74 0f                	je     f01044f8 <print_trapframe+0x78>$/;"	l
f01044e9	obj/kern/kernel.asm	/^f01044e9:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01044ef	obj/kern/kernel.asm	/^f01044ef:	77 0e                	ja     f01044ff <print_trapframe+0x7f>$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	ba 5d 7c 10 f0       	mov    $0xf0107c5d,%edx$/;"	l
f01044f6	obj/kern/kernel.asm	/^f01044f6:	eb 0c                	jmp    f0104504 <print_trapframe+0x84>$/;"	l
f01044f8	obj/kern/kernel.asm	/^f01044f8:	ba 51 7c 10 f0       	mov    $0xf0107c51,%edx$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	eb 05                	jmp    f0104504 <print_trapframe+0x84>$/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	ba 70 7c 10 f0       	mov    $0xf0107c70,%edx$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	c7 04 24 ea 7c 10 f0 	movl   $0xf0107cea,(%esp)$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	e8 f6 fa ff ff       	call   f010400e <cprintf>$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	3b 1d 60 da 32 f0    	cmp    0xf032da60,%ebx$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	75 19                	jne    f0104539 <print_trapframe+0xb9>$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	75 13                	jne    f0104539 <print_trapframe+0xb9>$/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	c7 04 24 fc 7c 10 f0 	movl   $0xf0107cfc,(%esp)$/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	e8 d5 fa ff ff       	call   f010400e <cprintf>$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	c7 04 24 0b 7d 10 f0 	movl   $0xf0107d0b,(%esp)$/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	e8 c2 fa ff ff       	call   f010400e <cprintf>$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	75 4d                	jne    f010459f <print_trapframe+0x11f>$/;"	l
f0104552	obj/kern/kernel.asm	/^f0104552:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	a8 01                	test   $0x1,%al$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	74 07                	je     f0104560 <print_trapframe+0xe0>$/;"	l
f0104559	obj/kern/kernel.asm	/^f0104559:	b9 7f 7c 10 f0       	mov    $0xf0107c7f,%ecx$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	eb 05                	jmp    f0104565 <print_trapframe+0xe5>$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	b9 8a 7c 10 f0       	mov    $0xf0107c8a,%ecx$/;"	l
f0104565	obj/kern/kernel.asm	/^f0104565:	a8 02                	test   $0x2,%al$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	74 07                	je     f0104570 <print_trapframe+0xf0>$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	ba 96 7c 10 f0       	mov    $0xf0107c96,%edx$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	eb 05                	jmp    f0104575 <print_trapframe+0xf5>$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	ba 9c 7c 10 f0       	mov    $0xf0107c9c,%edx$/;"	l
f0104575	obj/kern/kernel.asm	/^f0104575:	a8 04                	test   $0x4,%al$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	74 07                	je     f0104580 <print_trapframe+0x100>$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	b8 a1 7c 10 f0       	mov    $0xf0107ca1,%eax$/;"	l
f010457e	obj/kern/kernel.asm	/^f010457e:	eb 05                	jmp    f0104585 <print_trapframe+0x105>$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	b8 e8 7d 10 f0       	mov    $0xf0107de8,%eax$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104591	obj/kern/kernel.asm	/^f0104591:	c7 04 24 19 7d 10 f0 	movl   $0xf0107d19,(%esp)$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	e8 71 fa ff ff       	call   f010400e <cprintf>$/;"	l
f010459d	obj/kern/kernel.asm	/^f010459d:	eb 0c                	jmp    f01045ab <print_trapframe+0x12b>$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	c7 04 24 d6 7a 10 f0 	movl   $0xf0107ad6,(%esp)$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	e8 63 fa ff ff       	call   f010400e <cprintf>$/;"	l
f01045ab	obj/kern/kernel.asm	/^f01045ab:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	c7 04 24 28 7d 10 f0 	movl   $0xf0107d28,(%esp)$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	e8 50 fa ff ff       	call   f010400e <cprintf>$/;"	l
f01045be	obj/kern/kernel.asm	/^f01045be:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	c7 04 24 37 7d 10 f0 	movl   $0xf0107d37,(%esp)$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	e8 3c fa ff ff       	call   f010400e <cprintf>$/;"	l
f01045d2	obj/kern/kernel.asm	/^f01045d2:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	c7 04 24 4a 7d 10 f0 	movl   $0xf0107d4a,(%esp)$/;"	l
f01045e0	obj/kern/kernel.asm	/^f01045e0:	e8 29 fa ff ff       	call   f010400e <cprintf>$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	74 27                	je     f0104612 <print_trapframe+0x192>$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	c7 04 24 59 7d 10 f0 	movl   $0xf0107d59,(%esp)$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	e8 10 fa ff ff       	call   f010400e <cprintf>$/;"	l
f01045fe	obj/kern/kernel.asm	/^f01045fe:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	c7 04 24 68 7d 10 f0 	movl   $0xf0107d68,(%esp)$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	e8 fc f9 ff ff       	call   f010400e <cprintf>$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	5b                   	pop    %ebx$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	5d                   	pop    %ebp$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	c3                   	ret    $/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618 <page_fault_handler>:$/;"	l
f0104618	obj/kern/kernel.asm	/^f0104618:	55                   	push   %ebp$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	89 e5                	mov    %esp,%ebp$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	57                   	push   %edi$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	56                   	push   %esi$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	53                   	push   %ebx$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	75 1c                	jne    f0104649 <page_fault_handler+0x31>$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	c7 44 24 08 7b 7d 10 	movl   $0xf0107d7b,0x8(%esp)$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	f0 $/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	c7 44 24 04 5d 01 00 	movl   $0x15d,0x4(%esp)$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	00 $/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	c7 04 24 8d 7d 10 f0 	movl   $0xf0107d8d,(%esp)$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	e8 f7 b9 ff ff       	call   f0100040 <_panic>$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	e8 2a 1c 00 00       	call   f0106278 <cpunum>$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	29 c2                	sub    %eax,%edx$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	0f 84 f0 00 00 00    	je     f010475b <page_fault_handler+0x143>$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	c7 45 e4 cc ff bf ee 	movl   $0xeebfffcc,-0x1c(%ebp)$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	77 06                	ja     f0104689 <page_fault_handler+0x71>$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	e8 ea 1b 00 00       	call   f0106278 <cpunum>$/;"	l
f010468e	obj/kern/kernel.asm	/^f010468e:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	00 $/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f010469d	obj/kern/kernel.asm	/^f010469d:	00 $/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01046a1	obj/kern/kernel.asm	/^f01046a1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	e8 93 ee ff ff       	call   f0103549 <user_mem_assert>$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	89 30                	mov    %esi,(%eax)$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	89 d7                	mov    %edx,%edi$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	83 c7 08             	add    $0x8,%edi$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	89 de                	mov    %ebx,%esi$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	74 03                	je     f01046db <page_fault_handler+0xc3>$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	b0 1f                	mov    $0x1f,%al$/;"	l
f01046db	obj/kern/kernel.asm	/^f01046db:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	74 05                	je     f01046e8 <page_fault_handler+0xd0>$/;"	l
f01046e3	obj/kern/kernel.asm	/^f01046e3:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f01046e5	obj/kern/kernel.asm	/^f01046e5:	83 e8 02             	sub    $0x2,%eax$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	89 c1                	mov    %eax,%ecx$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	a8 02                	test   $0x2,%al$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	74 02                	je     f01046f5 <page_fault_handler+0xdd>$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f01046f5	obj/kern/kernel.asm	/^f01046f5:	a8 01                	test   $0x1,%al$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	74 01                	je     f01046fa <page_fault_handler+0xe2>$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f01046fa	obj/kern/kernel.asm	/^f01046fa:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01046fd	obj/kern/kernel.asm	/^f01046fd:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104700	obj/kern/kernel.asm	/^f0104700:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f010470c	obj/kern/kernel.asm	/^f010470c:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	e8 64 1b 00 00       	call   f0106278 <cpunum>$/;"	l
f0104714	obj/kern/kernel.asm	/^f0104714:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	8b 98 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%ebx$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	e8 56 1b 00 00       	call   f0106278 <cpunum>$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	e8 42 1b 00 00       	call   f0106278 <cpunum>$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	e8 2e 1b 00 00       	call   f0106278 <cpunum>$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010474d	obj/kern/kernel.asm	/^f010474d:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	e8 36 f6 ff ff       	call   f0103d91 <env_run>$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	e8 15 1b 00 00       	call   f0106278 <cpunum>$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	29 c2                	sub    %eax,%edx$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	c7 04 24 34 7f 10 f0 	movl   $0xf0107f34,(%esp)$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	e8 7d f8 ff ff       	call   f010400e <cprintf>$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	e8 e7 fc ff ff       	call   f0104480 <print_trapframe>$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	e8 da 1a 00 00       	call   f0106278 <cpunum>$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	29 c2                	sub    %eax,%edx$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	e8 19 f5 ff ff       	call   f0103cd2 <env_destroy>$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	5b                   	pop    %ebx$/;"	l
f01047bd	obj/kern/kernel.asm	/^f01047bd:	5e                   	pop    %esi$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	5f                   	pop    %edi$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	5d                   	pop    %ebp$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	c3                   	ret    $/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1 <trap>:$/;"	l
f01047c1	obj/kern/kernel.asm	/^f01047c1:	55                   	push   %ebp$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	57                   	push   %edi$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	56                   	push   %esi$/;"	l
f01047c6	obj/kern/kernel.asm	/^f01047c6:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01047c9	obj/kern/kernel.asm	/^f01047c9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	fc                   	cld    $/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	83 3d 80 de 32 f0 00 	cmpl   $0x0,0xf032de80$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	74 01                	je     f01047d7 <trap+0x16>$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	f4                   	hlt    $/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	e8 9c 1a 00 00       	call   f0106278 <cpunum>$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	29 c2                	sub    %eax,%edx$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	8d 14 85 20 e0 32 f0 	lea    -0xfcd1fe0(,%eax,4),%edx$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	75 0c                	jne    f0104809 <trap+0x48>$/;"	l
f01047fd	obj/kern/kernel.asm	/^f01047fd:	c7 04 24 c0 93 12 f0 	movl   $0xf01293c0,(%esp)$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	e8 2e 1d 00 00       	call   f0106537 <spin_lock>$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	9c                   	pushf  $/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	58                   	pop    %eax$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	f6 c4 02             	test   $0x2,%ah$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	74 24                	je     f0104834 <trap+0x73>$/;"	l
f0104810	obj/kern/kernel.asm	/^f0104810:	c7 44 24 0c 99 7d 10 	movl   $0xf0107d99,0xc(%esp)$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	f0 $/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	f0 $/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	00 $/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	c7 04 24 8d 7d 10 f0 	movl   $0xf0107d8d,(%esp)$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	e8 0c b8 ff ff       	call   f0100040 <_panic>$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	83 e0 03             	and    $0x3,%eax$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010483e	obj/kern/kernel.asm	/^f010483e:	0f 85 a7 00 00 00    	jne    f01048eb <trap+0x12a>$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	c7 04 24 c0 93 12 f0 	movl   $0xf01293c0,(%esp)$/;"	l
f010484b	obj/kern/kernel.asm	/^f010484b:	e8 e7 1c 00 00       	call   f0106537 <spin_lock>$/;"	l
f0104850	obj/kern/kernel.asm	/^f0104850:	e8 23 1a 00 00       	call   f0106278 <cpunum>$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	83 b8 28 e0 32 f0 00 	cmpl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	75 24                	jne    f0104885 <trap+0xc4>$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	c7 44 24 0c b2 7d 10 	movl   $0xf0107db2,0xc(%esp)$/;"	l
f0104868	obj/kern/kernel.asm	/^f0104868:	f0 $/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	c7 44 24 08 07 78 10 	movl   $0xf0107807,0x8(%esp)$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	f0 $/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	00 $/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	c7 04 24 8d 7d 10 f0 	movl   $0xf0107d8d,(%esp)$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	e8 bb b7 ff ff       	call   f0100040 <_panic>$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	e8 ee 19 00 00       	call   f0106278 <cpunum>$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010488d	obj/kern/kernel.asm	/^f010488d:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	75 2d                	jne    f01048c6 <trap+0x105>$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	e8 da 19 00 00       	call   f0106278 <cpunum>$/;"	l
f010489e	obj/kern/kernel.asm	/^f010489e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	e8 ff f1 ff ff       	call   f0103aae <env_free>$/;"	l
f01048af	obj/kern/kernel.asm	/^f01048af:	e8 c4 19 00 00       	call   f0106278 <cpunum>$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	c7 80 28 e0 32 f0 00 	movl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	00 00 00 $/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	e8 7c 02 00 00       	call   f0104b42 <sched_yield>$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	e8 ad 19 00 00       	call   f0106278 <cpunum>$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048ce	obj/kern/kernel.asm	/^f01048ce:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	89 c7                	mov    %eax,%edi$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	e8 96 19 00 00       	call   f0106278 <cpunum>$/;"	l
f01048e2	obj/kern/kernel.asm	/^f01048e2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	8b b0 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%esi$/;"	l
f01048eb	obj/kern/kernel.asm	/^f01048eb:	89 35 60 da 32 f0    	mov    %esi,0xf032da60$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f01048f7	obj/kern/kernel.asm	/^f01048f7:	75 19                	jne    f0104912 <trap+0x151>$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	c7 04 24 b9 7d 10 f0 	movl   $0xf0107db9,(%esp)$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	e8 09 f7 ff ff       	call   f010400e <cprintf>$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	e8 73 fb ff ff       	call   f0104480 <print_trapframe>$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	e9 99 00 00 00       	jmp    f01049ab <trap+0x1ea>$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	75 0d                	jne    f0104924 <trap+0x163>$/;"	l
f0104917	obj/kern/kernel.asm	/^f0104917:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	e8 f9 fc ff ff       	call   f0104618 <page_fault_handler>$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	e9 87 00 00 00       	jmp    f01049ab <trap+0x1ea>$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	75 0a                	jne    f0104933 <trap+0x172>$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	e8 3e c0 ff ff       	call   f010096f <monitor>$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	eb 78                	jmp    f01049ab <trap+0x1ea>$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	75 32                	jne    f010496a <trap+0x1a9>$/;"	l
f0104938	obj/kern/kernel.asm	/^f0104938:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010493f	obj/kern/kernel.asm	/^f010493f:	8b 06                	mov    (%esi),%eax$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	e8 6b 02 00 00       	call   f0104bd0 <syscall>$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	eb 41                	jmp    f01049ab <trap+0x1ea>$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	e8 0e fb ff ff       	call   f0104480 <print_trapframe>$/;"	l
f0104972	obj/kern/kernel.asm	/^f0104972:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	75 1c                	jne    f0104995 <trap+0x1d4>$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	c7 44 24 08 d6 7d 10 	movl   $0xf0107dd6,0x8(%esp)$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	f0 $/;"	l
f0104981	obj/kern/kernel.asm	/^f0104981:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	00 $/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	c7 04 24 8d 7d 10 f0 	movl   $0xf0107d8d,(%esp)$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	e8 ab b6 ff ff       	call   f0100040 <_panic>$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	e8 de 18 00 00       	call   f0106278 <cpunum>$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	e8 27 f3 ff ff       	call   f0103cd2 <env_destroy>$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	e8 c8 18 00 00       	call   f0106278 <cpunum>$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	83 b8 28 e0 32 f0 00 	cmpl   $0x0,-0xfcd1fd8(%eax)$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	74 2a                	je     f01049e6 <trap+0x225>$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	e8 b7 18 00 00       	call   f0106278 <cpunum>$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01049ce	obj/kern/kernel.asm	/^f01049ce:	75 16                	jne    f01049e6 <trap+0x225>$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	e8 a3 18 00 00       	call   f0106278 <cpunum>$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049d8	obj/kern/kernel.asm	/^f01049d8:	8b 80 28 e0 32 f0    	mov    -0xfcd1fd8(%eax),%eax$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	e8 ab f3 ff ff       	call   f0103d91 <env_run>$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	e8 57 01 00 00       	call   f0104b42 <sched_yield>$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec <th0>:$/;"	l
f01049ec	obj/kern/kernel.asm	/^f01049ec:	6a 00                	push   $0x0$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	6a 00                	push   $0x0$/;"	l
f01049f0	obj/kern/kernel.asm	/^f01049f0:	eb 4e                	jmp    f0104a40 <_alltraps>$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2 <th1>:$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	6a 00                	push   $0x0$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	6a 01                	push   $0x1$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	eb 48                	jmp    f0104a40 <_alltraps>$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8 <th3>:$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	6a 00                	push   $0x0$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	6a 03                	push   $0x3$/;"	l
f01049fc	obj/kern/kernel.asm	/^f01049fc:	eb 42                	jmp    f0104a40 <_alltraps>$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe <th4>:$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	6a 00                	push   $0x0$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	6a 04                	push   $0x4$/;"	l
f0104a02	obj/kern/kernel.asm	/^f0104a02:	eb 3c                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04 <th5>:$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	6a 00                	push   $0x0$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	6a 05                	push   $0x5$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	eb 36                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a <th6>:$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	6a 00                	push   $0x0$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	6a 06                	push   $0x6$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	eb 30                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10 <th7>:$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	6a 00                	push   $0x0$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	6a 07                	push   $0x7$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	eb 2a                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a16	obj/kern/kernel.asm	/^f0104a16 <th8>:$/;"	l
f0104a16	obj/kern/kernel.asm	/^f0104a16:	6a 08                	push   $0x8$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	eb 26                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a <th9>:$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	6a 00                	push   $0x0$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	6a 09                	push   $0x9$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	eb 20                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20 <th10>:$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	6a 0a                	push   $0xa$/;"	l
f0104a22	obj/kern/kernel.asm	/^f0104a22:	eb 1c                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24 <th11>:$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	6a 0b                	push   $0xb$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	eb 18                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28 <th12>:$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	6a 0c                	push   $0xc$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	eb 14                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c <th13>:$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	6a 0d                	push   $0xd$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	eb 10                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30 <th14>:$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	6a 0e                	push   $0xe$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	eb 0c                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34 <th16>:$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	6a 00                	push   $0x0$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	6a 10                	push   $0x10$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	eb 06                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a <th48>:$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	6a 00                	push   $0x0$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	6a 30                	push   $0x30$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	eb 00                	jmp    f0104a40 <_alltraps>$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40 <_alltraps>:$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	1e                   	push   %ds$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	06                   	push   %es$/;"	l
f0104a42	obj/kern/kernel.asm	/^f0104a42:	60                   	pusha  $/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	6a 10                	push   $0x10$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	1f                   	pop    %ds$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	6a 10                	push   $0x10$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	07                   	pop    %es$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	54                   	push   %esp$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	e8 72 fd ff ff       	call   f01047c1 <trap>$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50 <sched_halt>:$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	55                   	push   %ebp$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a53	obj/kern/kernel.asm	/^f0104a53:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	8b 15 48 d2 32 f0    	mov    0xf032d248,%edx$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	83 c2 54             	add    $0x54,%edx$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	49                   	dec    %ecx$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	76 0d                	jbe    f0104a79 <sched_halt+0x29>$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	40                   	inc    %eax$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	75 ed                	jne    f0104a64 <sched_halt+0x14>$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	eb 07                	jmp    f0104a80 <sched_halt+0x30>$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	75 1a                	jne    f0104a9a <sched_halt+0x4a>$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	c7 04 24 b0 7f 10 f0 	movl   $0xf0107fb0,(%esp)$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	e8 82 f5 ff ff       	call   f010400e <cprintf>$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104a93	obj/kern/kernel.asm	/^f0104a93:	e8 d7 be ff ff       	call   f010096f <monitor>$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	eb f2                	jmp    f0104a8c <sched_halt+0x3c>$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	e8 d9 17 00 00       	call   f0106278 <cpunum>$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104aa6	obj/kern/kernel.asm	/^f0104aa6:	29 c2                	sub    %eax,%edx$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	c7 04 85 28 e0 32 f0 	movl   $0x0,-0xfcd1fd8(,%eax,4)$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	00 00 00 00 $/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	a1 8c de 32 f0       	mov    0xf032de8c,%eax$/;"	l
f0104abb	obj/kern/kernel.asm	/^f0104abb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	77 20                	ja     f0104ae2 <sched_halt+0x92>$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	c7 44 24 08 64 69 10 	movl   $0xf0106964,0x8(%esp)$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	f0 $/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	c7 44 24 04 4d 00 00 	movl   $0x4d,0x4(%esp)$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	00 $/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	c7 04 24 d9 7f 10 f0 	movl   $0xf0107fd9,(%esp)$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	e8 5e b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	e8 89 17 00 00       	call   f0106278 <cpunum>$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104af6	obj/kern/kernel.asm	/^f0104af6:	29 c2                	sub    %eax,%edx$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	8d 14 85 20 e0 32 f0 	lea    -0xfcd1fe0(,%eax,4),%edx$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104b07	obj/kern/kernel.asm	/^f0104b07:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	c7 04 24 c0 93 12 f0 	movl   $0xf01293c0,(%esp)$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	e8 c3 1a 00 00       	call   f01065da <spin_unlock>$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	f3 90                	pause  $/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	e8 5a 17 00 00       	call   f0106278 <cpunum>$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	29 c2                	sub    %eax,%edx$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	8b 04 85 30 e0 32 f0 	mov    -0xfcd1fd0(,%eax,4),%eax$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	89 c4                	mov    %eax,%esp$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	6a 00                	push   $0x0$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	6a 00                	push   $0x0$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	fb                   	sti    $/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	f4                   	hlt    $/;"	l
f0104b3e	obj/kern/kernel.asm	/^f0104b3e:	eb fd                	jmp    f0104b3d <sched_halt+0xed>$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	c9                   	leave  $/;"	l
f0104b41	obj/kern/kernel.asm	/^f0104b41:	c3                   	ret    $/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42 <sched_yield>:$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	55                   	push   %ebp$/;"	l
f0104b43	obj/kern/kernel.asm	/^f0104b43:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	57                   	push   %edi$/;"	l
f0104b46	obj/kern/kernel.asm	/^f0104b46:	56                   	push   %esi$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	53                   	push   %ebx$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	e8 28 17 00 00       	call   f0106278 <cpunum>$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	29 c2                	sub    %eax,%edx$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	8b 34 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%esi$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	85 f6                	test   %esi,%esi$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	74 0b                	je     f0104b72 <sched_yield+0x30>$/;"	l
f0104b67	obj/kern/kernel.asm	/^f0104b67:	8b 5e 48             	mov    0x48(%esi),%ebx$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	eb 05                	jmp    f0104b77 <sched_yield+0x35>$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104b77	obj/kern/kernel.asm	/^f0104b77:	8b 0d 48 d2 32 f0    	mov    0xf032d248,%ecx$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	8d 14 18             	lea    (%eax,%ebx,1),%edx$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0104b8b	obj/kern/kernel.asm	/^f0104b8b:	8d 3c 95 00 00 00 00 	lea    0x0(,%edx,4),%edi$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	c1 e2 07             	shl    $0x7,%edx$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	29 fa                	sub    %edi,%edx$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	01 ca                	add    %ecx,%edx$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	83 7a 54 02          	cmpl   $0x2,0x54(%edx)$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	75 08                	jne    f0104ba7 <sched_yield+0x65>$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	e8 ea f1 ff ff       	call   f0103d91 <env_run>$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	40                   	inc    %eax$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	75 d3                	jne    f0104b82 <sched_yield+0x40>$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	85 f6                	test   %esi,%esi$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	74 0e                	je     f0104bc1 <sched_yield+0x7f>$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	83 7e 54 03          	cmpl   $0x3,0x54(%esi)$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	75 08                	jne    f0104bc1 <sched_yield+0x7f>$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	e8 d0 f1 ff ff       	call   f0103d91 <env_run>$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	e8 8a fe ff ff       	call   f0104a50 <sched_halt>$/;"	l
f0104bc6	obj/kern/kernel.asm	/^f0104bc6:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	5b                   	pop    %ebx$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	5e                   	pop    %esi$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	5f                   	pop    %edi$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	5d                   	pop    %ebp$/;"	l
f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	c3                   	ret    $/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0 <syscall>:$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	55                   	push   %ebp$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	57                   	push   %edi$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	56                   	push   %esi$/;"	l
f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	53                   	push   %ebx$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	8b 5d 1c             	mov    0x1c(%ebp),%ebx$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	0f 87 5e 04 00 00    	ja     f010504c <syscall+0x47c>$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	ff 24 85 20 80 10 f0 	jmp    *-0xfef7fe0(,%eax,4)$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	e8 7e 16 00 00       	call   f0106278 <cpunum>$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0104c01	obj/kern/kernel.asm	/^f0104c01:	00 $/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104c11	obj/kern/kernel.asm	/^f0104c11:	29 c2                	sub    %eax,%edx$/;"	l
f0104c13	obj/kern/kernel.asm	/^f0104c13:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0104c1d	obj/kern/kernel.asm	/^f0104c1d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	e8 24 e9 ff ff       	call   f0103549 <user_mem_assert>$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	c7 04 24 e6 7f 10 f0 	movl   $0xf0107fe6,(%esp)$/;"	l
f0104c34	obj/kern/kernel.asm	/^f0104c34:	e8 d5 f3 ff ff       	call   f010400e <cprintf>$/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	e9 0e 04 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104c43	obj/kern/kernel.asm	/^f0104c43:	e8 e4 b9 ff ff       	call   f010062c <cons_getc>$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	89 c6                	mov    %eax,%esi$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	e9 02 04 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104c4f	obj/kern/kernel.asm	/^f0104c4f:	e8 24 16 00 00       	call   f0106278 <cpunum>$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104c5b	obj/kern/kernel.asm	/^f0104c5b:	29 c2                	sub    %eax,%edx$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	e9 e2 03 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	00 $/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	e8 99 e9 ff ff       	call   f010361f <envid2env>$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	89 c6                	mov    %eax,%esi$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	85 c0                	test   %eax,%eax$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	0f 88 c1 03 00 00    	js     f0105051 <syscall+0x481>$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	e8 e3 15 00 00       	call   f0106278 <cpunum>$/;"	l
f0104c95	obj/kern/kernel.asm	/^f0104c95:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	29 c1                	sub    %eax,%ecx$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	8d 04 88             	lea    (%eax,%ecx,4),%eax$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	39 14 85 28 e0 32 f0 	cmp    %edx,-0xfcd1fd8(,%eax,4)$/;"	l
f0104cab	obj/kern/kernel.asm	/^f0104cab:	75 2d                	jne    f0104cda <syscall+0x10a>$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	e8 c6 15 00 00       	call   f0106278 <cpunum>$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	29 c2                	sub    %eax,%edx$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	c7 04 24 eb 7f 10 f0 	movl   $0xf0107feb,(%esp)$/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	e8 36 f3 ff ff       	call   f010400e <cprintf>$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	eb 32                	jmp    f0104d0c <syscall+0x13c>$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	e8 96 15 00 00       	call   f0106278 <cpunum>$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	29 c2                	sub    %eax,%edx$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	c7 04 24 06 80 10 f0 	movl   $0xf0108006,(%esp)$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	e8 02 f3 ff ff       	call   f010400e <cprintf>$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	e8 bb ef ff ff       	call   f0103cd2 <env_destroy>$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	e9 30 03 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	e8 1c fe ff ff       	call   f0104b42 <sched_yield>$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	e8 4d 15 00 00       	call   f0106278 <cpunum>$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	29 c2                	sub    %eax,%edx$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	e8 03 ea ff ff       	call   f0103753 <env_alloc>$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	89 c6                	mov    %eax,%esi$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	85 c0                	test   %eax,%eax$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	0f 88 f7 02 00 00    	js     f0105051 <syscall+0x481>$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	e8 0f 15 00 00       	call   f0106278 <cpunum>$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	29 c2                	sub    %eax,%edx$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	8b 34 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%esi$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	89 df                	mov    %ebx,%edi$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104d88	obj/kern/kernel.asm	/^f0104d88:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0104d8f	obj/kern/kernel.asm	/^f0104d8f:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	e9 ba 02 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	83 ff 02             	cmp    $0x2,%edi$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	74 05                	je     f0104da1 <syscall+0x1d1>$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	83 ff 04             	cmp    $0x4,%edi$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	75 31                	jne    f0104dd2 <syscall+0x202>$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	00 $/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104db3	obj/kern/kernel.asm	/^f0104db3:	e8 67 e8 ff ff       	call   f010361f <envid2env>$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	89 c6                	mov    %eax,%esi$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	85 c0                	test   %eax,%eax$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	0f 88 8f 02 00 00    	js     f0105051 <syscall+0x481>$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	89 78 54             	mov    %edi,0x54(%eax)$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104dcd	obj/kern/kernel.asm	/^f0104dcd:	e9 7f 02 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	e9 75 02 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	00 $/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	e8 2c e8 ff ff       	call   f010361f <envid2env>$/;"	l
f0104df3	obj/kern/kernel.asm	/^f0104df3:	85 c0                	test   %eax,%eax$/;"	l
f0104df5	obj/kern/kernel.asm	/^f0104df5:	79 09                	jns    f0104e00 <syscall+0x230>$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	89 c6                	mov    %eax,%esi$/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	f7 de                	neg    %esi$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	e9 51 02 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	77 5e                	ja     f0104e66 <syscall+0x296>$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	75 60                	jne    f0104e70 <syscall+0x2a0>$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104e13	obj/kern/kernel.asm	/^f0104e13:	83 e0 05             	and    $0x5,%eax$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0104e19	obj/kern/kernel.asm	/^f0104e19:	75 5f                	jne    f0104e7a <syscall+0x2aa>$/;"	l
f0104e1b	obj/kern/kernel.asm	/^f0104e1b:	f7 45 14 f8 f1 ff ff 	testl  $0xfffff1f8,0x14(%ebp)$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	7f 60                	jg     f0104e84 <syscall+0x2b4>$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	e8 8d c1 ff ff       	call   f0100fbd <page_alloc>$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	89 c3                	mov    %eax,%ebx$/;"	l
f0104e32	obj/kern/kernel.asm	/^f0104e32:	85 c0                	test   %eax,%eax$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	74 58                	je     f0104e8e <syscall+0x2be>$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104e45	obj/kern/kernel.asm	/^f0104e45:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	e8 dd c4 ff ff       	call   f0101330 <page_insert>$/;"	l
f0104e53	obj/kern/kernel.asm	/^f0104e53:	89 c6                	mov    %eax,%esi$/;"	l
f0104e55	obj/kern/kernel.asm	/^f0104e55:	85 c0                	test   %eax,%eax$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	79 3f                	jns    f0104e98 <syscall+0x2c8>$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	e8 e0 c1 ff ff       	call   f0101041 <page_free>$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	e9 eb 01 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	e9 e1 01 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	e9 d7 01 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104e7f	obj/kern/kernel.asm	/^f0104e7f:	e9 cd 01 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104e89	obj/kern/kernel.asm	/^f0104e89:	e9 c3 01 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	e9 b9 01 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	e9 af 01 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	00 $/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	e8 66 e7 ff ff       	call   f010361f <envid2env>$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	89 c6                	mov    %eax,%esi$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	85 c0                	test   %eax,%eax$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	0f 88 8e 01 00 00    	js     f0105051 <syscall+0x481>$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	00 $/;"	l
f0104ecb	obj/kern/kernel.asm	/^f0104ecb:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	e8 42 e7 ff ff       	call   f010361f <envid2env>$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	89 c6                	mov    %eax,%esi$/;"	l
f0104edf	obj/kern/kernel.asm	/^f0104edf:	85 c0                	test   %eax,%eax$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	0f 88 6a 01 00 00    	js     f0105051 <syscall+0x481>$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f0104eed	obj/kern/kernel.asm	/^f0104eed:	0f 87 93 00 00 00    	ja     f0104f86 <syscall+0x3b6>$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	0f 85 91 00 00 00    	jne    f0104f90 <syscall+0x3c0>$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	0f 87 8e 00 00 00    	ja     f0104f9a <syscall+0x3ca>$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	0f 85 8b 00 00 00    	jne    f0104fa4 <syscall+0x3d4>$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	e8 db c2 ff ff       	call   f010120d <page_lookup>$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	85 c0                	test   %eax,%eax$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	74 78                	je     f0104fae <syscall+0x3de>$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	89 da                	mov    %ebx,%edx$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	83 e2 05             	and    $0x5,%edx$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	83 fa 05             	cmp    $0x5,%edx$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	75 78                	jne    f0104fb8 <syscall+0x3e8>$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	f7 c3 f8 f1 ff ff    	test   $0xfffff1f8,%ebx$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	7f 7a                	jg     f0104fc2 <syscall+0x3f2>$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	f6 c3 02             	test   $0x2,%bl$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	74 08                	je     f0104f55 <syscall+0x385>$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	74 77                	je     f0104fcc <syscall+0x3fc>$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	e8 be c3 ff ff       	call   f0101330 <page_insert>$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	89 c6                	mov    %eax,%esi$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	85 c0                	test   %eax,%eax$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	0f 8e d5 00 00 00    	jle    f0105051 <syscall+0x481>$/;"	l
f0104f7c	obj/kern/kernel.asm	/^f0104f7c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	e9 cb 00 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	e9 c1 00 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	e9 b7 00 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	e9 ad 00 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	e9 a3 00 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104fae	obj/kern/kernel.asm	/^f0104fae:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	e9 99 00 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104fb8	obj/kern/kernel.asm	/^f0104fb8:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	e9 8f 00 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104fc7	obj/kern/kernel.asm	/^f0104fc7:	e9 85 00 00 00       	jmp    f0105051 <syscall+0x481>$/;"	l
f0104fcc	obj/kern/kernel.asm	/^f0104fcc:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	eb 7e                	jmp    f0105051 <syscall+0x481>$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	00 $/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	e8 35 e6 ff ff       	call   f010361f <envid2env>$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	89 c6                	mov    %eax,%esi$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	85 c0                	test   %eax,%eax$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	78 61                	js     f0105051 <syscall+0x481>$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	77 21                	ja     f0105019 <syscall+0x449>$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	75 20                	jne    f0105020 <syscall+0x450>$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105007	obj/kern/kernel.asm	/^f0105007:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	e8 b1 c2 ff ff       	call   f01012c3 <page_remove>$/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	eb 38                	jmp    f0105051 <syscall+0x481>$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	eb 31                	jmp    f0105051 <syscall+0x481>$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105025	obj/kern/kernel.asm	/^f0105025:	eb 2a                	jmp    f0105051 <syscall+0x481>$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	00 $/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105036	obj/kern/kernel.asm	/^f0105036:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	e8 e1 e5 ff ff       	call   f010361f <envid2env>$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	89 c6                	mov    %eax,%esi$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	85 c0                	test   %eax,%eax$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	78 0d                	js     f0105051 <syscall+0x481>$/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105047	obj/kern/kernel.asm	/^f0105047:	89 78 64             	mov    %edi,0x64(%eax)$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	eb 05                	jmp    f0105051 <syscall+0x481>$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	be f9 ff ff ff       	mov    $0xfffffff9,%esi$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	89 f0                	mov    %esi,%eax$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	5b                   	pop    %ebx$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	5e                   	pop    %esi$/;"	l
f0105058	obj/kern/kernel.asm	/^f0105058:	5f                   	pop    %edi$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	5d                   	pop    %ebp$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a:	c3                   	ret    $/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c <stab_binsearch>:$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	55                   	push   %ebp$/;"	l
f010505d	obj/kern/kernel.asm	/^f010505d:	89 e5                	mov    %esp,%ebp$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	57                   	push   %edi$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	56                   	push   %esi$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	53                   	push   %ebx$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	e9 83 00 00 00       	jmp    f0105107 <stab_binsearch+0xab>$/;"	l
f0105084	obj/kern/kernel.asm	/^f0105084:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105087	obj/kern/kernel.asm	/^f0105087:	01 d8                	add    %ebx,%eax$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	89 c7                	mov    %eax,%edi$/;"	l
f010508b	obj/kern/kernel.asm	/^f010508b:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	01 c7                	add    %eax,%edi$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	d1 ff                	sar    %edi$/;"	d
f0105092	obj/kern/kernel.asm	/^f0105092:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	89 f8                	mov    %edi,%eax$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	eb 01                	jmp    f01050a1 <stab_binsearch+0x45>$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	48                   	dec    %eax$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	39 c3                	cmp    %eax,%ebx$/;"	l
f01050a3	obj/kern/kernel.asm	/^f01050a3:	7f 1e                	jg     f01050c3 <stab_binsearch+0x67>$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	39 f1                	cmp    %esi,%ecx$/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	75 f1                	jne    f01050a0 <stab_binsearch+0x44>$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	76 18                	jbe    f01050d9 <stab_binsearch+0x7d>$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	eb 05                	jmp    f01050c8 <stab_binsearch+0x6c>$/;"	l
f01050c3	obj/kern/kernel.asm	/^f01050c3:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	eb 3f                	jmp    f0105107 <stab_binsearch+0xab>$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	89 02                	mov    %eax,(%edx)$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01050d7	obj/kern/kernel.asm	/^f01050d7:	eb 2e                	jmp    f0105107 <stab_binsearch+0xab>$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f01050dc	obj/kern/kernel.asm	/^f01050dc:	73 15                	jae    f01050f3 <stab_binsearch+0x97>$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01050e1	obj/kern/kernel.asm	/^f01050e1:	49                   	dec    %ecx$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	89 08                	mov    %ecx,(%eax)$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	eb 14                	jmp    f0105107 <stab_binsearch+0xab>$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	89 0a                	mov    %ecx,(%edx)$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	89 c3                	mov    %eax,%ebx$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	0f 8e 74 ff ff ff    	jle    f0105084 <stab_binsearch+0x28>$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	75 0d                	jne    f0105123 <stab_binsearch+0xc7>$/;"	l
f0105116	obj/kern/kernel.asm	/^f0105116:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	8b 02                	mov    (%edx),%eax$/;"	l
f010511b	obj/kern/kernel.asm	/^f010511b:	48                   	dec    %eax$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010511f	obj/kern/kernel.asm	/^f010511f:	89 01                	mov    %eax,(%ecx)$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	eb 2a                	jmp    f010514d <stab_binsearch+0xf1>$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	8b 0a                	mov    (%edx),%ecx$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	8b 5d ec             	mov    -0x14(%ebp),%ebx$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0105137	obj/kern/kernel.asm	/^f0105137:	eb 01                	jmp    f010513a <stab_binsearch+0xde>$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	48                   	dec    %eax$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	39 c8                	cmp    %ecx,%eax$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	7e 0a                	jle    f0105148 <stab_binsearch+0xec>$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	75 f1                	jne    f0105139 <stab_binsearch+0xdd>$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	89 02                	mov    %eax,(%edx)$/;"	l
f010514d	obj/kern/kernel.asm	/^f010514d:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	5b                   	pop    %ebx$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	5e                   	pop    %esi$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	5f                   	pop    %edi$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	5d                   	pop    %ebp$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	c3                   	ret    $/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155 <debuginfo_eip>:$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	55                   	push   %ebp$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	89 e5                	mov    %esp,%ebp$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	57                   	push   %edi$/;"	l
f0105159	obj/kern/kernel.asm	/^f0105159:	56                   	push   %esi$/;"	l
f010515a	obj/kern/kernel.asm	/^f010515a:	53                   	push   %ebx$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	c7 03 4c 80 10 f0    	movl   $0xf010804c,(%ebx)$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	c7 43 08 4c 80 10 f0 	movl   $0xf010804c,0x8(%ebx)$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010518f	obj/kern/kernel.asm	/^f010518f:	0f 87 0f 01 00 00    	ja     f01052a4 <debuginfo_eip+0x14f>$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	e8 de 10 00 00       	call   f0106278 <cpunum>$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	00 $/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9:	00 $/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	00 $/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	29 c2                	sub    %eax,%edx$/;"	l
f01051bb	obj/kern/kernel.asm	/^f01051bb:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	e8 d9 e2 ff ff       	call   f01034a6 <user_mem_check>$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	85 c0                	test   %eax,%eax$/;"	l
f01051cf	obj/kern/kernel.asm	/^f01051cf:	0f 88 85 02 00 00    	js     f010545a <debuginfo_eip+0x305>$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	8b 3d 00 00 20 00    	mov    0x200000,%edi$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	e8 7e 10 00 00       	call   f0106278 <cpunum>$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	00 $/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	89 fa                	mov    %edi,%edx$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f0105207	obj/kern/kernel.asm	/^f0105207:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	8d 0c 92             	lea    (%edx,%edx,4),%ecx$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	8d 0c 8a             	lea    (%edx,%ecx,4),%ecx$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	8d 0c 8a             	lea    (%edx,%ecx,4),%ecx$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	03 4d b8             	add    -0x48(%ebp),%ecx$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	89 4d b4             	mov    %ecx,-0x4c(%ebp)$/;"	l
f0105225	obj/kern/kernel.asm	/^f0105225:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	8b 4d b4             	mov    -0x4c(%ebp),%ecx$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	03 4d b8             	add    -0x48(%ebp),%ecx$/;"	l
f0105231	obj/kern/kernel.asm	/^f0105231:	8d 14 4a             	lea    (%edx,%ecx,2),%edx$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f010523b	obj/kern/kernel.asm	/^f010523b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	29 c2                	sub    %eax,%edx$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	e8 4c e2 ff ff       	call   f01034a6 <user_mem_check>$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	85 c0                	test   %eax,%eax$/;"	l
f010525c	obj/kern/kernel.asm	/^f010525c:	0f 88 ff 01 00 00    	js     f0105461 <debuginfo_eip+0x30c>$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	e8 11 10 00 00       	call   f0106278 <cpunum>$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	00 $/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	2b 55 bc             	sub    -0x44(%ebp),%edx$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	29 c2                	sub    %eax,%edx$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	8b 04 85 28 e0 32 f0 	mov    -0xfcd1fd8(,%eax,4),%eax$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	e8 0b e2 ff ff       	call   f01034a6 <user_mem_check>$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	85 c0                	test   %eax,%eax$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	79 1f                	jns    f01052be <debuginfo_eip+0x169>$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	e9 c4 01 00 00       	jmp    f0105468 <debuginfo_eip+0x313>$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	c7 45 c0 07 e0 11 f0 	movl   $0xf011e007,-0x40(%ebp)$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	c7 45 bc f5 34 11 f0 	movl   $0xf01134f5,-0x44(%ebp)$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	bf f4 34 11 f0       	mov    $0xf01134f4,%edi$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	c7 45 c4 38 85 10 f0 	movl   $0xf0108538,-0x3c(%ebp)$/;"	l
f01052be	obj/kern/kernel.asm	/^f01052be:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	39 45 bc             	cmp    %eax,-0x44(%ebp)$/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	0f 83 a5 01 00 00    	jae    f010546f <debuginfo_eip+0x31a>$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	0f 85 a2 01 00 00    	jne    f0105476 <debuginfo_eip+0x321>$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	89 f8                	mov    %edi,%eax$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	2b 45 c4             	sub    -0x3c(%ebp),%eax$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f01052ec	obj/kern/kernel.asm	/^f01052ec:	89 d1                	mov    %edx,%ecx$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01052f1	obj/kern/kernel.asm	/^f01052f1:	01 ca                	add    %ecx,%edx$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	89 d1                	mov    %edx,%ecx$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	01 ca                	add    %ecx,%edx$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	8d 44 50 ff          	lea    -0x1(%eax,%edx,2),%eax$/;"	l
f01052fe	obj/kern/kernel.asm	/^f01052fe:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105305	obj/kern/kernel.asm	/^f0105305:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f010530f	obj/kern/kernel.asm	/^f010530f:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	e8 42 fd ff ff       	call   f010505c <stab_binsearch>$/;"	l
f010531a	obj/kern/kernel.asm	/^f010531a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010531d	obj/kern/kernel.asm	/^f010531d:	85 c0                	test   %eax,%eax$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	0f 84 58 01 00 00    	je     f010547d <debuginfo_eip+0x328>$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105328	obj/kern/kernel.asm	/^f0105328:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	e8 15 fd ff ff       	call   f010505c <stab_binsearch>$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010534d	obj/kern/kernel.asm	/^f010534d:	39 d0                	cmp    %edx,%eax$/;"	l
f010534f	obj/kern/kernel.asm	/^f010534f:	7f 32                	jg     f0105383 <debuginfo_eip+0x22e>$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105357	obj/kern/kernel.asm	/^f0105357:	8d 0c 8f             	lea    (%edi,%ecx,4),%ecx$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	8b 39                	mov    (%ecx),%edi$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	2b 7d bc             	sub    -0x44(%ebp),%edi$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	39 7d b4             	cmp    %edi,-0x4c(%ebp)$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	73 09                	jae    f0105373 <debuginfo_eip+0x21e>$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	03 7d bc             	add    -0x44(%ebp),%edi$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	89 7b 08             	mov    %edi,0x8(%ebx)$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	8b 49 08             	mov    0x8(%ecx),%ecx$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	29 ce                	sub    %ecx,%esi$/;"	l
f010537b	obj/kern/kernel.asm	/^f010537b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	eb 0f                	jmp    f0105392 <debuginfo_eip+0x23d>$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105399	obj/kern/kernel.asm	/^f0105399:	00 $/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	e8 8d 08 00 00       	call   f0105c32 <strfind>$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f01053ab	obj/kern/kernel.asm	/^f01053ab:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01053af	obj/kern/kernel.asm	/^f01053af:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	e8 98 fc ff ff       	call   f010505c <stab_binsearch>$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	0f 8f b4 00 00 00    	jg     f0105484 <debuginfo_eip+0x32f>$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01053d3	obj/kern/kernel.asm	/^f01053d3:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	0f b7 44 87 06       	movzwl 0x6(%edi,%eax,4),%eax$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01053e7	obj/kern/kernel.asm	/^f01053e7:	8d 54 97 08          	lea    0x8(%edi,%edx,4),%edx$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	89 5d b8             	mov    %ebx,-0x48(%ebp)$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	eb 04                	jmp    f01053f4 <debuginfo_eip+0x29f>$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	48                   	dec    %eax$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01053f4	obj/kern/kernel.asm	/^f01053f4:	89 c7                	mov    %eax,%edi$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	39 c6                	cmp    %eax,%esi$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	7f 28                	jg     f0105422 <debuginfo_eip+0x2cd>$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	8a 4a fc             	mov    -0x4(%edx),%cl$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	0f 84 99 00 00 00    	je     f010549f <debuginfo_eip+0x34a>$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	75 e5                	jne    f01053f0 <debuginfo_eip+0x29b>$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	83 3a 00             	cmpl   $0x0,(%edx)$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	74 e0                	je     f01053f0 <debuginfo_eip+0x29b>$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	8b 5d b8             	mov    -0x48(%ebp),%ebx$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	e9 8a 00 00 00       	jmp    f01054a5 <debuginfo_eip+0x350>$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	03 45 bc             	add    -0x44(%ebp),%eax$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	eb 03                	jmp    f0105425 <debuginfo_eip+0x2d0>$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	8b 5d b8             	mov    -0x48(%ebp),%ebx$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	39 f2                	cmp    %esi,%edx$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	7d 5c                	jge    f010548b <debuginfo_eip+0x336>$/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	42                   	inc    %edx$/;"	l
f0105430	obj/kern/kernel.asm	/^f0105430:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	89 d0                	mov    %edx,%eax$/;"	l
f0105435	obj/kern/kernel.asm	/^f0105435:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	eb 03                	jmp    f0105444 <debuginfo_eip+0x2ef>$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	ff 43 14             	incl   0x14(%ebx)$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	39 f0                	cmp    %esi,%eax$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	7d 4a                	jge    f0105492 <debuginfo_eip+0x33d>$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	8a 0a                	mov    (%edx),%cl$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	40                   	inc    %eax$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	83 c2 0c             	add    $0xc,%edx$/;"	l
f010544e	obj/kern/kernel.asm	/^f010544e:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	74 ee                	je     f0105441 <debuginfo_eip+0x2ec>$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	eb 3d                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	eb 36                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	eb 2f                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	eb 28                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	eb 21                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	eb 1a                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f010547d	obj/kern/kernel.asm	/^f010547d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	eb 13                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	eb 0c                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	eb 05                	jmp    f0105497 <debuginfo_eip+0x342>$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105497	obj/kern/kernel.asm	/^f0105497:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	5b                   	pop    %ebx$/;"	l
f010549b	obj/kern/kernel.asm	/^f010549b:	5e                   	pop    %esi$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	5f                   	pop    %edi$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	5d                   	pop    %ebp$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	c3                   	ret    $/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	8b 5d b8             	mov    -0x48(%ebp),%ebx$/;"	l
f01054a2	obj/kern/kernel.asm	/^f01054a2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	8b 04 87             	mov    (%edi,%eax,4),%eax$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	2b 55 bc             	sub    -0x44(%ebp),%edx$/;"	l
f01054b4	obj/kern/kernel.asm	/^f01054b4:	39 d0                	cmp    %edx,%eax$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6:	0f 82 5f ff ff ff    	jb     f010541b <debuginfo_eip+0x2c6>$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	e9 64 ff ff ff       	jmp    f0105425 <debuginfo_eip+0x2d0>$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	00 00                	add    %al,(%eax)$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4 <printnum>:$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	55                   	push   %ebp$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	57                   	push   %edi$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	56                   	push   %esi$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	53                   	push   %ebx$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	89 d7                	mov    %edx,%edi$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01054de	obj/kern/kernel.asm	/^f01054de:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	85 c0                	test   %eax,%eax$/;"	l
f01054e6	obj/kern/kernel.asm	/^f01054e6:	75 08                	jne    f01054f0 <printnum+0x2c>$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	77 57                	ja     f0105547 <printnum+0x83>$/;"	l
f01054f0	obj/kern/kernel.asm	/^f01054f0:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	4b                   	dec    %ebx$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01054f9	obj/kern/kernel.asm	/^f01054f9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01054fc	obj/kern/kernel.asm	/^f01054fc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010550f	obj/kern/kernel.asm	/^f010550f:	00 $/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105513	obj/kern/kernel.asm	/^f0105513:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	e8 c6 11 00 00       	call   f01066e8 <__udivdi3>$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	89 fa                	mov    %edi,%edx$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105536	obj/kern/kernel.asm	/^f0105536:	e8 89 ff ff ff       	call   f01054c4 <printnum>$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	eb 0f                	jmp    f010554c <printnum+0x88>$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	4b                   	dec    %ebx$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	85 db                	test   %ebx,%ebx$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	7f f1                	jg     f010553d <printnum+0x79>$/;"	l
f010554c	obj/kern/kernel.asm	/^f010554c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105550	obj/kern/kernel.asm	/^f0105550:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	00 $/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105569	obj/kern/kernel.asm	/^f0105569:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105570	obj/kern/kernel.asm	/^f0105570:	e8 93 12 00 00       	call   f0106808 <__umoddi3>$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105579	obj/kern/kernel.asm	/^f0105579:	0f be 80 56 80 10 f0 	movsbl -0xfef7faa(%eax),%eax$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	5b                   	pop    %ebx$/;"	l
f010558a	obj/kern/kernel.asm	/^f010558a:	5e                   	pop    %esi$/;"	l
f010558b	obj/kern/kernel.asm	/^f010558b:	5f                   	pop    %edi$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	5d                   	pop    %ebp$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	c3                   	ret    $/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e <getuint>:$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	55                   	push   %ebp$/;"	l
f010558f	obj/kern/kernel.asm	/^f010558f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	7e 0e                	jle    f01055a4 <getuint+0x16>$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	8b 10                	mov    (%eax),%edx$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f010559b	obj/kern/kernel.asm	/^f010559b:	89 08                	mov    %ecx,(%eax)$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	8b 02                	mov    (%edx),%eax$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	eb 22                	jmp    f01055c6 <getuint+0x38>$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	85 d2                	test   %edx,%edx$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	74 10                	je     f01055b8 <getuint+0x2a>$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	8b 10                	mov    (%eax),%edx$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	89 08                	mov    %ecx,(%eax)$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	8b 02                	mov    (%edx),%eax$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	eb 0e                	jmp    f01055c6 <getuint+0x38>$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	8b 10                	mov    (%eax),%edx$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	89 08                	mov    %ecx,(%eax)$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	8b 02                	mov    (%edx),%eax$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	5d                   	pop    %ebp$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	c3                   	ret    $/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8 <sprintputch>:$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	55                   	push   %ebp$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	ff 40 08             	incl   0x8(%eax)$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	8b 10                	mov    (%eax),%edx$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	73 08                	jae    f01055e0 <sprintputch+0x18>$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	88 0a                	mov    %cl,(%edx)$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	42                   	inc    %edx$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	89 10                	mov    %edx,(%eax)$/;"	l
f01055e0	obj/kern/kernel.asm	/^f01055e0:	5d                   	pop    %ebp$/;"	l
f01055e1	obj/kern/kernel.asm	/^f01055e1:	c3                   	ret    $/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2 <printfmt>:$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	55                   	push   %ebp$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	89 e5                	mov    %esp,%ebp$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105603	obj/kern/kernel.asm	/^f0105603:	e8 02 00 00 00       	call   f010560a <vprintfmt>$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	c9                   	leave  $/;"	l
f0105609	obj/kern/kernel.asm	/^f0105609:	c3                   	ret    $/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a <vprintfmt>:$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	55                   	push   %ebp$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	89 e5                	mov    %esp,%ebp$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	57                   	push   %edi$/;"	l
f010560e	obj/kern/kernel.asm	/^f010560e:	56                   	push   %esi$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	53                   	push   %ebx$/;"	l
f0105610	obj/kern/kernel.asm	/^f0105610:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	eb 12                	jmp    f010562d <vprintfmt+0x23>$/;"	l
f010561b	obj/kern/kernel.asm	/^f010561b:	85 c0                	test   %eax,%eax$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	0f 84 6b 03 00 00    	je     f010598e <vprintfmt+0x384>$/;"	l
f0105623	obj/kern/kernel.asm	/^f0105623:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105627	obj/kern/kernel.asm	/^f0105627:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	46                   	inc    %esi$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	75 e5                	jne    f010561b <vprintfmt+0x11>$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f010563a	obj/kern/kernel.asm	/^f010563a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	eb 26                	jmp    f010567a <vprintfmt+0x70>$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	eb 1d                	jmp    f010567a <vprintfmt+0x70>$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	eb 14                	jmp    f010567a <vprintfmt+0x70>$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	eb 08                	jmp    f010567a <vprintfmt+0x70>$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d:	8d 56 01             	lea    0x1(%esi),%edx$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	8a 16                	mov    (%esi),%dl$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	83 ea 23             	sub    $0x23,%edx$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	0f 87 e1 02 00 00    	ja     f0105972 <vprintfmt+0x368>$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	ff 24 95 20 81 10 f0 	jmp    *-0xfef7ee0(,%edx,4)$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	0f be 06             	movsbl (%esi),%eax$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f01056b3	obj/kern/kernel.asm	/^f01056b3:	77 2a                	ja     f01056df <vprintfmt+0xd5>$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	46                   	inc    %esi$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	eb eb                	jmp    f01056a3 <vprintfmt+0x99>$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	8b 38                	mov    (%eax),%edi$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	eb 17                	jmp    f01056df <vprintfmt+0xd5>$/;"	l
f01056c8	obj/kern/kernel.asm	/^f01056c8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	78 98                	js     f0105666 <vprintfmt+0x5c>$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	eb a7                	jmp    f010567a <vprintfmt+0x70>$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	eb 9b                	jmp    f010567a <vprintfmt+0x70>$/;"	l
f01056df	obj/kern/kernel.asm	/^f01056df:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	79 95                	jns    f010567a <vprintfmt+0x70>$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	eb 8b                	jmp    f0105672 <vprintfmt+0x68>$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	41                   	inc    %ecx$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01056eb	obj/kern/kernel.asm	/^f01056eb:	eb 8d                	jmp    f010567a <vprintfmt+0x70>$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	8b 00                	mov    (%eax),%eax$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	e9 23 ff ff ff       	jmp    f010562d <vprintfmt+0x23>$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	8b 00                	mov    (%eax),%eax$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	85 c0                	test   %eax,%eax$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	79 02                	jns    f010571b <vprintfmt+0x111>$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	f7 d8                	neg    %eax$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	89 c2                	mov    %eax,%edx$/;"	l
f010571d	obj/kern/kernel.asm	/^f010571d:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	7f 0b                	jg     f010572d <vprintfmt+0x123>$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	8b 04 85 80 82 10 f0 	mov    -0xfef7d80(,%eax,4),%eax$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	85 c0                	test   %eax,%eax$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	75 23                	jne    f0105750 <vprintfmt+0x146>$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	c7 44 24 08 6e 80 10 	movl   $0xf010806e,0x8(%esp)$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	f0 $/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	e8 9a fe ff ff       	call   f01055e2 <printfmt>$/;"	l
f0105748	obj/kern/kernel.asm	/^f0105748:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	e9 dd fe ff ff       	jmp    f010562d <vprintfmt+0x23>$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	c7 44 24 08 19 78 10 	movl   $0xf0107819,0x8(%esp)$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	f0 $/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105763	obj/kern/kernel.asm	/^f0105763:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105766	obj/kern/kernel.asm	/^f0105766:	e8 77 fe ff ff       	call   f01055e2 <printfmt>$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	e9 ba fe ff ff       	jmp    f010562d <vprintfmt+0x23>$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	89 f9                	mov    %edi,%ecx$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105784	obj/kern/kernel.asm	/^f0105784:	8b 30                	mov    (%eax),%esi$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	85 f6                	test   %esi,%esi$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	75 05                	jne    f010578f <vprintfmt+0x185>$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	be 67 80 10 f0       	mov    $0xf0108067,%esi$/;"	l
f010578f	obj/kern/kernel.asm	/^f010578f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	0f 8e 84 00 00 00    	jle    f010581d <vprintfmt+0x213>$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	74 7e                	je     f010581d <vprintfmt+0x213>$/;"	l
f010579f	obj/kern/kernel.asm	/^f010579f:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	e8 53 03 00 00       	call   f0105afe <strnlen>$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	29 c2                	sub    %eax,%edx$/;"	l
f01057b0	obj/kern/kernel.asm	/^f01057b0:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01057b3	obj/kern/kernel.asm	/^f01057b3:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	89 de                	mov    %ebx,%esi$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	89 d3                	mov    %edx,%ebx$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	89 c7                	mov    %eax,%edi$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	eb 0b                	jmp    f01057d0 <vprintfmt+0x1c6>$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01057c9	obj/kern/kernel.asm	/^f01057c9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	4b                   	dec    %ebx$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	85 db                	test   %ebx,%ebx$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	7f f1                	jg     f01057c5 <vprintfmt+0x1bb>$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
f01057d7	obj/kern/kernel.asm	/^f01057d7:	89 f3                	mov    %esi,%ebx$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	85 c0                	test   %eax,%eax$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	79 05                	jns    f01057e8 <vprintfmt+0x1de>$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	29 c2                	sub    %eax,%edx$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	eb 2b                	jmp    f010581d <vprintfmt+0x213>$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01057f6	obj/kern/kernel.asm	/^f01057f6:	74 18                	je     f0105810 <vprintfmt+0x206>$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	76 10                	jbe    f0105810 <vprintfmt+0x206>$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010580e	obj/kern/kernel.asm	/^f010580e:	eb 0a                	jmp    f010581a <vprintfmt+0x210>$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	46                   	inc    %esi$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	85 c0                	test   %eax,%eax$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	74 21                	je     f0105846 <vprintfmt+0x23c>$/;"	l
f0105825	obj/kern/kernel.asm	/^f0105825:	85 ff                	test   %edi,%edi$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	78 c9                	js     f01057f2 <vprintfmt+0x1e8>$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	4f                   	dec    %edi$/;"	l
f010582a	obj/kern/kernel.asm	/^f010582a:	79 c6                	jns    f01057f2 <vprintfmt+0x1e8>$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	89 de                	mov    %ebx,%esi$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	eb 18                	jmp    f010584e <vprintfmt+0x244>$/;"	l
f0105836	obj/kern/kernel.asm	/^f0105836:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	ff d7                	call   *%edi$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	4b                   	dec    %ebx$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	eb 08                	jmp    f010584e <vprintfmt+0x244>$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105849	obj/kern/kernel.asm	/^f0105849:	89 de                	mov    %ebx,%esi$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	85 db                	test   %ebx,%ebx$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	7f e4                	jg     f0105836 <vprintfmt+0x22c>$/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	89 f3                	mov    %esi,%ebx$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	e9 ce fd ff ff       	jmp    f010562d <vprintfmt+0x23>$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	7e 10                	jle    f0105874 <vprintfmt+0x26a>$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010586d	obj/kern/kernel.asm	/^f010586d:	8b 30                	mov    (%eax),%esi$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	eb 26                	jmp    f010589a <vprintfmt+0x290>$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	85 c9                	test   %ecx,%ecx$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	74 12                	je     f010588a <vprintfmt+0x280>$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881:	8b 30                	mov    (%eax),%esi$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	89 f7                	mov    %esi,%edi$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	eb 10                	jmp    f010589a <vprintfmt+0x290>$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010588d	obj/kern/kernel.asm	/^f010588d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105893	obj/kern/kernel.asm	/^f0105893:	8b 30                	mov    (%eax),%esi$/;"	l
f0105895	obj/kern/kernel.asm	/^f0105895:	89 f7                	mov    %esi,%edi$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	85 ff                	test   %edi,%edi$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	78 0a                	js     f01058a8 <vprintfmt+0x29e>$/;"	l
f010589e	obj/kern/kernel.asm	/^f010589e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	e9 8c 00 00 00       	jmp    f0105934 <vprintfmt+0x32a>$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	f7 de                	neg    %esi$/;"	l
f01058b8	obj/kern/kernel.asm	/^f01058b8:	83 d7 00             	adc    $0x0,%edi$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	f7 df                	neg    %edi$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	eb 70                	jmp    f0105934 <vprintfmt+0x32a>$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	89 ca                	mov    %ecx,%edx$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	e8 c0 fc ff ff       	call   f010558e <getuint>$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	89 c6                	mov    %eax,%esi$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	89 d7                	mov    %edx,%edi$/;"	l
f01058d2	obj/kern/kernel.asm	/^f01058d2:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	eb 5b                	jmp    f0105934 <vprintfmt+0x32a>$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	89 ca                	mov    %ecx,%edx$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	e8 ab fc ff ff       	call   f010558e <getuint>$/;"	l
f01058e3	obj/kern/kernel.asm	/^f01058e3:	89 c6                	mov    %eax,%esi$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	89 d7                	mov    %edx,%edi$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	eb 46                	jmp    f0105934 <vprintfmt+0x32a>$/;"	l
f01058ee	obj/kern/kernel.asm	/^f01058ee:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010590d	obj/kern/kernel.asm	/^f010590d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	8b 30                	mov    (%eax),%esi$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	eb 13                	jmp    f0105934 <vprintfmt+0x32a>$/;"	l
f0105921	obj/kern/kernel.asm	/^f0105921:	89 ca                	mov    %ecx,%edx$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	e8 63 fc ff ff       	call   f010558e <getuint>$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	89 c6                	mov    %eax,%esi$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	89 d7                	mov    %edx,%edi$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
f0105938	obj/kern/kernel.asm	/^f0105938:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	89 da                	mov    %ebx,%edx$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	e8 6c fb ff ff       	call   f01054c4 <printnum>$/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	e9 cd fc ff ff       	jmp    f010562d <vprintfmt+0x23>$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	e9 bb fc ff ff       	jmp    f010562d <vprintfmt+0x23>$/;"	l
f0105972	obj/kern/kernel.asm	/^f0105972:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f010597d	obj/kern/kernel.asm	/^f010597d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	eb 01                	jmp    f0105983 <vprintfmt+0x379>$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	4e                   	dec    %esi$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	75 f9                	jne    f0105982 <vprintfmt+0x378>$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	e9 9f fc ff ff       	jmp    f010562d <vprintfmt+0x23>$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	5b                   	pop    %ebx$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	5e                   	pop    %esi$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	5f                   	pop    %edi$/;"	l
f0105994	obj/kern/kernel.asm	/^f0105994:	5d                   	pop    %ebp$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	c3                   	ret    $/;"	l
f0105996	obj/kern/kernel.asm	/^f0105996 <vsnprintf>:$/;"	l
f0105996	obj/kern/kernel.asm	/^f0105996:	55                   	push   %ebp$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	89 e5                	mov    %esp,%ebp$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	85 c0                	test   %eax,%eax$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	74 30                	je     f01059e7 <vsnprintf+0x51>$/;"	l
f01059b7	obj/kern/kernel.asm	/^f01059b7:	85 d2                	test   %edx,%edx$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	7e 33                	jle    f01059ee <vsnprintf+0x58>$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01059c2	obj/kern/kernel.asm	/^f01059c2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	c7 04 24 c8 55 10 f0 	movl   $0xf01055c8,(%esp)$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	e8 2e fc ff ff       	call   f010560a <vprintfmt>$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	eb 0c                	jmp    f01059f3 <vsnprintf+0x5d>$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	eb 05                	jmp    f01059f3 <vsnprintf+0x5d>$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	c9                   	leave  $/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	c3                   	ret    $/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5 <snprintf>:$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	55                   	push   %ebp$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105a02	obj/kern/kernel.asm	/^f0105a02:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	e8 7b ff ff ff       	call   f0105996 <vsnprintf>$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	c9                   	leave  $/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	c3                   	ret    $/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	00 00                	add    %al,(%eax)$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20 <readline>:$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	55                   	push   %ebp$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	57                   	push   %edi$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	56                   	push   %esi$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	53                   	push   %ebx$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105a29	obj/kern/kernel.asm	/^f0105a29:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	85 c0                	test   %eax,%eax$/;"	l
f0105a2e	obj/kern/kernel.asm	/^f0105a2e:	74 10                	je     f0105a40 <readline+0x20>$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	c7 04 24 19 78 10 f0 	movl   $0xf0107819,(%esp)$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	e8 ce e5 ff ff       	call   f010400e <cprintf>$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	e8 3c ad ff ff       	call   f0100788 <iscons>$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	89 c7                	mov    %eax,%edi$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	e8 1f ad ff ff       	call   f0100777 <getchar>$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a5a	obj/kern/kernel.asm	/^f0105a5a:	85 c0                	test   %eax,%eax$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	79 17                	jns    f0105a75 <readline+0x55>$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	c7 04 24 a8 82 10 f0 	movl   $0xf01082a8,(%esp)$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	e8 a0 e5 ff ff       	call   f010400e <cprintf>$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	eb 69                	jmp    f0105ade <readline+0xbe>$/;"	l
f0105a75	obj/kern/kernel.asm	/^f0105a75:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	74 05                	je     f0105a7f <readline+0x5f>$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	75 17                	jne    f0105a96 <readline+0x76>$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	85 f6                	test   %esi,%esi$/;"	l
f0105a81	obj/kern/kernel.asm	/^f0105a81:	7e 13                	jle    f0105a96 <readline+0x76>$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	85 ff                	test   %edi,%edi$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	74 0c                	je     f0105a93 <readline+0x73>$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	e8 d4 ac ff ff       	call   f0100767 <cputchar>$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	4e                   	dec    %esi$/;"	l
f0105a94	obj/kern/kernel.asm	/^f0105a94:	eb bd                	jmp    f0105a53 <readline+0x33>$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	7e 1d                	jle    f0105ab8 <readline+0x98>$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	7f 15                	jg     f0105ab8 <readline+0x98>$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	85 ff                	test   %edi,%edi$/;"	l
f0105aa5	obj/kern/kernel.asm	/^f0105aa5:	74 08                	je     f0105aaf <readline+0x8f>$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	e8 b8 ac ff ff       	call   f0100767 <cputchar>$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	88 9e 80 da 32 f0    	mov    %bl,-0xfcd2580(%esi)$/;"	l
f0105ab5	obj/kern/kernel.asm	/^f0105ab5:	46                   	inc    %esi$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	eb 9b                	jmp    f0105a53 <readline+0x33>$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	74 05                	je     f0105ac2 <readline+0xa2>$/;"	l
f0105abd	obj/kern/kernel.asm	/^f0105abd:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105ac0	obj/kern/kernel.asm	/^f0105ac0:	75 91                	jne    f0105a53 <readline+0x33>$/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	85 ff                	test   %edi,%edi$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	74 0c                	je     f0105ad2 <readline+0xb2>$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	e8 95 ac ff ff       	call   f0100767 <cputchar>$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	c6 86 80 da 32 f0 00 	movb   $0x0,-0xfcd2580(%esi)$/;"	l
f0105ad9	obj/kern/kernel.asm	/^f0105ad9:	b8 80 da 32 f0       	mov    $0xf032da80,%eax$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	5b                   	pop    %ebx$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	5e                   	pop    %esi$/;"	l
f0105ae3	obj/kern/kernel.asm	/^f0105ae3:	5f                   	pop    %edi$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	5d                   	pop    %ebp$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	c3                   	ret    $/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8 <strlen>:$/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	55                   	push   %ebp$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105aee	obj/kern/kernel.asm	/^f0105aee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	eb 01                	jmp    f0105af6 <strlen+0xe>$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	40                   	inc    %eax$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	75 f9                	jne    f0105af5 <strlen+0xd>$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	5d                   	pop    %ebp$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	c3                   	ret    $/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe <strnlen>:$/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe:	55                   	push   %ebp$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	eb 01                	jmp    f0105b0f <strnlen+0x11>$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	40                   	inc    %eax$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	39 d0                	cmp    %edx,%eax$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	74 06                	je     f0105b19 <strnlen+0x1b>$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0105b17	obj/kern/kernel.asm	/^f0105b17:	75 f5                	jne    f0105b0e <strnlen+0x10>$/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	5d                   	pop    %ebp$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	c3                   	ret    $/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b <strcpy>:$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	55                   	push   %ebp$/;"	l
f0105b1c	obj/kern/kernel.asm	/^f0105b1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	53                   	push   %ebx$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b22	obj/kern/kernel.asm	/^f0105b22:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	42                   	inc    %edx$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	84 c9                	test   %cl,%cl$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	75 f5                	jne    f0105b2a <strcpy+0xf>$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	5b                   	pop    %ebx$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	5d                   	pop    %ebp$/;"	l
f0105b37	obj/kern/kernel.asm	/^f0105b37:	c3                   	ret    $/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38 <strcat>:$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	55                   	push   %ebp$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	53                   	push   %ebx$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105b42	obj/kern/kernel.asm	/^f0105b42:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105b45	obj/kern/kernel.asm	/^f0105b45:	e8 9e ff ff ff       	call   f0105ae8 <strlen>$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	01 d8                	add    %ebx,%eax$/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	e8 c0 ff ff ff       	call   f0105b1b <strcpy>$/;"	l
f0105b5b	obj/kern/kernel.asm	/^f0105b5b:	89 d8                	mov    %ebx,%eax$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	83 c4 08             	add    $0x8,%esp$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	5b                   	pop    %ebx$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	5d                   	pop    %ebp$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	c3                   	ret    $/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63 <strncpy>:$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	55                   	push   %ebp$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	56                   	push   %esi$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	53                   	push   %ebx$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b6b	obj/kern/kernel.asm	/^f0105b6b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105b6e	obj/kern/kernel.asm	/^f0105b6e:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105b71	obj/kern/kernel.asm	/^f0105b71:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105b76	obj/kern/kernel.asm	/^f0105b76:	eb 0c                	jmp    f0105b84 <strncpy+0x21>$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	8a 1a                	mov    (%edx),%bl$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0105b7d	obj/kern/kernel.asm	/^f0105b7d:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	41                   	inc    %ecx$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105b86	obj/kern/kernel.asm	/^f0105b86:	75 f0                	jne    f0105b78 <strncpy+0x15>$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	5b                   	pop    %ebx$/;"	l
f0105b89	obj/kern/kernel.asm	/^f0105b89:	5e                   	pop    %esi$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	5d                   	pop    %ebp$/;"	l
f0105b8b	obj/kern/kernel.asm	/^f0105b8b:	c3                   	ret    $/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c <strlcpy>:$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	55                   	push   %ebp$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b8f	obj/kern/kernel.asm	/^f0105b8f:	56                   	push   %esi$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	53                   	push   %ebx$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105b97	obj/kern/kernel.asm	/^f0105b97:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	85 d2                	test   %edx,%edx$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	75 0a                	jne    f0105ba8 <strlcpy+0x1c>$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	89 f0                	mov    %esi,%eax$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	eb 1a                	jmp    f0105bbc <strlcpy+0x30>$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	88 18                	mov    %bl,(%eax)$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	40                   	inc    %eax$/;"	l
f0105ba5	obj/kern/kernel.asm	/^f0105ba5:	41                   	inc    %ecx$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	eb 02                	jmp    f0105baa <strlcpy+0x1e>$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	89 f0                	mov    %esi,%eax$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	4a                   	dec    %edx$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	74 0a                	je     f0105bb7 <strlcpy+0x2b>$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	8a 19                	mov    (%ecx),%bl$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	84 db                	test   %bl,%bl$/;"	l
f0105bb1	obj/kern/kernel.asm	/^f0105bb1:	75 ef                	jne    f0105ba2 <strlcpy+0x16>$/;"	l
f0105bb3	obj/kern/kernel.asm	/^f0105bb3:	89 c2                	mov    %eax,%edx$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	eb 02                	jmp    f0105bb9 <strlcpy+0x2d>$/;"	l
f0105bb7	obj/kern/kernel.asm	/^f0105bb7:	89 c2                	mov    %eax,%edx$/;"	l
f0105bb9	obj/kern/kernel.asm	/^f0105bb9:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	29 f0                	sub    %esi,%eax$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	5b                   	pop    %ebx$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	5e                   	pop    %esi$/;"	l
f0105bc0	obj/kern/kernel.asm	/^f0105bc0:	5d                   	pop    %ebp$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	c3                   	ret    $/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2 <strcmp>:$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	55                   	push   %ebp$/;"	l
f0105bc3	obj/kern/kernel.asm	/^f0105bc3:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	eb 02                	jmp    f0105bcf <strcmp+0xd>$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	41                   	inc    %ecx$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	42                   	inc    %edx$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	8a 01                	mov    (%ecx),%al$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	84 c0                	test   %al,%al$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	74 04                	je     f0105bd9 <strcmp+0x17>$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	3a 02                	cmp    (%edx),%al$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	74 f4                	je     f0105bcd <strcmp+0xb>$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105bdf	obj/kern/kernel.asm	/^f0105bdf:	29 d0                	sub    %edx,%eax$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	5d                   	pop    %ebp$/;"	l
f0105be2	obj/kern/kernel.asm	/^f0105be2:	c3                   	ret    $/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3 <strncmp>:$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	55                   	push   %ebp$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	53                   	push   %ebx$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	eb 03                	jmp    f0105bf5 <strncmp+0x12>$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	4a                   	dec    %edx$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	40                   	inc    %eax$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	41                   	inc    %ecx$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	85 d2                	test   %edx,%edx$/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7:	74 14                	je     f0105c0d <strncmp+0x2a>$/;"	l
f0105bf9	obj/kern/kernel.asm	/^f0105bf9:	8a 18                	mov    (%eax),%bl$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	84 db                	test   %bl,%bl$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	74 04                	je     f0105c03 <strncmp+0x20>$/;"	l
f0105bff	obj/kern/kernel.asm	/^f0105bff:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0105c01	obj/kern/kernel.asm	/^f0105c01:	74 ef                	je     f0105bf2 <strncmp+0xf>$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f0105c09	obj/kern/kernel.asm	/^f0105c09:	29 d0                	sub    %edx,%eax$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	eb 05                	jmp    f0105c12 <strncmp+0x2f>$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	5b                   	pop    %ebx$/;"	l
f0105c13	obj/kern/kernel.asm	/^f0105c13:	5d                   	pop    %ebp$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	c3                   	ret    $/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15 <strchr>:$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	55                   	push   %ebp$/;"	l
f0105c16	obj/kern/kernel.asm	/^f0105c16:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c18	obj/kern/kernel.asm	/^f0105c18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c1b	obj/kern/kernel.asm	/^f0105c1b:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	eb 05                	jmp    f0105c25 <strchr+0x10>$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	38 ca                	cmp    %cl,%dl$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	74 0c                	je     f0105c30 <strchr+0x1b>$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	40                   	inc    %eax$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	8a 10                	mov    (%eax),%dl$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	84 d2                	test   %dl,%dl$/;"	l
f0105c29	obj/kern/kernel.asm	/^f0105c29:	75 f5                	jne    f0105c20 <strchr+0xb>$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	5d                   	pop    %ebp$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	c3                   	ret    $/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32 <strfind>:$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	55                   	push   %ebp$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	eb 05                	jmp    f0105c42 <strfind+0x10>$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	38 ca                	cmp    %cl,%dl$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	74 07                	je     f0105c48 <strfind+0x16>$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	40                   	inc    %eax$/;"	l
f0105c42	obj/kern/kernel.asm	/^f0105c42:	8a 10                	mov    (%eax),%dl$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	84 d2                	test   %dl,%dl$/;"	l
f0105c46	obj/kern/kernel.asm	/^f0105c46:	75 f5                	jne    f0105c3d <strfind+0xb>$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	5d                   	pop    %ebp$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	c3                   	ret    $/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a <memset>:$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	55                   	push   %ebp$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	57                   	push   %edi$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	56                   	push   %esi$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	53                   	push   %ebx$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	85 c9                	test   %ecx,%ecx$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	74 30                	je     f0105c8d <memset+0x43>$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105c63	obj/kern/kernel.asm	/^f0105c63:	75 25                	jne    f0105c8a <memset+0x40>$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105c68	obj/kern/kernel.asm	/^f0105c68:	75 20                	jne    f0105c8a <memset+0x40>$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105c6d	obj/kern/kernel.asm	/^f0105c6d:	89 d3                	mov    %edx,%ebx$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	89 d6                	mov    %edx,%esi$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	89 d0                	mov    %edx,%eax$/;"	l
f0105c79	obj/kern/kernel.asm	/^f0105c79:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105c7c	obj/kern/kernel.asm	/^f0105c7c:	09 f0                	or     %esi,%eax$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	09 d0                	or     %edx,%eax$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	09 d8                	or     %ebx,%eax$/;"	l
f0105c82	obj/kern/kernel.asm	/^f0105c82:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	fc                   	cld    $/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	eb 03                	jmp    f0105c8d <memset+0x43>$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	fc                   	cld    $/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	89 f8                	mov    %edi,%eax$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	5b                   	pop    %ebx$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	5e                   	pop    %esi$/;"	l
f0105c91	obj/kern/kernel.asm	/^f0105c91:	5f                   	pop    %edi$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	5d                   	pop    %ebp$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	c3                   	ret    $/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94 <memmove>:$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	55                   	push   %ebp$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	57                   	push   %edi$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	56                   	push   %esi$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	39 c6                	cmp    %eax,%esi$/;"	l
f0105ca4	obj/kern/kernel.asm	/^f0105ca4:	73 34                	jae    f0105cda <memmove+0x46>$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105ca9	obj/kern/kernel.asm	/^f0105ca9:	39 d0                	cmp    %edx,%eax$/;"	l
f0105cab	obj/kern/kernel.asm	/^f0105cab:	73 2d                	jae    f0105cda <memmove+0x46>$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	75 1b                	jne    f0105cd0 <memmove+0x3c>$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	75 13                	jne    f0105cd0 <memmove+0x3c>$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105cc0	obj/kern/kernel.asm	/^f0105cc0:	75 0e                	jne    f0105cd0 <memmove+0x3c>$/;"	l
f0105cc2	obj/kern/kernel.asm	/^f0105cc2:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0105cc5	obj/kern/kernel.asm	/^f0105cc5:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	fd                   	std    $/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	eb 07                	jmp    f0105cd7 <memmove+0x43>$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	4f                   	dec    %edi$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	fd                   	std    $/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	fc                   	cld    $/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	eb 20                	jmp    f0105cfa <memmove+0x66>$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	75 13                	jne    f0105cf5 <memmove+0x61>$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	a8 03                	test   $0x3,%al$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	75 0f                	jne    f0105cf5 <memmove+0x61>$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	75 0a                	jne    f0105cf5 <memmove+0x61>$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	89 c7                	mov    %eax,%edi$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	fc                   	cld    $/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105cf3	obj/kern/kernel.asm	/^f0105cf3:	eb 05                	jmp    f0105cfa <memmove+0x66>$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	89 c7                	mov    %eax,%edi$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	fc                   	cld    $/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	5e                   	pop    %esi$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	5f                   	pop    %edi$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	5d                   	pop    %ebp$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	c3                   	ret    $/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe <memcpy>:$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	55                   	push   %ebp$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d04	obj/kern/kernel.asm	/^f0105d04:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	e8 77 ff ff ff       	call   f0105c94 <memmove>$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	c9                   	leave  $/;"	l
f0105d1e	obj/kern/kernel.asm	/^f0105d1e:	c3                   	ret    $/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f <memcmp>:$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	55                   	push   %ebp$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	57                   	push   %edi$/;"	l
f0105d23	obj/kern/kernel.asm	/^f0105d23:	56                   	push   %esi$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	53                   	push   %ebx$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	eb 16                	jmp    f0105d4b <memcmp+0x2c>$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	8a 04 17             	mov    (%edi,%edx,1),%al$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	42                   	inc    %edx$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	8a 4c 16 ff          	mov    -0x1(%esi,%edx,1),%cl$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	38 c8                	cmp    %cl,%al$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	74 0a                	je     f0105d4b <memcmp+0x2c>$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	29 c8                	sub    %ecx,%eax$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	eb 09                	jmp    f0105d54 <memcmp+0x35>$/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b:	39 da                	cmp    %ebx,%edx$/;"	l
f0105d4d	obj/kern/kernel.asm	/^f0105d4d:	75 e6                	jne    f0105d35 <memcmp+0x16>$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	5b                   	pop    %ebx$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	5e                   	pop    %esi$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	5f                   	pop    %edi$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	5d                   	pop    %ebp$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	c3                   	ret    $/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59 <memfind>:$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	55                   	push   %ebp$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	89 c2                	mov    %eax,%edx$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	eb 05                	jmp    f0105d6e <memfind+0x15>$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105d6b	obj/kern/kernel.asm	/^f0105d6b:	74 05                	je     f0105d72 <memfind+0x19>$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	40                   	inc    %eax$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	39 d0                	cmp    %edx,%eax$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	72 f7                	jb     f0105d69 <memfind+0x10>$/;"	l
f0105d72	obj/kern/kernel.asm	/^f0105d72:	5d                   	pop    %ebp$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	c3                   	ret    $/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74 <strtol>:$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	55                   	push   %ebp$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	57                   	push   %edi$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	56                   	push   %esi$/;"	l
f0105d79	obj/kern/kernel.asm	/^f0105d79:	53                   	push   %ebx$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	eb 01                	jmp    f0105d83 <strtol+0xf>$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	42                   	inc    %edx$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	8a 02                	mov    (%edx),%al$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	3c 20                	cmp    $0x20,%al$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	74 f9                	je     f0105d82 <strtol+0xe>$/;"	l
f0105d89	obj/kern/kernel.asm	/^f0105d89:	3c 09                	cmp    $0x9,%al$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	74 f5                	je     f0105d82 <strtol+0xe>$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	75 08                	jne    f0105d99 <strtol+0x25>$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	42                   	inc    %edx$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	eb 13                	jmp    f0105dac <strtol+0x38>$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	75 0a                	jne    f0105da7 <strtol+0x33>$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	eb 05                	jmp    f0105dac <strtol+0x38>$/;"	l
f0105da7	obj/kern/kernel.asm	/^f0105da7:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	85 db                	test   %ebx,%ebx$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	74 05                	je     f0105db5 <strtol+0x41>$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	75 28                	jne    f0105ddd <strtol+0x69>$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	8a 02                	mov    (%edx),%al$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	3c 30                	cmp    $0x30,%al$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	75 10                	jne    f0105dcb <strtol+0x57>$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	75 0a                	jne    f0105dcb <strtol+0x57>$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	83 c2 02             	add    $0x2,%edx$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	eb 12                	jmp    f0105ddd <strtol+0x69>$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	85 db                	test   %ebx,%ebx$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	75 0e                	jne    f0105ddd <strtol+0x69>$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	3c 30                	cmp    $0x30,%al$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	75 05                	jne    f0105dd8 <strtol+0x64>$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	42                   	inc    %edx$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	b3 08                	mov    $0x8,%bl$/;"	l
f0105dd6	obj/kern/kernel.asm	/^f0105dd6:	eb 05                	jmp    f0105ddd <strtol+0x69>$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	89 de                	mov    %ebx,%esi$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	8a 0a                	mov    (%edx),%cl$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	77 08                	ja     f0105df6 <strtol+0x82>$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	eb 1e                	jmp    f0105e14 <strtol+0xa0>$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	77 08                	ja     f0105e06 <strtol+0x92>$/;"	l
f0105dfe	obj/kern/kernel.asm	/^f0105dfe:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	eb 0e                	jmp    f0105e14 <strtol+0xa0>$/;"	l
f0105e06	obj/kern/kernel.asm	/^f0105e06:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	77 12                	ja     f0105e20 <strtol+0xac>$/;"	l
f0105e0e	obj/kern/kernel.asm	/^f0105e0e:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	7d 0c                	jge    f0105e24 <strtol+0xb0>$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	42                   	inc    %edx$/;"	l
f0105e19	obj/kern/kernel.asm	/^f0105e19:	0f af c6             	imul   %esi,%eax$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	01 c8                	add    %ecx,%eax$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	eb c4                	jmp    f0105de4 <strtol+0x70>$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	89 c1                	mov    %eax,%ecx$/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22:	eb 02                	jmp    f0105e26 <strtol+0xb2>$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	89 c1                	mov    %eax,%ecx$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105e2a	obj/kern/kernel.asm	/^f0105e2a:	74 05                	je     f0105e31 <strtol+0xbd>$/;"	l
f0105e2c	obj/kern/kernel.asm	/^f0105e2c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	89 13                	mov    %edx,(%ebx)$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	85 ff                	test   %edi,%edi$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	74 04                	je     f0105e39 <strtol+0xc5>$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	89 c8                	mov    %ecx,%eax$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	f7 d8                	neg    %eax$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	5b                   	pop    %ebx$/;"	l
f0105e3a	obj/kern/kernel.asm	/^f0105e3a:	5e                   	pop    %esi$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	5f                   	pop    %edi$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	5d                   	pop    %ebp$/;"	l
f0105e3d	obj/kern/kernel.asm	/^f0105e3d:	c3                   	ret    $/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40 <mpentry_start>:$/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40:	fa                   	cli    $/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	31 c0                	xor    %eax,%eax$/;"	l
f0105e43	obj/kern/kernel.asm	/^f0105e43:	8e d8                	mov    %eax,%ds$/;"	l
f0105e45	obj/kern/kernel.asm	/^f0105e45:	8e c0                	mov    %eax,%es$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	8e d0                	mov    %eax,%ss$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	74 70                	je     f0105ebe <sum+0x2>$/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	08 00                	or     %al,(%eax)$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60 <start32>:$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	8e d8                	mov    %eax,%ds$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	8e c0                	mov    %eax,%es$/;"	l
f0105e68	obj/kern/kernel.asm	/^f0105e68:	8e d0                	mov    %eax,%ss$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0105e6e	obj/kern/kernel.asm	/^f0105e6e:	8e e0                	mov    %eax,%fs$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	8e e8                	mov    %eax,%gs$/;"	l
f0105e72	obj/kern/kernel.asm	/^f0105e72:	b8 00 70 12 00       	mov    $0x127000,%eax$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0105e82	obj/kern/kernel.asm	/^f0105e82:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	8b 25 84 de 32 f0    	mov    0xf032de84,%esp$/;"	l
f0105e8b	obj/kern/kernel.asm	/^f0105e8b:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	b8 a8 00 10 f0       	mov    $0xf01000a8,%eax$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	ff d0                	call   *%eax$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97 <spin>:$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	eb fe                	jmp    f0105e97 <spin>$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c <gdt>:$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	ff                   	(bad)  $/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	ff 00                	incl   (%eax)$/;"	l
f0105ea7	obj/kern/kernel.asm	/^f0105ea7:	00 00                	add    %al,(%eax)$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4 <gdtdesc>:$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4:	17                   	pop    %ss$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba <mpentry_end>:$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	90                   	nop$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc <sum>:$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	55                   	push   %ebp$/;"	l
f0105ebd	obj/kern/kernel.asm	/^f0105ebd:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	56                   	push   %esi$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	53                   	push   %ebx$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	eb 07                	jmp    f0105ed4 <sum+0x18>$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	01 f3                	add    %esi,%ebx$/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	41                   	inc    %ecx$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	7c f5                	jl     f0105ecd <sum+0x11>$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	88 d8                	mov    %bl,%al$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	5b                   	pop    %ebx$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	5e                   	pop    %esi$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	5d                   	pop    %ebp$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	c3                   	ret    $/;"	l
f0105ede	obj/kern/kernel.asm	/^f0105ede <mpsearch1>:$/;"	l
f0105ede	obj/kern/kernel.asm	/^f0105ede:	55                   	push   %ebp$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	56                   	push   %esi$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	53                   	push   %ebx$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	8b 0d 88 de 32 f0    	mov    0xf032de88,%ecx$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	89 c3                	mov    %eax,%ebx$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	72 20                	jb     f0105f15 <mpsearch1+0x37>$/;"	l
f0105ef5	obj/kern/kernel.asm	/^f0105ef5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	f0 $/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	00 $/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	c7 04 24 45 84 10 f0 	movl   $0xf0108445,(%esp)$/;"	l
f0105f10	obj/kern/kernel.asm	/^f0105f10:	e8 2b a1 ff ff       	call   f0100040 <_panic>$/;"	l
f0105f15	obj/kern/kernel.asm	/^f0105f15:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	89 f2                	mov    %esi,%edx$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	77 20                	ja     f0105f41 <mpsearch1+0x63>$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	f0 $/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	00 $/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	c7 04 24 45 84 10 f0 	movl   $0xf0108445,(%esp)$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	e8 ff a0 ff ff       	call   f0100040 <_panic>$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0105f4d	obj/kern/kernel.asm	/^f0105f4d:	eb 2f                	jmp    f0105f7e <mpsearch1+0xa0>$/;"	l
f0105f4f	obj/kern/kernel.asm	/^f0105f4f:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	00 $/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	c7 44 24 04 55 84 10 	movl   $0xf0108455,0x4(%esp)$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	f0 $/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105f62	obj/kern/kernel.asm	/^f0105f62:	e8 b8 fd ff ff       	call   f0105d1f <memcmp>$/;"	l
f0105f67	obj/kern/kernel.asm	/^f0105f67:	85 c0                	test   %eax,%eax$/;"	l
f0105f69	obj/kern/kernel.asm	/^f0105f69:	75 10                	jne    f0105f7b <mpsearch1+0x9d>$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	e8 45 ff ff ff       	call   f0105ebc <sum>$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	84 c0                	test   %al,%al$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	74 0c                	je     f0105f87 <mpsearch1+0xa9>$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0105f7e	obj/kern/kernel.asm	/^f0105f7e:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	72 cd                	jb     f0105f4f <mpsearch1+0x71>$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f89	obj/kern/kernel.asm	/^f0105f89:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	5b                   	pop    %ebx$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	5e                   	pop    %esi$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	5d                   	pop    %ebp$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	c3                   	ret    $/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90 <mp_init>:$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	55                   	push   %ebp$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	57                   	push   %edi$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	56                   	push   %esi$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	53                   	push   %ebx$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	c7 05 c0 e3 32 f0 20 	movl   $0xf032e020,0xf032e3c0$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	e0 32 f0 $/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	83 3d 88 de 32 f0 00 	cmpl   $0x0,0xf032de88$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	75 24                	jne    f0105fd0 <mp_init+0x40>$/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	00 $/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	f0 $/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	00 $/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	c7 04 24 45 84 10 f0 	movl   $0xf0108445,(%esp)$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	e8 70 a0 ff ff       	call   f0100040 <_panic>$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0105fd7	obj/kern/kernel.asm	/^f0105fd7:	85 c0                	test   %eax,%eax$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	74 16                	je     f0105ff1 <mp_init+0x61>$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	e8 f6 fe ff ff       	call   f0105ede <mpsearch1>$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	85 c0                	test   %eax,%eax$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	75 3c                	jne    f010602b <mp_init+0x9b>$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	eb 20                	jmp    f0106011 <mp_init+0x81>$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	e8 d4 fe ff ff       	call   f0105ede <mpsearch1>$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	85 c0                	test   %eax,%eax$/;"	l
f010600f	obj/kern/kernel.asm	/^f010600f:	75 1a                	jne    f010602b <mp_init+0x9b>$/;"	l
f0106011	obj/kern/kernel.asm	/^f0106011:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	e8 be fe ff ff       	call   f0105ede <mpsearch1>$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	85 c0                	test   %eax,%eax$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	0f 84 2c 02 00 00    	je     f0106257 <mp_init+0x2c7>$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010602e	obj/kern/kernel.asm	/^f010602e:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	85 db                	test   %ebx,%ebx$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	74 06                	je     f010603b <mp_init+0xab>$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	74 11                	je     f010604c <mp_init+0xbc>$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	c7 04 24 b8 82 10 f0 	movl   $0xf01082b8,(%esp)$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	e8 c7 df ff ff       	call   f010400e <cprintf>$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	e9 0b 02 00 00       	jmp    f0106257 <mp_init+0x2c7>$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	89 d8                	mov    %ebx,%eax$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	3b 05 88 de 32 f0    	cmp    0xf032de88,%eax$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	72 20                	jb     f0106079 <mp_init+0xe9>$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	f0 $/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	00 $/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	c7 04 24 45 84 10 f0 	movl   $0xf0108445,(%esp)$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	e8 c7 9f ff ff       	call   f0100040 <_panic>$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	81 eb 00 00 00 10    	sub    $0x10000000,%ebx$/;"	l
f010607f	obj/kern/kernel.asm	/^f010607f:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	00 $/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	c7 44 24 04 5a 84 10 	movl   $0xf010845a,0x4(%esp)$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	f0 $/;"	l
f010608f	obj/kern/kernel.asm	/^f010608f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	e8 88 fc ff ff       	call   f0105d1f <memcmp>$/;"	l
f0106097	obj/kern/kernel.asm	/^f0106097:	85 c0                	test   %eax,%eax$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	74 11                	je     f01060ac <mp_init+0x11c>$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	c7 04 24 e8 82 10 f0 	movl   $0xf01082e8,(%esp)$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	e8 67 df ff ff       	call   f010400e <cprintf>$/;"	l
f01060a7	obj/kern/kernel.asm	/^f01060a7:	e9 ab 01 00 00       	jmp    f0106257 <mp_init+0x2c7>$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	66 8b 73 04          	mov    0x4(%ebx),%si$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	0f b7 d6             	movzwl %si,%edx$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	89 d8                	mov    %ebx,%eax$/;"	l
f01060b5	obj/kern/kernel.asm	/^f01060b5:	e8 02 fe ff ff       	call   f0105ebc <sum>$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	84 c0                	test   %al,%al$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	74 11                	je     f01060cf <mp_init+0x13f>$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	c7 04 24 1c 83 10 f0 	movl   $0xf010831c,(%esp)$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	e8 44 df ff ff       	call   f010400e <cprintf>$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	e9 88 01 00 00       	jmp    f0106257 <mp_init+0x2c7>$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	8a 43 06             	mov    0x6(%ebx),%al$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	3c 01                	cmp    $0x1,%al$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	74 1c                	je     f01060f2 <mp_init+0x162>$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	3c 04                	cmp    $0x4,%al$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	74 18                	je     f01060f2 <mp_init+0x162>$/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	c7 04 24 40 83 10 f0 	movl   $0xf0108340,(%esp)$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	e8 21 df ff ff       	call   f010400e <cprintf>$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	e9 65 01 00 00       	jmp    f0106257 <mp_init+0x2c7>$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	0f b7 53 28          	movzwl 0x28(%ebx),%edx$/;"	l
f01060f6	obj/kern/kernel.asm	/^f01060f6:	0f b7 c6             	movzwl %si,%eax$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	01 d8                	add    %ebx,%eax$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	e8 bc fd ff ff       	call   f0105ebc <sum>$/;"	l
f0106100	obj/kern/kernel.asm	/^f0106100:	02 43 2a             	add    0x2a(%ebx),%al$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	84 c0                	test   %al,%al$/;"	l
f0106105	obj/kern/kernel.asm	/^f0106105:	74 11                	je     f0106118 <mp_init+0x188>$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	c7 04 24 60 83 10 f0 	movl   $0xf0108360,(%esp)$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	e8 fb de ff ff       	call   f010400e <cprintf>$/;"	l
f0106113	obj/kern/kernel.asm	/^f0106113:	e9 3f 01 00 00       	jmp    f0106257 <mp_init+0x2c7>$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	85 db                	test   %ebx,%ebx$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	0f 84 37 01 00 00    	je     f0106257 <mp_init+0x2c7>$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	c7 05 00 e0 32 f0 01 	movl   $0x1,0xf032e000$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	00 00 00 $/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	a3 00 f0 36 f0       	mov    %eax,0xf036f000$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	8d 73 2c             	lea    0x2c(%ebx),%esi$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	e9 94 00 00 00       	jmp    f01061d3 <mp_init+0x243>$/;"	l
f010613f	obj/kern/kernel.asm	/^f010613f:	8a 06                	mov    (%esi),%al$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	84 c0                	test   %al,%al$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	74 06                	je     f010614b <mp_init+0x1bb>$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	3c 04                	cmp    $0x4,%al$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	77 68                	ja     f01061b1 <mp_init+0x221>$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	eb 61                	jmp    f01061ac <mp_init+0x21c>$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	f6 46 03 02          	testb  $0x2,0x3(%esi)$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	74 1d                	je     f010616e <mp_init+0x1de>$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	a1 c4 e3 32 f0       	mov    0xf032e3c4,%eax$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	29 c2                	sub    %eax,%edx$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	8d 04 85 20 e0 32 f0 	lea    -0xfcd1fe0(,%eax,4),%eax$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	a3 c0 e3 32 f0       	mov    %eax,0xf032e3c0$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	a1 c4 e3 32 f0       	mov    0xf032e3c4,%eax$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	7f 1b                	jg     f0106193 <mp_init+0x203>$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	29 c2                	sub    %eax,%edx$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	88 04 95 20 e0 32 f0 	mov    %al,-0xfcd1fe0(,%edx,4)$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	40                   	inc    %eax$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	a3 c4 e3 32 f0       	mov    %eax,0xf032e3c4$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	eb 14                	jmp    f01061a7 <mp_init+0x217>$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	c7 04 24 90 83 10 f0 	movl   $0xf0108390,(%esp)$/;"	l
f01061a2	obj/kern/kernel.asm	/^f01061a2:	e8 67 de ff ff       	call   f010400e <cprintf>$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	83 c6 14             	add    $0x14,%esi$/;"	l
f01061aa	obj/kern/kernel.asm	/^f01061aa:	eb 26                	jmp    f01061d2 <mp_init+0x242>$/;"	l
f01061ac	obj/kern/kernel.asm	/^f01061ac:	83 c6 08             	add    $0x8,%esi$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	eb 21                	jmp    f01061d2 <mp_init+0x242>$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01061b8	obj/kern/kernel.asm	/^f01061b8:	c7 04 24 b8 83 10 f0 	movl   $0xf01083b8,(%esp)$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	e8 4a de ff ff       	call   f010400e <cprintf>$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	c7 05 00 e0 32 f0 00 	movl   $0x0,0xf032e000$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	00 00 00 $/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	0f b7 7b 22          	movzwl 0x22(%ebx),%edi$/;"	l
f01061d2	obj/kern/kernel.asm	/^f01061d2:	47                   	inc    %edi$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	39 c7                	cmp    %eax,%edi$/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	0f 82 60 ff ff ff    	jb     f010613f <mp_init+0x1af>$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	a1 c0 e3 32 f0       	mov    0xf032e3c0,%eax$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	83 3d 00 e0 32 f0 00 	cmpl   $0x0,0xf032e000$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	75 22                	jne    f0106216 <mp_init+0x286>$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	c7 05 c4 e3 32 f0 01 	movl   $0x1,0xf032e3c4$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	00 00 00 $/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	c7 05 00 f0 36 f0 00 	movl   $0x0,0xf036f000$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	00 00 00 $/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	c7 04 24 d8 83 10 f0 	movl   $0xf01083d8,(%esp)$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	e8 fa dd ff ff       	call   f010400e <cprintf>$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	eb 41                	jmp    f0106257 <mp_init+0x2c7>$/;"	l
f0106216	obj/kern/kernel.asm	/^f0106216:	8b 15 c4 e3 32 f0    	mov    0xf032e3c4,%edx$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	c7 04 24 5f 84 10 f0 	movl   $0xf010845f,(%esp)$/;"	l
f010622e	obj/kern/kernel.asm	/^f010622e:	e8 db dd ff ff       	call   f010400e <cprintf>$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f010623a	obj/kern/kernel.asm	/^f010623a:	74 1b                	je     f0106257 <mp_init+0x2c7>$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	c7 04 24 04 84 10 f0 	movl   $0xf0108404,(%esp)$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	e8 c6 dd ff ff       	call   f010400e <cprintf>$/;"	l
f0106248	obj/kern/kernel.asm	/^f0106248:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	b0 70                	mov    $0x70,%al$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	ee                   	out    %al,(%dx)$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	b2 23                	mov    $0x23,%dl$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	ec                   	in     (%dx),%al$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	ee                   	out    %al,(%dx)$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f010625a	obj/kern/kernel.asm	/^f010625a:	5b                   	pop    %ebx$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	5e                   	pop    %esi$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	5f                   	pop    %edi$/;"	l
f010625d	obj/kern/kernel.asm	/^f010625d:	5d                   	pop    %ebp$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	c3                   	ret    $/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260 <lapicw>:$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	55                   	push   %ebp$/;"	l
f0106261	obj/kern/kernel.asm	/^f0106261:	89 e5                	mov    %esp,%ebp$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106266	obj/kern/kernel.asm	/^f0106266:	03 05 04 f0 36 f0    	add    0xf036f004,%eax$/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c:	89 10                	mov    %edx,(%eax)$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	a1 04 f0 36 f0       	mov    0xf036f004,%eax$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106276	obj/kern/kernel.asm	/^f0106276:	5d                   	pop    %ebp$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	c3                   	ret    $/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278 <cpunum>:$/;"	l
f0106278	obj/kern/kernel.asm	/^f0106278:	55                   	push   %ebp$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	89 e5                	mov    %esp,%ebp$/;"	l
f010627b	obj/kern/kernel.asm	/^f010627b:	a1 04 f0 36 f0       	mov    0xf036f004,%eax$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	85 c0                	test   %eax,%eax$/;"	l
f0106282	obj/kern/kernel.asm	/^f0106282:	74 08                	je     f010628c <cpunum+0x14>$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	eb 05                	jmp    f0106291 <cpunum+0x19>$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	5d                   	pop    %ebp$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	c3                   	ret    $/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293 <lapic_init>:$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	55                   	push   %ebp$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	89 e5                	mov    %esp,%ebp$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106299	obj/kern/kernel.asm	/^f0106299:	a1 00 f0 36 f0       	mov    0xf036f000,%eax$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	85 c0                	test   %eax,%eax$/;"	l
f01062a0	obj/kern/kernel.asm	/^f01062a0:	0f 84 27 01 00 00    	je     f01063cd <lapic_init+0x13a>$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	00 $/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	e8 03 b1 ff ff       	call   f01013b9 <mmio_map_region>$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	a3 04 f0 36 f0       	mov    %eax,0xf036f004$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	e8 96 ff ff ff       	call   f0106260 <lapicw>$/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	e8 87 ff ff ff       	call   f0106260 <lapicw>$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f01062e3	obj/kern/kernel.asm	/^f01062e3:	e8 78 ff ff ff       	call   f0106260 <lapicw>$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f01062f2	obj/kern/kernel.asm	/^f01062f2:	e8 69 ff ff ff       	call   f0106260 <lapicw>$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	e8 7c ff ff ff       	call   f0106278 <cpunum>$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	29 c2                	sub    %eax,%edx$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	8d 04 85 20 e0 32 f0 	lea    -0xfcd1fe0(,%eax,4),%eax$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	39 05 c0 e3 32 f0    	cmp    %eax,0xf032e3c0$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	74 0f                	je     f0106326 <lapic_init+0x93>$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	e8 3a ff ff ff       	call   f0106260 <lapicw>$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	e8 2b ff ff ff       	call   f0106260 <lapicw>$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	a1 04 f0 36 f0       	mov    0xf036f004,%eax$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	3c 03                	cmp    $0x3,%al$/;"	l
f0106342	obj/kern/kernel.asm	/^f0106342:	76 0f                	jbe    f0106353 <lapic_init+0xc0>$/;"	l
f0106344	obj/kern/kernel.asm	/^f0106344:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	e8 0d ff ff ff       	call   f0106260 <lapicw>$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	e8 fe fe ff ff       	call   f0106260 <lapicw>$/;"	l
f0106362	obj/kern/kernel.asm	/^f0106362:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	e8 ef fe ff ff       	call   f0106260 <lapicw>$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	e8 e0 fe ff ff       	call   f0106260 <lapicw>$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106385	obj/kern/kernel.asm	/^f0106385:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	e8 d1 fe ff ff       	call   f0106260 <lapicw>$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106394	obj/kern/kernel.asm	/^f0106394:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	e8 c2 fe ff ff       	call   f0106260 <lapicw>$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01063a8	obj/kern/kernel.asm	/^f01063a8:	e8 b3 fe ff ff       	call   f0106260 <lapicw>$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	8b 15 04 f0 36 f0    	mov    0xf036f004,%edx$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	75 f5                	jne    f01063b3 <lapic_init+0x120>$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8:	e8 93 fe ff ff       	call   f0106260 <lapicw>$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	c9                   	leave  $/;"	l
f01063ce	obj/kern/kernel.asm	/^f01063ce:	c3                   	ret    $/;"	l
f01063cf	obj/kern/kernel.asm	/^f01063cf <lapic_eoi>:$/;"	l
f01063cf	obj/kern/kernel.asm	/^f01063cf:	55                   	push   %ebp$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	89 e5                	mov    %esp,%ebp$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	83 3d 04 f0 36 f0 00 	cmpl   $0x0,0xf036f004$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	74 0f                	je     f01063ea <lapic_eoi+0x1b>$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	e8 76 fe ff ff       	call   f0106260 <lapicw>$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	5d                   	pop    %ebp$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	c3                   	ret    $/;"	l
f01063ec	obj/kern/kernel.asm	/^f01063ec <lapic_startap>:$/;"	l
f01063ec	obj/kern/kernel.asm	/^f01063ec:	55                   	push   %ebp$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	56                   	push   %esi$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	53                   	push   %ebx$/;"	l
f01063f1	obj/kern/kernel.asm	/^f01063f1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01063f4	obj/kern/kernel.asm	/^f01063f4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	8a 5d 08             	mov    0x8(%ebp),%bl$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	b0 0f                	mov    $0xf,%al$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	ee                   	out    %al,(%dx)$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	b2 71                	mov    $0x71,%dl$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	b0 0a                	mov    $0xa,%al$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	ee                   	out    %al,(%dx)$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	83 3d 88 de 32 f0 00 	cmpl   $0x0,0xf032de88$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	75 24                	jne    f0106434 <lapic_startap+0x48>$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	00 $/;"	l
f0106418	obj/kern/kernel.asm	/^f0106418:	c7 44 24 08 88 69 10 	movl   $0xf0106988,0x8(%esp)$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	f0 $/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	00 $/;"	l
f0106428	obj/kern/kernel.asm	/^f0106428:	c7 04 24 7c 84 10 f0 	movl   $0xf010847c,(%esp)$/;"	l
f010642f	obj/kern/kernel.asm	/^f010642f:	e8 0c 9c ff ff       	call   f0100040 <_panic>$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	00 00 $/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	89 f0                	mov    %esi,%eax$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106442	obj/kern/kernel.asm	/^f0106442:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f010644b	obj/kern/kernel.asm	/^f010644b:	89 da                	mov    %ebx,%edx$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	e8 09 fe ff ff       	call   f0106260 <lapicw>$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f010645c	obj/kern/kernel.asm	/^f010645c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	e8 fa fd ff ff       	call   f0106260 <lapicw>$/;"	l
f0106466	obj/kern/kernel.asm	/^f0106466:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	e8 eb fd ff ff       	call   f0106260 <lapicw>$/;"	l
f0106475	obj/kern/kernel.asm	/^f0106475:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	89 da                	mov    %ebx,%edx$/;"	l
f0106480	obj/kern/kernel.asm	/^f0106480:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	e8 d6 fd ff ff       	call   f0106260 <lapicw>$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	89 f2                	mov    %esi,%edx$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	e8 ca fd ff ff       	call   f0106260 <lapicw>$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	89 da                	mov    %ebx,%edx$/;"	l
f0106498	obj/kern/kernel.asm	/^f0106498:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	e8 be fd ff ff       	call   f0106260 <lapicw>$/;"	l
f01064a2	obj/kern/kernel.asm	/^f01064a2:	89 f2                	mov    %esi,%edx$/;"	l
f01064a4	obj/kern/kernel.asm	/^f01064a4:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	e8 b2 fd ff ff       	call   f0106260 <lapicw>$/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	83 c4 10             	add    $0x10,%esp$/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	5b                   	pop    %ebx$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	5e                   	pop    %esi$/;"	l
f01064b3	obj/kern/kernel.asm	/^f01064b3:	5d                   	pop    %ebp$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	c3                   	ret    $/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5 <lapic_ipi>:$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	55                   	push   %ebp$/;"	l
f01064b6	obj/kern/kernel.asm	/^f01064b6:	89 e5                	mov    %esp,%ebp$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f01064c1	obj/kern/kernel.asm	/^f01064c1:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01064c6	obj/kern/kernel.asm	/^f01064c6:	e8 95 fd ff ff       	call   f0106260 <lapicw>$/;"	l
f01064cb	obj/kern/kernel.asm	/^f01064cb:	8b 15 04 f0 36 f0    	mov    0xf036f004,%edx$/;"	l
f01064d1	obj/kern/kernel.asm	/^f01064d1:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01064d7	obj/kern/kernel.asm	/^f01064d7:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	75 f5                	jne    f01064d1 <lapic_ipi+0x1c>$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	5d                   	pop    %ebp$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	c3                   	ret    $/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0 <holding>:$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	55                   	push   %ebp$/;"	l
f01064e1	obj/kern/kernel.asm	/^f01064e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	53                   	push   %ebx$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01064e7	obj/kern/kernel.asm	/^f01064e7:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	74 25                	je     f0106511 <holding+0x31>$/;"	l
f01064ec	obj/kern/kernel.asm	/^f01064ec:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	e8 84 fd ff ff       	call   f0106278 <cpunum>$/;"	l
f01064f4	obj/kern/kernel.asm	/^f01064f4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb:	29 c2                	sub    %eax,%edx$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	8d 04 85 20 e0 32 f0 	lea    -0xfcd1fe0(,%eax,4),%eax$/;"	l
f0106507	obj/kern/kernel.asm	/^f0106507:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106509	obj/kern/kernel.asm	/^f0106509:	0f 94 c0             	sete   %al$/;"	l
f010650c	obj/kern/kernel.asm	/^f010650c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010650f	obj/kern/kernel.asm	/^f010650f:	eb 05                	jmp    f0106516 <holding+0x36>$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106516	obj/kern/kernel.asm	/^f0106516:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106519	obj/kern/kernel.asm	/^f0106519:	5b                   	pop    %ebx$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	5d                   	pop    %ebp$/;"	l
f010651b	obj/kern/kernel.asm	/^f010651b:	c3                   	ret    $/;"	l
f010651c	obj/kern/kernel.asm	/^f010651c <__spin_initlock>:$/;"	l
f010651c	obj/kern/kernel.asm	/^f010651c:	55                   	push   %ebp$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	89 e5                	mov    %esp,%ebp$/;"	l
f010651f	obj/kern/kernel.asm	/^f010651f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	5d                   	pop    %ebp$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	c3                   	ret    $/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537 <spin_lock>:$/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	55                   	push   %ebp$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	89 e5                	mov    %esp,%ebp$/;"	l
f010653a	obj/kern/kernel.asm	/^f010653a:	53                   	push   %ebx$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	83 ec 24             	sub    $0x24,%esp$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	89 d8                	mov    %ebx,%eax$/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	e8 98 ff ff ff       	call   f01064e0 <holding>$/;"	l
f0106548	obj/kern/kernel.asm	/^f0106548:	85 c0                	test   %eax,%eax$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	74 30                	je     f010657c <spin_lock+0x45>$/;"	l
f010654c	obj/kern/kernel.asm	/^f010654c:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	e8 24 fd ff ff       	call   f0106278 <cpunum>$/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	c7 44 24 08 8c 84 10 	movl   $0xf010848c,0x8(%esp)$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	f0 $/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	00 $/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	c7 04 24 f0 84 10 f0 	movl   $0xf01084f0,(%esp)$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	e8 c8 9a ff ff       	call   f0100040 <_panic>$/;"	l
f0106578	obj/kern/kernel.asm	/^f0106578:	f3 90                	pause  $/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	eb 05                	jmp    f0106581 <spin_lock+0x4a>$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	89 d0                	mov    %edx,%eax$/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106586	obj/kern/kernel.asm	/^f0106586:	85 c0                	test   %eax,%eax$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	75 ee                	jne    f0106578 <spin_lock+0x41>$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	e8 e9 fc ff ff       	call   f0106278 <cpunum>$/;"	l
f010658f	obj/kern/kernel.asm	/^f010658f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	29 c2                	sub    %eax,%edx$/;"	l
f0106598	obj/kern/kernel.asm	/^f0106598:	8d 04 90             	lea    (%eax,%edx,4),%eax$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	8d 04 85 20 e0 32 f0 	lea    -0xfcd1fe0(,%eax,4),%eax$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	89 ea                	mov    %ebp,%edx$/;"	l
f01065aa	obj/kern/kernel.asm	/^f01065aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	76 10                	jbe    f01065c7 <spin_lock+0x90>$/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	8b 12                	mov    (%edx),%edx$/;"	l
f01065bf	obj/kern/kernel.asm	/^f01065bf:	40                   	inc    %eax$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01065c3	obj/kern/kernel.asm	/^f01065c3:	75 ea                	jne    f01065af <spin_lock+0x78>$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	eb 0d                	jmp    f01065d4 <spin_lock+0x9d>$/;"	l
f01065c7	obj/kern/kernel.asm	/^f01065c7:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f01065ce	obj/kern/kernel.asm	/^f01065ce:	40                   	inc    %eax$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	7e f3                	jle    f01065c7 <spin_lock+0x90>$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	83 c4 24             	add    $0x24,%esp$/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7:	5b                   	pop    %ebx$/;"	l
f01065d8	obj/kern/kernel.asm	/^f01065d8:	5d                   	pop    %ebp$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	c3                   	ret    $/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da <spin_unlock>:$/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	55                   	push   %ebp$/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	89 e5                	mov    %esp,%ebp$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	57                   	push   %edi$/;"	l
f01065de	obj/kern/kernel.asm	/^f01065de:	56                   	push   %esi$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	53                   	push   %ebx$/;"	l
f01065e0	obj/kern/kernel.asm	/^f01065e0:	83 ec 7c             	sub    $0x7c,%esp$/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	89 d8                	mov    %ebx,%eax$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	e8 f3 fe ff ff       	call   f01064e0 <holding>$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	85 c0                	test   %eax,%eax$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	0f 85 d3 00 00 00    	jne    f01066c8 <spin_unlock+0xee>$/;"	l
f01065f5	obj/kern/kernel.asm	/^f01065f5:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	00 $/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	8d 75 a8             	lea    -0x58(%ebp),%esi$/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	e8 85 f6 ff ff       	call   f0105c94 <memmove>$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0106612	obj/kern/kernel.asm	/^f0106612:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106618	obj/kern/kernel.asm	/^f0106618:	e8 5b fc ff ff       	call   f0106278 <cpunum>$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	c7 04 24 b8 84 10 f0 	movl   $0xf01084b8,(%esp)$/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	e8 d9 d9 ff ff       	call   f010400e <cprintf>$/;"	l
f0106635	obj/kern/kernel.asm	/^f0106635:	89 f3                	mov    %esi,%ebx$/;"	l
f0106637	obj/kern/kernel.asm	/^f0106637:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	89 c7                	mov    %eax,%edi$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	eb 63                	jmp    f01066a4 <spin_unlock+0xca>$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	e8 08 eb ff ff       	call   f0105155 <debuginfo_eip>$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	85 c0                	test   %eax,%eax$/;"	l
f010664f	obj/kern/kernel.asm	/^f010664f:	78 39                	js     f010668a <spin_unlock+0xb0>$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	8b 06                	mov    (%esi),%eax$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	89 c2                	mov    %eax,%edx$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106663	obj/kern/kernel.asm	/^f0106663:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f010666a	obj/kern/kernel.asm	/^f010666a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106671	obj/kern/kernel.asm	/^f0106671:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106678	obj/kern/kernel.asm	/^f0106678:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010667c	obj/kern/kernel.asm	/^f010667c:	c7 04 24 00 85 10 f0 	movl   $0xf0108500,(%esp)$/;"	l
f0106683	obj/kern/kernel.asm	/^f0106683:	e8 86 d9 ff ff       	call   f010400e <cprintf>$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	eb 12                	jmp    f010669c <spin_unlock+0xc2>$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	8b 06                	mov    (%esi),%eax$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690:	c7 04 24 17 85 10 f0 	movl   $0xf0108517,(%esp)$/;"	l
f0106697	obj/kern/kernel.asm	/^f0106697:	e8 72 d9 ff ff       	call   f010400e <cprintf>$/;"	l
f010669c	obj/kern/kernel.asm	/^f010669c:	83 c3 04             	add    $0x4,%ebx$/;"	l
f010669f	obj/kern/kernel.asm	/^f010669f:	3b 5d a4             	cmp    -0x5c(%ebp),%ebx$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	74 08                	je     f01066ac <spin_unlock+0xd2>$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	89 de                	mov    %ebx,%esi$/;"	l
f01066a6	obj/kern/kernel.asm	/^f01066a6:	8b 03                	mov    (%ebx),%eax$/;"	l
f01066a8	obj/kern/kernel.asm	/^f01066a8:	85 c0                	test   %eax,%eax$/;"	l
f01066aa	obj/kern/kernel.asm	/^f01066aa:	75 95                	jne    f0106641 <spin_unlock+0x67>$/;"	l
f01066ac	obj/kern/kernel.asm	/^f01066ac:	c7 44 24 08 1f 85 10 	movl   $0xf010851f,0x8(%esp)$/;"	l
f01066b3	obj/kern/kernel.asm	/^f01066b3:	f0 $/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f01066bb	obj/kern/kernel.asm	/^f01066bb:	00 $/;"	l
f01066bc	obj/kern/kernel.asm	/^f01066bc:	c7 04 24 f0 84 10 f0 	movl   $0xf01084f0,(%esp)$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	e8 78 99 ff ff       	call   f0100040 <_panic>$/;"	l
f01066c8	obj/kern/kernel.asm	/^f01066c8:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f01066cf	obj/kern/kernel.asm	/^f01066cf:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f01066d6	obj/kern/kernel.asm	/^f01066d6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	83 c4 7c             	add    $0x7c,%esp$/;"	l
f01066e1	obj/kern/kernel.asm	/^f01066e1:	5b                   	pop    %ebx$/;"	l
f01066e2	obj/kern/kernel.asm	/^f01066e2:	5e                   	pop    %esi$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	5f                   	pop    %edi$/;"	l
f01066e4	obj/kern/kernel.asm	/^f01066e4:	5d                   	pop    %ebp$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	c3                   	ret    $/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8 <__udivdi3>:$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	55                   	push   %ebp$/;"	l
f01066e9	obj/kern/kernel.asm	/^f01066e9:	57                   	push   %edi$/;"	l
f01066ea	obj/kern/kernel.asm	/^f01066ea:	56                   	push   %esi$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01066ee	obj/kern/kernel.asm	/^f01066ee:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
f01066f2	obj/kern/kernel.asm	/^f01066f2:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	89 cd                	mov    %ecx,%ebp$/;"	l
f0106700	obj/kern/kernel.asm	/^f0106700:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
f0106704	obj/kern/kernel.asm	/^f0106704:	85 c0                	test   %eax,%eax$/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	75 2c                	jne    f0106734 <__udivdi3+0x4c>$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	39 f9                	cmp    %edi,%ecx$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	77 68                	ja     f0106774 <__udivdi3+0x8c>$/;"	l
f010670c	obj/kern/kernel.asm	/^f010670c:	85 c9                	test   %ecx,%ecx$/;"	l
f010670e	obj/kern/kernel.asm	/^f010670e:	75 0b                	jne    f010671b <__udivdi3+0x33>$/;"	l
f0106710	obj/kern/kernel.asm	/^f0106710:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	31 d2                	xor    %edx,%edx$/;"	l
f0106717	obj/kern/kernel.asm	/^f0106717:	f7 f1                	div    %ecx$/;"	l
f0106719	obj/kern/kernel.asm	/^f0106719:	89 c1                	mov    %eax,%ecx$/;"	l
f010671b	obj/kern/kernel.asm	/^f010671b:	31 d2                	xor    %edx,%edx$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	89 f8                	mov    %edi,%eax$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	f7 f1                	div    %ecx$/;"	l
f0106721	obj/kern/kernel.asm	/^f0106721:	89 c7                	mov    %eax,%edi$/;"	l
f0106723	obj/kern/kernel.asm	/^f0106723:	89 f0                	mov    %esi,%eax$/;"	l
f0106725	obj/kern/kernel.asm	/^f0106725:	f7 f1                	div    %ecx$/;"	l
f0106727	obj/kern/kernel.asm	/^f0106727:	89 c6                	mov    %eax,%esi$/;"	l
f0106729	obj/kern/kernel.asm	/^f0106729:	89 f0                	mov    %esi,%eax$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	89 fa                	mov    %edi,%edx$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	5e                   	pop    %esi$/;"	l
f0106731	obj/kern/kernel.asm	/^f0106731:	5f                   	pop    %edi$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	5d                   	pop    %ebp$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	c3                   	ret    $/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	39 f8                	cmp    %edi,%eax$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	77 2c                	ja     f0106764 <__udivdi3+0x7c>$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	0f bd f0             	bsr    %eax,%esi$/;"	l
f010673b	obj/kern/kernel.asm	/^f010673b:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
f010673e	obj/kern/kernel.asm	/^f010673e:	75 4c                	jne    f010678c <__udivdi3+0xa4>$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	39 f8                	cmp    %edi,%eax$/;"	l
f0106742	obj/kern/kernel.asm	/^f0106742:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106747	obj/kern/kernel.asm	/^f0106747:	72 0a                	jb     f0106753 <__udivdi3+0x6b>$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	0f 87 ad 00 00 00    	ja     f0106800 <__udivdi3+0x118>$/;"	l
f0106753	obj/kern/kernel.asm	/^f0106753:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	89 f0                	mov    %esi,%eax$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	89 fa                	mov    %edi,%edx$/;"	l
f010675c	obj/kern/kernel.asm	/^f010675c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	5e                   	pop    %esi$/;"	l
f0106760	obj/kern/kernel.asm	/^f0106760:	5f                   	pop    %edi$/;"	l
f0106761	obj/kern/kernel.asm	/^f0106761:	5d                   	pop    %ebp$/;"	l
f0106762	obj/kern/kernel.asm	/^f0106762:	c3                   	ret    $/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	90                   	nop$/;"	l
f0106764	obj/kern/kernel.asm	/^f0106764:	31 ff                	xor    %edi,%edi$/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	31 f6                	xor    %esi,%esi$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	89 f0                	mov    %esi,%eax$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	89 fa                	mov    %edi,%edx$/;"	l
f010676c	obj/kern/kernel.asm	/^f010676c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	5e                   	pop    %esi$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770:	5f                   	pop    %edi$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	5d                   	pop    %ebp$/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	c3                   	ret    $/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	90                   	nop$/;"	l
f0106774	obj/kern/kernel.asm	/^f0106774:	89 fa                	mov    %edi,%edx$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	89 f0                	mov    %esi,%eax$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	f7 f1                	div    %ecx$/;"	l
f010677a	obj/kern/kernel.asm	/^f010677a:	89 c6                	mov    %eax,%esi$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	31 ff                	xor    %edi,%edi$/;"	l
f010677e	obj/kern/kernel.asm	/^f010677e:	89 f0                	mov    %esi,%eax$/;"	l
f0106780	obj/kern/kernel.asm	/^f0106780:	89 fa                	mov    %edi,%edx$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	5e                   	pop    %esi$/;"	l
f0106786	obj/kern/kernel.asm	/^f0106786:	5f                   	pop    %edi$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	5d                   	pop    %ebp$/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788:	c3                   	ret    $/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	89 f1                	mov    %esi,%ecx$/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	d3 e0                	shl    %cl,%eax$/;"	d
f0106790	obj/kern/kernel.asm	/^f0106790:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106794	obj/kern/kernel.asm	/^f0106794:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106799	obj/kern/kernel.asm	/^f0106799:	29 f0                	sub    %esi,%eax$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	89 ea                	mov    %ebp,%edx$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	88 c1                	mov    %al,%cl$/;"	l
f010679f	obj/kern/kernel.asm	/^f010679f:	d3 ea                	shr    %cl,%edx$/;"	d
f01067a1	obj/kern/kernel.asm	/^f01067a1:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	09 ca                	or     %ecx,%edx$/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	89 f1                	mov    %esi,%ecx$/;"	l
f01067ad	obj/kern/kernel.asm	/^f01067ad:	d3 e5                	shl    %cl,%ebp$/;"	d
f01067af	obj/kern/kernel.asm	/^f01067af:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	89 fd                	mov    %edi,%ebp$/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	88 c1                	mov    %al,%cl$/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7:	d3 ed                	shr    %cl,%ebp$/;"	d
f01067b9	obj/kern/kernel.asm	/^f01067b9:	89 fa                	mov    %edi,%edx$/;"	l
f01067bb	obj/kern/kernel.asm	/^f01067bb:	89 f1                	mov    %esi,%ecx$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	d3 e2                	shl    %cl,%edx$/;"	d
f01067bf	obj/kern/kernel.asm	/^f01067bf:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01067c3	obj/kern/kernel.asm	/^f01067c3:	88 c1                	mov    %al,%cl$/;"	l
f01067c5	obj/kern/kernel.asm	/^f01067c5:	d3 ef                	shr    %cl,%edi$/;"	d
f01067c7	obj/kern/kernel.asm	/^f01067c7:	09 d7                	or     %edx,%edi$/;"	l
f01067c9	obj/kern/kernel.asm	/^f01067c9:	89 f8                	mov    %edi,%eax$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	89 ea                	mov    %ebp,%edx$/;"	l
f01067cd	obj/kern/kernel.asm	/^f01067cd:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	89 d1                	mov    %edx,%ecx$/;"	l
f01067d3	obj/kern/kernel.asm	/^f01067d3:	89 c7                	mov    %eax,%edi$/;"	l
f01067d5	obj/kern/kernel.asm	/^f01067d5:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	39 d1                	cmp    %edx,%ecx$/;"	l
f01067db	obj/kern/kernel.asm	/^f01067db:	72 17                	jb     f01067f4 <__udivdi3+0x10c>$/;"	l
f01067dd	obj/kern/kernel.asm	/^f01067dd:	74 09                	je     f01067e8 <__udivdi3+0x100>$/;"	l
f01067df	obj/kern/kernel.asm	/^f01067df:	89 fe                	mov    %edi,%esi$/;"	l
f01067e1	obj/kern/kernel.asm	/^f01067e1:	31 ff                	xor    %edi,%edi$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	e9 41 ff ff ff       	jmp    f0106729 <__udivdi3+0x41>$/;"	l
f01067e8	obj/kern/kernel.asm	/^f01067e8:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f01067ec	obj/kern/kernel.asm	/^f01067ec:	89 f1                	mov    %esi,%ecx$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	d3 e2                	shl    %cl,%edx$/;"	d
f01067f0	obj/kern/kernel.asm	/^f01067f0:	39 c2                	cmp    %eax,%edx$/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2:	73 eb                	jae    f01067df <__udivdi3+0xf7>$/;"	l
f01067f4	obj/kern/kernel.asm	/^f01067f4:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
f01067f7	obj/kern/kernel.asm	/^f01067f7:	31 ff                	xor    %edi,%edi$/;"	l
f01067f9	obj/kern/kernel.asm	/^f01067f9:	e9 2b ff ff ff       	jmp    f0106729 <__udivdi3+0x41>$/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	66 90                	xchg   %ax,%ax$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	31 f6                	xor    %esi,%esi$/;"	l
f0106802	obj/kern/kernel.asm	/^f0106802:	e9 22 ff ff ff       	jmp    f0106729 <__udivdi3+0x41>$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808 <__umoddi3>:$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	55                   	push   %ebp$/;"	l
f0106809	obj/kern/kernel.asm	/^f0106809:	57                   	push   %edi$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	56                   	push   %esi$/;"	l
f010680b	obj/kern/kernel.asm	/^f010680b:	83 ec 20             	sub    $0x20,%esp$/;"	l
f010680e	obj/kern/kernel.asm	/^f010680e:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f010681a	obj/kern/kernel.asm	/^f010681a:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0106822	obj/kern/kernel.asm	/^f0106822:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
f0106826	obj/kern/kernel.asm	/^f0106826:	89 c7                	mov    %eax,%edi$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	89 f2                	mov    %esi,%edx$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	85 ed                	test   %ebp,%ebp$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	75 16                	jne    f0106844 <__umoddi3+0x3c>$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	39 f1                	cmp    %esi,%ecx$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	0f 86 a6 00 00 00    	jbe    f01068dc <__umoddi3+0xd4>$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	f7 f1                	div    %ecx$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	89 d0                	mov    %edx,%eax$/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a:	31 d2                	xor    %edx,%edx$/;"	l
f010683c	obj/kern/kernel.asm	/^f010683c:	83 c4 20             	add    $0x20,%esp$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	5e                   	pop    %esi$/;"	l
f0106840	obj/kern/kernel.asm	/^f0106840:	5f                   	pop    %edi$/;"	l
f0106841	obj/kern/kernel.asm	/^f0106841:	5d                   	pop    %ebp$/;"	l
f0106842	obj/kern/kernel.asm	/^f0106842:	c3                   	ret    $/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	90                   	nop$/;"	l
f0106844	obj/kern/kernel.asm	/^f0106844:	39 f5                	cmp    %esi,%ebp$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	0f 87 ac 00 00 00    	ja     f01068f8 <__umoddi3+0xf0>$/;"	l
f010684c	obj/kern/kernel.asm	/^f010684c:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f010684f	obj/kern/kernel.asm	/^f010684f:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0106852	obj/kern/kernel.asm	/^f0106852:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	0f 84 a8 00 00 00    	je     f0106904 <__umoddi3+0xfc>$/;"	l
f010685c	obj/kern/kernel.asm	/^f010685c:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106860	obj/kern/kernel.asm	/^f0106860:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106862	obj/kern/kernel.asm	/^f0106862:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
f010686b	obj/kern/kernel.asm	/^f010686b:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f010686f	obj/kern/kernel.asm	/^f010686f:	89 f9                	mov    %edi,%ecx$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	d3 e8                	shr    %cl,%eax$/;"	d
f0106873	obj/kern/kernel.asm	/^f0106873:	09 e8                	or     %ebp,%eax$/;"	l
f0106875	obj/kern/kernel.asm	/^f0106875:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0106879	obj/kern/kernel.asm	/^f0106879:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f010687d	obj/kern/kernel.asm	/^f010687d:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	d3 e0                	shl    %cl,%eax$/;"	d
f0106883	obj/kern/kernel.asm	/^f0106883:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106887	obj/kern/kernel.asm	/^f0106887:	89 f2                	mov    %esi,%edx$/;"	l
f0106889	obj/kern/kernel.asm	/^f0106889:	d3 e2                	shl    %cl,%edx$/;"	d
f010688b	obj/kern/kernel.asm	/^f010688b:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	d3 e0                	shl    %cl,%eax$/;"	d
f0106891	obj/kern/kernel.asm	/^f0106891:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
f0106899	obj/kern/kernel.asm	/^f0106899:	89 f9                	mov    %edi,%ecx$/;"	l
f010689b	obj/kern/kernel.asm	/^f010689b:	d3 e8                	shr    %cl,%eax$/;"	d
f010689d	obj/kern/kernel.asm	/^f010689d:	09 d0                	or     %edx,%eax$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	d3 ee                	shr    %cl,%esi$/;"	d
f01068a1	obj/kern/kernel.asm	/^f01068a1:	89 f2                	mov    %esi,%edx$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	89 d6                	mov    %edx,%esi$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f01068ad	obj/kern/kernel.asm	/^f01068ad:	89 c5                	mov    %eax,%ebp$/;"	l
f01068af	obj/kern/kernel.asm	/^f01068af:	89 d1                	mov    %edx,%ecx$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	39 d6                	cmp    %edx,%esi$/;"	l
f01068b3	obj/kern/kernel.asm	/^f01068b3:	72 67                	jb     f010691c <__umoddi3+0x114>$/;"	l
f01068b5	obj/kern/kernel.asm	/^f01068b5:	74 75                	je     f010692c <__umoddi3+0x124>$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	29 e8                	sub    %ebp,%eax$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	19 ce                	sbb    %ecx,%esi$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	d3 e8                	shr    %cl,%eax$/;"	d
f01068c5	obj/kern/kernel.asm	/^f01068c5:	89 f2                	mov    %esi,%edx$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	89 f9                	mov    %edi,%ecx$/;"	l
f01068c9	obj/kern/kernel.asm	/^f01068c9:	d3 e2                	shl    %cl,%edx$/;"	d
f01068cb	obj/kern/kernel.asm	/^f01068cb:	09 d0                	or     %edx,%eax$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	89 f2                	mov    %esi,%edx$/;"	l
f01068cf	obj/kern/kernel.asm	/^f01068cf:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	d3 ea                	shr    %cl,%edx$/;"	d
f01068d5	obj/kern/kernel.asm	/^f01068d5:	83 c4 20             	add    $0x20,%esp$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	5e                   	pop    %esi$/;"	l
f01068d9	obj/kern/kernel.asm	/^f01068d9:	5f                   	pop    %edi$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	5d                   	pop    %ebp$/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db:	c3                   	ret    $/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	85 c9                	test   %ecx,%ecx$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	75 0b                	jne    f01068eb <__umoddi3+0xe3>$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	31 d2                	xor    %edx,%edx$/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	f7 f1                	div    %ecx$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	89 c1                	mov    %eax,%ecx$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	89 f0                	mov    %esi,%eax$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	31 d2                	xor    %edx,%edx$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	f7 f1                	div    %ecx$/;"	l
f01068f1	obj/kern/kernel.asm	/^f01068f1:	89 f8                	mov    %edi,%eax$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	e9 3e ff ff ff       	jmp    f0106836 <__umoddi3+0x2e>$/;"	l
f01068f8	obj/kern/kernel.asm	/^f01068f8:	89 f2                	mov    %esi,%edx$/;"	l
f01068fa	obj/kern/kernel.asm	/^f01068fa:	83 c4 20             	add    $0x20,%esp$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	5e                   	pop    %esi$/;"	l
f01068fe	obj/kern/kernel.asm	/^f01068fe:	5f                   	pop    %edi$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	5d                   	pop    %ebp$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	c3                   	ret    $/;"	l
f0106901	obj/kern/kernel.asm	/^f0106901:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	39 f5                	cmp    %esi,%ebp$/;"	l
f0106906	obj/kern/kernel.asm	/^f0106906:	72 04                	jb     f010690c <__umoddi3+0x104>$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	39 f9                	cmp    %edi,%ecx$/;"	l
f010690a	obj/kern/kernel.asm	/^f010690a:	77 06                	ja     f0106912 <__umoddi3+0x10a>$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	89 f2                	mov    %esi,%edx$/;"	l
f010690e	obj/kern/kernel.asm	/^f010690e:	29 cf                	sub    %ecx,%edi$/;"	l
f0106910	obj/kern/kernel.asm	/^f0106910:	19 ea                	sbb    %ebp,%edx$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	89 f8                	mov    %edi,%eax$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	5e                   	pop    %esi$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	5f                   	pop    %edi$/;"	l
f0106919	obj/kern/kernel.asm	/^f0106919:	5d                   	pop    %ebp$/;"	l
f010691a	obj/kern/kernel.asm	/^f010691a:	c3                   	ret    $/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	90                   	nop$/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c:	89 d1                	mov    %edx,%ecx$/;"	l
f010691e	obj/kern/kernel.asm	/^f010691e:	89 c5                	mov    %eax,%ebp$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	eb 8d                	jmp    f01068b7 <__umoddi3+0xaf>$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	66 90                	xchg   %ax,%ax$/;"	l
f010692c	obj/kern/kernel.asm	/^f010692c:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	72 ea                	jb     f010691c <__umoddi3+0x114>$/;"	l
f0106932	obj/kern/kernel.asm	/^f0106932:	89 f1                	mov    %esi,%ecx$/;"	l
f0106934	obj/kern/kernel.asm	/^f0106934:	eb 81                	jmp    f01068b7 <__umoddi3+0xaf>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	obj/kern/kernel.asm	/^                flag = 1;$/;"	d
flag	obj/kern/kernel.asm	/^        flag = 0;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/kern/kernel.asm	/^            i = ROUNDDOWN(i,PGSIZE);$/;"	d
i	obj/kern/kernel.asm	/^        i = 1;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idle	obj/kern/kernel.asm	/^        idle = thiscpu->cpu_env;$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	obj/kern/kernel.asm	/^            idx = (cur_id + i) % NENV;$/;"	d
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f
kstacktop_i	obj/kern/kernel.asm	/^            kstacktop_i = KSTACKTOP - i * (KSTKSIZE + KSTKGAP);$/;"	d
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n0	obj/kern/kernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/kern/kernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/badsegment.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/badsegment.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/breakpoint.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/breakpoint.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/buggyhello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/buggyhello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/buggyhello2.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/buggyhello2.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/divzero.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/divzero.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/dumbfork.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/dumbfork.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/evilhello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/evilhello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/fairness.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/fairness.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultalloc.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultalloc.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultallocbad.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultallocbad.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultbadhandler.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultbadhandler.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultdie.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultdie.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultevilhandler.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultevilhandler.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultnostack.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultnostack.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultread.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultread.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultreadkernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultreadkernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultregs.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultregs.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultwrite.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultwrite.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/faultwritekernel.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/faultwritekernel.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/forktree.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/forktree.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/hello.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/hello.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/idle.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/idle.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/pingpong.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/pingpong.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/pingpongs.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/pingpongs.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/primes.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/primes.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/sendpage.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/sendpage.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/softint.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/softint.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/spin.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/spin.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/stresssched.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/stresssched.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/testbss.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/testbss.asm	/^  n0 = nn.s.low;$/;"	d
n0	obj/user/yield.asm	/^	      n0 = n0 << bm;$/;"	d
n0	obj/user/yield.asm	/^  n0 = nn.s.low;$/;"	d
n1	obj/kern/kernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/kern/kernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/badsegment.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/badsegment.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/breakpoint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/breakpoint.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/buggyhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/buggyhello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/buggyhello2.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/buggyhello2.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/divzero.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/divzero.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/dumbfork.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/dumbfork.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/evilhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/evilhello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/fairness.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/fairness.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultalloc.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultalloc.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultallocbad.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultallocbad.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultbadhandler.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultbadhandler.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultdie.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultdie.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultevilhandler.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultevilhandler.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultnostack.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultnostack.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultread.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultread.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultreadkernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultreadkernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultregs.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultregs.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultwrite.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultwrite.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/faultwritekernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/faultwritekernel.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/forktree.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/forktree.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/hello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/hello.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/idle.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/idle.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/pingpong.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/pingpong.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/pingpongs.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/pingpongs.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/primes.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/primes.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/sendpage.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/sendpage.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/softint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/softint.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/spin.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/spin.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/stresssched.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/stresssched.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/testbss.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/testbss.asm	/^  n1 = nn.s.high;$/;"	d
n1	obj/user/yield.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
n1	obj/user/yield.asm	/^  n1 = nn.s.high;$/;"	d
n2	obj/kern/kernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/badsegment.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/breakpoint.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/buggyhello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/buggyhello2.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/divzero.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/dumbfork.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/evilhello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/fairness.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultalloc.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultallocbad.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultbadhandler.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultdie.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultevilhandler.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultnostack.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultread.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultreadkernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultregs.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultwrite.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/faultwritekernel.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/forktree.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/hello.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/idle.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/pingpong.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/pingpongs.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/primes.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/sendpage.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/softint.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/spin.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/stresssched.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/testbss.asm	/^	      n2 = n1 >> b;$/;"	d
n2	obj/user/yield.asm	/^	      n2 = n1 >> b;$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^            nextfree = ROUNDUP((char *) nextfree, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^                        num = getuint(&ap,lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^                        num = getuint(&ap,lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	/^#define offsetof(/;"	d
old_ebp	obj/kern/kernel.asm	/^            old_ebp = *(uint32_t *) ebp;$/;"	d
old_ret	obj/kern/kernel.asm	/^            old_ret = *(((uint32_t *) old_ebp) + 1);                                                         $/;"	d
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		    page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^                page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^            page_free_list = pp;$/;"	d
page_free_list	obj/kern/kernel.asm	/^        page_free_list = pagep->pp_link;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^        pages = boot_alloc(npages * sizeof(struct PageInfo ));$/;"	d
panic	inc/assert.h	/^#define panic(/;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/kern/kernel.asm	/^        perm = perm | PTE_P | PTE_U ;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^        ph = (struct Proghdr *)((uint8_t *) elfhdr + elfhdr->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_function	gradelib.py	/^from __future__ import print_function$/;"	i
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptpp	obj/kern/kernel.asm	/^            ptpp = page2kva(pa2page(PTE_ADDR(pgdir[PDX(va)])));   $/;"	d
ptpp	obj/kern/kernel.asm	/^            ptpp = pgdir_walk(pgdir,(void *)temp_va,1);$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q0	obj/kern/kernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/badsegment.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/breakpoint.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/buggyhello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/buggyhello2.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/divzero.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/dumbfork.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/evilhello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/fairness.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultalloc.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultallocbad.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultbadhandler.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultdie.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultevilhandler.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultnostack.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultread.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultreadkernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultregs.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultwrite.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/faultwritekernel.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/forktree.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/hello.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/idle.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/pingpong.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/pingpongs.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/primes.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/sendpage.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/softint.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/spin.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/stresssched.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/testbss.asm	/^		  q0 = 1;$/;"	d
q0	obj/user/yield.asm	/^		  q0 = 1;$/;"	d
q1	obj/kern/kernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/badsegment.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/breakpoint.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/buggyhello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/buggyhello2.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/divzero.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/dumbfork.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/evilhello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/fairness.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultalloc.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultallocbad.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultbadhandler.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultdie.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultevilhandler.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultnostack.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultread.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultreadkernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultregs.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultwrite.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/faultwritekernel.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/forktree.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/hello.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/idle.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/pingpong.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/pingpongs.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/primes.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/sendpage.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/softint.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/spin.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/stresssched.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/testbss.asm	/^	      q1 = 0;$/;"	d
q1	obj/user/yield.asm	/^	      q1 = 0;$/;"	d
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/user/forktree.asm	/^        r = sys_getenvid();$/;"	d
r	obj/user/pingpong.asm	/^        r = sys_getenvid();$/;"	d
r	obj/user/pingpongs.asm	/^        r = sys_getenvid();$/;"	d
r	obj/user/primes.asm	/^        r = sys_getenvid();$/;"	d
r	obj/user/sendpage.asm	/^        r = sys_getenvid();$/;"	d
r	obj/user/spin.asm	/^        r = sys_getenvid();$/;"	d
r	obj/user/stresssched.asm	/^        r = sys_getenvid();$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
re	grade-lab1	/^import re$/;"	i
re	grade-lab4	/^import re$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	obj/kern/kernel.asm	/^            result = nextfree;$/;"	d
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_cgetc();$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_env_destroy(a1);$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_env_set_pgfault_upcall(a1, (void*)a2);$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_env_set_status(a1, a2);$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_exofork();$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_getenvid();$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_page_alloc(a1, (void *)a2, a3);$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_page_map(a1, (void *)a2, a3, (void *)a4, a5);$/;"	d
ret	obj/kern/kernel.asm	/^                ret = sys_page_unmap(a1, (void *)a2);$/;"	d
ret	obj/kern/kernel.asm	/^            ret = old_ret;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon5	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	obj/kern/kernel.asm	/^        size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	/^#define spin_initlock(/;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	/^#define static_assert(/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	/^#define thiscpu /;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/breakpoint.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/buggyhello.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/divzero.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/evilhello.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/fairness.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultalloc.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultdie.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultnostack.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultread.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultregs.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultwrite.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/forktree.asm	/^            thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/hello.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/idle.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/pingpong.asm	/^            thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/pingpongs.asm	/^            thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/primes.asm	/^            thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/sendpage.asm	/^            thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/softint.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/spin.asm	/^            thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/stresssched.asm	/^            thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/testbss.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
thisenv	obj/user/yield.asm	/^        thisenv = envs + ENVX(sys_getenvid()); \/\/ENVX(idx) equal to ENVX[idx];$/;"	d
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^                user_mem_check_addr = (i<(uint32_t)va?(uint32_t)va:i);$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf	obj/kern/kernel.asm	/^                utf = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
utf	obj/kern/kernel.asm	/^                utf = (struct UTrapframe *)(tf->tf_esp - sizeof(struct UTrapframe) - 4);$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
va_end	inc/stdarg.h	/^#define va_end(/;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	/^#define va_start(/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	/^#define warn(/;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon5	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
