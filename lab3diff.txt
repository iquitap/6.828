diff --git a/kern/env.c b/kern/env.c
index 03f1bb3..21fd0f6 100644
--- a/kern/env.c
+++ b/kern/env.c
@@ -116,6 +116,14 @@ env_init(void)
 {
 	// Set up envs array
 	// LAB 3: Your code here.
+        cprintf("env_init:\n");
+        cprintf("NENV: %d\n",NENV);
+        int i;
+        for(i = NENV - 1;i >= 0; i--){
+            envs[i].env_id = 0;
+            envs[i].env_link = env_free_list;
+            env_free_list = &envs[i];
+        }
 
 	// Per-CPU part of the initialization
 	env_init_percpu();
@@ -180,6 +188,10 @@ env_setup_vm(struct Env *e)
 
 	// LAB 3: Your code here.
 
+        p->pp_ref++;
+        e->env_pgdir = (pde_t *)page2kva(p);
+        memcpy(e->env_pgdir, kern_pgdir, PGSIZE);
+
 	// UVPT maps the env's own page table read-only.
 	// Permissions: kernel R, user R
 	e->env_pgdir[PDX(UVPT)] = PADDR(e->env_pgdir) | PTE_P | PTE_U;
@@ -267,6 +279,15 @@ region_alloc(struct Env *e, void *va, size_t len)
 	//   'va' and 'len' values that are not page-aligned.
 	//   You should round va down, and round (va + len) up.
 	//   (Watch out for corner-cases!)
+      
+        cprintf("region_alloc\n");
+        void *begin = ROUNDDOWN(va, PGSIZE), *end = ROUNDUP(va+len, PGSIZE);
+        for (; begin < end; begin += PGSIZE) {
+            struct PageInfo *pg = page_alloc(0);    
+            if (!pg) //not initialized
+                panic("region_alloc failed!");
+            page_insert(e->env_pgdir, pg, begin, PTE_W | PTE_U);                                 
+        }
 }
 
 //
@@ -323,11 +344,38 @@ load_icode(struct Env *e, uint8_t *binary)
 	//  What?  (See env_run() and env_pop_tf() below.)
 
 	// LAB 3: Your code here.
-
-	// Now map one page for the program's initial stack
+        
+        cprintf("load_icode\n");
+        struct Elf* elfhdr = (struct Elf *)binary;
+        struct Proghdr *ph,*eph;
+
+        if(elfhdr->e_magic != ELF_MAGIC)    //检查是否为ELF文件
+            panic("load_icode fail at elf\n");
+
+        ph = (struct Proghdr *)((uint8_t *) elfhdr + elfhdr->e_phoff);
+        eph = ph + elfhdr->e_phnum;
+
+        lcr3(PADDR(e->env_pgdir));   //将页目录基址寄存器设置为新环境的参数
+        for( ;ph < eph;ph++){
+            if(ph->p_type == ELF_PROG_LOAD){
+	    //  You should only load segments with ph->p_type ==  ELF_PROG_LOAD
+                if(ph->p_filesz > ph->p_memsz)
+                    panic("load_icode fail at filesz bigger than memsz\n");
+
+                region_alloc(e, (void *)ph->p_va, ph->p_memsz); 
+                memset((void *)ph->p_va, 0, ph->p_memsz);
+                memmove((void *)ph->p_va, binary + ph->p_offset, ph->p_filesz);
+            }
+        }
+        lcr3(PADDR(kern_pgdir));    //将页目录基址寄存器设为原值
+        e->env_tf.tf_eip = elfhdr->e_entry; //将入口地址存入trapfame寄存器结构
+        
+	// No:w map one page for the program's initial stack
 	// at virtual address USTACKTOP - PGSIZE.
 
 	// LAB 3: Your code here.
+        
+        region_alloc(e, (void *)(USTACKTOP - PGSIZE), PGSIZE);
 }
 
 //
@@ -341,6 +389,14 @@ void
 env_create(uint8_t *binary, enum EnvType type)
 {
 	// LAB 3: Your code here.
+        cprintf("env_create\n");
+        struct Env *env_new_store;
+        if(env_alloc(&env_new_store ,0) < 0)
+            panic("env_create fail at env_alloc!\n");
+	cprintf("env_create: curenv:%x\n", curenv);
+        load_icode(env_new_store,binary);
+        
+        env_new_store->env_type = type;
 }
 
 //
@@ -457,6 +513,20 @@ env_run(struct Env *e)
 
 	// LAB 3: Your code here.
 
-	panic("env_run not yet implemented");
+	//panic("env_run not yet implemented");
+        cprintf("env_run\n");
+        cprintf("curenv=%x e=%x\n",curenv,e);
+        if(curenv != e){
+            if(curenv != NULL)
+                if(curenv->env_status == ENV_RUNNING)
+                    curenv->env_status = ENV_RUNNABLE;
+            curenv = e;
+            curenv->env_status = ENV_RUNNING;
+            curenv->env_runs++;
+            lcr3(PADDR(curenv->env_pgdir));
+            //lcr3(curenv->env_cr3);
+            // Restores the register values in the Trapframe with the 'iret' instruction.
+        }
+        env_pop_tf(&(curenv->env_tf));
 }
 
diff --git a/kern/init.c b/kern/init.c
index e6c7410..f5f95ef 100644
--- a/kern/init.c
+++ b/kern/init.c
@@ -44,7 +44,7 @@ i386_init(void)
 #endif // TEST*
 
 	// We only have one user environment for now, so just run it.
-	env_run(&envs[0]);
+        env_run(&envs[0]);
 }
 
 
diff --git a/kern/kdebug.c b/kern/kdebug.c
index 5aeff3c..c3d80c4 100644
--- a/kern/kdebug.c
+++ b/kern/kdebug.c
@@ -143,6 +143,9 @@ debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)
 		// Return -1 if it is not.  Hint: Call user_mem_check.
 		// LAB 3: Your code here.
 
+                if(user_mem_check(curenv, usd, sizeof(struct UserStabData), PTE_U) < 0)
+                    return -1;
+
 		stabs = usd->stabs;
 		stab_end = usd->stab_end;
 		stabstr = usd->stabstr;
@@ -150,6 +153,11 @@ debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)
 
 		// Make sure the STABS and string table memory is valid.
 		// LAB 3: Your code here.
+                
+                if((user_mem_check(curenv, stabs, stab_end - stabs, PTE_U) < 0) 
+                    || user_mem_check(curenv, stabstr, stabstr_end - stabstr, PTE_U) < 0)
+                    return -1;
+                    
 	}
 
 	// String table validity checks
diff --git a/kern/monitor.c b/kern/monitor.c
index be913d4..8acc457 100644
--- a/kern/monitor.c
+++ b/kern/monitor.c
@@ -25,6 +25,7 @@ struct Command {
 static struct Command commands[] = {
 	{ "help", "Display this list of commands", mon_help },
 	{ "kerninfo", "Display information about the kernel", mon_kerninfo },
+        { "backtrace", "backtrace", mon_backtrace}
 };
 #define NCOMMANDS (sizeof(commands)/sizeof(commands[0]))
 
diff --git a/kern/pmap.c b/kern/pmap.c
index ac5ae40..65326c5 100644
--- a/kern/pmap.c
+++ b/kern/pmap.c
@@ -160,6 +160,9 @@ mem_init(void)
 	//////////////////////////////////////////////////////////////////////
 	// Make 'envs' point to an array of size 'NENV' of 'struct Env'.
 	// LAB 3: Your code here.
+    
+        envs = (struct Env*)boot_alloc(sizeof(struct Env)*NENV);
+        memset(envs, 0, sizeof(struct Env)*NENV);
 
 	//////////////////////////////////////////////////////////////////////
 	// Now that we've allocated the initial kernel data structures, we set
@@ -183,7 +186,7 @@ mem_init(void)
 	//      (ie. perm = PTE_U | PTE_P)
 	//    - pages itself -- kernel RW, user NONE
 	// Your code goes here:
-<<<<<<< HEAD
+//<<<<<<< HEAD
 
 	//////////////////////////////////////////////////////////////////////
 	// Map the 'envs' array read-only by the user at linear address UENVS
@@ -194,7 +197,7 @@ mem_init(void)
 	// LAB 3: Your code here.
 
 	//////////////////////////////////////////////////////////////////////
-=======
+//======= 这里好像注释的位置混乱了，产生原因不明，但不影响理解与完成
         
         boot_map_region(kern_pgdir, 
                         UPAGES, 
@@ -202,8 +205,13 @@ mem_init(void)
                         PADDR(pages),
                         (PTE_U | PTE_P));
 
+        boot_map_region(kern_pgdir,
+                        UENVS,
+                        ROUNDUP((npages * (sizeof(struct PageInfo))), PGSIZE),
+                        PADDR(envs),
+                        (PTE_U | PTE_P));
         //////////////////////////////////////////////////////////////////////
->>>>>>> lab2
+//>>>>>>> lab2
 	// Use the physical memory that 'bootstack' refers to as the kernel
 	// stack.  The kernel stack grows down from virtual address KSTACKTOP.
 	// We consider the entire range from [KSTACKTOP-PTSIZE, KSTACKTOP)
@@ -339,6 +347,7 @@ struct PageInfo *
 page_alloc(int alloc_flags)
 {
 	// Fill this function in
+        //cprintf("page_alloc\n");
         if(!page_free_list){
             return NULL;
         }
@@ -611,8 +620,42 @@ int
 user_mem_check(struct Env *env, const void *va, size_t len, int perm)
 {
 	// LAB 3: Your code here.
-
+        uint32_t begin = (uint32_t) ROUNDDOWN(va, PGSIZE);
+        uint32_t end = (uint32_t) ROUNDUP(va+len,PGSIZE);
+        uint32_t i;
+        perm = perm | PTE_P | PTE_U ;
+        for(i = begin; i < end ; i+= PGSIZE){
+            if(i >= ULIM){
+                //user_mem_check_addr = i;  !!!
+                user_mem_check_addr = (i<(uint32_t)va?(uint32_t)va:i);
+                //panic("user_mem_check fail at va more or equal to ULIM!\n");
+                return -E_FAULT;
+            }
+            pte_t *pte = pgdir_walk(env->env_pgdir, (void*)i, 0);
+            if(pte == NULL || !(*pte & PTE_P) || (*pte & perm) != perm){
+                //panic("user_mem_check fail at pte!\n");
+                //user_mem_check_addr = i;
+                user_mem_check_addr = (i<(uint32_t)va?(uint32_t)va:i);
+                return -E_FAULT;
+            }
+            i = ROUNDDOWN(i,PGSIZE);
+        }
 	return 0;
+        /* uint32_t begin = (uint32_t) ROUNDDOWN(va, PGSIZE); 
+        uint32_t end = (uint32_t) ROUNDUP(va+len, PGSIZE);
+            uint32_t i;
+            for (i = (uint32_t)begin; i < end; i+=PGSIZE) {
+                        pte_t *pte = pgdir_walk(env->env_pgdir, (void*)i, 0);
+                            
+                                if ((i>=ULIM) || !pte || !(*pte & PTE_P) || ((*pte & perm) != perm)) {
+                                                user_mem_check_addr = (i<(uint32_t)va?(uint32_t)va:i);
+                                                            return -E_FAULT;
+                                                                    
+                                }
+                                    
+            }
+                cprintf("user_mem_check success va: %x, len: %x\n", va, len);
+                    return 0;*/
 }
 
 //
diff --git a/kern/syscall.c b/kern/syscall.c
index 3e11eee..bdb468e 100644
--- a/kern/syscall.c
+++ b/kern/syscall.c
@@ -21,6 +21,8 @@ sys_cputs(const char *s, size_t len)
 	// Destroy the environment if not.
 
 	// LAB 3: Your code here.
+        
+        user_mem_assert(curenv, s, len, PTE_U);
 
 	// Print the string supplied by the user.
 	cprintf("%.*s", len, s);
@@ -70,11 +72,25 @@ syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4,
 	// Return any appropriate return value.
 	// LAB 3: Your code here.
 
-	panic("syscall not implemented");
-
+	//panic("syscall not implemented");
+        //case查询 inc/syscall.h
+        uint32_t ret = 0;
 	switch (syscallno) {
-	default:
+            case SYS_cputs: 
+                sys_cputs((const char *)a1,a2);
+                break;
+            case SYS_cgetc:
+                ret = sys_cgetc();
+                break;
+            case SYS_getenvid:
+                ret = sys_getenvid();
+                break;
+            case SYS_env_destroy:
+                ret = sys_env_destroy(a1);
+                break;
+	    default:
 		return -E_NO_SYS;
 	}
+        return ret;
 }
 
diff --git a/kern/trap.c b/kern/trap.c
index 82c517d..e35d2ee 100644
--- a/kern/trap.c
+++ b/kern/trap.c
@@ -65,6 +65,49 @@ trap_init(void)
 	extern struct Segdesc gdt[];
 
 	// LAB 3: Your code here.
+        
+        extern void th0();
+        extern void th1();
+        extern void th3();
+        extern void th4();
+        extern void th5();
+        extern void th6();
+        extern void th7();
+        extern void th8();
+        extern void th9();
+        extern void th10();
+        extern void th11();
+        extern void th12();
+        extern void th13();
+        extern void th14();
+        extern void th16();
+        extern void th48();
+        
+        SETGATE(idt[0], 0, GD_KT, th0, 0);
+        SETGATE(idt[1], 0, GD_KT, th1, 0);
+        SETGATE(idt[3], 0, GD_KT, th3, 3);
+        SETGATE(idt[4], 0, GD_KT, th4, 0);
+        SETGATE(idt[5], 0, GD_KT, th5, 0);
+        SETGATE(idt[6], 0, GD_KT, th6, 0);
+        SETGATE(idt[7], 0, GD_KT, th7, 0);
+        SETGATE(idt[8], 0, GD_KT, th8, 0);
+        SETGATE(idt[9], 0, GD_KT, th9, 0);
+        SETGATE(idt[10], 0, GD_KT, th10, 0);
+        SETGATE(idt[11], 0, GD_KT, th11, 0);
+        SETGATE(idt[12], 0, GD_KT, th12, 0);
+        SETGATE(idt[13], 0, GD_KT, th13, 0);
+        SETGATE(idt[14], 0, GD_KT, th14, 0);
+        SETGATE(idt[16], 0, GD_KT, th16, 0);
+        SETGATE(idt[48], 0, GD_KT, th48, 3); //syscall
+
+        //challenge
+        /*extern void (*funcs[])();
+        void (*func)() = funcs[0];
+        int i;
+        for(i = 0; i <= 16; i++){
+            if(i!=2 && i!= 15)
+                SETGATE(idt[i], 0, GD_KT, funcs[i], 0);
+        }*/
 
 	// Per-CPU setup 
 	trap_init_percpu();
@@ -143,7 +186,28 @@ trap_dispatch(struct Trapframe *tf)
 {
 	// Handle processor exceptions.
 	// LAB 3: Your code here.
-
+        //cprintf("trap_dispath：%d\n",tf->tf_trapno); 
+        cprintf("T_BRKPT:%d\n",T_BRKPT);
+        if(tf->tf_trapno == T_PGFLT){
+            page_fault_handler(tf);
+            return ;
+        }      
+        if(tf->tf_trapno == T_BRKPT){
+            //cprintf("test for brkpt\n");
+            monitor(tf);
+            return ;
+        }
+        if(tf->tf_trapno == T_SYSCALL){
+            if((tf->tf_regs.reg_eax = syscall(tf->tf_regs.reg_eax,
+                                             tf->tf_regs.reg_edx,
+                                             tf->tf_regs.reg_ecx,
+                                             tf->tf_regs.reg_ebx,
+                                             tf->tf_regs.reg_edi,
+                                             tf->tf_regs.reg_esi
+                                             )) < 0)
+                panic("trap_dispatch fail at syscall!\n");
+            return ;
+        }
 	// Unexpected trap: The user process or the kernel has a bug.
 	print_trapframe(tf);
 	if (tf->tf_cs == GD_KT)
@@ -204,6 +268,9 @@ page_fault_handler(struct Trapframe *tf)
 	// Handle kernel-mode page faults.
 
 	// LAB 3: Your code here.
+        
+        if((tf->tf_cs&3) == 0)
+            panic("page_fault fail!\n");
 
 	// We've already handled kernel-mode exceptions, so if we get here,
 	// the page fault happened in user mode.
diff --git a/kern/trapentry.S b/kern/trapentry.S
index 22fc640..ea3ff64 100644
--- a/kern/trapentry.S
+++ b/kern/trapentry.S
@@ -46,10 +46,37 @@
 /*
  * Lab 3: Your code here for generating entry points for the different traps.
  */
+        // trap number can find in inc/trap. h and mit website
+        
+        TRAPHANDLER_NOEC(th0, 0)
+        TRAPHANDLER_NOEC(th1, 1)
+        TRAPHANDLER_NOEC(th3, 3)
+        TRAPHANDLER_NOEC(th4, 4)
+        TRAPHANDLER_NOEC(th5, 5)
+        TRAPHANDLER_NOEC(th6, 6)
+        TRAPHANDLER_NOEC(th7, 7)
+        TRAPHANDLER(th8, 8)
+        TRAPHANDLER_NOEC(th9, 9)
+        TRAPHANDLER(th10, 10)
+        TRAPHANDLER(th11, 11)
+        TRAPHANDLER(th12, 12)
+        TRAPHANDLER(th13, 13)
+        TRAPHANDLER(th14, 14)
+        TRAPHANDLER_NOEC(th16,16)
 
-
-
+        TRAPHANDLER_NOEC(th48,48)   //syscall
 /*
  * Lab 3: Your code here for _alltraps
  */
 
+_alltraps:
+        pushl %ds
+        pushl %es
+        pushal
+        pushl $GD_KD
+        popl %ds
+        pushl $GD_KD
+        popl %es
+        pushl %esp
+        call trap
+        
diff --git a/lib/libmain.c b/lib/libmain.c
index 8a14b29..fd69dfc 100644
--- a/lib/libmain.c
+++ b/lib/libmain.c
@@ -13,8 +13,11 @@ libmain(int argc, char **argv)
 {
 	// set thisenv to point at our Env structure in envs[].
 	// LAB 3: Your code here.
-	thisenv = 0;
 
+        //注意第二行的注释
+        thisenv = envs + ENVX(sys_getenvid()); //ENVX(idx) equal to ENVX[idx];
+
+        
 	// save the name of the program so that panic() can use it
 	if (argc > 0)
 		binaryname = argv[0];
diff --git a/tags b/tags
index 00d2829..80f25dd 100644
--- a/tags
+++ b/tags
@@ -4,2967 +4,7917 @@
 !_TAG_PROGRAM_NAME	Exuberant Ctags	//
 !_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
 !_TAG_PROGRAM_VERSION	5.8	//
--format	./GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
--prefix	./GNUmakefile	/^	git archive --prefix=lab$(LAB)\/ --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
-ALT	./kern/console.c	/^#define ALT	/;"	d	file:
-AR	./GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
-AS	./GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
-ASM	./lib/string.c	/^#define ASM /;"	d	file:
-ASM	./obj/kern/kernel.asm	/^#define ASM 1$/;"	d
-BACKTRACE_RE	./grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
-BUFLEN	./lib/readline.c	/^#define BUFLEN /;"	d	file:
-BUFLEN	./obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
-C	./kern/console.c	/^#define C(/;"	d	file:
-CAPSLOCK	./kern/console.c	/^#define CAPSLOCK	/;"	d	file:
-CC	./GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
-CFLAGS	./GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
-CGA_BASE	./kern/console.h	/^#define CGA_BASE	/;"	d
-CGA_BUF	./kern/console.h	/^#define CGA_BUF	/;"	d
-CHECKSUM	./kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
-CMDBUF_SIZE	./kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
-CMDBYTE	./inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
-COLORS	./gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
-COM1	./kern/console.c	/^#define COM1	/;"	d	file:
-COM_DLL	./kern/console.c	/^#define COM_DLL	/;"	d	file:
-COM_DLM	./kern/console.c	/^#define COM_DLM	/;"	d	file:
-COM_FCR	./kern/console.c	/^#define COM_FCR	/;"	d	file:
-COM_IER	./kern/console.c	/^#define COM_IER	/;"	d	file:
-COM_IER_RDI	./kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
-COM_IIR	./kern/console.c	/^#define COM_IIR	/;"	d	file:
-COM_LCR	./kern/console.c	/^#define COM_LCR	/;"	d	file:
-COM_LCR_DLAB	./kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
-COM_LCR_WLEN8	./kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
-COM_LSR	./kern/console.c	/^#define COM_LSR	/;"	d	file:
-COM_LSR_DATA	./kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
-COM_LSR_TSRE	./kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
-COM_LSR_TXRDY	./kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
-COM_MCR	./kern/console.c	/^#define COM_MCR	/;"	d	file:
-COM_MCR_DTR	./kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
-COM_MCR_OUT2	./kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
-COM_MCR_RTS	./kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
-COM_RX	./kern/console.c	/^#define COM_RX	/;"	d	file:
-COM_TX	./kern/console.c	/^#define COM_TX	/;"	d	file:
-CONSBUFSIZE	./kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
-CR0_AM	./inc/mmu.h	/^#define CR0_AM	/;"	d
-CR0_CD	./inc/mmu.h	/^#define CR0_CD	/;"	d
-CR0_EM	./inc/mmu.h	/^#define CR0_EM	/;"	d
-CR0_ET	./inc/mmu.h	/^#define CR0_ET	/;"	d
-CR0_MP	./inc/mmu.h	/^#define CR0_MP	/;"	d
-CR0_NE	./inc/mmu.h	/^#define CR0_NE	/;"	d
-CR0_NW	./inc/mmu.h	/^#define CR0_NW	/;"	d
-CR0_PE	./inc/mmu.h	/^#define CR0_PE	/;"	d
-CR0_PG	./inc/mmu.h	/^#define CR0_PG	/;"	d
-CR0_TS	./inc/mmu.h	/^#define CR0_TS	/;"	d
-CR0_WP	./inc/mmu.h	/^#define CR0_WP	/;"	d
-CR4_DE	./inc/mmu.h	/^#define CR4_DE	/;"	d
-CR4_MCE	./inc/mmu.h	/^#define CR4_MCE	/;"	d
-CR4_PCE	./inc/mmu.h	/^#define CR4_PCE	/;"	d
-CR4_PSE	./inc/mmu.h	/^#define CR4_PSE	/;"	d
-CR4_PVI	./inc/mmu.h	/^#define CR4_PVI	/;"	d
-CR4_TSD	./inc/mmu.h	/^#define CR4_TSD	/;"	d
-CR4_VME	./inc/mmu.h	/^#define CR4_VME	/;"	d
-CRT_COLS	./kern/console.h	/^#define CRT_COLS	/;"	d
-CRT_ROWS	./kern/console.h	/^#define CRT_ROWS	/;"	d
-CRT_SIZE	./kern/console.h	/^#define CRT_SIZE	/;"	d
-CTL	./kern/console.c	/^#define CTL	/;"	d	file:
-CURRENT_TEST	./gradelib.py	/^CURRENT_TEST = None$/;"	v
-Command	./kern/monitor.c	/^struct Command {$/;"	s	file:
-Disassembly	./obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
-Disassembly	./obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
-E0ESC	./kern/console.c	/^#define E0ESC	/;"	d	file:
-ELFHDR	./boot/main.c	/^#define ELFHDR	/;"	d	file:
-ELF_MAGIC	./inc/elf.h	/^#define ELF_MAGIC /;"	d
-ELF_PROG_FLAG_EXEC	./inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
-ELF_PROG_FLAG_READ	./inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
-ELF_PROG_FLAG_WRITE	./inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
-ELF_PROG_LOAD	./inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
-ELF_SHN_UNDEF	./inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
-ELF_SHT_NULL	./inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
-ELF_SHT_PROGBITS	./inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
-ELF_SHT_STRTAB	./inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
-ELF_SHT_SYMTAB	./inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
-EXTPHYSMEM	./inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
-E_BAD_ENV	./inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
-E_FAULT	./inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon1
-E_INVAL	./inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon1
-E_NO_FREE_ENV	./inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
-E_NO_MEM	./inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
-E_NO_SYS	./inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon1
-E_UNSPECIFIED	./inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
-Eipdebuginfo	./kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
-Elf	./inc/elf.h	/^struct Elf {$/;"	s
-FEC_PR	./inc/mmu.h	/^#define FEC_PR	/;"	d
-FEC_U	./inc/mmu.h	/^#define FEC_U	/;"	d
-FEC_WR	./inc/mmu.h	/^#define FEC_WR	/;"	d
-FL_AC	./inc/mmu.h	/^#define FL_AC	/;"	d
-FL_AF	./inc/mmu.h	/^#define FL_AF	/;"	d
-FL_CF	./inc/mmu.h	/^#define FL_CF	/;"	d
-FL_DF	./inc/mmu.h	/^#define FL_DF	/;"	d
-FL_ID	./inc/mmu.h	/^#define FL_ID	/;"	d
-FL_IF	./inc/mmu.h	/^#define FL_IF	/;"	d
-FL_IOPL_0	./inc/mmu.h	/^#define FL_IOPL_0	/;"	d
-FL_IOPL_1	./inc/mmu.h	/^#define FL_IOPL_1	/;"	d
-FL_IOPL_2	./inc/mmu.h	/^#define FL_IOPL_2	/;"	d
-FL_IOPL_3	./inc/mmu.h	/^#define FL_IOPL_3	/;"	d
-FL_IOPL_MASK	./inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
-FL_NT	./inc/mmu.h	/^#define FL_NT	/;"	d
-FL_OF	./inc/mmu.h	/^#define FL_OF	/;"	d
-FL_PF	./inc/mmu.h	/^#define FL_PF	/;"	d
-FL_RF	./inc/mmu.h	/^#define FL_RF	/;"	d
-FL_SF	./inc/mmu.h	/^#define FL_SF	/;"	d
-FL_TF	./inc/mmu.h	/^#define FL_TF	/;"	d
-FL_VIF	./inc/mmu.h	/^#define FL_VIF	/;"	d
-FL_VIP	./inc/mmu.h	/^#define FL_VIP	/;"	d
-FL_VM	./inc/mmu.h	/^#define FL_VM	/;"	d
-FL_ZF	./inc/mmu.h	/^#define FL_ZF	/;"	d
-GCCPREFIX	./GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
-GCC_LIB	./GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
-GDBClient	./gradelib.py	/^class GDBClient(object):$/;"	c
-GDBPORT	./GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
-GD_KD	./inc/memlayout.h	/^#define GD_KD /;"	d
-GD_KT	./inc/memlayout.h	/^#define GD_KT /;"	d
-GD_TSS0	./inc/memlayout.h	/^#define GD_TSS0 /;"	d
-GD_UD	./inc/memlayout.h	/^#define GD_UD /;"	d
-GD_UT	./inc/memlayout.h	/^#define GD_UT /;"	d
-Gatedesc	./inc/mmu.h	/^struct Gatedesc {$/;"	s
-IMAGES	./GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
-IOPHYSMEM	./inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
-JOS_INC_ASSERT_H	./inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
-JOS_INC_ELF_H	./inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
-JOS_INC_ERROR_H	./inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
-JOS_INC_MEMLAYOUT_H	./inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
-JOS_INC_MMU_H	./inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
-JOS_INC_STDARG_H	./inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
-JOS_INC_STDIO_H	./inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
-JOS_INC_STRING_H	./inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
-JOS_INC_TYPES_H	./inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
-JOS_INC_X86_H	./inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
-JOS_KBDREG_H	./inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
-JOS_KERN_KDEBUG_H	./kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
-JOS_KERN_MONITOR_H	./kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
-JOS_STAB_H	./inc/stab.h	/^#define JOS_STAB_H$/;"	d
-KBCMDP	./inc/kbdreg.h	/^#define	KBCMDP	/;"	d
-KBC_AUXDISABLE	./inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
-KBC_AUXECHO	./inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
-KBC_AUXENABLE	./inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
-KBC_AUXTEST	./inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
-KBC_AUXWRITE	./inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
-KBC_DISABLE	./inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
-KBC_ECHO	./inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
-KBC_ENABLE	./inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
-KBC_KBDDISABLE	./inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
-KBC_KBDECHO	./inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
-KBC_KBDENABLE	./inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
-KBC_KBDTEST	./inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
-KBC_MODEIND	./inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
-KBC_PULSE0	./inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
-KBC_PULSE1	./inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
-KBC_PULSE2	./inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
-KBC_PULSE3	./inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
-KBC_RAMREAD	./inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
-KBC_RAMWRITE	./inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
-KBC_RESEND	./inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
-KBC_RESET	./inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
-KBC_SELFTEST	./inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
-KBC_SETDEFAULT	./inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
-KBC_SETTABLE	./inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
-KBC_TYPEMATIC	./inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
-KBDATAP	./inc/kbdreg.h	/^#define	KBDATAP	/;"	d
-KBOUTP	./inc/kbdreg.h	/^#define	KBOUTP	/;"	d
-KBR_ACK	./inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
-KBR_BREAK	./inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
-KBR_ECHO	./inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
-KBR_EXTENDED	./inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
-KBR_FAILURE	./inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
-KBR_OVERRUN	./inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
-KBR_RESEND	./inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
-KBR_RSTDONE	./inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
-KBSTATP	./inc/kbdreg.h	/^#define	KBSTATP	/;"	d
-KBS_DIB	./inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
-KBS_IBF	./inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
-KBS_NOSEC	./inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
-KBS_OCMD	./inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
-KBS_PERR	./inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
-KBS_RERR	./inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
-KBS_TERR	./inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
-KBS_WARM	./inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
-KC8_CPU	./inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
-KC8_IGNSEC	./inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
-KC8_KDISABLE	./inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
-KC8_KENABLE	./inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
-KC8_MDISABLE	./inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
-KC8_MENABLE	./inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
-KC8_TRANS	./inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
-KERNBASE	./inc/memlayout.h	/^#define	KERNBASE	/;"	d
-KERN_CFLAGS	./GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
-KEY_DEL	./inc/kbdreg.h	/^#define KEY_DEL	/;"	d
-KEY_DN	./inc/kbdreg.h	/^#define KEY_DN	/;"	d
-KEY_END	./inc/kbdreg.h	/^#define KEY_END	/;"	d
-KEY_HOME	./inc/kbdreg.h	/^#define KEY_HOME	/;"	d
-KEY_INS	./inc/kbdreg.h	/^#define KEY_INS	/;"	d
-KEY_LF	./inc/kbdreg.h	/^#define KEY_LF	/;"	d
-KEY_PGDN	./inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
-KEY_PGUP	./inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
-KEY_RT	./inc/kbdreg.h	/^#define KEY_RT	/;"	d
-KEY_UP	./inc/kbdreg.h	/^#define KEY_UP	/;"	d
-KSTACKTOP	./inc/memlayout.h	/^#define KSTACKTOP	/;"	d
-KSTKGAP	./inc/memlayout.h	/^#define KSTKGAP	/;"	d
-KSTKSIZE	./inc/memlayout.h	/^#define KSTKSIZE	/;"	d
-K_LDCMDBYTE	./inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
-K_RDCMDBYTE	./inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
-LAB	./conf/lab.mk	/^LAB=1$/;"	m
-LABSETUP	./GNUmakefile	/^LABSETUP ?= .\/$/;"	m
-LD	./GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
-LDFLAGS	./GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
-MAKE_TIMESTAMP	./gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
-MAX	./inc/types.h	/^#define MAX(/;"	d
-MAXARGS	./kern/monitor.c	/^#define MAXARGS /;"	d	file:
-MAXERROR	./inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
-MIN	./inc/types.h	/^#define MIN(/;"	d
-MMIOBASE	./inc/memlayout.h	/^#define MMIOBASE	/;"	d
-MMIOLIM	./inc/memlayout.h	/^#define MMIOLIM	/;"	d
-MONO_BASE	./kern/console.h	/^#define MONO_BASE	/;"	d
-MONO_BUF	./kern/console.h	/^#define MONO_BUF	/;"	d
-MULTIBOOT_HEADER_FLAGS	./kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
-MULTIBOOT_HEADER_MAGIC	./kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
-NATIVE_CFLAGS	./GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
-NCC	./GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
-NCOMMANDS	./kern/monitor.c	/^#define NCOMMANDS /;"	d	file:
-NM	./GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
-NO	./kern/console.c	/^#define NO	/;"	d	file:
-NPDENTRIES	./inc/mmu.h	/^#define NPDENTRIES	/;"	d
-NPTENTRIES	./inc/mmu.h	/^#define NPTENTRIES	/;"	d
-NULL	./inc/stdio.h	/^#define NULL	/;"	d
-NULL	./inc/types.h	/^#define NULL /;"	d
-NUMLOCK	./kern/console.c	/^#define NUMLOCK	/;"	d	file:
-N_BCOMM	./inc/stab.h	/^#define	N_BCOMM	/;"	d
-N_BINCL	./inc/stab.h	/^#define	N_BINCL	/;"	d
-N_BSLINE	./inc/stab.h	/^#define	N_BSLINE	/;"	d
-N_DSLINE	./inc/stab.h	/^#define	N_DSLINE	/;"	d
-N_ECOML	./inc/stab.h	/^#define	N_ECOML	/;"	d
-N_ECOMM	./inc/stab.h	/^#define	N_ECOMM	/;"	d
-N_EINCL	./inc/stab.h	/^#define	N_EINCL	/;"	d
-N_ENTRY	./inc/stab.h	/^#define	N_ENTRY	/;"	d
-N_EXCL	./inc/stab.h	/^#define	N_EXCL	/;"	d
-N_FNAME	./inc/stab.h	/^#define	N_FNAME	/;"	d
-N_FUN	./inc/stab.h	/^#define	N_FUN	/;"	d
-N_GSYM	./inc/stab.h	/^#define	N_GSYM	/;"	d
-N_LBRAC	./inc/stab.h	/^#define	N_LBRAC	/;"	d
-N_LCSYM	./inc/stab.h	/^#define	N_LCSYM	/;"	d
-N_LENG	./inc/stab.h	/^#define	N_LENG	/;"	d
-N_LSYM	./inc/stab.h	/^#define	N_LSYM	/;"	d
-N_MAIN	./inc/stab.h	/^#define	N_MAIN	/;"	d
-N_PC	./inc/stab.h	/^#define	N_PC	/;"	d
-N_PSYM	./inc/stab.h	/^#define	N_PSYM	/;"	d
-N_RBRAC	./inc/stab.h	/^#define	N_RBRAC	/;"	d
-N_RSYM	./inc/stab.h	/^#define	N_RSYM	/;"	d
-N_SLINE	./inc/stab.h	/^#define	N_SLINE	/;"	d
-N_SO	./inc/stab.h	/^#define	N_SO	/;"	d
-N_SOL	./inc/stab.h	/^#define	N_SOL	/;"	d
-N_SSYM	./inc/stab.h	/^#define	N_SSYM	/;"	d
-N_STSYM	./inc/stab.h	/^#define	N_STSYM	/;"	d
-OBJCOPY	./GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
-OBJDIR	./GNUmakefile	/^OBJDIR := obj$/;"	m
-OBJDIRS	./GNUmakefile	/^OBJDIRS :=$/;"	m
-OBJDUMP	./GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
-OptionParser	./gradelib.py	/^from optparse import OptionParser$/;"	i
-PACKAGEDATE	./conf/lab.mk	/^PACKAGEDATE=Wed Sep 3 09:38:35 EDT 2014$/;"	m
-PDX	./inc/mmu.h	/^#define PDX(/;"	d
-PDXSHIFT	./inc/mmu.h	/^#define PDXSHIFT	/;"	d
-PERL	./GNUmakefile	/^PERL	:= perl$/;"	m
-PFTEMP	./inc/memlayout.h	/^#define PFTEMP	/;"	d
-PGADDR	./inc/mmu.h	/^#define PGADDR(/;"	d
-PGNUM	./inc/mmu.h	/^#define PGNUM(/;"	d
-PGOFF	./inc/mmu.h	/^#define PGOFF(/;"	d
-PGSHIFT	./inc/mmu.h	/^#define PGSHIFT	/;"	d
-PGSIZE	./inc/mmu.h	/^#define PGSIZE	/;"	d
-PTE_A	./inc/mmu.h	/^#define PTE_A	/;"	d
-PTE_ADDR	./inc/mmu.h	/^#define PTE_ADDR(/;"	d
-PTE_AVAIL	./inc/mmu.h	/^#define PTE_AVAIL	/;"	d
-PTE_D	./inc/mmu.h	/^#define PTE_D	/;"	d
-PTE_G	./inc/mmu.h	/^#define PTE_G	/;"	d
-PTE_P	./inc/mmu.h	/^#define PTE_P	/;"	d
-PTE_PCD	./inc/mmu.h	/^#define PTE_PCD	/;"	d
-PTE_PS	./inc/mmu.h	/^#define PTE_PS	/;"	d
-PTE_PWT	./inc/mmu.h	/^#define PTE_PWT	/;"	d
-PTE_SYSCALL	./inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
-PTE_U	./inc/mmu.h	/^#define PTE_U	/;"	d
-PTE_W	./inc/mmu.h	/^#define PTE_W	/;"	d
-PTSHIFT	./inc/mmu.h	/^#define PTSHIFT	/;"	d
-PTSIZE	./inc/mmu.h	/^#define PTSIZE	/;"	d
-PTX	./inc/mmu.h	/^#define PTX(/;"	d
-PTXSHIFT	./inc/mmu.h	/^#define PTXSHIFT	/;"	d
-Popen	./gradelib.py	/^from subprocess import check_call, Popen$/;"	i
-Proghdr	./inc/elf.h	/^struct Proghdr {$/;"	s
-Pseudodesc	./inc/mmu.h	/^struct Pseudodesc {$/;"	s
-QEMU	./GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
-QEMU	./gradelib.py	/^class QEMU(object):$/;"	c
-QEMUOPTS	./GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
-RELOC	./kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
-ROUNDDOWN	./inc/types.h	/^#define ROUNDDOWN(/;"	d
-ROUNDUP	./inc/types.h	/^#define ROUNDUP(/;"	d
-Runner	./gradelib.py	/^class Runner():$/;"	c
-SCROLLLOCK	./kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
-SECTSIZE	./boot/main.c	/^#define SECTSIZE	/;"	d	file:
-SEG	./inc/mmu.h	/^#define SEG(/;"	d
-SEG16	./inc/mmu.h	/^#define SEG16(/;"	d
-SEG_FAULT	./inc/mmu.h	/^#define SEG_FAULT	/;"	d
-SEG_NULL	./inc/mmu.h	/^#define SEG_NULL	/;"	d
-SETCALLGATE	./inc/mmu.h	/^#define SETCALLGATE(/;"	d
-SETGATE	./inc/mmu.h	/^#define SETGATE(/;"	d
-SHIFT	./kern/console.c	/^#define SHIFT	/;"	d	file:
-SRL	./kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
-STA_A	./inc/mmu.h	/^#define STA_A	/;"	d
-STA_C	./inc/mmu.h	/^#define STA_C	/;"	d
-STA_E	./inc/mmu.h	/^#define STA_E	/;"	d
-STA_R	./inc/mmu.h	/^#define STA_R	/;"	d
-STA_W	./inc/mmu.h	/^#define STA_W	/;"	d
-STA_X	./inc/mmu.h	/^#define STA_X	/;"	d
-STS_CG16	./inc/mmu.h	/^#define STS_CG16	/;"	d
-STS_CG32	./inc/mmu.h	/^#define STS_CG32	/;"	d
-STS_IG16	./inc/mmu.h	/^#define STS_IG16	/;"	d
-STS_IG32	./inc/mmu.h	/^#define STS_IG32	/;"	d
-STS_LDT	./inc/mmu.h	/^#define STS_LDT	/;"	d
-STS_T16A	./inc/mmu.h	/^#define STS_T16A	/;"	d
-STS_T16B	./inc/mmu.h	/^#define STS_T16B	/;"	d
-STS_T32A	./inc/mmu.h	/^#define STS_T32A	/;"	d
-STS_T32B	./inc/mmu.h	/^#define STS_T32B	/;"	d
-STS_TG	./inc/mmu.h	/^#define STS_TG	/;"	d
-STS_TG16	./inc/mmu.h	/^#define STS_TG16	/;"	d
-STS_TG32	./inc/mmu.h	/^#define STS_TG32	/;"	d
-Secthdr	./inc/elf.h	/^struct Secthdr {$/;"	s
-Segdesc	./inc/mmu.h	/^struct Segdesc {$/;"	s
-Stab	./inc/stab.h	/^struct Stab {$/;"	s
-TAR	./GNUmakefile	/^TAR	:= gtar$/;"	m
-TEMP_ADDR	./user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
-TEMP_ADDR_CHILD	./user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
-TESTS	./gradelib.py	/^TESTS = []$/;"	v
-TOP	./GNUmakefile	/^TOP = .$/;"	m
-Taskstate	./inc/mmu.h	/^struct Taskstate {$/;"	s
-TerminateTest	./gradelib.py	/^class TerminateTest(Exception):$/;"	c
-UDWtype	./obj/kern/kernel.asm	/^UDWtype$/;"	l
-UENVS	./inc/memlayout.h	/^#define UENVS	/;"	d
-ULDFLAGS	./GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
-ULIM	./inc/memlayout.h	/^#define ULIM	/;"	d
-UPAGES	./inc/memlayout.h	/^#define UPAGES	/;"	d
-USER_CFLAGS	./GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
-USTABDATA	./inc/memlayout.h	/^#define USTABDATA	/;"	d
-USTACKTOP	./inc/memlayout.h	/^#define USTACKTOP	/;"	d
-UTEMP	./inc/memlayout.h	/^#define UTEMP	/;"	d
-UTEXT	./inc/memlayout.h	/^#define UTEXT	/;"	d
-UTOP	./inc/memlayout.h	/^#define UTOP	/;"	d
-UVPT	./inc/memlayout.h	/^#define UVPT	/;"	d
-UXSTACKTOP	./inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
-V	./conf/env.mk	/^V = @$/;"	m
-WEBSUB	./GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
-WHITESPACE	./kern/monitor.c	/^#define WHITESPACE /;"	d	file:
-_CONSOLE_H_	./kern/console.h	/^#define _CONSOLE_H_$/;"	d
-_GDBPORT	./gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
-__all__	./gradelib.py	/^__all__ = []$/;"	v
-__init__	./gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
-__init__	./gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
-__init__	./gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
-__monitor_start	./gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
-__react	./gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
-__send	./gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
-__send_break	./gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
-__udivdi3	./obj/kern/kernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
-__udivmoddi4	./obj/kern/kernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
-__umoddi3	./obj/kern/kernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
-_panic	./kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
-_start	./kern/entry.S	/^_start = RELOC(entry)$/;"	d
-_start	./obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
-_warn	./kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
-addr_6845	./kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
-addr_6845	./obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
-addr_6845	./obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
-altflag	./obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
-altflag	./obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
-any_matches	./obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
-argc	./obj/kern/kernel.asm	/^	argc = 0;$/;"	d
-assert	./inc/assert.h	/^#define assert(/;"	d
-assert_equal	./gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
-assert_lines_match	./gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
-assert_lines_match_kw	./gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
-b	./obj/kern/kernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
-base	./obj/kern/kernel.asm	/^			base = 10;$/;"	d
-base	./obj/kern/kernel.asm	/^			base = 16;$/;"	d
-base	./obj/kern/kernel.asm	/^		base = 10;$/;"	d
-bool	./inc/types.h	/^typedef _Bool bool;$/;"	t
-bootmain	./boot/main.c	/^bootmain(void)$/;"	f
-bootstack	./kern/entry.S	/^bootstack:$/;"	l
-bootstacktop	./kern/entry.S	/^bootstacktop:$/;"	l
-breakpoint	./gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
-breakpoint	./inc/x86.h	/^breakpoint(void)$/;"	f
-buf	./kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon3	file:
-buf	./lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
-buf	./lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
-buf	./obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
-c	./obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
-c	./obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
-c	./obj/kern/kernel.asm	/^		c = getchar();$/;"	d
-c	./obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
-call_on_line	./gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
-cga_init	./kern/console.c	/^cga_init(void)$/;"	f	file:
-cga_putc	./kern/console.c	/^cga_putc(int c)$/;"	f	file:
-ch	./obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
-char	./obj/kern/kernel.asm	/^char *$/;"	l
-charcode	./kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
-check_call	./gradelib.py	/^from subprocess import check_call, Popen$/;"	i
-close	./gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
-cnt	./lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
-cnt	./obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
-color	./gradelib.py	/^def color(name, text):$/;"	f
-commands	./kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
-cons	./kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon3	file:
-cons_getc	./kern/console.c	/^cons_getc(void)$/;"	f
-cons_init	./kern/console.c	/^cons_init(void)$/;"	f
-cons_intr	./kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
-cons_putc	./kern/console.c	/^cons_putc(int c)$/;"	f	file:
-const	./obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
-cont	./gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
-cp	./obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
-cp	./obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
-cprintf	./kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
-cpuid	./inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
-cputchar	./kern/console.c	/^cputchar(int c)$/;"	f
-crt_buf	./kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
-crt_buf	./obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
-crt_pos	./kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
-crt_pos	./obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
-ctlmap	./kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
-d	./obj/kern/kernel.asm	/^	d = dst;$/;"	d
-d0	./obj/kern/kernel.asm	/^	      d0 = d0 << bm;$/;"	d
-d0	./obj/kern/kernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
-d0	./obj/kern/kernel.asm	/^  d0 = dd.s.low;$/;"	d
-d1	./obj/kern/kernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
-d1	./obj/kern/kernel.asm	/^  d1 = dd.s.high;$/;"	d
-data	./obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
-data	./obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
-dead	./obj/kern/kernel.asm	/^dead:$/;"	l
-debuginfo_eip	./kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
-default	./obj/kern/kernel.asm	/^		default:$/;"	l
-default	./obj/kern/kernel.asm	/^	default:$/;"	l
-delay	./kern/console.c	/^delay(void)$/;"	f	file:
-desc	./kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
-dig	./obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
-dig	./obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
-dig	./obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
-dst_in	./obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
-e_ehsize	./inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
-e_elf	./inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
-e_entry	./inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
-e_flags	./inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
-e_machine	./inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
-e_magic	./inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
-e_phentsize	./inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
-e_phnum	./inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
-e_phoff	./inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
-e_shentsize	./inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
-e_shnum	./inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
-e_shoff	./inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
-e_shstrndx	./inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
-e_type	./inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
-e_version	./inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
-ebuf	./lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
-echoing	./obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
-eip_file	./kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
-eip_fn_addr	./kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
-eip_fn_name	./kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
-eip_fn_namelen	./kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
-eip_fn_narg	./kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
-eip_line	./kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
-end_pa	./obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
-end_part	./gradelib.py	/^def end_part(name):$/;"	f
-entry	./kern/entry.S	/^entry:$/;"	l
-entry	./obj/kern/kernel.asm	/^entry:$/;"	l
-entry_pgdir	./kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
-entry_pgtable	./kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
-entry_pgtable	./kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
-eph	./obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
-err	./obj/kern/kernel.asm	/^				err = -err;$/;"	d
-err	./obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
-errno	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-error_string	./lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
-f0100000	./obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
-f0100000	./obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
-f0100006	./obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
-f0100008	./obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
-f010000b	./obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
-f010000c	./obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
-f010000c	./obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
-f0100013	./obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
-f0100015	./obj/kern/kernel.asm	/^f0100015:	b8 00 70 11 00       	mov    $0x117000,%eax$/;"	l
-f010001a	./obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
-f010001d	./obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
-f0100020	./obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
-f0100025	./obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
-f0100028	./obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
-f010002d	./obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
-f010002f	./obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
-f010002f	./obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
-f0100034	./obj/kern/kernel.asm	/^f0100034:	bc 00 70 11 f0       	mov    $0xf0117000,%esp$/;"	l
-f0100039	./obj/kern/kernel.asm	/^f0100039:	e8 5f 00 00 00       	call   f010009d <i386_init>$/;"	l
-f010003e	./obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
-f010003e	./obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
-f0100040	./obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
-f0100040	./obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
-f0100041	./obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100043	./obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
-f0100044	./obj/kern/kernel.asm	/^f0100044:	83 ec 14             	sub    $0x14,%esp$/;"	l
-f0100047	./obj/kern/kernel.asm	/^f0100047:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
-f010004a	./obj/kern/kernel.asm	/^f010004a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f010004e	./obj/kern/kernel.asm	/^f010004e:	c7 04 24 80 17 10 f0 	movl   $0xf0101780,(%esp)$/;"	l
-f0100055	./obj/kern/kernel.asm	/^f0100055:	e8 74 08 00 00       	call   f01008ce <cprintf>$/;"	l
-f010005a	./obj/kern/kernel.asm	/^f010005a:	85 db                	test   %ebx,%ebx$/;"	l
-f010005c	./obj/kern/kernel.asm	/^f010005c:	7e 0d                	jle    f010006b <test_backtrace+0x2b>$/;"	l
-f010005e	./obj/kern/kernel.asm	/^f010005e:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
-f0100061	./obj/kern/kernel.asm	/^f0100061:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100064	./obj/kern/kernel.asm	/^f0100064:	e8 d7 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
-f0100069	./obj/kern/kernel.asm	/^f0100069:	eb 1c                	jmp    f0100087 <test_backtrace+0x47>$/;"	l
-f010006b	./obj/kern/kernel.asm	/^f010006b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
-f0100072	./obj/kern/kernel.asm	/^f0100072:	00 $/;"	l
-f0100073	./obj/kern/kernel.asm	/^f0100073:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
-f010007a	./obj/kern/kernel.asm	/^f010007a:	00 $/;"	l
-f010007b	./obj/kern/kernel.asm	/^f010007b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
-f0100082	./obj/kern/kernel.asm	/^f0100082:	e8 c1 06 00 00       	call   f0100748 <mon_backtrace>$/;"	l
-f0100087	./obj/kern/kernel.asm	/^f0100087:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f010008b	./obj/kern/kernel.asm	/^f010008b:	c7 04 24 9c 17 10 f0 	movl   $0xf010179c,(%esp)$/;"	l
-f0100092	./obj/kern/kernel.asm	/^f0100092:	e8 37 08 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100097	./obj/kern/kernel.asm	/^f0100097:	83 c4 14             	add    $0x14,%esp$/;"	l
-f010009a	./obj/kern/kernel.asm	/^f010009a:	5b                   	pop    %ebx$/;"	l
-f010009b	./obj/kern/kernel.asm	/^f010009b:	5d                   	pop    %ebp$/;"	l
-f010009c	./obj/kern/kernel.asm	/^f010009c:	c3                   	ret    $/;"	l
-f010009d	./obj/kern/kernel.asm	/^f010009d <i386_init>:$/;"	l
-f010009d	./obj/kern/kernel.asm	/^f010009d:	55                   	push   %ebp$/;"	l
-f010009e	./obj/kern/kernel.asm	/^f010009e:	89 e5                	mov    %esp,%ebp$/;"	l
-f01000a0	./obj/kern/kernel.asm	/^f01000a0:	83 ec 18             	sub    $0x18,%esp$/;"	l
-f01000a3	./obj/kern/kernel.asm	/^f01000a3:	b8 44 99 11 f0       	mov    $0xf0119944,%eax$/;"	l
-f01000a8	./obj/kern/kernel.asm	/^f01000a8:	2d 00 93 11 f0       	sub    $0xf0119300,%eax$/;"	l
-f01000ad	./obj/kern/kernel.asm	/^f01000ad:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f01000b1	./obj/kern/kernel.asm	/^f01000b1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
-f01000b8	./obj/kern/kernel.asm	/^f01000b8:	00 $/;"	l
-f01000b9	./obj/kern/kernel.asm	/^f01000b9:	c7 04 24 00 93 11 f0 	movl   $0xf0119300,(%esp)$/;"	l
-f01000c0	./obj/kern/kernel.asm	/^f01000c0:	e8 75 12 00 00       	call   f010133a <memset>$/;"	l
-f01000c5	./obj/kern/kernel.asm	/^f01000c5:	e8 65 04 00 00       	call   f010052f <cons_init>$/;"	l
-f01000ca	./obj/kern/kernel.asm	/^f01000ca:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
-f01000d1	./obj/kern/kernel.asm	/^f01000d1:	00 $/;"	l
-f01000d2	./obj/kern/kernel.asm	/^f01000d2:	c7 04 24 b7 17 10 f0 	movl   $0xf01017b7,(%esp)$/;"	l
-f01000d9	./obj/kern/kernel.asm	/^f01000d9:	e8 f0 07 00 00       	call   f01008ce <cprintf>$/;"	l
-f01000de	./obj/kern/kernel.asm	/^f01000de:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
-f01000e5	./obj/kern/kernel.asm	/^f01000e5:	e8 56 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
-f01000ea	./obj/kern/kernel.asm	/^f01000ea:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
-f01000f1	./obj/kern/kernel.asm	/^f01000f1:	e8 5c 06 00 00       	call   f0100752 <monitor>$/;"	l
-f01000f6	./obj/kern/kernel.asm	/^f01000f6:	eb f2                	jmp    f01000ea <i386_init+0x4d>$/;"	l
-f01000f8	./obj/kern/kernel.asm	/^f01000f8 <_panic>:$/;"	l
-f01000f8	./obj/kern/kernel.asm	/^f01000f8:	55                   	push   %ebp$/;"	l
-f01000f9	./obj/kern/kernel.asm	/^f01000f9:	89 e5                	mov    %esp,%ebp$/;"	l
-f01000fb	./obj/kern/kernel.asm	/^f01000fb:	56                   	push   %esi$/;"	l
-f01000fc	./obj/kern/kernel.asm	/^f01000fc:	53                   	push   %ebx$/;"	l
-f01000fd	./obj/kern/kernel.asm	/^f01000fd:	83 ec 10             	sub    $0x10,%esp$/;"	l
-f0100100	./obj/kern/kernel.asm	/^f0100100:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
-f0100103	./obj/kern/kernel.asm	/^f0100103:	83 3d 40 99 11 f0 00 	cmpl   $0x0,0xf0119940$/;"	l
-f010010a	./obj/kern/kernel.asm	/^f010010a:	75 3d                	jne    f0100149 <_panic+0x51>$/;"	l
-f010010c	./obj/kern/kernel.asm	/^f010010c:	89 35 40 99 11 f0    	mov    %esi,0xf0119940$/;"	l
-f0100112	./obj/kern/kernel.asm	/^f0100112:	fa                   	cli    $/;"	l
-f0100113	./obj/kern/kernel.asm	/^f0100113:	fc                   	cld    $/;"	l
-f0100114	./obj/kern/kernel.asm	/^f0100114:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
-f0100117	./obj/kern/kernel.asm	/^f0100117:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f010011a	./obj/kern/kernel.asm	/^f010011a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f010011e	./obj/kern/kernel.asm	/^f010011e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0100121	./obj/kern/kernel.asm	/^f0100121:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f0100125	./obj/kern/kernel.asm	/^f0100125:	c7 04 24 d2 17 10 f0 	movl   $0xf01017d2,(%esp)$/;"	l
-f010012c	./obj/kern/kernel.asm	/^f010012c:	e8 9d 07 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100131	./obj/kern/kernel.asm	/^f0100131:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100135	./obj/kern/kernel.asm	/^f0100135:	89 34 24             	mov    %esi,(%esp)$/;"	l
-f0100138	./obj/kern/kernel.asm	/^f0100138:	e8 5e 07 00 00       	call   f010089b <vcprintf>$/;"	l
-f010013d	./obj/kern/kernel.asm	/^f010013d:	c7 04 24 0e 18 10 f0 	movl   $0xf010180e,(%esp)$/;"	l
-f0100144	./obj/kern/kernel.asm	/^f0100144:	e8 85 07 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100149	./obj/kern/kernel.asm	/^f0100149:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
-f0100150	./obj/kern/kernel.asm	/^f0100150:	e8 fd 05 00 00       	call   f0100752 <monitor>$/;"	l
-f0100155	./obj/kern/kernel.asm	/^f0100155:	eb f2                	jmp    f0100149 <_panic+0x51>$/;"	l
-f0100157	./obj/kern/kernel.asm	/^f0100157 <_warn>:$/;"	l
-f0100157	./obj/kern/kernel.asm	/^f0100157:	55                   	push   %ebp$/;"	l
-f0100158	./obj/kern/kernel.asm	/^f0100158:	89 e5                	mov    %esp,%ebp$/;"	l
-f010015a	./obj/kern/kernel.asm	/^f010015a:	53                   	push   %ebx$/;"	l
-f010015b	./obj/kern/kernel.asm	/^f010015b:	83 ec 14             	sub    $0x14,%esp$/;"	l
-f010015e	./obj/kern/kernel.asm	/^f010015e:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
-f0100161	./obj/kern/kernel.asm	/^f0100161:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f0100164	./obj/kern/kernel.asm	/^f0100164:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f0100168	./obj/kern/kernel.asm	/^f0100168:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f010016b	./obj/kern/kernel.asm	/^f010016b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f010016f	./obj/kern/kernel.asm	/^f010016f:	c7 04 24 ea 17 10 f0 	movl   $0xf01017ea,(%esp)$/;"	l
-f0100176	./obj/kern/kernel.asm	/^f0100176:	e8 53 07 00 00       	call   f01008ce <cprintf>$/;"	l
-f010017b	./obj/kern/kernel.asm	/^f010017b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f010017f	./obj/kern/kernel.asm	/^f010017f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
-f0100182	./obj/kern/kernel.asm	/^f0100182:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100185	./obj/kern/kernel.asm	/^f0100185:	e8 11 07 00 00       	call   f010089b <vcprintf>$/;"	l
-f010018a	./obj/kern/kernel.asm	/^f010018a:	c7 04 24 0e 18 10 f0 	movl   $0xf010180e,(%esp)$/;"	l
-f0100191	./obj/kern/kernel.asm	/^f0100191:	e8 38 07 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100196	./obj/kern/kernel.asm	/^f0100196:	83 c4 14             	add    $0x14,%esp$/;"	l
-f0100199	./obj/kern/kernel.asm	/^f0100199:	5b                   	pop    %ebx$/;"	l
-f010019a	./obj/kern/kernel.asm	/^f010019a:	5d                   	pop    %ebp$/;"	l
-f010019b	./obj/kern/kernel.asm	/^f010019b:	c3                   	ret    $/;"	l
-f010019c	./obj/kern/kernel.asm	/^f010019c <delay>:$/;"	l
-f010019c	./obj/kern/kernel.asm	/^f010019c:	55                   	push   %ebp$/;"	l
-f010019d	./obj/kern/kernel.asm	/^f010019d:	89 e5                	mov    %esp,%ebp$/;"	l
-f010019f	./obj/kern/kernel.asm	/^f010019f:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
-f01001a4	./obj/kern/kernel.asm	/^f01001a4:	ec                   	in     (%dx),%al$/;"	l
-f01001a5	./obj/kern/kernel.asm	/^f01001a5:	ec                   	in     (%dx),%al$/;"	l
-f01001a6	./obj/kern/kernel.asm	/^f01001a6:	ec                   	in     (%dx),%al$/;"	l
-f01001a7	./obj/kern/kernel.asm	/^f01001a7:	ec                   	in     (%dx),%al$/;"	l
-f01001a8	./obj/kern/kernel.asm	/^f01001a8:	5d                   	pop    %ebp$/;"	l
-f01001a9	./obj/kern/kernel.asm	/^f01001a9:	c3                   	ret    $/;"	l
-f01001aa	./obj/kern/kernel.asm	/^f01001aa <serial_proc_data>:$/;"	l
-f01001aa	./obj/kern/kernel.asm	/^f01001aa:	55                   	push   %ebp$/;"	l
-f01001ab	./obj/kern/kernel.asm	/^f01001ab:	89 e5                	mov    %esp,%ebp$/;"	l
-f01001ad	./obj/kern/kernel.asm	/^f01001ad:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
-f01001b2	./obj/kern/kernel.asm	/^f01001b2:	ec                   	in     (%dx),%al$/;"	l
-f01001b3	./obj/kern/kernel.asm	/^f01001b3:	a8 01                	test   $0x1,%al$/;"	l
-f01001b5	./obj/kern/kernel.asm	/^f01001b5:	74 08                	je     f01001bf <serial_proc_data+0x15>$/;"	l
-f01001b7	./obj/kern/kernel.asm	/^f01001b7:	b2 f8                	mov    $0xf8,%dl$/;"	l
-f01001b9	./obj/kern/kernel.asm	/^f01001b9:	ec                   	in     (%dx),%al$/;"	l
-f01001ba	./obj/kern/kernel.asm	/^f01001ba:	0f b6 c0             	movzbl %al,%eax$/;"	l
-f01001bd	./obj/kern/kernel.asm	/^f01001bd:	eb 05                	jmp    f01001c4 <serial_proc_data+0x1a>$/;"	l
-f01001bf	./obj/kern/kernel.asm	/^f01001bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
-f01001c4	./obj/kern/kernel.asm	/^f01001c4:	5d                   	pop    %ebp$/;"	l
-f01001c5	./obj/kern/kernel.asm	/^f01001c5:	c3                   	ret    $/;"	l
-f01001c6	./obj/kern/kernel.asm	/^f01001c6 <cons_intr>:$/;"	l
-f01001c6	./obj/kern/kernel.asm	/^f01001c6:	55                   	push   %ebp$/;"	l
-f01001c7	./obj/kern/kernel.asm	/^f01001c7:	89 e5                	mov    %esp,%ebp$/;"	l
-f01001c9	./obj/kern/kernel.asm	/^f01001c9:	53                   	push   %ebx$/;"	l
-f01001ca	./obj/kern/kernel.asm	/^f01001ca:	83 ec 04             	sub    $0x4,%esp$/;"	l
-f01001cd	./obj/kern/kernel.asm	/^f01001cd:	89 c3                	mov    %eax,%ebx$/;"	l
-f01001cf	./obj/kern/kernel.asm	/^f01001cf:	eb 29                	jmp    f01001fa <cons_intr+0x34>$/;"	l
-f01001d1	./obj/kern/kernel.asm	/^f01001d1:	85 c0                	test   %eax,%eax$/;"	l
-f01001d3	./obj/kern/kernel.asm	/^f01001d3:	74 25                	je     f01001fa <cons_intr+0x34>$/;"	l
-f01001d5	./obj/kern/kernel.asm	/^f01001d5:	8b 15 24 95 11 f0    	mov    0xf0119524,%edx$/;"	l
-f01001db	./obj/kern/kernel.asm	/^f01001db:	88 82 20 93 11 f0    	mov    %al,-0xfee6ce0(%edx)$/;"	l
-f01001e1	./obj/kern/kernel.asm	/^f01001e1:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
-f01001e4	./obj/kern/kernel.asm	/^f01001e4:	a3 24 95 11 f0       	mov    %eax,0xf0119524$/;"	l
-f01001e9	./obj/kern/kernel.asm	/^f01001e9:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
-f01001ee	./obj/kern/kernel.asm	/^f01001ee:	75 0a                	jne    f01001fa <cons_intr+0x34>$/;"	l
-f01001f0	./obj/kern/kernel.asm	/^f01001f0:	c7 05 24 95 11 f0 00 	movl   $0x0,0xf0119524$/;"	l
-f01001f7	./obj/kern/kernel.asm	/^f01001f7:	00 00 00 $/;"	l
-f01001fa	./obj/kern/kernel.asm	/^f01001fa:	ff d3                	call   *%ebx$/;"	l
-f01001fc	./obj/kern/kernel.asm	/^f01001fc:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
-f01001ff	./obj/kern/kernel.asm	/^f01001ff:	75 d0                	jne    f01001d1 <cons_intr+0xb>$/;"	l
-f0100201	./obj/kern/kernel.asm	/^f0100201:	83 c4 04             	add    $0x4,%esp$/;"	l
-f0100204	./obj/kern/kernel.asm	/^f0100204:	5b                   	pop    %ebx$/;"	l
-f0100205	./obj/kern/kernel.asm	/^f0100205:	5d                   	pop    %ebp$/;"	l
-f0100206	./obj/kern/kernel.asm	/^f0100206:	c3                   	ret    $/;"	l
-f0100207	./obj/kern/kernel.asm	/^f0100207 <cons_putc>:$/;"	l
-f0100207	./obj/kern/kernel.asm	/^f0100207:	55                   	push   %ebp$/;"	l
-f0100208	./obj/kern/kernel.asm	/^f0100208:	89 e5                	mov    %esp,%ebp$/;"	l
-f010020a	./obj/kern/kernel.asm	/^f010020a:	57                   	push   %edi$/;"	l
-f010020b	./obj/kern/kernel.asm	/^f010020b:	56                   	push   %esi$/;"	l
-f010020c	./obj/kern/kernel.asm	/^f010020c:	53                   	push   %ebx$/;"	l
-f010020d	./obj/kern/kernel.asm	/^f010020d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
-f0100210	./obj/kern/kernel.asm	/^f0100210:	89 c6                	mov    %eax,%esi$/;"	l
-f0100212	./obj/kern/kernel.asm	/^f0100212:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
-f0100217	./obj/kern/kernel.asm	/^f0100217:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
-f010021c	./obj/kern/kernel.asm	/^f010021c:	eb 05                	jmp    f0100223 <cons_putc+0x1c>$/;"	l
-f010021e	./obj/kern/kernel.asm	/^f010021e:	e8 79 ff ff ff       	call   f010019c <delay>$/;"	l
-f0100223	./obj/kern/kernel.asm	/^f0100223:	89 fa                	mov    %edi,%edx$/;"	l
-f0100225	./obj/kern/kernel.asm	/^f0100225:	ec                   	in     (%dx),%al$/;"	l
-f0100226	./obj/kern/kernel.asm	/^f0100226:	a8 20                	test   $0x20,%al$/;"	l
-f0100228	./obj/kern/kernel.asm	/^f0100228:	75 03                	jne    f010022d <cons_putc+0x26>$/;"	l
-f010022a	./obj/kern/kernel.asm	/^f010022a:	4b                   	dec    %ebx$/;"	l
-f010022b	./obj/kern/kernel.asm	/^f010022b:	75 f1                	jne    f010021e <cons_putc+0x17>$/;"	l
-f010022d	./obj/kern/kernel.asm	/^f010022d:	89 f2                	mov    %esi,%edx$/;"	l
-f010022f	./obj/kern/kernel.asm	/^f010022f:	89 f0                	mov    %esi,%eax$/;"	l
-f0100231	./obj/kern/kernel.asm	/^f0100231:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
-f0100234	./obj/kern/kernel.asm	/^f0100234:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
-f0100239	./obj/kern/kernel.asm	/^f0100239:	ee                   	out    %al,(%dx)$/;"	l
-f010023a	./obj/kern/kernel.asm	/^f010023a:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
-f010023f	./obj/kern/kernel.asm	/^f010023f:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
-f0100244	./obj/kern/kernel.asm	/^f0100244:	eb 05                	jmp    f010024b <cons_putc+0x44>$/;"	l
-f0100246	./obj/kern/kernel.asm	/^f0100246:	e8 51 ff ff ff       	call   f010019c <delay>$/;"	l
-f010024b	./obj/kern/kernel.asm	/^f010024b:	89 fa                	mov    %edi,%edx$/;"	l
-f010024d	./obj/kern/kernel.asm	/^f010024d:	ec                   	in     (%dx),%al$/;"	l
-f010024e	./obj/kern/kernel.asm	/^f010024e:	84 c0                	test   %al,%al$/;"	l
-f0100250	./obj/kern/kernel.asm	/^f0100250:	78 03                	js     f0100255 <cons_putc+0x4e>$/;"	l
-f0100252	./obj/kern/kernel.asm	/^f0100252:	4b                   	dec    %ebx$/;"	l
-f0100253	./obj/kern/kernel.asm	/^f0100253:	75 f1                	jne    f0100246 <cons_putc+0x3f>$/;"	l
-f0100255	./obj/kern/kernel.asm	/^f0100255:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
-f010025a	./obj/kern/kernel.asm	/^f010025a:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
-f010025d	./obj/kern/kernel.asm	/^f010025d:	ee                   	out    %al,(%dx)$/;"	l
-f010025e	./obj/kern/kernel.asm	/^f010025e:	b2 7a                	mov    $0x7a,%dl$/;"	l
-f0100260	./obj/kern/kernel.asm	/^f0100260:	b0 0d                	mov    $0xd,%al$/;"	l
-f0100262	./obj/kern/kernel.asm	/^f0100262:	ee                   	out    %al,(%dx)$/;"	l
-f0100263	./obj/kern/kernel.asm	/^f0100263:	b0 08                	mov    $0x8,%al$/;"	l
-f0100265	./obj/kern/kernel.asm	/^f0100265:	ee                   	out    %al,(%dx)$/;"	l
-f0100266	./obj/kern/kernel.asm	/^f0100266:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
-f010026c	./obj/kern/kernel.asm	/^f010026c:	75 06                	jne    f0100274 <cons_putc+0x6d>$/;"	l
-f010026e	./obj/kern/kernel.asm	/^f010026e:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
-f0100274	./obj/kern/kernel.asm	/^f0100274:	89 f0                	mov    %esi,%eax$/;"	l
-f0100276	./obj/kern/kernel.asm	/^f0100276:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
-f010027b	./obj/kern/kernel.asm	/^f010027b:	83 f8 09             	cmp    $0x9,%eax$/;"	l
-f010027e	./obj/kern/kernel.asm	/^f010027e:	74 78                	je     f01002f8 <cons_putc+0xf1>$/;"	l
-f0100280	./obj/kern/kernel.asm	/^f0100280:	83 f8 09             	cmp    $0x9,%eax$/;"	l
-f0100283	./obj/kern/kernel.asm	/^f0100283:	7f 0b                	jg     f0100290 <cons_putc+0x89>$/;"	l
-f0100285	./obj/kern/kernel.asm	/^f0100285:	83 f8 08             	cmp    $0x8,%eax$/;"	l
-f0100288	./obj/kern/kernel.asm	/^f0100288:	0f 85 9e 00 00 00    	jne    f010032c <cons_putc+0x125>$/;"	l
-f010028e	./obj/kern/kernel.asm	/^f010028e:	eb 10                	jmp    f01002a0 <cons_putc+0x99>$/;"	l
-f0100290	./obj/kern/kernel.asm	/^f0100290:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
-f0100293	./obj/kern/kernel.asm	/^f0100293:	74 39                	je     f01002ce <cons_putc+0xc7>$/;"	l
-f0100295	./obj/kern/kernel.asm	/^f0100295:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
-f0100298	./obj/kern/kernel.asm	/^f0100298:	0f 85 8e 00 00 00    	jne    f010032c <cons_putc+0x125>$/;"	l
-f010029e	./obj/kern/kernel.asm	/^f010029e:	eb 36                	jmp    f01002d6 <cons_putc+0xcf>$/;"	l
-f01002a0	./obj/kern/kernel.asm	/^f01002a0:	66 a1 34 95 11 f0    	mov    0xf0119534,%ax$/;"	l
-f01002a6	./obj/kern/kernel.asm	/^f01002a6:	66 85 c0             	test   %ax,%ax$/;"	l
-f01002a9	./obj/kern/kernel.asm	/^f01002a9:	0f 84 e2 00 00 00    	je     f0100391 <cons_putc+0x18a>$/;"	l
-f01002af	./obj/kern/kernel.asm	/^f01002af:	48                   	dec    %eax$/;"	l
-f01002b0	./obj/kern/kernel.asm	/^f01002b0:	66 a3 34 95 11 f0    	mov    %ax,0xf0119534$/;"	l
-f01002b6	./obj/kern/kernel.asm	/^f01002b6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
-f01002b9	./obj/kern/kernel.asm	/^f01002b9:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
-f01002bf	./obj/kern/kernel.asm	/^f01002bf:	83 ce 20             	or     $0x20,%esi$/;"	l
-f01002c2	./obj/kern/kernel.asm	/^f01002c2:	8b 15 30 95 11 f0    	mov    0xf0119530,%edx$/;"	l
-f01002c8	./obj/kern/kernel.asm	/^f01002c8:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
-f01002cc	./obj/kern/kernel.asm	/^f01002cc:	eb 78                	jmp    f0100346 <cons_putc+0x13f>$/;"	l
-f01002ce	./obj/kern/kernel.asm	/^f01002ce:	66 83 05 34 95 11 f0 	addw   $0x50,0xf0119534$/;"	l
-f01002d5	./obj/kern/kernel.asm	/^f01002d5:	50 $/;"	l
-f01002d6	./obj/kern/kernel.asm	/^f01002d6:	66 8b 0d 34 95 11 f0 	mov    0xf0119534,%cx$/;"	l
-f01002dd	./obj/kern/kernel.asm	/^f01002dd:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
-f01002e2	./obj/kern/kernel.asm	/^f01002e2:	89 c8                	mov    %ecx,%eax$/;"	l
-f01002e4	./obj/kern/kernel.asm	/^f01002e4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
-f01002e9	./obj/kern/kernel.asm	/^f01002e9:	66 f7 f3             	div    %bx$/;"	l
-f01002ec	./obj/kern/kernel.asm	/^f01002ec:	66 29 d1             	sub    %dx,%cx$/;"	l
-f01002ef	./obj/kern/kernel.asm	/^f01002ef:	66 89 0d 34 95 11 f0 	mov    %cx,0xf0119534$/;"	l
-f01002f6	./obj/kern/kernel.asm	/^f01002f6:	eb 4e                	jmp    f0100346 <cons_putc+0x13f>$/;"	l
-f01002f8	./obj/kern/kernel.asm	/^f01002f8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
-f01002fd	./obj/kern/kernel.asm	/^f01002fd:	e8 05 ff ff ff       	call   f0100207 <cons_putc>$/;"	l
-f0100302	./obj/kern/kernel.asm	/^f0100302:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
-f0100307	./obj/kern/kernel.asm	/^f0100307:	e8 fb fe ff ff       	call   f0100207 <cons_putc>$/;"	l
-f010030c	./obj/kern/kernel.asm	/^f010030c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
-f0100311	./obj/kern/kernel.asm	/^f0100311:	e8 f1 fe ff ff       	call   f0100207 <cons_putc>$/;"	l
-f0100316	./obj/kern/kernel.asm	/^f0100316:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
-f010031b	./obj/kern/kernel.asm	/^f010031b:	e8 e7 fe ff ff       	call   f0100207 <cons_putc>$/;"	l
-f0100320	./obj/kern/kernel.asm	/^f0100320:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
-f0100325	./obj/kern/kernel.asm	/^f0100325:	e8 dd fe ff ff       	call   f0100207 <cons_putc>$/;"	l
-f010032a	./obj/kern/kernel.asm	/^f010032a:	eb 1a                	jmp    f0100346 <cons_putc+0x13f>$/;"	l
-f010032c	./obj/kern/kernel.asm	/^f010032c:	66 a1 34 95 11 f0    	mov    0xf0119534,%ax$/;"	l
-f0100332	./obj/kern/kernel.asm	/^f0100332:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
-f0100335	./obj/kern/kernel.asm	/^f0100335:	8b 15 30 95 11 f0    	mov    0xf0119530,%edx$/;"	l
-f010033b	./obj/kern/kernel.asm	/^f010033b:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
-f010033f	./obj/kern/kernel.asm	/^f010033f:	40                   	inc    %eax$/;"	l
-f0100340	./obj/kern/kernel.asm	/^f0100340:	66 a3 34 95 11 f0    	mov    %ax,0xf0119534$/;"	l
-f0100346	./obj/kern/kernel.asm	/^f0100346:	66 81 3d 34 95 11 f0 	cmpw   $0x7cf,0xf0119534$/;"	l
-f010034d	./obj/kern/kernel.asm	/^f010034d:	cf 07 $/;"	l
-f010034f	./obj/kern/kernel.asm	/^f010034f:	76 40                	jbe    f0100391 <cons_putc+0x18a>$/;"	l
-f0100351	./obj/kern/kernel.asm	/^f0100351:	a1 30 95 11 f0       	mov    0xf0119530,%eax$/;"	l
-f0100356	./obj/kern/kernel.asm	/^f0100356:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
-f010035d	./obj/kern/kernel.asm	/^f010035d:	00 $/;"	l
-f010035e	./obj/kern/kernel.asm	/^f010035e:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
-f0100364	./obj/kern/kernel.asm	/^f0100364:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
-f0100368	./obj/kern/kernel.asm	/^f0100368:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f010036b	./obj/kern/kernel.asm	/^f010036b:	e8 14 10 00 00       	call   f0101384 <memmove>$/;"	l
-f0100370	./obj/kern/kernel.asm	/^f0100370:	8b 15 30 95 11 f0    	mov    0xf0119530,%edx$/;"	l
-f0100376	./obj/kern/kernel.asm	/^f0100376:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
-f010037b	./obj/kern/kernel.asm	/^f010037b:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
-f0100381	./obj/kern/kernel.asm	/^f0100381:	40                   	inc    %eax$/;"	l
-f0100382	./obj/kern/kernel.asm	/^f0100382:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
-f0100387	./obj/kern/kernel.asm	/^f0100387:	75 f2                	jne    f010037b <cons_putc+0x174>$/;"	l
-f0100389	./obj/kern/kernel.asm	/^f0100389:	66 83 2d 34 95 11 f0 	subw   $0x50,0xf0119534$/;"	l
-f0100390	./obj/kern/kernel.asm	/^f0100390:	50 $/;"	l
-f0100391	./obj/kern/kernel.asm	/^f0100391:	8b 0d 2c 95 11 f0    	mov    0xf011952c,%ecx$/;"	l
-f0100397	./obj/kern/kernel.asm	/^f0100397:	b0 0e                	mov    $0xe,%al$/;"	l
-f0100399	./obj/kern/kernel.asm	/^f0100399:	89 ca                	mov    %ecx,%edx$/;"	l
-f010039b	./obj/kern/kernel.asm	/^f010039b:	ee                   	out    %al,(%dx)$/;"	l
-f010039c	./obj/kern/kernel.asm	/^f010039c:	66 8b 35 34 95 11 f0 	mov    0xf0119534,%si$/;"	l
-f01003a3	./obj/kern/kernel.asm	/^f01003a3:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
-f01003a6	./obj/kern/kernel.asm	/^f01003a6:	89 f0                	mov    %esi,%eax$/;"	l
-f01003a8	./obj/kern/kernel.asm	/^f01003a8:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
-f01003ac	./obj/kern/kernel.asm	/^f01003ac:	89 da                	mov    %ebx,%edx$/;"	l
-f01003ae	./obj/kern/kernel.asm	/^f01003ae:	ee                   	out    %al,(%dx)$/;"	l
-f01003af	./obj/kern/kernel.asm	/^f01003af:	b0 0f                	mov    $0xf,%al$/;"	l
-f01003b1	./obj/kern/kernel.asm	/^f01003b1:	89 ca                	mov    %ecx,%edx$/;"	l
-f01003b3	./obj/kern/kernel.asm	/^f01003b3:	ee                   	out    %al,(%dx)$/;"	l
-f01003b4	./obj/kern/kernel.asm	/^f01003b4:	89 f0                	mov    %esi,%eax$/;"	l
-f01003b6	./obj/kern/kernel.asm	/^f01003b6:	89 da                	mov    %ebx,%edx$/;"	l
-f01003b8	./obj/kern/kernel.asm	/^f01003b8:	ee                   	out    %al,(%dx)$/;"	l
-f01003b9	./obj/kern/kernel.asm	/^f01003b9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
-f01003bc	./obj/kern/kernel.asm	/^f01003bc:	5b                   	pop    %ebx$/;"	l
-f01003bd	./obj/kern/kernel.asm	/^f01003bd:	5e                   	pop    %esi$/;"	l
-f01003be	./obj/kern/kernel.asm	/^f01003be:	5f                   	pop    %edi$/;"	l
-f01003bf	./obj/kern/kernel.asm	/^f01003bf:	5d                   	pop    %ebp$/;"	l
-f01003c0	./obj/kern/kernel.asm	/^f01003c0:	c3                   	ret    $/;"	l
-f01003c1	./obj/kern/kernel.asm	/^f01003c1 <kbd_proc_data>:$/;"	l
-f01003c1	./obj/kern/kernel.asm	/^f01003c1:	55                   	push   %ebp$/;"	l
-f01003c2	./obj/kern/kernel.asm	/^f01003c2:	89 e5                	mov    %esp,%ebp$/;"	l
-f01003c4	./obj/kern/kernel.asm	/^f01003c4:	53                   	push   %ebx$/;"	l
-f01003c5	./obj/kern/kernel.asm	/^f01003c5:	83 ec 14             	sub    $0x14,%esp$/;"	l
-f01003c8	./obj/kern/kernel.asm	/^f01003c8:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
-f01003cd	./obj/kern/kernel.asm	/^f01003cd:	ec                   	in     (%dx),%al$/;"	l
-f01003ce	./obj/kern/kernel.asm	/^f01003ce:	a8 01                	test   $0x1,%al$/;"	l
-f01003d0	./obj/kern/kernel.asm	/^f01003d0:	0f 84 d8 00 00 00    	je     f01004ae <kbd_proc_data+0xed>$/;"	l
-f01003d6	./obj/kern/kernel.asm	/^f01003d6:	b2 60                	mov    $0x60,%dl$/;"	l
-f01003d8	./obj/kern/kernel.asm	/^f01003d8:	ec                   	in     (%dx),%al$/;"	l
-f01003d9	./obj/kern/kernel.asm	/^f01003d9:	88 c2                	mov    %al,%dl$/;"	l
-f01003db	./obj/kern/kernel.asm	/^f01003db:	3c e0                	cmp    $0xe0,%al$/;"	l
-f01003dd	./obj/kern/kernel.asm	/^f01003dd:	75 11                	jne    f01003f0 <kbd_proc_data+0x2f>$/;"	l
-f01003df	./obj/kern/kernel.asm	/^f01003df:	83 0d 28 95 11 f0 40 	orl    $0x40,0xf0119528$/;"	l
-f01003e6	./obj/kern/kernel.asm	/^f01003e6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
-f01003eb	./obj/kern/kernel.asm	/^f01003eb:	e9 c3 00 00 00       	jmp    f01004b3 <kbd_proc_data+0xf2>$/;"	l
-f01003f0	./obj/kern/kernel.asm	/^f01003f0:	84 c0                	test   %al,%al$/;"	l
-f01003f2	./obj/kern/kernel.asm	/^f01003f2:	79 33                	jns    f0100427 <kbd_proc_data+0x66>$/;"	l
-f01003f4	./obj/kern/kernel.asm	/^f01003f4:	8b 0d 28 95 11 f0    	mov    0xf0119528,%ecx$/;"	l
-f01003fa	./obj/kern/kernel.asm	/^f01003fa:	f6 c1 40             	test   $0x40,%cl$/;"	l
-f01003fd	./obj/kern/kernel.asm	/^f01003fd:	75 05                	jne    f0100404 <kbd_proc_data+0x43>$/;"	l
-f01003ff	./obj/kern/kernel.asm	/^f01003ff:	88 c2                	mov    %al,%dl$/;"	l
-f0100401	./obj/kern/kernel.asm	/^f0100401:	83 e2 7f             	and    $0x7f,%edx$/;"	l
-f0100404	./obj/kern/kernel.asm	/^f0100404:	0f b6 d2             	movzbl %dl,%edx$/;"	l
-f0100407	./obj/kern/kernel.asm	/^f0100407:	8a 82 40 18 10 f0    	mov    -0xfefe7c0(%edx),%al$/;"	l
-f010040d	./obj/kern/kernel.asm	/^f010040d:	83 c8 40             	or     $0x40,%eax$/;"	l
-f0100410	./obj/kern/kernel.asm	/^f0100410:	0f b6 c0             	movzbl %al,%eax$/;"	l
-f0100413	./obj/kern/kernel.asm	/^f0100413:	f7 d0                	not    %eax$/;"	l
-f0100415	./obj/kern/kernel.asm	/^f0100415:	21 c1                	and    %eax,%ecx$/;"	l
-f0100417	./obj/kern/kernel.asm	/^f0100417:	89 0d 28 95 11 f0    	mov    %ecx,0xf0119528$/;"	l
-f010041d	./obj/kern/kernel.asm	/^f010041d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
-f0100422	./obj/kern/kernel.asm	/^f0100422:	e9 8c 00 00 00       	jmp    f01004b3 <kbd_proc_data+0xf2>$/;"	l
-f0100427	./obj/kern/kernel.asm	/^f0100427:	8b 0d 28 95 11 f0    	mov    0xf0119528,%ecx$/;"	l
-f010042d	./obj/kern/kernel.asm	/^f010042d:	f6 c1 40             	test   $0x40,%cl$/;"	l
-f0100430	./obj/kern/kernel.asm	/^f0100430:	74 0e                	je     f0100440 <kbd_proc_data+0x7f>$/;"	l
-f0100432	./obj/kern/kernel.asm	/^f0100432:	88 c2                	mov    %al,%dl$/;"	l
-f0100434	./obj/kern/kernel.asm	/^f0100434:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
-f0100437	./obj/kern/kernel.asm	/^f0100437:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
-f010043a	./obj/kern/kernel.asm	/^f010043a:	89 0d 28 95 11 f0    	mov    %ecx,0xf0119528$/;"	l
-f0100440	./obj/kern/kernel.asm	/^f0100440:	0f b6 d2             	movzbl %dl,%edx$/;"	l
-f0100443	./obj/kern/kernel.asm	/^f0100443:	0f b6 82 40 18 10 f0 	movzbl -0xfefe7c0(%edx),%eax$/;"	l
-f010044a	./obj/kern/kernel.asm	/^f010044a:	0b 05 28 95 11 f0    	or     0xf0119528,%eax$/;"	l
-f0100450	./obj/kern/kernel.asm	/^f0100450:	0f b6 8a 40 19 10 f0 	movzbl -0xfefe6c0(%edx),%ecx$/;"	l
-f0100457	./obj/kern/kernel.asm	/^f0100457:	31 c8                	xor    %ecx,%eax$/;"	l
-f0100459	./obj/kern/kernel.asm	/^f0100459:	a3 28 95 11 f0       	mov    %eax,0xf0119528$/;"	l
-f010045e	./obj/kern/kernel.asm	/^f010045e:	89 c1                	mov    %eax,%ecx$/;"	l
-f0100460	./obj/kern/kernel.asm	/^f0100460:	83 e1 03             	and    $0x3,%ecx$/;"	l
-f0100463	./obj/kern/kernel.asm	/^f0100463:	8b 0c 8d 40 1a 10 f0 	mov    -0xfefe5c0(,%ecx,4),%ecx$/;"	l
-f010046a	./obj/kern/kernel.asm	/^f010046a:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
-f010046e	./obj/kern/kernel.asm	/^f010046e:	a8 08                	test   $0x8,%al$/;"	l
-f0100470	./obj/kern/kernel.asm	/^f0100470:	74 18                	je     f010048a <kbd_proc_data+0xc9>$/;"	l
-f0100472	./obj/kern/kernel.asm	/^f0100472:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
-f0100475	./obj/kern/kernel.asm	/^f0100475:	83 fa 19             	cmp    $0x19,%edx$/;"	l
-f0100478	./obj/kern/kernel.asm	/^f0100478:	77 05                	ja     f010047f <kbd_proc_data+0xbe>$/;"	l
-f010047a	./obj/kern/kernel.asm	/^f010047a:	83 eb 20             	sub    $0x20,%ebx$/;"	l
-f010047d	./obj/kern/kernel.asm	/^f010047d:	eb 0b                	jmp    f010048a <kbd_proc_data+0xc9>$/;"	l
-f010047f	./obj/kern/kernel.asm	/^f010047f:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
-f0100482	./obj/kern/kernel.asm	/^f0100482:	83 fa 19             	cmp    $0x19,%edx$/;"	l
-f0100485	./obj/kern/kernel.asm	/^f0100485:	77 03                	ja     f010048a <kbd_proc_data+0xc9>$/;"	l
-f0100487	./obj/kern/kernel.asm	/^f0100487:	83 c3 20             	add    $0x20,%ebx$/;"	l
-f010048a	./obj/kern/kernel.asm	/^f010048a:	f7 d0                	not    %eax$/;"	l
-f010048c	./obj/kern/kernel.asm	/^f010048c:	a8 06                	test   $0x6,%al$/;"	l
-f010048e	./obj/kern/kernel.asm	/^f010048e:	75 23                	jne    f01004b3 <kbd_proc_data+0xf2>$/;"	l
-f0100490	./obj/kern/kernel.asm	/^f0100490:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
-f0100496	./obj/kern/kernel.asm	/^f0100496:	75 1b                	jne    f01004b3 <kbd_proc_data+0xf2>$/;"	l
-f0100498	./obj/kern/kernel.asm	/^f0100498:	c7 04 24 04 18 10 f0 	movl   $0xf0101804,(%esp)$/;"	l
-f010049f	./obj/kern/kernel.asm	/^f010049f:	e8 2a 04 00 00       	call   f01008ce <cprintf>$/;"	l
-f01004a4	./obj/kern/kernel.asm	/^f01004a4:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
-f01004a9	./obj/kern/kernel.asm	/^f01004a9:	b0 03                	mov    $0x3,%al$/;"	l
-f01004ab	./obj/kern/kernel.asm	/^f01004ab:	ee                   	out    %al,(%dx)$/;"	l
-f01004ac	./obj/kern/kernel.asm	/^f01004ac:	eb 05                	jmp    f01004b3 <kbd_proc_data+0xf2>$/;"	l
-f01004ae	./obj/kern/kernel.asm	/^f01004ae:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
-f01004b3	./obj/kern/kernel.asm	/^f01004b3:	89 d8                	mov    %ebx,%eax$/;"	l
-f01004b5	./obj/kern/kernel.asm	/^f01004b5:	83 c4 14             	add    $0x14,%esp$/;"	l
-f01004b8	./obj/kern/kernel.asm	/^f01004b8:	5b                   	pop    %ebx$/;"	l
-f01004b9	./obj/kern/kernel.asm	/^f01004b9:	5d                   	pop    %ebp$/;"	l
-f01004ba	./obj/kern/kernel.asm	/^f01004ba:	c3                   	ret    $/;"	l
-f01004bb	./obj/kern/kernel.asm	/^f01004bb <serial_intr>:$/;"	l
-f01004bb	./obj/kern/kernel.asm	/^f01004bb:	55                   	push   %ebp$/;"	l
-f01004bc	./obj/kern/kernel.asm	/^f01004bc:	89 e5                	mov    %esp,%ebp$/;"	l
-f01004be	./obj/kern/kernel.asm	/^f01004be:	83 ec 08             	sub    $0x8,%esp$/;"	l
-f01004c1	./obj/kern/kernel.asm	/^f01004c1:	80 3d 00 93 11 f0 00 	cmpb   $0x0,0xf0119300$/;"	l
-f01004c8	./obj/kern/kernel.asm	/^f01004c8:	74 0a                	je     f01004d4 <serial_intr+0x19>$/;"	l
-f01004ca	./obj/kern/kernel.asm	/^f01004ca:	b8 aa 01 10 f0       	mov    $0xf01001aa,%eax$/;"	l
-f01004cf	./obj/kern/kernel.asm	/^f01004cf:	e8 f2 fc ff ff       	call   f01001c6 <cons_intr>$/;"	l
-f01004d4	./obj/kern/kernel.asm	/^f01004d4:	c9                   	leave  $/;"	l
-f01004d5	./obj/kern/kernel.asm	/^f01004d5:	c3                   	ret    $/;"	l
-f01004d6	./obj/kern/kernel.asm	/^f01004d6 <kbd_intr>:$/;"	l
-f01004d6	./obj/kern/kernel.asm	/^f01004d6:	55                   	push   %ebp$/;"	l
-f01004d7	./obj/kern/kernel.asm	/^f01004d7:	89 e5                	mov    %esp,%ebp$/;"	l
-f01004d9	./obj/kern/kernel.asm	/^f01004d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
-f01004dc	./obj/kern/kernel.asm	/^f01004dc:	b8 c1 03 10 f0       	mov    $0xf01003c1,%eax$/;"	l
-f01004e1	./obj/kern/kernel.asm	/^f01004e1:	e8 e0 fc ff ff       	call   f01001c6 <cons_intr>$/;"	l
-f01004e6	./obj/kern/kernel.asm	/^f01004e6:	c9                   	leave  $/;"	l
-f01004e7	./obj/kern/kernel.asm	/^f01004e7:	c3                   	ret    $/;"	l
-f01004e8	./obj/kern/kernel.asm	/^f01004e8 <cons_getc>:$/;"	l
-f01004e8	./obj/kern/kernel.asm	/^f01004e8:	55                   	push   %ebp$/;"	l
-f01004e9	./obj/kern/kernel.asm	/^f01004e9:	89 e5                	mov    %esp,%ebp$/;"	l
-f01004eb	./obj/kern/kernel.asm	/^f01004eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
-f01004ee	./obj/kern/kernel.asm	/^f01004ee:	e8 c8 ff ff ff       	call   f01004bb <serial_intr>$/;"	l
-f01004f3	./obj/kern/kernel.asm	/^f01004f3:	e8 de ff ff ff       	call   f01004d6 <kbd_intr>$/;"	l
-f01004f8	./obj/kern/kernel.asm	/^f01004f8:	8b 15 20 95 11 f0    	mov    0xf0119520,%edx$/;"	l
-f01004fe	./obj/kern/kernel.asm	/^f01004fe:	3b 15 24 95 11 f0    	cmp    0xf0119524,%edx$/;"	l
-f0100504	./obj/kern/kernel.asm	/^f0100504:	74 22                	je     f0100528 <cons_getc+0x40>$/;"	l
-f0100506	./obj/kern/kernel.asm	/^f0100506:	0f b6 82 20 93 11 f0 	movzbl -0xfee6ce0(%edx),%eax$/;"	l
-f010050d	./obj/kern/kernel.asm	/^f010050d:	42                   	inc    %edx$/;"	l
-f010050e	./obj/kern/kernel.asm	/^f010050e:	89 15 20 95 11 f0    	mov    %edx,0xf0119520$/;"	l
-f0100514	./obj/kern/kernel.asm	/^f0100514:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
-f010051a	./obj/kern/kernel.asm	/^f010051a:	75 11                	jne    f010052d <cons_getc+0x45>$/;"	l
-f010051c	./obj/kern/kernel.asm	/^f010051c:	c7 05 20 95 11 f0 00 	movl   $0x0,0xf0119520$/;"	l
-f0100523	./obj/kern/kernel.asm	/^f0100523:	00 00 00 $/;"	l
-f0100526	./obj/kern/kernel.asm	/^f0100526:	eb 05                	jmp    f010052d <cons_getc+0x45>$/;"	l
-f0100528	./obj/kern/kernel.asm	/^f0100528:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f010052d	./obj/kern/kernel.asm	/^f010052d:	c9                   	leave  $/;"	l
-f010052e	./obj/kern/kernel.asm	/^f010052e:	c3                   	ret    $/;"	l
-f010052f	./obj/kern/kernel.asm	/^f010052f <cons_init>:$/;"	l
-f010052f	./obj/kern/kernel.asm	/^f010052f:	55                   	push   %ebp$/;"	l
-f0100530	./obj/kern/kernel.asm	/^f0100530:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100532	./obj/kern/kernel.asm	/^f0100532:	57                   	push   %edi$/;"	l
-f0100533	./obj/kern/kernel.asm	/^f0100533:	56                   	push   %esi$/;"	l
-f0100534	./obj/kern/kernel.asm	/^f0100534:	53                   	push   %ebx$/;"	l
-f0100535	./obj/kern/kernel.asm	/^f0100535:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
-f0100538	./obj/kern/kernel.asm	/^f0100538:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
-f010053f	./obj/kern/kernel.asm	/^f010053f:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
-f0100546	./obj/kern/kernel.asm	/^f0100546:	5a a5 $/;"	l
-f0100548	./obj/kern/kernel.asm	/^f0100548:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
-f010054e	./obj/kern/kernel.asm	/^f010054e:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
-f0100552	./obj/kern/kernel.asm	/^f0100552:	74 11                	je     f0100565 <cons_init+0x36>$/;"	l
-f0100554	./obj/kern/kernel.asm	/^f0100554:	c7 05 2c 95 11 f0 b4 	movl   $0x3b4,0xf011952c$/;"	l
-f010055b	./obj/kern/kernel.asm	/^f010055b:	03 00 00 $/;"	l
-f010055e	./obj/kern/kernel.asm	/^f010055e:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
-f0100563	./obj/kern/kernel.asm	/^f0100563:	eb 16                	jmp    f010057b <cons_init+0x4c>$/;"	l
-f0100565	./obj/kern/kernel.asm	/^f0100565:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
-f010056c	./obj/kern/kernel.asm	/^f010056c:	c7 05 2c 95 11 f0 d4 	movl   $0x3d4,0xf011952c$/;"	l
-f0100573	./obj/kern/kernel.asm	/^f0100573:	03 00 00 $/;"	l
-f0100576	./obj/kern/kernel.asm	/^f0100576:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
-f010057b	./obj/kern/kernel.asm	/^f010057b:	8b 0d 2c 95 11 f0    	mov    0xf011952c,%ecx$/;"	l
-f0100581	./obj/kern/kernel.asm	/^f0100581:	b0 0e                	mov    $0xe,%al$/;"	l
-f0100583	./obj/kern/kernel.asm	/^f0100583:	89 ca                	mov    %ecx,%edx$/;"	l
-f0100585	./obj/kern/kernel.asm	/^f0100585:	ee                   	out    %al,(%dx)$/;"	l
-f0100586	./obj/kern/kernel.asm	/^f0100586:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
-f0100589	./obj/kern/kernel.asm	/^f0100589:	89 da                	mov    %ebx,%edx$/;"	l
-f010058b	./obj/kern/kernel.asm	/^f010058b:	ec                   	in     (%dx),%al$/;"	l
-f010058c	./obj/kern/kernel.asm	/^f010058c:	0f b6 f8             	movzbl %al,%edi$/;"	l
-f010058f	./obj/kern/kernel.asm	/^f010058f:	c1 e7 08             	shl    $0x8,%edi$/;"	l
-f0100592	./obj/kern/kernel.asm	/^f0100592:	b0 0f                	mov    $0xf,%al$/;"	l
-f0100594	./obj/kern/kernel.asm	/^f0100594:	89 ca                	mov    %ecx,%edx$/;"	l
-f0100596	./obj/kern/kernel.asm	/^f0100596:	ee                   	out    %al,(%dx)$/;"	l
-f0100597	./obj/kern/kernel.asm	/^f0100597:	89 da                	mov    %ebx,%edx$/;"	l
-f0100599	./obj/kern/kernel.asm	/^f0100599:	ec                   	in     (%dx),%al$/;"	l
-f010059a	./obj/kern/kernel.asm	/^f010059a:	89 35 30 95 11 f0    	mov    %esi,0xf0119530$/;"	l
-f01005a0	./obj/kern/kernel.asm	/^f01005a0:	0f b6 d8             	movzbl %al,%ebx$/;"	l
-f01005a3	./obj/kern/kernel.asm	/^f01005a3:	09 df                	or     %ebx,%edi$/;"	l
-f01005a5	./obj/kern/kernel.asm	/^f01005a5:	66 89 3d 34 95 11 f0 	mov    %di,0xf0119534$/;"	l
-f01005ac	./obj/kern/kernel.asm	/^f01005ac:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
-f01005b1	./obj/kern/kernel.asm	/^f01005b1:	b0 00                	mov    $0x0,%al$/;"	l
-f01005b3	./obj/kern/kernel.asm	/^f01005b3:	89 da                	mov    %ebx,%edx$/;"	l
-f01005b5	./obj/kern/kernel.asm	/^f01005b5:	ee                   	out    %al,(%dx)$/;"	l
-f01005b6	./obj/kern/kernel.asm	/^f01005b6:	b2 fb                	mov    $0xfb,%dl$/;"	l
-f01005b8	./obj/kern/kernel.asm	/^f01005b8:	b0 80                	mov    $0x80,%al$/;"	l
-f01005ba	./obj/kern/kernel.asm	/^f01005ba:	ee                   	out    %al,(%dx)$/;"	l
-f01005bb	./obj/kern/kernel.asm	/^f01005bb:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
-f01005c0	./obj/kern/kernel.asm	/^f01005c0:	b0 0c                	mov    $0xc,%al$/;"	l
-f01005c2	./obj/kern/kernel.asm	/^f01005c2:	89 ca                	mov    %ecx,%edx$/;"	l
-f01005c4	./obj/kern/kernel.asm	/^f01005c4:	ee                   	out    %al,(%dx)$/;"	l
-f01005c5	./obj/kern/kernel.asm	/^f01005c5:	b2 f9                	mov    $0xf9,%dl$/;"	l
-f01005c7	./obj/kern/kernel.asm	/^f01005c7:	b0 00                	mov    $0x0,%al$/;"	l
-f01005c9	./obj/kern/kernel.asm	/^f01005c9:	ee                   	out    %al,(%dx)$/;"	l
-f01005ca	./obj/kern/kernel.asm	/^f01005ca:	b2 fb                	mov    $0xfb,%dl$/;"	l
-f01005cc	./obj/kern/kernel.asm	/^f01005cc:	b0 03                	mov    $0x3,%al$/;"	l
-f01005ce	./obj/kern/kernel.asm	/^f01005ce:	ee                   	out    %al,(%dx)$/;"	l
-f01005cf	./obj/kern/kernel.asm	/^f01005cf:	b2 fc                	mov    $0xfc,%dl$/;"	l
-f01005d1	./obj/kern/kernel.asm	/^f01005d1:	b0 00                	mov    $0x0,%al$/;"	l
-f01005d3	./obj/kern/kernel.asm	/^f01005d3:	ee                   	out    %al,(%dx)$/;"	l
-f01005d4	./obj/kern/kernel.asm	/^f01005d4:	b2 f9                	mov    $0xf9,%dl$/;"	l
-f01005d6	./obj/kern/kernel.asm	/^f01005d6:	b0 01                	mov    $0x1,%al$/;"	l
-f01005d8	./obj/kern/kernel.asm	/^f01005d8:	ee                   	out    %al,(%dx)$/;"	l
-f01005d9	./obj/kern/kernel.asm	/^f01005d9:	b2 fd                	mov    $0xfd,%dl$/;"	l
-f01005db	./obj/kern/kernel.asm	/^f01005db:	ec                   	in     (%dx),%al$/;"	l
-f01005dc	./obj/kern/kernel.asm	/^f01005dc:	3c ff                	cmp    $0xff,%al$/;"	l
-f01005de	./obj/kern/kernel.asm	/^f01005de:	0f 95 45 e7          	setne  -0x19(%ebp)$/;"	l
-f01005e2	./obj/kern/kernel.asm	/^f01005e2:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
-f01005e5	./obj/kern/kernel.asm	/^f01005e5:	a2 00 93 11 f0       	mov    %al,0xf0119300$/;"	l
-f01005ea	./obj/kern/kernel.asm	/^f01005ea:	89 da                	mov    %ebx,%edx$/;"	l
-f01005ec	./obj/kern/kernel.asm	/^f01005ec:	ec                   	in     (%dx),%al$/;"	l
-f01005ed	./obj/kern/kernel.asm	/^f01005ed:	89 ca                	mov    %ecx,%edx$/;"	l
-f01005ef	./obj/kern/kernel.asm	/^f01005ef:	ec                   	in     (%dx),%al$/;"	l
-f01005f0	./obj/kern/kernel.asm	/^f01005f0:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
-f01005f4	./obj/kern/kernel.asm	/^f01005f4:	75 0c                	jne    f0100602 <cons_init+0xd3>$/;"	l
-f01005f6	./obj/kern/kernel.asm	/^f01005f6:	c7 04 24 10 18 10 f0 	movl   $0xf0101810,(%esp)$/;"	l
-f01005fd	./obj/kern/kernel.asm	/^f01005fd:	e8 cc 02 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100602	./obj/kern/kernel.asm	/^f0100602:	83 c4 2c             	add    $0x2c,%esp$/;"	l
-f0100605	./obj/kern/kernel.asm	/^f0100605:	5b                   	pop    %ebx$/;"	l
-f0100606	./obj/kern/kernel.asm	/^f0100606:	5e                   	pop    %esi$/;"	l
-f0100607	./obj/kern/kernel.asm	/^f0100607:	5f                   	pop    %edi$/;"	l
-f0100608	./obj/kern/kernel.asm	/^f0100608:	5d                   	pop    %ebp$/;"	l
-f0100609	./obj/kern/kernel.asm	/^f0100609:	c3                   	ret    $/;"	l
-f010060a	./obj/kern/kernel.asm	/^f010060a <cputchar>:$/;"	l
-f010060a	./obj/kern/kernel.asm	/^f010060a:	55                   	push   %ebp$/;"	l
-f010060b	./obj/kern/kernel.asm	/^f010060b:	89 e5                	mov    %esp,%ebp$/;"	l
-f010060d	./obj/kern/kernel.asm	/^f010060d:	83 ec 08             	sub    $0x8,%esp$/;"	l
-f0100610	./obj/kern/kernel.asm	/^f0100610:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0100613	./obj/kern/kernel.asm	/^f0100613:	e8 ef fb ff ff       	call   f0100207 <cons_putc>$/;"	l
-f0100618	./obj/kern/kernel.asm	/^f0100618:	c9                   	leave  $/;"	l
-f0100619	./obj/kern/kernel.asm	/^f0100619:	c3                   	ret    $/;"	l
-f010061a	./obj/kern/kernel.asm	/^f010061a <getchar>:$/;"	l
-f010061a	./obj/kern/kernel.asm	/^f010061a:	55                   	push   %ebp$/;"	l
-f010061b	./obj/kern/kernel.asm	/^f010061b:	89 e5                	mov    %esp,%ebp$/;"	l
-f010061d	./obj/kern/kernel.asm	/^f010061d:	83 ec 08             	sub    $0x8,%esp$/;"	l
-f0100620	./obj/kern/kernel.asm	/^f0100620:	e8 c3 fe ff ff       	call   f01004e8 <cons_getc>$/;"	l
-f0100625	./obj/kern/kernel.asm	/^f0100625:	85 c0                	test   %eax,%eax$/;"	l
-f0100627	./obj/kern/kernel.asm	/^f0100627:	74 f7                	je     f0100620 <getchar+0x6>$/;"	l
-f0100629	./obj/kern/kernel.asm	/^f0100629:	c9                   	leave  $/;"	l
-f010062a	./obj/kern/kernel.asm	/^f010062a:	c3                   	ret    $/;"	l
-f010062b	./obj/kern/kernel.asm	/^f010062b <iscons>:$/;"	l
-f010062b	./obj/kern/kernel.asm	/^f010062b:	55                   	push   %ebp$/;"	l
-f010062c	./obj/kern/kernel.asm	/^f010062c:	89 e5                	mov    %esp,%ebp$/;"	l
-f010062e	./obj/kern/kernel.asm	/^f010062e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
-f0100633	./obj/kern/kernel.asm	/^f0100633:	5d                   	pop    %ebp$/;"	l
-f0100634	./obj/kern/kernel.asm	/^f0100634:	c3                   	ret    $/;"	l
-f0100635	./obj/kern/kernel.asm	/^f0100635:	00 00                	add    %al,(%eax)$/;"	l
-f0100638	./obj/kern/kernel.asm	/^f0100638 <mon_kerninfo>:$/;"	l
-f0100638	./obj/kern/kernel.asm	/^f0100638:	55                   	push   %ebp$/;"	l
-f0100639	./obj/kern/kernel.asm	/^f0100639:	89 e5                	mov    %esp,%ebp$/;"	l
-f010063b	./obj/kern/kernel.asm	/^f010063b:	83 ec 18             	sub    $0x18,%esp$/;"	l
-f010063e	./obj/kern/kernel.asm	/^f010063e:	c7 04 24 50 1a 10 f0 	movl   $0xf0101a50,(%esp)$/;"	l
-f0100645	./obj/kern/kernel.asm	/^f0100645:	e8 84 02 00 00       	call   f01008ce <cprintf>$/;"	l
-f010064a	./obj/kern/kernel.asm	/^f010064a:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
-f0100651	./obj/kern/kernel.asm	/^f0100651:	00 $/;"	l
-f0100652	./obj/kern/kernel.asm	/^f0100652:	c7 04 24 dc 1a 10 f0 	movl   $0xf0101adc,(%esp)$/;"	l
-f0100659	./obj/kern/kernel.asm	/^f0100659:	e8 70 02 00 00       	call   f01008ce <cprintf>$/;"	l
-f010065e	./obj/kern/kernel.asm	/^f010065e:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
-f0100665	./obj/kern/kernel.asm	/^f0100665:	00 $/;"	l
-f0100666	./obj/kern/kernel.asm	/^f0100666:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
-f010066d	./obj/kern/kernel.asm	/^f010066d:	f0 $/;"	l
-f010066e	./obj/kern/kernel.asm	/^f010066e:	c7 04 24 04 1b 10 f0 	movl   $0xf0101b04,(%esp)$/;"	l
-f0100675	./obj/kern/kernel.asm	/^f0100675:	e8 54 02 00 00       	call   f01008ce <cprintf>$/;"	l
-f010067a	./obj/kern/kernel.asm	/^f010067a:	c7 44 24 08 7e 17 10 	movl   $0x10177e,0x8(%esp)$/;"	l
-f0100681	./obj/kern/kernel.asm	/^f0100681:	00 $/;"	l
-f0100682	./obj/kern/kernel.asm	/^f0100682:	c7 44 24 04 7e 17 10 	movl   $0xf010177e,0x4(%esp)$/;"	l
-f0100689	./obj/kern/kernel.asm	/^f0100689:	f0 $/;"	l
-f010068a	./obj/kern/kernel.asm	/^f010068a:	c7 04 24 28 1b 10 f0 	movl   $0xf0101b28,(%esp)$/;"	l
-f0100691	./obj/kern/kernel.asm	/^f0100691:	e8 38 02 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100696	./obj/kern/kernel.asm	/^f0100696:	c7 44 24 08 00 93 11 	movl   $0x119300,0x8(%esp)$/;"	l
-f010069d	./obj/kern/kernel.asm	/^f010069d:	00 $/;"	l
-f010069e	./obj/kern/kernel.asm	/^f010069e:	c7 44 24 04 00 93 11 	movl   $0xf0119300,0x4(%esp)$/;"	l
-f01006a5	./obj/kern/kernel.asm	/^f01006a5:	f0 $/;"	l
-f01006a6	./obj/kern/kernel.asm	/^f01006a6:	c7 04 24 4c 1b 10 f0 	movl   $0xf0101b4c,(%esp)$/;"	l
-f01006ad	./obj/kern/kernel.asm	/^f01006ad:	e8 1c 02 00 00       	call   f01008ce <cprintf>$/;"	l
-f01006b2	./obj/kern/kernel.asm	/^f01006b2:	c7 44 24 08 44 99 11 	movl   $0x119944,0x8(%esp)$/;"	l
-f01006b9	./obj/kern/kernel.asm	/^f01006b9:	00 $/;"	l
-f01006ba	./obj/kern/kernel.asm	/^f01006ba:	c7 44 24 04 44 99 11 	movl   $0xf0119944,0x4(%esp)$/;"	l
-f01006c1	./obj/kern/kernel.asm	/^f01006c1:	f0 $/;"	l
-f01006c2	./obj/kern/kernel.asm	/^f01006c2:	c7 04 24 70 1b 10 f0 	movl   $0xf0101b70,(%esp)$/;"	l
-f01006c9	./obj/kern/kernel.asm	/^f01006c9:	e8 00 02 00 00       	call   f01008ce <cprintf>$/;"	l
-f01006ce	./obj/kern/kernel.asm	/^f01006ce:	b8 43 9d 11 f0       	mov    $0xf0119d43,%eax$/;"	l
-f01006d3	./obj/kern/kernel.asm	/^f01006d3:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
-f01006d8	./obj/kern/kernel.asm	/^f01006d8:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
-f01006dd	./obj/kern/kernel.asm	/^f01006dd:	89 c2                	mov    %eax,%edx$/;"	l
-f01006df	./obj/kern/kernel.asm	/^f01006df:	85 c0                	test   %eax,%eax$/;"	l
-f01006e1	./obj/kern/kernel.asm	/^f01006e1:	79 06                	jns    f01006e9 <mon_kerninfo+0xb1>$/;"	l
-f01006e3	./obj/kern/kernel.asm	/^f01006e3:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
-f01006e9	./obj/kern/kernel.asm	/^f01006e9:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
-f01006ec	./obj/kern/kernel.asm	/^f01006ec:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
-f01006f0	./obj/kern/kernel.asm	/^f01006f0:	c7 04 24 94 1b 10 f0 	movl   $0xf0101b94,(%esp)$/;"	l
-f01006f7	./obj/kern/kernel.asm	/^f01006f7:	e8 d2 01 00 00       	call   f01008ce <cprintf>$/;"	l
-f01006fc	./obj/kern/kernel.asm	/^f01006fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0100701	./obj/kern/kernel.asm	/^f0100701:	c9                   	leave  $/;"	l
-f0100702	./obj/kern/kernel.asm	/^f0100702:	c3                   	ret    $/;"	l
-f0100703	./obj/kern/kernel.asm	/^f0100703 <mon_help>:$/;"	l
-f0100703	./obj/kern/kernel.asm	/^f0100703:	55                   	push   %ebp$/;"	l
-f0100704	./obj/kern/kernel.asm	/^f0100704:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100706	./obj/kern/kernel.asm	/^f0100706:	83 ec 18             	sub    $0x18,%esp$/;"	l
-f0100709	./obj/kern/kernel.asm	/^f0100709:	c7 44 24 08 69 1a 10 	movl   $0xf0101a69,0x8(%esp)$/;"	l
-f0100710	./obj/kern/kernel.asm	/^f0100710:	f0 $/;"	l
-f0100711	./obj/kern/kernel.asm	/^f0100711:	c7 44 24 04 87 1a 10 	movl   $0xf0101a87,0x4(%esp)$/;"	l
-f0100718	./obj/kern/kernel.asm	/^f0100718:	f0 $/;"	l
-f0100719	./obj/kern/kernel.asm	/^f0100719:	c7 04 24 8c 1a 10 f0 	movl   $0xf0101a8c,(%esp)$/;"	l
-f0100720	./obj/kern/kernel.asm	/^f0100720:	e8 a9 01 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100725	./obj/kern/kernel.asm	/^f0100725:	c7 44 24 08 c0 1b 10 	movl   $0xf0101bc0,0x8(%esp)$/;"	l
-f010072c	./obj/kern/kernel.asm	/^f010072c:	f0 $/;"	l
-f010072d	./obj/kern/kernel.asm	/^f010072d:	c7 44 24 04 95 1a 10 	movl   $0xf0101a95,0x4(%esp)$/;"	l
-f0100734	./obj/kern/kernel.asm	/^f0100734:	f0 $/;"	l
-f0100735	./obj/kern/kernel.asm	/^f0100735:	c7 04 24 8c 1a 10 f0 	movl   $0xf0101a8c,(%esp)$/;"	l
-f010073c	./obj/kern/kernel.asm	/^f010073c:	e8 8d 01 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100741	./obj/kern/kernel.asm	/^f0100741:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0100746	./obj/kern/kernel.asm	/^f0100746:	c9                   	leave  $/;"	l
-f0100747	./obj/kern/kernel.asm	/^f0100747:	c3                   	ret    $/;"	l
-f0100748	./obj/kern/kernel.asm	/^f0100748 <mon_backtrace>:$/;"	l
-f0100748	./obj/kern/kernel.asm	/^f0100748:	55                   	push   %ebp$/;"	l
-f0100749	./obj/kern/kernel.asm	/^f0100749:	89 e5                	mov    %esp,%ebp$/;"	l
-f010074b	./obj/kern/kernel.asm	/^f010074b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0100750	./obj/kern/kernel.asm	/^f0100750:	5d                   	pop    %ebp$/;"	l
-f0100751	./obj/kern/kernel.asm	/^f0100751:	c3                   	ret    $/;"	l
-f0100752	./obj/kern/kernel.asm	/^f0100752 <monitor>:$/;"	l
-f0100752	./obj/kern/kernel.asm	/^f0100752:	55                   	push   %ebp$/;"	l
-f0100753	./obj/kern/kernel.asm	/^f0100753:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100755	./obj/kern/kernel.asm	/^f0100755:	57                   	push   %edi$/;"	l
-f0100756	./obj/kern/kernel.asm	/^f0100756:	56                   	push   %esi$/;"	l
-f0100757	./obj/kern/kernel.asm	/^f0100757:	53                   	push   %ebx$/;"	l
-f0100758	./obj/kern/kernel.asm	/^f0100758:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
-f010075b	./obj/kern/kernel.asm	/^f010075b:	c7 04 24 e8 1b 10 f0 	movl   $0xf0101be8,(%esp)$/;"	l
-f0100762	./obj/kern/kernel.asm	/^f0100762:	e8 67 01 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100767	./obj/kern/kernel.asm	/^f0100767:	c7 04 24 0c 1c 10 f0 	movl   $0xf0101c0c,(%esp)$/;"	l
-f010076e	./obj/kern/kernel.asm	/^f010076e:	e8 5b 01 00 00       	call   f01008ce <cprintf>$/;"	l
-f0100773	./obj/kern/kernel.asm	/^f0100773:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
-f0100776	./obj/kern/kernel.asm	/^f0100776:	c7 04 24 9e 1a 10 f0 	movl   $0xf0101a9e,(%esp)$/;"	l
-f010077d	./obj/kern/kernel.asm	/^f010077d:	e8 8e 09 00 00       	call   f0101110 <readline>$/;"	l
-f0100782	./obj/kern/kernel.asm	/^f0100782:	89 c3                	mov    %eax,%ebx$/;"	l
-f0100784	./obj/kern/kernel.asm	/^f0100784:	85 c0                	test   %eax,%eax$/;"	l
-f0100786	./obj/kern/kernel.asm	/^f0100786:	74 ee                	je     f0100776 <monitor+0x24>$/;"	l
-f0100788	./obj/kern/kernel.asm	/^f0100788:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
-f010078f	./obj/kern/kernel.asm	/^f010078f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
-f0100794	./obj/kern/kernel.asm	/^f0100794:	eb 04                	jmp    f010079a <monitor+0x48>$/;"	l
-f0100796	./obj/kern/kernel.asm	/^f0100796:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
-f0100799	./obj/kern/kernel.asm	/^f0100799:	43                   	inc    %ebx$/;"	l
-f010079a	./obj/kern/kernel.asm	/^f010079a:	8a 03                	mov    (%ebx),%al$/;"	l
-f010079c	./obj/kern/kernel.asm	/^f010079c:	84 c0                	test   %al,%al$/;"	l
-f010079e	./obj/kern/kernel.asm	/^f010079e:	74 5e                	je     f01007fe <monitor+0xac>$/;"	l
-f01007a0	./obj/kern/kernel.asm	/^f01007a0:	0f be c0             	movsbl %al,%eax$/;"	l
-f01007a3	./obj/kern/kernel.asm	/^f01007a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f01007a7	./obj/kern/kernel.asm	/^f01007a7:	c7 04 24 a2 1a 10 f0 	movl   $0xf0101aa2,(%esp)$/;"	l
-f01007ae	./obj/kern/kernel.asm	/^f01007ae:	e8 52 0b 00 00       	call   f0101305 <strchr>$/;"	l
-f01007b3	./obj/kern/kernel.asm	/^f01007b3:	85 c0                	test   %eax,%eax$/;"	l
-f01007b5	./obj/kern/kernel.asm	/^f01007b5:	75 df                	jne    f0100796 <monitor+0x44>$/;"	l
-f01007b7	./obj/kern/kernel.asm	/^f01007b7:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
-f01007ba	./obj/kern/kernel.asm	/^f01007ba:	74 42                	je     f01007fe <monitor+0xac>$/;"	l
-f01007bc	./obj/kern/kernel.asm	/^f01007bc:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
-f01007bf	./obj/kern/kernel.asm	/^f01007bf:	75 16                	jne    f01007d7 <monitor+0x85>$/;"	l
-f01007c1	./obj/kern/kernel.asm	/^f01007c1:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
-f01007c8	./obj/kern/kernel.asm	/^f01007c8:	00 $/;"	l
-f01007c9	./obj/kern/kernel.asm	/^f01007c9:	c7 04 24 a7 1a 10 f0 	movl   $0xf0101aa7,(%esp)$/;"	l
-f01007d0	./obj/kern/kernel.asm	/^f01007d0:	e8 f9 00 00 00       	call   f01008ce <cprintf>$/;"	l
-f01007d5	./obj/kern/kernel.asm	/^f01007d5:	eb 9f                	jmp    f0100776 <monitor+0x24>$/;"	l
-f01007d7	./obj/kern/kernel.asm	/^f01007d7:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
-f01007db	./obj/kern/kernel.asm	/^f01007db:	46                   	inc    %esi$/;"	l
-f01007dc	./obj/kern/kernel.asm	/^f01007dc:	eb 01                	jmp    f01007df <monitor+0x8d>$/;"	l
-f01007de	./obj/kern/kernel.asm	/^f01007de:	43                   	inc    %ebx$/;"	l
-f01007df	./obj/kern/kernel.asm	/^f01007df:	8a 03                	mov    (%ebx),%al$/;"	l
-f01007e1	./obj/kern/kernel.asm	/^f01007e1:	84 c0                	test   %al,%al$/;"	l
-f01007e3	./obj/kern/kernel.asm	/^f01007e3:	74 b5                	je     f010079a <monitor+0x48>$/;"	l
-f01007e5	./obj/kern/kernel.asm	/^f01007e5:	0f be c0             	movsbl %al,%eax$/;"	l
-f01007e8	./obj/kern/kernel.asm	/^f01007e8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f01007ec	./obj/kern/kernel.asm	/^f01007ec:	c7 04 24 a2 1a 10 f0 	movl   $0xf0101aa2,(%esp)$/;"	l
-f01007f3	./obj/kern/kernel.asm	/^f01007f3:	e8 0d 0b 00 00       	call   f0101305 <strchr>$/;"	l
-f01007f8	./obj/kern/kernel.asm	/^f01007f8:	85 c0                	test   %eax,%eax$/;"	l
-f01007fa	./obj/kern/kernel.asm	/^f01007fa:	74 e2                	je     f01007de <monitor+0x8c>$/;"	l
-f01007fc	./obj/kern/kernel.asm	/^f01007fc:	eb 9c                	jmp    f010079a <monitor+0x48>$/;"	l
-f01007fe	./obj/kern/kernel.asm	/^f01007fe:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
-f0100805	./obj/kern/kernel.asm	/^f0100805:	00 $/;"	l
-f0100806	./obj/kern/kernel.asm	/^f0100806:	85 f6                	test   %esi,%esi$/;"	l
-f0100808	./obj/kern/kernel.asm	/^f0100808:	0f 84 68 ff ff ff    	je     f0100776 <monitor+0x24>$/;"	l
-f010080e	./obj/kern/kernel.asm	/^f010080e:	c7 44 24 04 87 1a 10 	movl   $0xf0101a87,0x4(%esp)$/;"	l
-f0100815	./obj/kern/kernel.asm	/^f0100815:	f0 $/;"	l
-f0100816	./obj/kern/kernel.asm	/^f0100816:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
-f0100819	./obj/kern/kernel.asm	/^f0100819:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f010081c	./obj/kern/kernel.asm	/^f010081c:	e8 91 0a 00 00       	call   f01012b2 <strcmp>$/;"	l
-f0100821	./obj/kern/kernel.asm	/^f0100821:	85 c0                	test   %eax,%eax$/;"	l
-f0100823	./obj/kern/kernel.asm	/^f0100823:	74 1b                	je     f0100840 <monitor+0xee>$/;"	l
-f0100825	./obj/kern/kernel.asm	/^f0100825:	c7 44 24 04 95 1a 10 	movl   $0xf0101a95,0x4(%esp)$/;"	l
-f010082c	./obj/kern/kernel.asm	/^f010082c:	f0 $/;"	l
-f010082d	./obj/kern/kernel.asm	/^f010082d:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
-f0100830	./obj/kern/kernel.asm	/^f0100830:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100833	./obj/kern/kernel.asm	/^f0100833:	e8 7a 0a 00 00       	call   f01012b2 <strcmp>$/;"	l
-f0100838	./obj/kern/kernel.asm	/^f0100838:	85 c0                	test   %eax,%eax$/;"	l
-f010083a	./obj/kern/kernel.asm	/^f010083a:	75 2c                	jne    f0100868 <monitor+0x116>$/;"	l
-f010083c	./obj/kern/kernel.asm	/^f010083c:	b0 01                	mov    $0x1,%al$/;"	l
-f010083e	./obj/kern/kernel.asm	/^f010083e:	eb 05                	jmp    f0100845 <monitor+0xf3>$/;"	l
-f0100840	./obj/kern/kernel.asm	/^f0100840:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0100845	./obj/kern/kernel.asm	/^f0100845:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
-f0100848	./obj/kern/kernel.asm	/^f0100848:	01 d0                	add    %edx,%eax$/;"	l
-f010084a	./obj/kern/kernel.asm	/^f010084a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
-f010084d	./obj/kern/kernel.asm	/^f010084d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
-f0100851	./obj/kern/kernel.asm	/^f0100851:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
-f0100855	./obj/kern/kernel.asm	/^f0100855:	89 34 24             	mov    %esi,(%esp)$/;"	l
-f0100858	./obj/kern/kernel.asm	/^f0100858:	ff 14 85 3c 1c 10 f0 	call   *-0xfefe3c4(,%eax,4)$/;"	l
-f010085f	./obj/kern/kernel.asm	/^f010085f:	85 c0                	test   %eax,%eax$/;"	l
-f0100861	./obj/kern/kernel.asm	/^f0100861:	78 1d                	js     f0100880 <monitor+0x12e>$/;"	l
-f0100863	./obj/kern/kernel.asm	/^f0100863:	e9 0e ff ff ff       	jmp    f0100776 <monitor+0x24>$/;"	l
-f0100868	./obj/kern/kernel.asm	/^f0100868:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
-f010086b	./obj/kern/kernel.asm	/^f010086b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f010086f	./obj/kern/kernel.asm	/^f010086f:	c7 04 24 c4 1a 10 f0 	movl   $0xf0101ac4,(%esp)$/;"	l
-f0100876	./obj/kern/kernel.asm	/^f0100876:	e8 53 00 00 00       	call   f01008ce <cprintf>$/;"	l
-f010087b	./obj/kern/kernel.asm	/^f010087b:	e9 f6 fe ff ff       	jmp    f0100776 <monitor+0x24>$/;"	l
-f0100880	./obj/kern/kernel.asm	/^f0100880:	83 c4 5c             	add    $0x5c,%esp$/;"	l
-f0100883	./obj/kern/kernel.asm	/^f0100883:	5b                   	pop    %ebx$/;"	l
-f0100884	./obj/kern/kernel.asm	/^f0100884:	5e                   	pop    %esi$/;"	l
-f0100885	./obj/kern/kernel.asm	/^f0100885:	5f                   	pop    %edi$/;"	l
-f0100886	./obj/kern/kernel.asm	/^f0100886:	5d                   	pop    %ebp$/;"	l
-f0100887	./obj/kern/kernel.asm	/^f0100887:	c3                   	ret    $/;"	l
-f0100888	./obj/kern/kernel.asm	/^f0100888 <putch>:$/;"	l
-f0100888	./obj/kern/kernel.asm	/^f0100888:	55                   	push   %ebp$/;"	l
-f0100889	./obj/kern/kernel.asm	/^f0100889:	89 e5                	mov    %esp,%ebp$/;"	l
-f010088b	./obj/kern/kernel.asm	/^f010088b:	83 ec 18             	sub    $0x18,%esp$/;"	l
-f010088e	./obj/kern/kernel.asm	/^f010088e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0100891	./obj/kern/kernel.asm	/^f0100891:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100894	./obj/kern/kernel.asm	/^f0100894:	e8 71 fd ff ff       	call   f010060a <cputchar>$/;"	l
-f0100899	./obj/kern/kernel.asm	/^f0100899:	c9                   	leave  $/;"	l
-f010089a	./obj/kern/kernel.asm	/^f010089a:	c3                   	ret    $/;"	l
-f010089b	./obj/kern/kernel.asm	/^f010089b <vcprintf>:$/;"	l
-f010089b	./obj/kern/kernel.asm	/^f010089b:	55                   	push   %ebp$/;"	l
-f010089c	./obj/kern/kernel.asm	/^f010089c:	89 e5                	mov    %esp,%ebp$/;"	l
-f010089e	./obj/kern/kernel.asm	/^f010089e:	83 ec 28             	sub    $0x28,%esp$/;"	l
-f01008a1	./obj/kern/kernel.asm	/^f01008a1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
-f01008a8	./obj/kern/kernel.asm	/^f01008a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f01008ab	./obj/kern/kernel.asm	/^f01008ab:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
-f01008af	./obj/kern/kernel.asm	/^f01008af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f01008b2	./obj/kern/kernel.asm	/^f01008b2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f01008b6	./obj/kern/kernel.asm	/^f01008b6:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
-f01008b9	./obj/kern/kernel.asm	/^f01008b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f01008bd	./obj/kern/kernel.asm	/^f01008bd:	c7 04 24 88 08 10 f0 	movl   $0xf0100888,(%esp)$/;"	l
-f01008c4	./obj/kern/kernel.asm	/^f01008c4:	e8 11 04 00 00       	call   f0100cda <vprintfmt>$/;"	l
-f01008c9	./obj/kern/kernel.asm	/^f01008c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
-f01008cc	./obj/kern/kernel.asm	/^f01008cc:	c9                   	leave  $/;"	l
-f01008cd	./obj/kern/kernel.asm	/^f01008cd:	c3                   	ret    $/;"	l
-f01008ce	./obj/kern/kernel.asm	/^f01008ce <cprintf>:$/;"	l
-f01008ce	./obj/kern/kernel.asm	/^f01008ce:	55                   	push   %ebp$/;"	l
-f01008cf	./obj/kern/kernel.asm	/^f01008cf:	89 e5                	mov    %esp,%ebp$/;"	l
-f01008d1	./obj/kern/kernel.asm	/^f01008d1:	83 ec 18             	sub    $0x18,%esp$/;"	l
-f01008d4	./obj/kern/kernel.asm	/^f01008d4:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
-f01008d7	./obj/kern/kernel.asm	/^f01008d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f01008db	./obj/kern/kernel.asm	/^f01008db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f01008de	./obj/kern/kernel.asm	/^f01008de:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f01008e1	./obj/kern/kernel.asm	/^f01008e1:	e8 b5 ff ff ff       	call   f010089b <vcprintf>$/;"	l
-f01008e6	./obj/kern/kernel.asm	/^f01008e6:	c9                   	leave  $/;"	l
-f01008e7	./obj/kern/kernel.asm	/^f01008e7:	c3                   	ret    $/;"	l
-f01008e8	./obj/kern/kernel.asm	/^f01008e8 <stab_binsearch>:$/;"	l
-f01008e8	./obj/kern/kernel.asm	/^f01008e8:	55                   	push   %ebp$/;"	l
-f01008e9	./obj/kern/kernel.asm	/^f01008e9:	89 e5                	mov    %esp,%ebp$/;"	l
-f01008eb	./obj/kern/kernel.asm	/^f01008eb:	57                   	push   %edi$/;"	l
-f01008ec	./obj/kern/kernel.asm	/^f01008ec:	56                   	push   %esi$/;"	l
-f01008ed	./obj/kern/kernel.asm	/^f01008ed:	53                   	push   %ebx$/;"	l
-f01008ee	./obj/kern/kernel.asm	/^f01008ee:	83 ec 10             	sub    $0x10,%esp$/;"	l
-f01008f1	./obj/kern/kernel.asm	/^f01008f1:	89 c3                	mov    %eax,%ebx$/;"	l
-f01008f3	./obj/kern/kernel.asm	/^f01008f3:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
-f01008f6	./obj/kern/kernel.asm	/^f01008f6:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
-f01008f9	./obj/kern/kernel.asm	/^f01008f9:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
-f01008fc	./obj/kern/kernel.asm	/^f01008fc:	8b 0a                	mov    (%edx),%ecx$/;"	l
-f01008fe	./obj/kern/kernel.asm	/^f01008fe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
-f0100901	./obj/kern/kernel.asm	/^f0100901:	8b 00                	mov    (%eax),%eax$/;"	l
-f0100903	./obj/kern/kernel.asm	/^f0100903:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
-f0100906	./obj/kern/kernel.asm	/^f0100906:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
-f010090d	./obj/kern/kernel.asm	/^f010090d:	eb 77                	jmp    f0100986 <stab_binsearch+0x9e>$/;"	l
-f010090f	./obj/kern/kernel.asm	/^f010090f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
-f0100912	./obj/kern/kernel.asm	/^f0100912:	01 c8                	add    %ecx,%eax$/;"	l
-f0100914	./obj/kern/kernel.asm	/^f0100914:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
-f0100919	./obj/kern/kernel.asm	/^f0100919:	99                   	cltd   $/;"	l
-f010091a	./obj/kern/kernel.asm	/^f010091a:	f7 ff                	idiv   %edi$/;"	l
-f010091c	./obj/kern/kernel.asm	/^f010091c:	89 c2                	mov    %eax,%edx$/;"	l
-f010091e	./obj/kern/kernel.asm	/^f010091e:	eb 01                	jmp    f0100921 <stab_binsearch+0x39>$/;"	l
-f0100920	./obj/kern/kernel.asm	/^f0100920:	4a                   	dec    %edx$/;"	l
-f0100921	./obj/kern/kernel.asm	/^f0100921:	39 ca                	cmp    %ecx,%edx$/;"	l
-f0100923	./obj/kern/kernel.asm	/^f0100923:	7c 1d                	jl     f0100942 <stab_binsearch+0x5a>$/;"	l
-f0100925	./obj/kern/kernel.asm	/^f0100925:	6b fa 0c             	imul   $0xc,%edx,%edi$/;"	l
-f0100928	./obj/kern/kernel.asm	/^f0100928:	0f b6 7c 3b 04       	movzbl 0x4(%ebx,%edi,1),%edi$/;"	l
-f010092d	./obj/kern/kernel.asm	/^f010092d:	39 f7                	cmp    %esi,%edi$/;"	l
-f010092f	./obj/kern/kernel.asm	/^f010092f:	75 ef                	jne    f0100920 <stab_binsearch+0x38>$/;"	l
-f0100931	./obj/kern/kernel.asm	/^f0100931:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
-f0100934	./obj/kern/kernel.asm	/^f0100934:	6b fa 0c             	imul   $0xc,%edx,%edi$/;"	l
-f0100937	./obj/kern/kernel.asm	/^f0100937:	8b 7c 3b 08          	mov    0x8(%ebx,%edi,1),%edi$/;"	l
-f010093b	./obj/kern/kernel.asm	/^f010093b:	3b 7d 0c             	cmp    0xc(%ebp),%edi$/;"	l
-f010093e	./obj/kern/kernel.asm	/^f010093e:	73 18                	jae    f0100958 <stab_binsearch+0x70>$/;"	l
-f0100940	./obj/kern/kernel.asm	/^f0100940:	eb 05                	jmp    f0100947 <stab_binsearch+0x5f>$/;"	l
-f0100942	./obj/kern/kernel.asm	/^f0100942:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
-f0100945	./obj/kern/kernel.asm	/^f0100945:	eb 3f                	jmp    f0100986 <stab_binsearch+0x9e>$/;"	l
-f0100947	./obj/kern/kernel.asm	/^f0100947:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
-f010094a	./obj/kern/kernel.asm	/^f010094a:	89 11                	mov    %edx,(%ecx)$/;"	l
-f010094c	./obj/kern/kernel.asm	/^f010094c:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
-f010094f	./obj/kern/kernel.asm	/^f010094f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
-f0100956	./obj/kern/kernel.asm	/^f0100956:	eb 2e                	jmp    f0100986 <stab_binsearch+0x9e>$/;"	l
-f0100958	./obj/kern/kernel.asm	/^f0100958:	3b 7d 0c             	cmp    0xc(%ebp),%edi$/;"	l
-f010095b	./obj/kern/kernel.asm	/^f010095b:	76 15                	jbe    f0100972 <stab_binsearch+0x8a>$/;"	l
-f010095d	./obj/kern/kernel.asm	/^f010095d:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
-f0100960	./obj/kern/kernel.asm	/^f0100960:	4f                   	dec    %edi$/;"	l
-f0100961	./obj/kern/kernel.asm	/^f0100961:	89 7d f0             	mov    %edi,-0x10(%ebp)$/;"	l
-f0100964	./obj/kern/kernel.asm	/^f0100964:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
-f0100967	./obj/kern/kernel.asm	/^f0100967:	89 38                	mov    %edi,(%eax)$/;"	l
-f0100969	./obj/kern/kernel.asm	/^f0100969:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
-f0100970	./obj/kern/kernel.asm	/^f0100970:	eb 14                	jmp    f0100986 <stab_binsearch+0x9e>$/;"	l
-f0100972	./obj/kern/kernel.asm	/^f0100972:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
-f0100975	./obj/kern/kernel.asm	/^f0100975:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
-f0100978	./obj/kern/kernel.asm	/^f0100978:	89 39                	mov    %edi,(%ecx)$/;"	l
-f010097a	./obj/kern/kernel.asm	/^f010097a:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
-f010097d	./obj/kern/kernel.asm	/^f010097d:	89 d1                	mov    %edx,%ecx$/;"	l
-f010097f	./obj/kern/kernel.asm	/^f010097f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
-f0100986	./obj/kern/kernel.asm	/^f0100986:	3b 4d f0             	cmp    -0x10(%ebp),%ecx$/;"	l
-f0100989	./obj/kern/kernel.asm	/^f0100989:	7e 84                	jle    f010090f <stab_binsearch+0x27>$/;"	l
-f010098b	./obj/kern/kernel.asm	/^f010098b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
-f010098f	./obj/kern/kernel.asm	/^f010098f:	75 0d                	jne    f010099e <stab_binsearch+0xb6>$/;"	l
-f0100991	./obj/kern/kernel.asm	/^f0100991:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
-f0100994	./obj/kern/kernel.asm	/^f0100994:	8b 02                	mov    (%edx),%eax$/;"	l
-f0100996	./obj/kern/kernel.asm	/^f0100996:	48                   	dec    %eax$/;"	l
-f0100997	./obj/kern/kernel.asm	/^f0100997:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
-f010099a	./obj/kern/kernel.asm	/^f010099a:	89 01                	mov    %eax,(%ecx)$/;"	l
-f010099c	./obj/kern/kernel.asm	/^f010099c:	eb 22                	jmp    f01009c0 <stab_binsearch+0xd8>$/;"	l
-f010099e	./obj/kern/kernel.asm	/^f010099e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
-f01009a1	./obj/kern/kernel.asm	/^f01009a1:	8b 01                	mov    (%ecx),%eax$/;"	l
-f01009a3	./obj/kern/kernel.asm	/^f01009a3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
-f01009a6	./obj/kern/kernel.asm	/^f01009a6:	8b 0a                	mov    (%edx),%ecx$/;"	l
-f01009a8	./obj/kern/kernel.asm	/^f01009a8:	eb 01                	jmp    f01009ab <stab_binsearch+0xc3>$/;"	l
-f01009aa	./obj/kern/kernel.asm	/^f01009aa:	48                   	dec    %eax$/;"	l
-f01009ab	./obj/kern/kernel.asm	/^f01009ab:	39 c1                	cmp    %eax,%ecx$/;"	l
-f01009ad	./obj/kern/kernel.asm	/^f01009ad:	7d 0c                	jge    f01009bb <stab_binsearch+0xd3>$/;"	l
-f01009af	./obj/kern/kernel.asm	/^f01009af:	6b d0 0c             	imul   $0xc,%eax,%edx$/;"	l
-f01009b2	./obj/kern/kernel.asm	/^f01009b2:	0f b6 54 13 04       	movzbl 0x4(%ebx,%edx,1),%edx$/;"	l
-f01009b7	./obj/kern/kernel.asm	/^f01009b7:	39 f2                	cmp    %esi,%edx$/;"	l
-f01009b9	./obj/kern/kernel.asm	/^f01009b9:	75 ef                	jne    f01009aa <stab_binsearch+0xc2>$/;"	l
-f01009bb	./obj/kern/kernel.asm	/^f01009bb:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
-f01009be	./obj/kern/kernel.asm	/^f01009be:	89 02                	mov    %eax,(%edx)$/;"	l
-f01009c0	./obj/kern/kernel.asm	/^f01009c0:	83 c4 10             	add    $0x10,%esp$/;"	l
-f01009c3	./obj/kern/kernel.asm	/^f01009c3:	5b                   	pop    %ebx$/;"	l
-f01009c4	./obj/kern/kernel.asm	/^f01009c4:	5e                   	pop    %esi$/;"	l
-f01009c5	./obj/kern/kernel.asm	/^f01009c5:	5f                   	pop    %edi$/;"	l
-f01009c6	./obj/kern/kernel.asm	/^f01009c6:	5d                   	pop    %ebp$/;"	l
-f01009c7	./obj/kern/kernel.asm	/^f01009c7:	c3                   	ret    $/;"	l
-f01009c8	./obj/kern/kernel.asm	/^f01009c8 <debuginfo_eip>:$/;"	l
-f01009c8	./obj/kern/kernel.asm	/^f01009c8:	55                   	push   %ebp$/;"	l
-f01009c9	./obj/kern/kernel.asm	/^f01009c9:	89 e5                	mov    %esp,%ebp$/;"	l
-f01009cb	./obj/kern/kernel.asm	/^f01009cb:	57                   	push   %edi$/;"	l
-f01009cc	./obj/kern/kernel.asm	/^f01009cc:	56                   	push   %esi$/;"	l
-f01009cd	./obj/kern/kernel.asm	/^f01009cd:	53                   	push   %ebx$/;"	l
-f01009ce	./obj/kern/kernel.asm	/^f01009ce:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
-f01009d1	./obj/kern/kernel.asm	/^f01009d1:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
-f01009d4	./obj/kern/kernel.asm	/^f01009d4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
-f01009d7	./obj/kern/kernel.asm	/^f01009d7:	c7 03 4c 1c 10 f0    	movl   $0xf0101c4c,(%ebx)$/;"	l
-f01009dd	./obj/kern/kernel.asm	/^f01009dd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
-f01009e4	./obj/kern/kernel.asm	/^f01009e4:	c7 43 08 4c 1c 10 f0 	movl   $0xf0101c4c,0x8(%ebx)$/;"	l
-f01009eb	./obj/kern/kernel.asm	/^f01009eb:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
-f01009f2	./obj/kern/kernel.asm	/^f01009f2:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
-f01009f5	./obj/kern/kernel.asm	/^f01009f5:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
-f01009fc	./obj/kern/kernel.asm	/^f01009fc:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
-f0100a02	./obj/kern/kernel.asm	/^f0100a02:	76 12                	jbe    f0100a16 <debuginfo_eip+0x4e>$/;"	l
-f0100a04	./obj/kern/kernel.asm	/^f0100a04:	b8 8f ef 10 f0       	mov    $0xf010ef8f,%eax$/;"	l
-f0100a09	./obj/kern/kernel.asm	/^f0100a09:	3d 61 63 10 f0       	cmp    $0xf0106361,%eax$/;"	l
-f0100a0e	./obj/kern/kernel.asm	/^f0100a0e:	0f 86 50 01 00 00    	jbe    f0100b64 <debuginfo_eip+0x19c>$/;"	l
-f0100a14	./obj/kern/kernel.asm	/^f0100a14:	eb 1c                	jmp    f0100a32 <debuginfo_eip+0x6a>$/;"	l
-f0100a16	./obj/kern/kernel.asm	/^f0100a16:	c7 44 24 08 56 1c 10 	movl   $0xf0101c56,0x8(%esp)$/;"	l
-f0100a1d	./obj/kern/kernel.asm	/^f0100a1d:	f0 $/;"	l
-f0100a1e	./obj/kern/kernel.asm	/^f0100a1e:	c7 44 24 04 7f 00 00 	movl   $0x7f,0x4(%esp)$/;"	l
-f0100a25	./obj/kern/kernel.asm	/^f0100a25:	00 $/;"	l
-f0100a26	./obj/kern/kernel.asm	/^f0100a26:	c7 04 24 63 1c 10 f0 	movl   $0xf0101c63,(%esp)$/;"	l
-f0100a2d	./obj/kern/kernel.asm	/^f0100a2d:	e8 c6 f6 ff ff       	call   f01000f8 <_panic>$/;"	l
-f0100a32	./obj/kern/kernel.asm	/^f0100a32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
-f0100a37	./obj/kern/kernel.asm	/^f0100a37:	80 3d 8e ef 10 f0 00 	cmpb   $0x0,0xf010ef8e$/;"	l
-f0100a3e	./obj/kern/kernel.asm	/^f0100a3e:	0f 85 2c 01 00 00    	jne    f0100b70 <debuginfo_eip+0x1a8>$/;"	l
-f0100a44	./obj/kern/kernel.asm	/^f0100a44:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
-f0100a4b	./obj/kern/kernel.asm	/^f0100a4b:	b8 60 63 10 f0       	mov    $0xf0106360,%eax$/;"	l
-f0100a50	./obj/kern/kernel.asm	/^f0100a50:	2d 90 1e 10 f0       	sub    $0xf0101e90,%eax$/;"	l
-f0100a55	./obj/kern/kernel.asm	/^f0100a55:	c1 f8 02             	sar    $0x2,%eax$/;"	l
-f0100a58	./obj/kern/kernel.asm	/^f0100a58:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
-f0100a5e	./obj/kern/kernel.asm	/^f0100a5e:	48                   	dec    %eax$/;"	l
-f0100a5f	./obj/kern/kernel.asm	/^f0100a5f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
-f0100a62	./obj/kern/kernel.asm	/^f0100a62:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
-f0100a66	./obj/kern/kernel.asm	/^f0100a66:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
-f0100a6d	./obj/kern/kernel.asm	/^f0100a6d:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
-f0100a70	./obj/kern/kernel.asm	/^f0100a70:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
-f0100a73	./obj/kern/kernel.asm	/^f0100a73:	b8 90 1e 10 f0       	mov    $0xf0101e90,%eax$/;"	l
-f0100a78	./obj/kern/kernel.asm	/^f0100a78:	e8 6b fe ff ff       	call   f01008e8 <stab_binsearch>$/;"	l
-f0100a7d	./obj/kern/kernel.asm	/^f0100a7d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
-f0100a80	./obj/kern/kernel.asm	/^f0100a80:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
-f0100a85	./obj/kern/kernel.asm	/^f0100a85:	85 d2                	test   %edx,%edx$/;"	l
-f0100a87	./obj/kern/kernel.asm	/^f0100a87:	0f 84 e3 00 00 00    	je     f0100b70 <debuginfo_eip+0x1a8>$/;"	l
-f0100a8d	./obj/kern/kernel.asm	/^f0100a8d:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
-f0100a90	./obj/kern/kernel.asm	/^f0100a90:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
-f0100a93	./obj/kern/kernel.asm	/^f0100a93:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
-f0100a96	./obj/kern/kernel.asm	/^f0100a96:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
-f0100a9a	./obj/kern/kernel.asm	/^f0100a9a:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
-f0100aa1	./obj/kern/kernel.asm	/^f0100aa1:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
-f0100aa4	./obj/kern/kernel.asm	/^f0100aa4:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
-f0100aa7	./obj/kern/kernel.asm	/^f0100aa7:	b8 90 1e 10 f0       	mov    $0xf0101e90,%eax$/;"	l
-f0100aac	./obj/kern/kernel.asm	/^f0100aac:	e8 37 fe ff ff       	call   f01008e8 <stab_binsearch>$/;"	l
-f0100ab1	./obj/kern/kernel.asm	/^f0100ab1:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
-f0100ab4	./obj/kern/kernel.asm	/^f0100ab4:	3b 7d d8             	cmp    -0x28(%ebp),%edi$/;"	l
-f0100ab7	./obj/kern/kernel.asm	/^f0100ab7:	7f 2e                	jg     f0100ae7 <debuginfo_eip+0x11f>$/;"	l
-f0100ab9	./obj/kern/kernel.asm	/^f0100ab9:	6b c7 0c             	imul   $0xc,%edi,%eax$/;"	l
-f0100abc	./obj/kern/kernel.asm	/^f0100abc:	8d 90 90 1e 10 f0    	lea    -0xfefe170(%eax),%edx$/;"	l
-f0100ac2	./obj/kern/kernel.asm	/^f0100ac2:	8b 80 90 1e 10 f0    	mov    -0xfefe170(%eax),%eax$/;"	l
-f0100ac8	./obj/kern/kernel.asm	/^f0100ac8:	b9 8f ef 10 f0       	mov    $0xf010ef8f,%ecx$/;"	l
-f0100acd	./obj/kern/kernel.asm	/^f0100acd:	81 e9 61 63 10 f0    	sub    $0xf0106361,%ecx$/;"	l
-f0100ad3	./obj/kern/kernel.asm	/^f0100ad3:	39 c8                	cmp    %ecx,%eax$/;"	l
-f0100ad5	./obj/kern/kernel.asm	/^f0100ad5:	73 08                	jae    f0100adf <debuginfo_eip+0x117>$/;"	l
-f0100ad7	./obj/kern/kernel.asm	/^f0100ad7:	05 61 63 10 f0       	add    $0xf0106361,%eax$/;"	l
-f0100adc	./obj/kern/kernel.asm	/^f0100adc:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
-f0100adf	./obj/kern/kernel.asm	/^f0100adf:	8b 42 08             	mov    0x8(%edx),%eax$/;"	l
-f0100ae2	./obj/kern/kernel.asm	/^f0100ae2:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
-f0100ae5	./obj/kern/kernel.asm	/^f0100ae5:	eb 06                	jmp    f0100aed <debuginfo_eip+0x125>$/;"	l
-f0100ae7	./obj/kern/kernel.asm	/^f0100ae7:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
-f0100aea	./obj/kern/kernel.asm	/^f0100aea:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
-f0100aed	./obj/kern/kernel.asm	/^f0100aed:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
-f0100af4	./obj/kern/kernel.asm	/^f0100af4:	00 $/;"	l
-f0100af5	./obj/kern/kernel.asm	/^f0100af5:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
-f0100af8	./obj/kern/kernel.asm	/^f0100af8:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100afb	./obj/kern/kernel.asm	/^f0100afb:	e8 22 08 00 00       	call   f0101322 <strfind>$/;"	l
-f0100b00	./obj/kern/kernel.asm	/^f0100b00:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
-f0100b03	./obj/kern/kernel.asm	/^f0100b03:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
-f0100b06	./obj/kern/kernel.asm	/^f0100b06:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
-f0100b09	./obj/kern/kernel.asm	/^f0100b09:	eb 01                	jmp    f0100b0c <debuginfo_eip+0x144>$/;"	l
-f0100b0b	./obj/kern/kernel.asm	/^f0100b0b:	4f                   	dec    %edi$/;"	l
-f0100b0c	./obj/kern/kernel.asm	/^f0100b0c:	39 cf                	cmp    %ecx,%edi$/;"	l
-f0100b0e	./obj/kern/kernel.asm	/^f0100b0e:	7c 24                	jl     f0100b34 <debuginfo_eip+0x16c>$/;"	l
-f0100b10	./obj/kern/kernel.asm	/^f0100b10:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
-f0100b13	./obj/kern/kernel.asm	/^f0100b13:	8d 14 85 90 1e 10 f0 	lea    -0xfefe170(,%eax,4),%edx$/;"	l
-f0100b1a	./obj/kern/kernel.asm	/^f0100b1a:	8a 42 04             	mov    0x4(%edx),%al$/;"	l
-f0100b1d	./obj/kern/kernel.asm	/^f0100b1d:	3c 84                	cmp    $0x84,%al$/;"	l
-f0100b1f	./obj/kern/kernel.asm	/^f0100b1f:	74 57                	je     f0100b78 <debuginfo_eip+0x1b0>$/;"	l
-f0100b21	./obj/kern/kernel.asm	/^f0100b21:	3c 64                	cmp    $0x64,%al$/;"	l
-f0100b23	./obj/kern/kernel.asm	/^f0100b23:	75 e6                	jne    f0100b0b <debuginfo_eip+0x143>$/;"	l
-f0100b25	./obj/kern/kernel.asm	/^f0100b25:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
-f0100b29	./obj/kern/kernel.asm	/^f0100b29:	74 e0                	je     f0100b0b <debuginfo_eip+0x143>$/;"	l
-f0100b2b	./obj/kern/kernel.asm	/^f0100b2b:	eb 4b                	jmp    f0100b78 <debuginfo_eip+0x1b0>$/;"	l
-f0100b2d	./obj/kern/kernel.asm	/^f0100b2d:	05 61 63 10 f0       	add    $0xf0106361,%eax$/;"	l
-f0100b32	./obj/kern/kernel.asm	/^f0100b32:	89 03                	mov    %eax,(%ebx)$/;"	l
-f0100b34	./obj/kern/kernel.asm	/^f0100b34:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
-f0100b37	./obj/kern/kernel.asm	/^f0100b37:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
-f0100b3a	./obj/kern/kernel.asm	/^f0100b3a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0100b3f	./obj/kern/kernel.asm	/^f0100b3f:	39 d1                	cmp    %edx,%ecx$/;"	l
-f0100b41	./obj/kern/kernel.asm	/^f0100b41:	7d 2d                	jge    f0100b70 <debuginfo_eip+0x1a8>$/;"	l
-f0100b43	./obj/kern/kernel.asm	/^f0100b43:	8d 41 01             	lea    0x1(%ecx),%eax$/;"	l
-f0100b46	./obj/kern/kernel.asm	/^f0100b46:	eb 04                	jmp    f0100b4c <debuginfo_eip+0x184>$/;"	l
-f0100b48	./obj/kern/kernel.asm	/^f0100b48:	ff 43 14             	incl   0x14(%ebx)$/;"	l
-f0100b4b	./obj/kern/kernel.asm	/^f0100b4b:	40                   	inc    %eax$/;"	l
-f0100b4c	./obj/kern/kernel.asm	/^f0100b4c:	39 d0                	cmp    %edx,%eax$/;"	l
-f0100b4e	./obj/kern/kernel.asm	/^f0100b4e:	74 1b                	je     f0100b6b <debuginfo_eip+0x1a3>$/;"	l
-f0100b50	./obj/kern/kernel.asm	/^f0100b50:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
-f0100b53	./obj/kern/kernel.asm	/^f0100b53:	80 3c 8d 94 1e 10 f0 	cmpb   $0xa0,-0xfefe16c(,%ecx,4)$/;"	l
-f0100b5a	./obj/kern/kernel.asm	/^f0100b5a:	a0 $/;"	l
-f0100b5b	./obj/kern/kernel.asm	/^f0100b5b:	74 eb                	je     f0100b48 <debuginfo_eip+0x180>$/;"	l
-f0100b5d	./obj/kern/kernel.asm	/^f0100b5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0100b62	./obj/kern/kernel.asm	/^f0100b62:	eb 0c                	jmp    f0100b70 <debuginfo_eip+0x1a8>$/;"	l
-f0100b64	./obj/kern/kernel.asm	/^f0100b64:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
-f0100b69	./obj/kern/kernel.asm	/^f0100b69:	eb 05                	jmp    f0100b70 <debuginfo_eip+0x1a8>$/;"	l
-f0100b6b	./obj/kern/kernel.asm	/^f0100b6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0100b70	./obj/kern/kernel.asm	/^f0100b70:	83 c4 2c             	add    $0x2c,%esp$/;"	l
-f0100b73	./obj/kern/kernel.asm	/^f0100b73:	5b                   	pop    %ebx$/;"	l
-f0100b74	./obj/kern/kernel.asm	/^f0100b74:	5e                   	pop    %esi$/;"	l
-f0100b75	./obj/kern/kernel.asm	/^f0100b75:	5f                   	pop    %edi$/;"	l
-f0100b76	./obj/kern/kernel.asm	/^f0100b76:	5d                   	pop    %ebp$/;"	l
-f0100b77	./obj/kern/kernel.asm	/^f0100b77:	c3                   	ret    $/;"	l
-f0100b78	./obj/kern/kernel.asm	/^f0100b78:	6b ff 0c             	imul   $0xc,%edi,%edi$/;"	l
-f0100b7b	./obj/kern/kernel.asm	/^f0100b7b:	8b 87 90 1e 10 f0    	mov    -0xfefe170(%edi),%eax$/;"	l
-f0100b81	./obj/kern/kernel.asm	/^f0100b81:	ba 8f ef 10 f0       	mov    $0xf010ef8f,%edx$/;"	l
-f0100b86	./obj/kern/kernel.asm	/^f0100b86:	81 ea 61 63 10 f0    	sub    $0xf0106361,%edx$/;"	l
-f0100b8c	./obj/kern/kernel.asm	/^f0100b8c:	39 d0                	cmp    %edx,%eax$/;"	l
-f0100b8e	./obj/kern/kernel.asm	/^f0100b8e:	72 9d                	jb     f0100b2d <debuginfo_eip+0x165>$/;"	l
-f0100b90	./obj/kern/kernel.asm	/^f0100b90:	eb a2                	jmp    f0100b34 <debuginfo_eip+0x16c>$/;"	l
-f0100b94	./obj/kern/kernel.asm	/^f0100b94 <printnum>:$/;"	l
-f0100b94	./obj/kern/kernel.asm	/^f0100b94:	55                   	push   %ebp$/;"	l
-f0100b95	./obj/kern/kernel.asm	/^f0100b95:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100b97	./obj/kern/kernel.asm	/^f0100b97:	57                   	push   %edi$/;"	l
-f0100b98	./obj/kern/kernel.asm	/^f0100b98:	56                   	push   %esi$/;"	l
-f0100b99	./obj/kern/kernel.asm	/^f0100b99:	53                   	push   %ebx$/;"	l
-f0100b9a	./obj/kern/kernel.asm	/^f0100b9a:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
-f0100b9d	./obj/kern/kernel.asm	/^f0100b9d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
-f0100ba0	./obj/kern/kernel.asm	/^f0100ba0:	89 d7                	mov    %edx,%edi$/;"	l
-f0100ba2	./obj/kern/kernel.asm	/^f0100ba2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0100ba5	./obj/kern/kernel.asm	/^f0100ba5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
-f0100ba8	./obj/kern/kernel.asm	/^f0100ba8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f0100bab	./obj/kern/kernel.asm	/^f0100bab:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
-f0100bae	./obj/kern/kernel.asm	/^f0100bae:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
-f0100bb1	./obj/kern/kernel.asm	/^f0100bb1:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
-f0100bb4	./obj/kern/kernel.asm	/^f0100bb4:	85 c0                	test   %eax,%eax$/;"	l
-f0100bb6	./obj/kern/kernel.asm	/^f0100bb6:	75 08                	jne    f0100bc0 <printnum+0x2c>$/;"	l
-f0100bb8	./obj/kern/kernel.asm	/^f0100bb8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
-f0100bbb	./obj/kern/kernel.asm	/^f0100bbb:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
-f0100bbe	./obj/kern/kernel.asm	/^f0100bbe:	77 57                	ja     f0100c17 <printnum+0x83>$/;"	l
-f0100bc0	./obj/kern/kernel.asm	/^f0100bc0:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
-f0100bc4	./obj/kern/kernel.asm	/^f0100bc4:	4b                   	dec    %ebx$/;"	l
-f0100bc5	./obj/kern/kernel.asm	/^f0100bc5:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
-f0100bc9	./obj/kern/kernel.asm	/^f0100bc9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
-f0100bcc	./obj/kern/kernel.asm	/^f0100bcc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f0100bd0	./obj/kern/kernel.asm	/^f0100bd0:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
-f0100bd4	./obj/kern/kernel.asm	/^f0100bd4:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
-f0100bd8	./obj/kern/kernel.asm	/^f0100bd8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
-f0100bdf	./obj/kern/kernel.asm	/^f0100bdf:	00 $/;"	l
-f0100be0	./obj/kern/kernel.asm	/^f0100be0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
-f0100be3	./obj/kern/kernel.asm	/^f0100be3:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100be6	./obj/kern/kernel.asm	/^f0100be6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
-f0100be9	./obj/kern/kernel.asm	/^f0100be9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f0100bed	./obj/kern/kernel.asm	/^f0100bed:	e8 3e 09 00 00       	call   f0101530 <__udivdi3>$/;"	l
-f0100bf2	./obj/kern/kernel.asm	/^f0100bf2:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
-f0100bf6	./obj/kern/kernel.asm	/^f0100bf6:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
-f0100bfa	./obj/kern/kernel.asm	/^f0100bfa:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100bfd	./obj/kern/kernel.asm	/^f0100bfd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
-f0100c01	./obj/kern/kernel.asm	/^f0100c01:	89 fa                	mov    %edi,%edx$/;"	l
-f0100c03	./obj/kern/kernel.asm	/^f0100c03:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
-f0100c06	./obj/kern/kernel.asm	/^f0100c06:	e8 89 ff ff ff       	call   f0100b94 <printnum>$/;"	l
-f0100c0b	./obj/kern/kernel.asm	/^f0100c0b:	eb 0f                	jmp    f0100c1c <printnum+0x88>$/;"	l
-f0100c0d	./obj/kern/kernel.asm	/^f0100c0d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
-f0100c11	./obj/kern/kernel.asm	/^f0100c11:	89 34 24             	mov    %esi,(%esp)$/;"	l
-f0100c14	./obj/kern/kernel.asm	/^f0100c14:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
-f0100c17	./obj/kern/kernel.asm	/^f0100c17:	4b                   	dec    %ebx$/;"	l
-f0100c18	./obj/kern/kernel.asm	/^f0100c18:	85 db                	test   %ebx,%ebx$/;"	l
-f0100c1a	./obj/kern/kernel.asm	/^f0100c1a:	7f f1                	jg     f0100c0d <printnum+0x79>$/;"	l
-f0100c1c	./obj/kern/kernel.asm	/^f0100c1c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
-f0100c20	./obj/kern/kernel.asm	/^f0100c20:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
-f0100c24	./obj/kern/kernel.asm	/^f0100c24:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
-f0100c27	./obj/kern/kernel.asm	/^f0100c27:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f0100c2b	./obj/kern/kernel.asm	/^f0100c2b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
-f0100c32	./obj/kern/kernel.asm	/^f0100c32:	00 $/;"	l
-f0100c33	./obj/kern/kernel.asm	/^f0100c33:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
-f0100c36	./obj/kern/kernel.asm	/^f0100c36:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100c39	./obj/kern/kernel.asm	/^f0100c39:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
-f0100c3c	./obj/kern/kernel.asm	/^f0100c3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f0100c40	./obj/kern/kernel.asm	/^f0100c40:	e8 0b 0a 00 00       	call   f0101650 <__umoddi3>$/;"	l
-f0100c45	./obj/kern/kernel.asm	/^f0100c45:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
-f0100c49	./obj/kern/kernel.asm	/^f0100c49:	0f be 80 71 1c 10 f0 	movsbl -0xfefe38f(%eax),%eax$/;"	l
-f0100c50	./obj/kern/kernel.asm	/^f0100c50:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100c53	./obj/kern/kernel.asm	/^f0100c53:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
-f0100c56	./obj/kern/kernel.asm	/^f0100c56:	83 c4 3c             	add    $0x3c,%esp$/;"	l
-f0100c59	./obj/kern/kernel.asm	/^f0100c59:	5b                   	pop    %ebx$/;"	l
-f0100c5a	./obj/kern/kernel.asm	/^f0100c5a:	5e                   	pop    %esi$/;"	l
-f0100c5b	./obj/kern/kernel.asm	/^f0100c5b:	5f                   	pop    %edi$/;"	l
-f0100c5c	./obj/kern/kernel.asm	/^f0100c5c:	5d                   	pop    %ebp$/;"	l
-f0100c5d	./obj/kern/kernel.asm	/^f0100c5d:	c3                   	ret    $/;"	l
-f0100c5e	./obj/kern/kernel.asm	/^f0100c5e <getuint>:$/;"	l
-f0100c5e	./obj/kern/kernel.asm	/^f0100c5e:	55                   	push   %ebp$/;"	l
-f0100c5f	./obj/kern/kernel.asm	/^f0100c5f:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100c61	./obj/kern/kernel.asm	/^f0100c61:	83 fa 01             	cmp    $0x1,%edx$/;"	l
-f0100c64	./obj/kern/kernel.asm	/^f0100c64:	7e 0e                	jle    f0100c74 <getuint+0x16>$/;"	l
-f0100c66	./obj/kern/kernel.asm	/^f0100c66:	8b 10                	mov    (%eax),%edx$/;"	l
-f0100c68	./obj/kern/kernel.asm	/^f0100c68:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
-f0100c6b	./obj/kern/kernel.asm	/^f0100c6b:	89 08                	mov    %ecx,(%eax)$/;"	l
-f0100c6d	./obj/kern/kernel.asm	/^f0100c6d:	8b 02                	mov    (%edx),%eax$/;"	l
-f0100c6f	./obj/kern/kernel.asm	/^f0100c6f:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
-f0100c72	./obj/kern/kernel.asm	/^f0100c72:	eb 22                	jmp    f0100c96 <getuint+0x38>$/;"	l
-f0100c74	./obj/kern/kernel.asm	/^f0100c74:	85 d2                	test   %edx,%edx$/;"	l
-f0100c76	./obj/kern/kernel.asm	/^f0100c76:	74 10                	je     f0100c88 <getuint+0x2a>$/;"	l
-f0100c78	./obj/kern/kernel.asm	/^f0100c78:	8b 10                	mov    (%eax),%edx$/;"	l
-f0100c7a	./obj/kern/kernel.asm	/^f0100c7a:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
-f0100c7d	./obj/kern/kernel.asm	/^f0100c7d:	89 08                	mov    %ecx,(%eax)$/;"	l
-f0100c7f	./obj/kern/kernel.asm	/^f0100c7f:	8b 02                	mov    (%edx),%eax$/;"	l
-f0100c81	./obj/kern/kernel.asm	/^f0100c81:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
-f0100c86	./obj/kern/kernel.asm	/^f0100c86:	eb 0e                	jmp    f0100c96 <getuint+0x38>$/;"	l
-f0100c88	./obj/kern/kernel.asm	/^f0100c88:	8b 10                	mov    (%eax),%edx$/;"	l
-f0100c8a	./obj/kern/kernel.asm	/^f0100c8a:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
-f0100c8d	./obj/kern/kernel.asm	/^f0100c8d:	89 08                	mov    %ecx,(%eax)$/;"	l
-f0100c8f	./obj/kern/kernel.asm	/^f0100c8f:	8b 02                	mov    (%edx),%eax$/;"	l
-f0100c91	./obj/kern/kernel.asm	/^f0100c91:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
-f0100c96	./obj/kern/kernel.asm	/^f0100c96:	5d                   	pop    %ebp$/;"	l
-f0100c97	./obj/kern/kernel.asm	/^f0100c97:	c3                   	ret    $/;"	l
-f0100c98	./obj/kern/kernel.asm	/^f0100c98 <sprintputch>:$/;"	l
-f0100c98	./obj/kern/kernel.asm	/^f0100c98:	55                   	push   %ebp$/;"	l
-f0100c99	./obj/kern/kernel.asm	/^f0100c99:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100c9b	./obj/kern/kernel.asm	/^f0100c9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f0100c9e	./obj/kern/kernel.asm	/^f0100c9e:	ff 40 08             	incl   0x8(%eax)$/;"	l
-f0100ca1	./obj/kern/kernel.asm	/^f0100ca1:	8b 10                	mov    (%eax),%edx$/;"	l
-f0100ca3	./obj/kern/kernel.asm	/^f0100ca3:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
-f0100ca6	./obj/kern/kernel.asm	/^f0100ca6:	73 08                	jae    f0100cb0 <sprintputch+0x18>$/;"	l
-f0100ca8	./obj/kern/kernel.asm	/^f0100ca8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
-f0100cab	./obj/kern/kernel.asm	/^f0100cab:	88 0a                	mov    %cl,(%edx)$/;"	l
-f0100cad	./obj/kern/kernel.asm	/^f0100cad:	42                   	inc    %edx$/;"	l
-f0100cae	./obj/kern/kernel.asm	/^f0100cae:	89 10                	mov    %edx,(%eax)$/;"	l
-f0100cb0	./obj/kern/kernel.asm	/^f0100cb0:	5d                   	pop    %ebp$/;"	l
-f0100cb1	./obj/kern/kernel.asm	/^f0100cb1:	c3                   	ret    $/;"	l
-f0100cb2	./obj/kern/kernel.asm	/^f0100cb2 <printfmt>:$/;"	l
-f0100cb2	./obj/kern/kernel.asm	/^f0100cb2:	55                   	push   %ebp$/;"	l
-f0100cb3	./obj/kern/kernel.asm	/^f0100cb3:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100cb5	./obj/kern/kernel.asm	/^f0100cb5:	83 ec 18             	sub    $0x18,%esp$/;"	l
-f0100cb8	./obj/kern/kernel.asm	/^f0100cb8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
-f0100cbb	./obj/kern/kernel.asm	/^f0100cbb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
-f0100cbf	./obj/kern/kernel.asm	/^f0100cbf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
-f0100cc2	./obj/kern/kernel.asm	/^f0100cc2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f0100cc6	./obj/kern/kernel.asm	/^f0100cc6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f0100cc9	./obj/kern/kernel.asm	/^f0100cc9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f0100ccd	./obj/kern/kernel.asm	/^f0100ccd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0100cd0	./obj/kern/kernel.asm	/^f0100cd0:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100cd3	./obj/kern/kernel.asm	/^f0100cd3:	e8 02 00 00 00       	call   f0100cda <vprintfmt>$/;"	l
-f0100cd8	./obj/kern/kernel.asm	/^f0100cd8:	c9                   	leave  $/;"	l
-f0100cd9	./obj/kern/kernel.asm	/^f0100cd9:	c3                   	ret    $/;"	l
-f0100cda	./obj/kern/kernel.asm	/^f0100cda <vprintfmt>:$/;"	l
-f0100cda	./obj/kern/kernel.asm	/^f0100cda:	55                   	push   %ebp$/;"	l
-f0100cdb	./obj/kern/kernel.asm	/^f0100cdb:	89 e5                	mov    %esp,%ebp$/;"	l
-f0100cdd	./obj/kern/kernel.asm	/^f0100cdd:	57                   	push   %edi$/;"	l
-f0100cde	./obj/kern/kernel.asm	/^f0100cde:	56                   	push   %esi$/;"	l
-f0100cdf	./obj/kern/kernel.asm	/^f0100cdf:	53                   	push   %ebx$/;"	l
-f0100ce0	./obj/kern/kernel.asm	/^f0100ce0:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
-f0100ce3	./obj/kern/kernel.asm	/^f0100ce3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
-f0100ce6	./obj/kern/kernel.asm	/^f0100ce6:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
-f0100ce9	./obj/kern/kernel.asm	/^f0100ce9:	eb 12                	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f0100ceb	./obj/kern/kernel.asm	/^f0100ceb:	85 c0                	test   %eax,%eax$/;"	l
-f0100ced	./obj/kern/kernel.asm	/^f0100ced:	0f 84 8b 03 00 00    	je     f010107e <vprintfmt+0x3a4>$/;"	l
-f0100cf3	./obj/kern/kernel.asm	/^f0100cf3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100cf7	./obj/kern/kernel.asm	/^f0100cf7:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100cfa	./obj/kern/kernel.asm	/^f0100cfa:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100cfd	./obj/kern/kernel.asm	/^f0100cfd:	0f b6 06             	movzbl (%esi),%eax$/;"	l
-f0100d00	./obj/kern/kernel.asm	/^f0100d00:	46                   	inc    %esi$/;"	l
-f0100d01	./obj/kern/kernel.asm	/^f0100d01:	83 f8 25             	cmp    $0x25,%eax$/;"	l
-f0100d04	./obj/kern/kernel.asm	/^f0100d04:	75 e5                	jne    f0100ceb <vprintfmt+0x11>$/;"	l
-f0100d06	./obj/kern/kernel.asm	/^f0100d06:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
-f0100d0a	./obj/kern/kernel.asm	/^f0100d0a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
-f0100d11	./obj/kern/kernel.asm	/^f0100d11:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
-f0100d16	./obj/kern/kernel.asm	/^f0100d16:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
-f0100d1d	./obj/kern/kernel.asm	/^f0100d1d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
-f0100d22	./obj/kern/kernel.asm	/^f0100d22:	eb 26                	jmp    f0100d4a <vprintfmt+0x70>$/;"	l
-f0100d24	./obj/kern/kernel.asm	/^f0100d24:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100d27	./obj/kern/kernel.asm	/^f0100d27:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
-f0100d2b	./obj/kern/kernel.asm	/^f0100d2b:	eb 1d                	jmp    f0100d4a <vprintfmt+0x70>$/;"	l
-f0100d2d	./obj/kern/kernel.asm	/^f0100d2d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100d30	./obj/kern/kernel.asm	/^f0100d30:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
-f0100d34	./obj/kern/kernel.asm	/^f0100d34:	eb 14                	jmp    f0100d4a <vprintfmt+0x70>$/;"	l
-f0100d36	./obj/kern/kernel.asm	/^f0100d36:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100d39	./obj/kern/kernel.asm	/^f0100d39:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
-f0100d40	./obj/kern/kernel.asm	/^f0100d40:	eb 08                	jmp    f0100d4a <vprintfmt+0x70>$/;"	l
-f0100d42	./obj/kern/kernel.asm	/^f0100d42:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
-f0100d45	./obj/kern/kernel.asm	/^f0100d45:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
-f0100d4a	./obj/kern/kernel.asm	/^f0100d4a:	0f b6 06             	movzbl (%esi),%eax$/;"	l
-f0100d4d	./obj/kern/kernel.asm	/^f0100d4d:	8d 56 01             	lea    0x1(%esi),%edx$/;"	l
-f0100d50	./obj/kern/kernel.asm	/^f0100d50:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
-f0100d53	./obj/kern/kernel.asm	/^f0100d53:	8a 16                	mov    (%esi),%dl$/;"	l
-f0100d55	./obj/kern/kernel.asm	/^f0100d55:	83 ea 23             	sub    $0x23,%edx$/;"	l
-f0100d58	./obj/kern/kernel.asm	/^f0100d58:	80 fa 55             	cmp    $0x55,%dl$/;"	l
-f0100d5b	./obj/kern/kernel.asm	/^f0100d5b:	0f 87 01 03 00 00    	ja     f0101062 <vprintfmt+0x388>$/;"	l
-f0100d61	./obj/kern/kernel.asm	/^f0100d61:	0f b6 d2             	movzbl %dl,%edx$/;"	l
-f0100d64	./obj/kern/kernel.asm	/^f0100d64:	ff 24 95 00 1d 10 f0 	jmp    *-0xfefe300(,%edx,4)$/;"	l
-f0100d6b	./obj/kern/kernel.asm	/^f0100d6b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100d6e	./obj/kern/kernel.asm	/^f0100d6e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
-f0100d73	./obj/kern/kernel.asm	/^f0100d73:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
-f0100d76	./obj/kern/kernel.asm	/^f0100d76:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
-f0100d7a	./obj/kern/kernel.asm	/^f0100d7a:	0f be 06             	movsbl (%esi),%eax$/;"	l
-f0100d7d	./obj/kern/kernel.asm	/^f0100d7d:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
-f0100d80	./obj/kern/kernel.asm	/^f0100d80:	83 fa 09             	cmp    $0x9,%edx$/;"	l
-f0100d83	./obj/kern/kernel.asm	/^f0100d83:	77 2a                	ja     f0100daf <vprintfmt+0xd5>$/;"	l
-f0100d85	./obj/kern/kernel.asm	/^f0100d85:	46                   	inc    %esi$/;"	l
-f0100d86	./obj/kern/kernel.asm	/^f0100d86:	eb eb                	jmp    f0100d73 <vprintfmt+0x99>$/;"	l
-f0100d88	./obj/kern/kernel.asm	/^f0100d88:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f0100d8b	./obj/kern/kernel.asm	/^f0100d8b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
-f0100d8e	./obj/kern/kernel.asm	/^f0100d8e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
-f0100d91	./obj/kern/kernel.asm	/^f0100d91:	8b 38                	mov    (%eax),%edi$/;"	l
-f0100d93	./obj/kern/kernel.asm	/^f0100d93:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100d96	./obj/kern/kernel.asm	/^f0100d96:	eb 17                	jmp    f0100daf <vprintfmt+0xd5>$/;"	l
-f0100d98	./obj/kern/kernel.asm	/^f0100d98:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
-f0100d9c	./obj/kern/kernel.asm	/^f0100d9c:	78 98                	js     f0100d36 <vprintfmt+0x5c>$/;"	l
-f0100d9e	./obj/kern/kernel.asm	/^f0100d9e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100da1	./obj/kern/kernel.asm	/^f0100da1:	eb a7                	jmp    f0100d4a <vprintfmt+0x70>$/;"	l
-f0100da3	./obj/kern/kernel.asm	/^f0100da3:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100da6	./obj/kern/kernel.asm	/^f0100da6:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
-f0100dad	./obj/kern/kernel.asm	/^f0100dad:	eb 9b                	jmp    f0100d4a <vprintfmt+0x70>$/;"	l
-f0100daf	./obj/kern/kernel.asm	/^f0100daf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
-f0100db3	./obj/kern/kernel.asm	/^f0100db3:	79 95                	jns    f0100d4a <vprintfmt+0x70>$/;"	l
-f0100db5	./obj/kern/kernel.asm	/^f0100db5:	eb 8b                	jmp    f0100d42 <vprintfmt+0x68>$/;"	l
-f0100db7	./obj/kern/kernel.asm	/^f0100db7:	41                   	inc    %ecx$/;"	l
-f0100db8	./obj/kern/kernel.asm	/^f0100db8:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100dbb	./obj/kern/kernel.asm	/^f0100dbb:	eb 8d                	jmp    f0100d4a <vprintfmt+0x70>$/;"	l
-f0100dbd	./obj/kern/kernel.asm	/^f0100dbd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f0100dc0	./obj/kern/kernel.asm	/^f0100dc0:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
-f0100dc3	./obj/kern/kernel.asm	/^f0100dc3:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
-f0100dc6	./obj/kern/kernel.asm	/^f0100dc6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100dca	./obj/kern/kernel.asm	/^f0100dca:	8b 00                	mov    (%eax),%eax$/;"	l
-f0100dcc	./obj/kern/kernel.asm	/^f0100dcc:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100dcf	./obj/kern/kernel.asm	/^f0100dcf:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100dd2	./obj/kern/kernel.asm	/^f0100dd2:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100dd5	./obj/kern/kernel.asm	/^f0100dd5:	e9 23 ff ff ff       	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f0100dda	./obj/kern/kernel.asm	/^f0100dda:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f0100ddd	./obj/kern/kernel.asm	/^f0100ddd:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
-f0100de0	./obj/kern/kernel.asm	/^f0100de0:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
-f0100de3	./obj/kern/kernel.asm	/^f0100de3:	8b 00                	mov    (%eax),%eax$/;"	l
-f0100de5	./obj/kern/kernel.asm	/^f0100de5:	85 c0                	test   %eax,%eax$/;"	l
-f0100de7	./obj/kern/kernel.asm	/^f0100de7:	79 02                	jns    f0100deb <vprintfmt+0x111>$/;"	l
-f0100de9	./obj/kern/kernel.asm	/^f0100de9:	f7 d8                	neg    %eax$/;"	l
-f0100deb	./obj/kern/kernel.asm	/^f0100deb:	89 c2                	mov    %eax,%edx$/;"	l
-f0100ded	./obj/kern/kernel.asm	/^f0100ded:	83 f8 07             	cmp    $0x7,%eax$/;"	l
-f0100df0	./obj/kern/kernel.asm	/^f0100df0:	7f 0b                	jg     f0100dfd <vprintfmt+0x123>$/;"	l
-f0100df2	./obj/kern/kernel.asm	/^f0100df2:	8b 04 85 60 1e 10 f0 	mov    -0xfefe1a0(,%eax,4),%eax$/;"	l
-f0100df9	./obj/kern/kernel.asm	/^f0100df9:	85 c0                	test   %eax,%eax$/;"	l
-f0100dfb	./obj/kern/kernel.asm	/^f0100dfb:	75 23                	jne    f0100e20 <vprintfmt+0x146>$/;"	l
-f0100dfd	./obj/kern/kernel.asm	/^f0100dfd:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
-f0100e01	./obj/kern/kernel.asm	/^f0100e01:	c7 44 24 08 89 1c 10 	movl   $0xf0101c89,0x8(%esp)$/;"	l
-f0100e08	./obj/kern/kernel.asm	/^f0100e08:	f0 $/;"	l
-f0100e09	./obj/kern/kernel.asm	/^f0100e09:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100e0d	./obj/kern/kernel.asm	/^f0100e0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0100e10	./obj/kern/kernel.asm	/^f0100e10:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100e13	./obj/kern/kernel.asm	/^f0100e13:	e8 9a fe ff ff       	call   f0100cb2 <printfmt>$/;"	l
-f0100e18	./obj/kern/kernel.asm	/^f0100e18:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100e1b	./obj/kern/kernel.asm	/^f0100e1b:	e9 dd fe ff ff       	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f0100e20	./obj/kern/kernel.asm	/^f0100e20:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
-f0100e24	./obj/kern/kernel.asm	/^f0100e24:	c7 44 24 08 92 1c 10 	movl   $0xf0101c92,0x8(%esp)$/;"	l
-f0100e2b	./obj/kern/kernel.asm	/^f0100e2b:	f0 $/;"	l
-f0100e2c	./obj/kern/kernel.asm	/^f0100e2c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100e30	./obj/kern/kernel.asm	/^f0100e30:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
-f0100e33	./obj/kern/kernel.asm	/^f0100e33:	89 14 24             	mov    %edx,(%esp)$/;"	l
-f0100e36	./obj/kern/kernel.asm	/^f0100e36:	e8 77 fe ff ff       	call   f0100cb2 <printfmt>$/;"	l
-f0100e3b	./obj/kern/kernel.asm	/^f0100e3b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100e3e	./obj/kern/kernel.asm	/^f0100e3e:	e9 ba fe ff ff       	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f0100e43	./obj/kern/kernel.asm	/^f0100e43:	89 f9                	mov    %edi,%ecx$/;"	l
-f0100e45	./obj/kern/kernel.asm	/^f0100e45:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
-f0100e48	./obj/kern/kernel.asm	/^f0100e48:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
-f0100e4b	./obj/kern/kernel.asm	/^f0100e4b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f0100e4e	./obj/kern/kernel.asm	/^f0100e4e:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
-f0100e51	./obj/kern/kernel.asm	/^f0100e51:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
-f0100e54	./obj/kern/kernel.asm	/^f0100e54:	8b 30                	mov    (%eax),%esi$/;"	l
-f0100e56	./obj/kern/kernel.asm	/^f0100e56:	85 f6                	test   %esi,%esi$/;"	l
-f0100e58	./obj/kern/kernel.asm	/^f0100e58:	75 05                	jne    f0100e5f <vprintfmt+0x185>$/;"	l
-f0100e5a	./obj/kern/kernel.asm	/^f0100e5a:	be 82 1c 10 f0       	mov    $0xf0101c82,%esi$/;"	l
-f0100e5f	./obj/kern/kernel.asm	/^f0100e5f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
-f0100e63	./obj/kern/kernel.asm	/^f0100e63:	0f 8e 84 00 00 00    	jle    f0100eed <vprintfmt+0x213>$/;"	l
-f0100e69	./obj/kern/kernel.asm	/^f0100e69:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
-f0100e6d	./obj/kern/kernel.asm	/^f0100e6d:	74 7e                	je     f0100eed <vprintfmt+0x213>$/;"	l
-f0100e6f	./obj/kern/kernel.asm	/^f0100e6f:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
-f0100e73	./obj/kern/kernel.asm	/^f0100e73:	89 34 24             	mov    %esi,(%esp)$/;"	l
-f0100e76	./obj/kern/kernel.asm	/^f0100e76:	e8 73 03 00 00       	call   f01011ee <strnlen>$/;"	l
-f0100e7b	./obj/kern/kernel.asm	/^f0100e7b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
-f0100e7e	./obj/kern/kernel.asm	/^f0100e7e:	29 c2                	sub    %eax,%edx$/;"	l
-f0100e80	./obj/kern/kernel.asm	/^f0100e80:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
-f0100e83	./obj/kern/kernel.asm	/^f0100e83:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
-f0100e87	./obj/kern/kernel.asm	/^f0100e87:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
-f0100e8a	./obj/kern/kernel.asm	/^f0100e8a:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
-f0100e8d	./obj/kern/kernel.asm	/^f0100e8d:	89 de                	mov    %ebx,%esi$/;"	l
-f0100e8f	./obj/kern/kernel.asm	/^f0100e8f:	89 d3                	mov    %edx,%ebx$/;"	l
-f0100e91	./obj/kern/kernel.asm	/^f0100e91:	89 c7                	mov    %eax,%edi$/;"	l
-f0100e93	./obj/kern/kernel.asm	/^f0100e93:	eb 0b                	jmp    f0100ea0 <vprintfmt+0x1c6>$/;"	l
-f0100e95	./obj/kern/kernel.asm	/^f0100e95:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
-f0100e99	./obj/kern/kernel.asm	/^f0100e99:	89 3c 24             	mov    %edi,(%esp)$/;"	l
-f0100e9c	./obj/kern/kernel.asm	/^f0100e9c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100e9f	./obj/kern/kernel.asm	/^f0100e9f:	4b                   	dec    %ebx$/;"	l
-f0100ea0	./obj/kern/kernel.asm	/^f0100ea0:	85 db                	test   %ebx,%ebx$/;"	l
-f0100ea2	./obj/kern/kernel.asm	/^f0100ea2:	7f f1                	jg     f0100e95 <vprintfmt+0x1bb>$/;"	l
-f0100ea4	./obj/kern/kernel.asm	/^f0100ea4:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
-f0100ea7	./obj/kern/kernel.asm	/^f0100ea7:	89 f3                	mov    %esi,%ebx$/;"	l
-f0100ea9	./obj/kern/kernel.asm	/^f0100ea9:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
-f0100eac	./obj/kern/kernel.asm	/^f0100eac:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
-f0100eaf	./obj/kern/kernel.asm	/^f0100eaf:	85 c0                	test   %eax,%eax$/;"	l
-f0100eb1	./obj/kern/kernel.asm	/^f0100eb1:	79 05                	jns    f0100eb8 <vprintfmt+0x1de>$/;"	l
-f0100eb3	./obj/kern/kernel.asm	/^f0100eb3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0100eb8	./obj/kern/kernel.asm	/^f0100eb8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
-f0100ebb	./obj/kern/kernel.asm	/^f0100ebb:	29 c2                	sub    %eax,%edx$/;"	l
-f0100ebd	./obj/kern/kernel.asm	/^f0100ebd:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
-f0100ec0	./obj/kern/kernel.asm	/^f0100ec0:	eb 2b                	jmp    f0100eed <vprintfmt+0x213>$/;"	l
-f0100ec2	./obj/kern/kernel.asm	/^f0100ec2:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
-f0100ec6	./obj/kern/kernel.asm	/^f0100ec6:	74 18                	je     f0100ee0 <vprintfmt+0x206>$/;"	l
-f0100ec8	./obj/kern/kernel.asm	/^f0100ec8:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
-f0100ecb	./obj/kern/kernel.asm	/^f0100ecb:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
-f0100ece	./obj/kern/kernel.asm	/^f0100ece:	76 10                	jbe    f0100ee0 <vprintfmt+0x206>$/;"	l
-f0100ed0	./obj/kern/kernel.asm	/^f0100ed0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100ed4	./obj/kern/kernel.asm	/^f0100ed4:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
-f0100edb	./obj/kern/kernel.asm	/^f0100edb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100ede	./obj/kern/kernel.asm	/^f0100ede:	eb 0a                	jmp    f0100eea <vprintfmt+0x210>$/;"	l
-f0100ee0	./obj/kern/kernel.asm	/^f0100ee0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100ee4	./obj/kern/kernel.asm	/^f0100ee4:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0100ee7	./obj/kern/kernel.asm	/^f0100ee7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100eea	./obj/kern/kernel.asm	/^f0100eea:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
-f0100eed	./obj/kern/kernel.asm	/^f0100eed:	0f be 06             	movsbl (%esi),%eax$/;"	l
-f0100ef0	./obj/kern/kernel.asm	/^f0100ef0:	46                   	inc    %esi$/;"	l
-f0100ef1	./obj/kern/kernel.asm	/^f0100ef1:	85 c0                	test   %eax,%eax$/;"	l
-f0100ef3	./obj/kern/kernel.asm	/^f0100ef3:	74 21                	je     f0100f16 <vprintfmt+0x23c>$/;"	l
-f0100ef5	./obj/kern/kernel.asm	/^f0100ef5:	85 ff                	test   %edi,%edi$/;"	l
-f0100ef7	./obj/kern/kernel.asm	/^f0100ef7:	78 c9                	js     f0100ec2 <vprintfmt+0x1e8>$/;"	l
-f0100ef9	./obj/kern/kernel.asm	/^f0100ef9:	4f                   	dec    %edi$/;"	l
-f0100efa	./obj/kern/kernel.asm	/^f0100efa:	79 c6                	jns    f0100ec2 <vprintfmt+0x1e8>$/;"	l
-f0100efc	./obj/kern/kernel.asm	/^f0100efc:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
-f0100eff	./obj/kern/kernel.asm	/^f0100eff:	89 de                	mov    %ebx,%esi$/;"	l
-f0100f01	./obj/kern/kernel.asm	/^f0100f01:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
-f0100f04	./obj/kern/kernel.asm	/^f0100f04:	eb 18                	jmp    f0100f1e <vprintfmt+0x244>$/;"	l
-f0100f06	./obj/kern/kernel.asm	/^f0100f06:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
-f0100f0a	./obj/kern/kernel.asm	/^f0100f0a:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
-f0100f11	./obj/kern/kernel.asm	/^f0100f11:	ff d7                	call   *%edi$/;"	l
-f0100f13	./obj/kern/kernel.asm	/^f0100f13:	4b                   	dec    %ebx$/;"	l
-f0100f14	./obj/kern/kernel.asm	/^f0100f14:	eb 08                	jmp    f0100f1e <vprintfmt+0x244>$/;"	l
-f0100f16	./obj/kern/kernel.asm	/^f0100f16:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
-f0100f19	./obj/kern/kernel.asm	/^f0100f19:	89 de                	mov    %ebx,%esi$/;"	l
-f0100f1b	./obj/kern/kernel.asm	/^f0100f1b:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
-f0100f1e	./obj/kern/kernel.asm	/^f0100f1e:	85 db                	test   %ebx,%ebx$/;"	l
-f0100f20	./obj/kern/kernel.asm	/^f0100f20:	7f e4                	jg     f0100f06 <vprintfmt+0x22c>$/;"	l
-f0100f22	./obj/kern/kernel.asm	/^f0100f22:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
-f0100f25	./obj/kern/kernel.asm	/^f0100f25:	89 f3                	mov    %esi,%ebx$/;"	l
-f0100f27	./obj/kern/kernel.asm	/^f0100f27:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100f2a	./obj/kern/kernel.asm	/^f0100f2a:	e9 ce fd ff ff       	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f0100f2f	./obj/kern/kernel.asm	/^f0100f2f:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
-f0100f32	./obj/kern/kernel.asm	/^f0100f32:	7e 10                	jle    f0100f44 <vprintfmt+0x26a>$/;"	l
-f0100f34	./obj/kern/kernel.asm	/^f0100f34:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f0100f37	./obj/kern/kernel.asm	/^f0100f37:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
-f0100f3a	./obj/kern/kernel.asm	/^f0100f3a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
-f0100f3d	./obj/kern/kernel.asm	/^f0100f3d:	8b 30                	mov    (%eax),%esi$/;"	l
-f0100f3f	./obj/kern/kernel.asm	/^f0100f3f:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
-f0100f42	./obj/kern/kernel.asm	/^f0100f42:	eb 26                	jmp    f0100f6a <vprintfmt+0x290>$/;"	l
-f0100f44	./obj/kern/kernel.asm	/^f0100f44:	85 c9                	test   %ecx,%ecx$/;"	l
-f0100f46	./obj/kern/kernel.asm	/^f0100f46:	74 12                	je     f0100f5a <vprintfmt+0x280>$/;"	l
-f0100f48	./obj/kern/kernel.asm	/^f0100f48:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f0100f4b	./obj/kern/kernel.asm	/^f0100f4b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
-f0100f4e	./obj/kern/kernel.asm	/^f0100f4e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
-f0100f51	./obj/kern/kernel.asm	/^f0100f51:	8b 30                	mov    (%eax),%esi$/;"	l
-f0100f53	./obj/kern/kernel.asm	/^f0100f53:	89 f7                	mov    %esi,%edi$/;"	l
-f0100f55	./obj/kern/kernel.asm	/^f0100f55:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
-f0100f58	./obj/kern/kernel.asm	/^f0100f58:	eb 10                	jmp    f0100f6a <vprintfmt+0x290>$/;"	l
-f0100f5a	./obj/kern/kernel.asm	/^f0100f5a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f0100f5d	./obj/kern/kernel.asm	/^f0100f5d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
-f0100f60	./obj/kern/kernel.asm	/^f0100f60:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
-f0100f63	./obj/kern/kernel.asm	/^f0100f63:	8b 30                	mov    (%eax),%esi$/;"	l
-f0100f65	./obj/kern/kernel.asm	/^f0100f65:	89 f7                	mov    %esi,%edi$/;"	l
-f0100f67	./obj/kern/kernel.asm	/^f0100f67:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
-f0100f6a	./obj/kern/kernel.asm	/^f0100f6a:	85 ff                	test   %edi,%edi$/;"	l
-f0100f6c	./obj/kern/kernel.asm	/^f0100f6c:	78 0a                	js     f0100f78 <vprintfmt+0x29e>$/;"	l
-f0100f6e	./obj/kern/kernel.asm	/^f0100f6e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
-f0100f73	./obj/kern/kernel.asm	/^f0100f73:	e9 ac 00 00 00       	jmp    f0101024 <vprintfmt+0x34a>$/;"	l
-f0100f78	./obj/kern/kernel.asm	/^f0100f78:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100f7c	./obj/kern/kernel.asm	/^f0100f7c:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
-f0100f83	./obj/kern/kernel.asm	/^f0100f83:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100f86	./obj/kern/kernel.asm	/^f0100f86:	f7 de                	neg    %esi$/;"	l
-f0100f88	./obj/kern/kernel.asm	/^f0100f88:	83 d7 00             	adc    $0x0,%edi$/;"	l
-f0100f8b	./obj/kern/kernel.asm	/^f0100f8b:	f7 df                	neg    %edi$/;"	l
-f0100f8d	./obj/kern/kernel.asm	/^f0100f8d:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
-f0100f92	./obj/kern/kernel.asm	/^f0100f92:	e9 8d 00 00 00       	jmp    f0101024 <vprintfmt+0x34a>$/;"	l
-f0100f97	./obj/kern/kernel.asm	/^f0100f97:	89 ca                	mov    %ecx,%edx$/;"	l
-f0100f99	./obj/kern/kernel.asm	/^f0100f99:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
-f0100f9c	./obj/kern/kernel.asm	/^f0100f9c:	e8 bd fc ff ff       	call   f0100c5e <getuint>$/;"	l
-f0100fa1	./obj/kern/kernel.asm	/^f0100fa1:	89 c6                	mov    %eax,%esi$/;"	l
-f0100fa3	./obj/kern/kernel.asm	/^f0100fa3:	89 d7                	mov    %edx,%edi$/;"	l
-f0100fa5	./obj/kern/kernel.asm	/^f0100fa5:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
-f0100faa	./obj/kern/kernel.asm	/^f0100faa:	eb 78                	jmp    f0101024 <vprintfmt+0x34a>$/;"	l
-f0100fac	./obj/kern/kernel.asm	/^f0100fac:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100fb0	./obj/kern/kernel.asm	/^f0100fb0:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
-f0100fb7	./obj/kern/kernel.asm	/^f0100fb7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100fba	./obj/kern/kernel.asm	/^f0100fba:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100fbe	./obj/kern/kernel.asm	/^f0100fbe:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
-f0100fc5	./obj/kern/kernel.asm	/^f0100fc5:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100fc8	./obj/kern/kernel.asm	/^f0100fc8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100fcc	./obj/kern/kernel.asm	/^f0100fcc:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
-f0100fd3	./obj/kern/kernel.asm	/^f0100fd3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100fd6	./obj/kern/kernel.asm	/^f0100fd6:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f0100fd9	./obj/kern/kernel.asm	/^f0100fd9:	e9 1f fd ff ff       	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f0100fde	./obj/kern/kernel.asm	/^f0100fde:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100fe2	./obj/kern/kernel.asm	/^f0100fe2:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
-f0100fe9	./obj/kern/kernel.asm	/^f0100fe9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100fec	./obj/kern/kernel.asm	/^f0100fec:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0100ff0	./obj/kern/kernel.asm	/^f0100ff0:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
-f0100ff7	./obj/kern/kernel.asm	/^f0100ff7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0100ffa	./obj/kern/kernel.asm	/^f0100ffa:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f0100ffd	./obj/kern/kernel.asm	/^f0100ffd:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
-f0101000	./obj/kern/kernel.asm	/^f0101000:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
-f0101003	./obj/kern/kernel.asm	/^f0101003:	8b 30                	mov    (%eax),%esi$/;"	l
-f0101005	./obj/kern/kernel.asm	/^f0101005:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
-f010100a	./obj/kern/kernel.asm	/^f010100a:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
-f010100f	./obj/kern/kernel.asm	/^f010100f:	eb 13                	jmp    f0101024 <vprintfmt+0x34a>$/;"	l
-f0101011	./obj/kern/kernel.asm	/^f0101011:	89 ca                	mov    %ecx,%edx$/;"	l
-f0101013	./obj/kern/kernel.asm	/^f0101013:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
-f0101016	./obj/kern/kernel.asm	/^f0101016:	e8 43 fc ff ff       	call   f0100c5e <getuint>$/;"	l
-f010101b	./obj/kern/kernel.asm	/^f010101b:	89 c6                	mov    %eax,%esi$/;"	l
-f010101d	./obj/kern/kernel.asm	/^f010101d:	89 d7                	mov    %edx,%edi$/;"	l
-f010101f	./obj/kern/kernel.asm	/^f010101f:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
-f0101024	./obj/kern/kernel.asm	/^f0101024:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
-f0101028	./obj/kern/kernel.asm	/^f0101028:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
-f010102c	./obj/kern/kernel.asm	/^f010102c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
-f010102f	./obj/kern/kernel.asm	/^f010102f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
-f0101033	./obj/kern/kernel.asm	/^f0101033:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f0101037	./obj/kern/kernel.asm	/^f0101037:	89 34 24             	mov    %esi,(%esp)$/;"	l
-f010103a	./obj/kern/kernel.asm	/^f010103a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
-f010103e	./obj/kern/kernel.asm	/^f010103e:	89 da                	mov    %ebx,%edx$/;"	l
-f0101040	./obj/kern/kernel.asm	/^f0101040:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0101043	./obj/kern/kernel.asm	/^f0101043:	e8 4c fb ff ff       	call   f0100b94 <printnum>$/;"	l
-f0101048	./obj/kern/kernel.asm	/^f0101048:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f010104b	./obj/kern/kernel.asm	/^f010104b:	e9 ad fc ff ff       	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f0101050	./obj/kern/kernel.asm	/^f0101050:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0101054	./obj/kern/kernel.asm	/^f0101054:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0101057	./obj/kern/kernel.asm	/^f0101057:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f010105a	./obj/kern/kernel.asm	/^f010105a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
-f010105d	./obj/kern/kernel.asm	/^f010105d:	e9 9b fc ff ff       	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f0101062	./obj/kern/kernel.asm	/^f0101062:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
-f0101066	./obj/kern/kernel.asm	/^f0101066:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
-f010106d	./obj/kern/kernel.asm	/^f010106d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
-f0101070	./obj/kern/kernel.asm	/^f0101070:	eb 01                	jmp    f0101073 <vprintfmt+0x399>$/;"	l
-f0101072	./obj/kern/kernel.asm	/^f0101072:	4e                   	dec    %esi$/;"	l
-f0101073	./obj/kern/kernel.asm	/^f0101073:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
-f0101077	./obj/kern/kernel.asm	/^f0101077:	75 f9                	jne    f0101072 <vprintfmt+0x398>$/;"	l
-f0101079	./obj/kern/kernel.asm	/^f0101079:	e9 7f fc ff ff       	jmp    f0100cfd <vprintfmt+0x23>$/;"	l
-f010107e	./obj/kern/kernel.asm	/^f010107e:	83 c4 4c             	add    $0x4c,%esp$/;"	l
-f0101081	./obj/kern/kernel.asm	/^f0101081:	5b                   	pop    %ebx$/;"	l
-f0101082	./obj/kern/kernel.asm	/^f0101082:	5e                   	pop    %esi$/;"	l
-f0101083	./obj/kern/kernel.asm	/^f0101083:	5f                   	pop    %edi$/;"	l
-f0101084	./obj/kern/kernel.asm	/^f0101084:	5d                   	pop    %ebp$/;"	l
-f0101085	./obj/kern/kernel.asm	/^f0101085:	c3                   	ret    $/;"	l
-f0101086	./obj/kern/kernel.asm	/^f0101086 <vsnprintf>:$/;"	l
-f0101086	./obj/kern/kernel.asm	/^f0101086:	55                   	push   %ebp$/;"	l
-f0101087	./obj/kern/kernel.asm	/^f0101087:	89 e5                	mov    %esp,%ebp$/;"	l
-f0101089	./obj/kern/kernel.asm	/^f0101089:	83 ec 28             	sub    $0x28,%esp$/;"	l
-f010108c	./obj/kern/kernel.asm	/^f010108c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f010108f	./obj/kern/kernel.asm	/^f010108f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
-f0101092	./obj/kern/kernel.asm	/^f0101092:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
-f0101095	./obj/kern/kernel.asm	/^f0101095:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
-f0101099	./obj/kern/kernel.asm	/^f0101099:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
-f010109c	./obj/kern/kernel.asm	/^f010109c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
-f01010a3	./obj/kern/kernel.asm	/^f01010a3:	85 c0                	test   %eax,%eax$/;"	l
-f01010a5	./obj/kern/kernel.asm	/^f01010a5:	74 30                	je     f01010d7 <vsnprintf+0x51>$/;"	l
-f01010a7	./obj/kern/kernel.asm	/^f01010a7:	85 d2                	test   %edx,%edx$/;"	l
-f01010a9	./obj/kern/kernel.asm	/^f01010a9:	7e 33                	jle    f01010de <vsnprintf+0x58>$/;"	l
-f01010ab	./obj/kern/kernel.asm	/^f01010ab:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
-f01010ae	./obj/kern/kernel.asm	/^f01010ae:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
-f01010b2	./obj/kern/kernel.asm	/^f01010b2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
-f01010b5	./obj/kern/kernel.asm	/^f01010b5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f01010b9	./obj/kern/kernel.asm	/^f01010b9:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
-f01010bc	./obj/kern/kernel.asm	/^f01010bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f01010c0	./obj/kern/kernel.asm	/^f01010c0:	c7 04 24 98 0c 10 f0 	movl   $0xf0100c98,(%esp)$/;"	l
-f01010c7	./obj/kern/kernel.asm	/^f01010c7:	e8 0e fc ff ff       	call   f0100cda <vprintfmt>$/;"	l
-f01010cc	./obj/kern/kernel.asm	/^f01010cc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
-f01010cf	./obj/kern/kernel.asm	/^f01010cf:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
-f01010d2	./obj/kern/kernel.asm	/^f01010d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
-f01010d5	./obj/kern/kernel.asm	/^f01010d5:	eb 0c                	jmp    f01010e3 <vsnprintf+0x5d>$/;"	l
-f01010d7	./obj/kern/kernel.asm	/^f01010d7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
-f01010dc	./obj/kern/kernel.asm	/^f01010dc:	eb 05                	jmp    f01010e3 <vsnprintf+0x5d>$/;"	l
-f01010de	./obj/kern/kernel.asm	/^f01010de:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
-f01010e3	./obj/kern/kernel.asm	/^f01010e3:	c9                   	leave  $/;"	l
-f01010e4	./obj/kern/kernel.asm	/^f01010e4:	c3                   	ret    $/;"	l
-f01010e5	./obj/kern/kernel.asm	/^f01010e5 <snprintf>:$/;"	l
-f01010e5	./obj/kern/kernel.asm	/^f01010e5:	55                   	push   %ebp$/;"	l
-f01010e6	./obj/kern/kernel.asm	/^f01010e6:	89 e5                	mov    %esp,%ebp$/;"	l
-f01010e8	./obj/kern/kernel.asm	/^f01010e8:	83 ec 18             	sub    $0x18,%esp$/;"	l
-f01010eb	./obj/kern/kernel.asm	/^f01010eb:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
-f01010ee	./obj/kern/kernel.asm	/^f01010ee:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
-f01010f2	./obj/kern/kernel.asm	/^f01010f2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
-f01010f5	./obj/kern/kernel.asm	/^f01010f5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f01010f9	./obj/kern/kernel.asm	/^f01010f9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f01010fc	./obj/kern/kernel.asm	/^f01010fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f0101100	./obj/kern/kernel.asm	/^f0101100:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0101103	./obj/kern/kernel.asm	/^f0101103:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0101106	./obj/kern/kernel.asm	/^f0101106:	e8 7b ff ff ff       	call   f0101086 <vsnprintf>$/;"	l
-f010110b	./obj/kern/kernel.asm	/^f010110b:	c9                   	leave  $/;"	l
-f010110c	./obj/kern/kernel.asm	/^f010110c:	c3                   	ret    $/;"	l
-f010110d	./obj/kern/kernel.asm	/^f010110d:	00 00                	add    %al,(%eax)$/;"	l
-f0101110	./obj/kern/kernel.asm	/^f0101110 <readline>:$/;"	l
-f0101110	./obj/kern/kernel.asm	/^f0101110:	55                   	push   %ebp$/;"	l
-f0101111	./obj/kern/kernel.asm	/^f0101111:	89 e5                	mov    %esp,%ebp$/;"	l
-f0101113	./obj/kern/kernel.asm	/^f0101113:	57                   	push   %edi$/;"	l
-f0101114	./obj/kern/kernel.asm	/^f0101114:	56                   	push   %esi$/;"	l
-f0101115	./obj/kern/kernel.asm	/^f0101115:	53                   	push   %ebx$/;"	l
-f0101116	./obj/kern/kernel.asm	/^f0101116:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
-f0101119	./obj/kern/kernel.asm	/^f0101119:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f010111c	./obj/kern/kernel.asm	/^f010111c:	85 c0                	test   %eax,%eax$/;"	l
-f010111e	./obj/kern/kernel.asm	/^f010111e:	74 10                	je     f0101130 <readline+0x20>$/;"	l
-f0101120	./obj/kern/kernel.asm	/^f0101120:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f0101124	./obj/kern/kernel.asm	/^f0101124:	c7 04 24 92 1c 10 f0 	movl   $0xf0101c92,(%esp)$/;"	l
-f010112b	./obj/kern/kernel.asm	/^f010112b:	e8 9e f7 ff ff       	call   f01008ce <cprintf>$/;"	l
-f0101130	./obj/kern/kernel.asm	/^f0101130:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
-f0101137	./obj/kern/kernel.asm	/^f0101137:	e8 ef f4 ff ff       	call   f010062b <iscons>$/;"	l
-f010113c	./obj/kern/kernel.asm	/^f010113c:	89 c7                	mov    %eax,%edi$/;"	l
-f010113e	./obj/kern/kernel.asm	/^f010113e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
-f0101143	./obj/kern/kernel.asm	/^f0101143:	e8 d2 f4 ff ff       	call   f010061a <getchar>$/;"	l
-f0101148	./obj/kern/kernel.asm	/^f0101148:	89 c3                	mov    %eax,%ebx$/;"	l
-f010114a	./obj/kern/kernel.asm	/^f010114a:	85 c0                	test   %eax,%eax$/;"	l
-f010114c	./obj/kern/kernel.asm	/^f010114c:	79 17                	jns    f0101165 <readline+0x55>$/;"	l
-f010114e	./obj/kern/kernel.asm	/^f010114e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f0101152	./obj/kern/kernel.asm	/^f0101152:	c7 04 24 80 1e 10 f0 	movl   $0xf0101e80,(%esp)$/;"	l
-f0101159	./obj/kern/kernel.asm	/^f0101159:	e8 70 f7 ff ff       	call   f01008ce <cprintf>$/;"	l
-f010115e	./obj/kern/kernel.asm	/^f010115e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0101163	./obj/kern/kernel.asm	/^f0101163:	eb 69                	jmp    f01011ce <readline+0xbe>$/;"	l
-f0101165	./obj/kern/kernel.asm	/^f0101165:	83 f8 08             	cmp    $0x8,%eax$/;"	l
-f0101168	./obj/kern/kernel.asm	/^f0101168:	74 05                	je     f010116f <readline+0x5f>$/;"	l
-f010116a	./obj/kern/kernel.asm	/^f010116a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
-f010116d	./obj/kern/kernel.asm	/^f010116d:	75 17                	jne    f0101186 <readline+0x76>$/;"	l
-f010116f	./obj/kern/kernel.asm	/^f010116f:	85 f6                	test   %esi,%esi$/;"	l
-f0101171	./obj/kern/kernel.asm	/^f0101171:	7e 13                	jle    f0101186 <readline+0x76>$/;"	l
-f0101173	./obj/kern/kernel.asm	/^f0101173:	85 ff                	test   %edi,%edi$/;"	l
-f0101175	./obj/kern/kernel.asm	/^f0101175:	74 0c                	je     f0101183 <readline+0x73>$/;"	l
-f0101177	./obj/kern/kernel.asm	/^f0101177:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
-f010117e	./obj/kern/kernel.asm	/^f010117e:	e8 87 f4 ff ff       	call   f010060a <cputchar>$/;"	l
-f0101183	./obj/kern/kernel.asm	/^f0101183:	4e                   	dec    %esi$/;"	l
-f0101184	./obj/kern/kernel.asm	/^f0101184:	eb bd                	jmp    f0101143 <readline+0x33>$/;"	l
-f0101186	./obj/kern/kernel.asm	/^f0101186:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
-f0101189	./obj/kern/kernel.asm	/^f0101189:	7e 1d                	jle    f01011a8 <readline+0x98>$/;"	l
-f010118b	./obj/kern/kernel.asm	/^f010118b:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
-f0101191	./obj/kern/kernel.asm	/^f0101191:	7f 15                	jg     f01011a8 <readline+0x98>$/;"	l
-f0101193	./obj/kern/kernel.asm	/^f0101193:	85 ff                	test   %edi,%edi$/;"	l
-f0101195	./obj/kern/kernel.asm	/^f0101195:	74 08                	je     f010119f <readline+0x8f>$/;"	l
-f0101197	./obj/kern/kernel.asm	/^f0101197:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
-f010119a	./obj/kern/kernel.asm	/^f010119a:	e8 6b f4 ff ff       	call   f010060a <cputchar>$/;"	l
-f010119f	./obj/kern/kernel.asm	/^f010119f:	88 9e 40 95 11 f0    	mov    %bl,-0xfee6ac0(%esi)$/;"	l
-f01011a5	./obj/kern/kernel.asm	/^f01011a5:	46                   	inc    %esi$/;"	l
-f01011a6	./obj/kern/kernel.asm	/^f01011a6:	eb 9b                	jmp    f0101143 <readline+0x33>$/;"	l
-f01011a8	./obj/kern/kernel.asm	/^f01011a8:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
-f01011ab	./obj/kern/kernel.asm	/^f01011ab:	74 05                	je     f01011b2 <readline+0xa2>$/;"	l
-f01011ad	./obj/kern/kernel.asm	/^f01011ad:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
-f01011b0	./obj/kern/kernel.asm	/^f01011b0:	75 91                	jne    f0101143 <readline+0x33>$/;"	l
-f01011b2	./obj/kern/kernel.asm	/^f01011b2:	85 ff                	test   %edi,%edi$/;"	l
-f01011b4	./obj/kern/kernel.asm	/^f01011b4:	74 0c                	je     f01011c2 <readline+0xb2>$/;"	l
-f01011b6	./obj/kern/kernel.asm	/^f01011b6:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
-f01011bd	./obj/kern/kernel.asm	/^f01011bd:	e8 48 f4 ff ff       	call   f010060a <cputchar>$/;"	l
-f01011c2	./obj/kern/kernel.asm	/^f01011c2:	c6 86 40 95 11 f0 00 	movb   $0x0,-0xfee6ac0(%esi)$/;"	l
-f01011c9	./obj/kern/kernel.asm	/^f01011c9:	b8 40 95 11 f0       	mov    $0xf0119540,%eax$/;"	l
-f01011ce	./obj/kern/kernel.asm	/^f01011ce:	83 c4 1c             	add    $0x1c,%esp$/;"	l
-f01011d1	./obj/kern/kernel.asm	/^f01011d1:	5b                   	pop    %ebx$/;"	l
-f01011d2	./obj/kern/kernel.asm	/^f01011d2:	5e                   	pop    %esi$/;"	l
-f01011d3	./obj/kern/kernel.asm	/^f01011d3:	5f                   	pop    %edi$/;"	l
-f01011d4	./obj/kern/kernel.asm	/^f01011d4:	5d                   	pop    %ebp$/;"	l
-f01011d5	./obj/kern/kernel.asm	/^f01011d5:	c3                   	ret    $/;"	l
-f01011d8	./obj/kern/kernel.asm	/^f01011d8 <strlen>:$/;"	l
-f01011d8	./obj/kern/kernel.asm	/^f01011d8:	55                   	push   %ebp$/;"	l
-f01011d9	./obj/kern/kernel.asm	/^f01011d9:	89 e5                	mov    %esp,%ebp$/;"	l
-f01011db	./obj/kern/kernel.asm	/^f01011db:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
-f01011de	./obj/kern/kernel.asm	/^f01011de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f01011e3	./obj/kern/kernel.asm	/^f01011e3:	eb 01                	jmp    f01011e6 <strlen+0xe>$/;"	l
-f01011e5	./obj/kern/kernel.asm	/^f01011e5:	40                   	inc    %eax$/;"	l
-f01011e6	./obj/kern/kernel.asm	/^f01011e6:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
-f01011ea	./obj/kern/kernel.asm	/^f01011ea:	75 f9                	jne    f01011e5 <strlen+0xd>$/;"	l
-f01011ec	./obj/kern/kernel.asm	/^f01011ec:	5d                   	pop    %ebp$/;"	l
-f01011ed	./obj/kern/kernel.asm	/^f01011ed:	c3                   	ret    $/;"	l
-f01011ee	./obj/kern/kernel.asm	/^f01011ee <strnlen>:$/;"	l
-f01011ee	./obj/kern/kernel.asm	/^f01011ee:	55                   	push   %ebp$/;"	l
-f01011ef	./obj/kern/kernel.asm	/^f01011ef:	89 e5                	mov    %esp,%ebp$/;"	l
-f01011f1	./obj/kern/kernel.asm	/^f01011f1:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
-f01011f4	./obj/kern/kernel.asm	/^f01011f4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
-f01011f7	./obj/kern/kernel.asm	/^f01011f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f01011fc	./obj/kern/kernel.asm	/^f01011fc:	eb 01                	jmp    f01011ff <strnlen+0x11>$/;"	l
-f01011fe	./obj/kern/kernel.asm	/^f01011fe:	40                   	inc    %eax$/;"	l
-f01011ff	./obj/kern/kernel.asm	/^f01011ff:	39 d0                	cmp    %edx,%eax$/;"	l
-f0101201	./obj/kern/kernel.asm	/^f0101201:	74 06                	je     f0101209 <strnlen+0x1b>$/;"	l
-f0101203	./obj/kern/kernel.asm	/^f0101203:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
-f0101207	./obj/kern/kernel.asm	/^f0101207:	75 f5                	jne    f01011fe <strnlen+0x10>$/;"	l
-f0101209	./obj/kern/kernel.asm	/^f0101209:	5d                   	pop    %ebp$/;"	l
-f010120a	./obj/kern/kernel.asm	/^f010120a:	c3                   	ret    $/;"	l
-f010120b	./obj/kern/kernel.asm	/^f010120b <strcpy>:$/;"	l
-f010120b	./obj/kern/kernel.asm	/^f010120b:	55                   	push   %ebp$/;"	l
-f010120c	./obj/kern/kernel.asm	/^f010120c:	89 e5                	mov    %esp,%ebp$/;"	l
-f010120e	./obj/kern/kernel.asm	/^f010120e:	53                   	push   %ebx$/;"	l
-f010120f	./obj/kern/kernel.asm	/^f010120f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0101212	./obj/kern/kernel.asm	/^f0101212:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
-f0101215	./obj/kern/kernel.asm	/^f0101215:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
-f010121a	./obj/kern/kernel.asm	/^f010121a:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
-f010121d	./obj/kern/kernel.asm	/^f010121d:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
-f0101220	./obj/kern/kernel.asm	/^f0101220:	42                   	inc    %edx$/;"	l
-f0101221	./obj/kern/kernel.asm	/^f0101221:	84 c9                	test   %cl,%cl$/;"	l
-f0101223	./obj/kern/kernel.asm	/^f0101223:	75 f5                	jne    f010121a <strcpy+0xf>$/;"	l
-f0101225	./obj/kern/kernel.asm	/^f0101225:	5b                   	pop    %ebx$/;"	l
-f0101226	./obj/kern/kernel.asm	/^f0101226:	5d                   	pop    %ebp$/;"	l
-f0101227	./obj/kern/kernel.asm	/^f0101227:	c3                   	ret    $/;"	l
-f0101228	./obj/kern/kernel.asm	/^f0101228 <strcat>:$/;"	l
-f0101228	./obj/kern/kernel.asm	/^f0101228:	55                   	push   %ebp$/;"	l
-f0101229	./obj/kern/kernel.asm	/^f0101229:	89 e5                	mov    %esp,%ebp$/;"	l
-f010122b	./obj/kern/kernel.asm	/^f010122b:	53                   	push   %ebx$/;"	l
-f010122c	./obj/kern/kernel.asm	/^f010122c:	83 ec 08             	sub    $0x8,%esp$/;"	l
-f010122f	./obj/kern/kernel.asm	/^f010122f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
-f0101232	./obj/kern/kernel.asm	/^f0101232:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
-f0101235	./obj/kern/kernel.asm	/^f0101235:	e8 9e ff ff ff       	call   f01011d8 <strlen>$/;"	l
-f010123a	./obj/kern/kernel.asm	/^f010123a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
-f010123d	./obj/kern/kernel.asm	/^f010123d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
-f0101241	./obj/kern/kernel.asm	/^f0101241:	01 d8                	add    %ebx,%eax$/;"	l
-f0101243	./obj/kern/kernel.asm	/^f0101243:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0101246	./obj/kern/kernel.asm	/^f0101246:	e8 c0 ff ff ff       	call   f010120b <strcpy>$/;"	l
-f010124b	./obj/kern/kernel.asm	/^f010124b:	89 d8                	mov    %ebx,%eax$/;"	l
-f010124d	./obj/kern/kernel.asm	/^f010124d:	83 c4 08             	add    $0x8,%esp$/;"	l
-f0101250	./obj/kern/kernel.asm	/^f0101250:	5b                   	pop    %ebx$/;"	l
-f0101251	./obj/kern/kernel.asm	/^f0101251:	5d                   	pop    %ebp$/;"	l
-f0101252	./obj/kern/kernel.asm	/^f0101252:	c3                   	ret    $/;"	l
-f0101253	./obj/kern/kernel.asm	/^f0101253 <strncpy>:$/;"	l
-f0101253	./obj/kern/kernel.asm	/^f0101253:	55                   	push   %ebp$/;"	l
-f0101254	./obj/kern/kernel.asm	/^f0101254:	89 e5                	mov    %esp,%ebp$/;"	l
-f0101256	./obj/kern/kernel.asm	/^f0101256:	56                   	push   %esi$/;"	l
-f0101257	./obj/kern/kernel.asm	/^f0101257:	53                   	push   %ebx$/;"	l
-f0101258	./obj/kern/kernel.asm	/^f0101258:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f010125b	./obj/kern/kernel.asm	/^f010125b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
-f010125e	./obj/kern/kernel.asm	/^f010125e:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
-f0101261	./obj/kern/kernel.asm	/^f0101261:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
-f0101266	./obj/kern/kernel.asm	/^f0101266:	eb 0c                	jmp    f0101274 <strncpy+0x21>$/;"	l
-f0101268	./obj/kern/kernel.asm	/^f0101268:	8a 1a                	mov    (%edx),%bl$/;"	l
-f010126a	./obj/kern/kernel.asm	/^f010126a:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
-f010126d	./obj/kern/kernel.asm	/^f010126d:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
-f0101270	./obj/kern/kernel.asm	/^f0101270:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
-f0101273	./obj/kern/kernel.asm	/^f0101273:	41                   	inc    %ecx$/;"	l
-f0101274	./obj/kern/kernel.asm	/^f0101274:	39 f1                	cmp    %esi,%ecx$/;"	l
-f0101276	./obj/kern/kernel.asm	/^f0101276:	75 f0                	jne    f0101268 <strncpy+0x15>$/;"	l
-f0101278	./obj/kern/kernel.asm	/^f0101278:	5b                   	pop    %ebx$/;"	l
-f0101279	./obj/kern/kernel.asm	/^f0101279:	5e                   	pop    %esi$/;"	l
-f010127a	./obj/kern/kernel.asm	/^f010127a:	5d                   	pop    %ebp$/;"	l
-f010127b	./obj/kern/kernel.asm	/^f010127b:	c3                   	ret    $/;"	l
-f010127c	./obj/kern/kernel.asm	/^f010127c <strlcpy>:$/;"	l
-f010127c	./obj/kern/kernel.asm	/^f010127c:	55                   	push   %ebp$/;"	l
-f010127d	./obj/kern/kernel.asm	/^f010127d:	89 e5                	mov    %esp,%ebp$/;"	l
-f010127f	./obj/kern/kernel.asm	/^f010127f:	56                   	push   %esi$/;"	l
-f0101280	./obj/kern/kernel.asm	/^f0101280:	53                   	push   %ebx$/;"	l
-f0101281	./obj/kern/kernel.asm	/^f0101281:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
-f0101284	./obj/kern/kernel.asm	/^f0101284:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
-f0101287	./obj/kern/kernel.asm	/^f0101287:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
-f010128a	./obj/kern/kernel.asm	/^f010128a:	85 d2                	test   %edx,%edx$/;"	l
-f010128c	./obj/kern/kernel.asm	/^f010128c:	75 0a                	jne    f0101298 <strlcpy+0x1c>$/;"	l
-f010128e	./obj/kern/kernel.asm	/^f010128e:	89 f0                	mov    %esi,%eax$/;"	l
-f0101290	./obj/kern/kernel.asm	/^f0101290:	eb 1a                	jmp    f01012ac <strlcpy+0x30>$/;"	l
-f0101292	./obj/kern/kernel.asm	/^f0101292:	88 18                	mov    %bl,(%eax)$/;"	l
-f0101294	./obj/kern/kernel.asm	/^f0101294:	40                   	inc    %eax$/;"	l
-f0101295	./obj/kern/kernel.asm	/^f0101295:	41                   	inc    %ecx$/;"	l
-f0101296	./obj/kern/kernel.asm	/^f0101296:	eb 02                	jmp    f010129a <strlcpy+0x1e>$/;"	l
-f0101298	./obj/kern/kernel.asm	/^f0101298:	89 f0                	mov    %esi,%eax$/;"	l
-f010129a	./obj/kern/kernel.asm	/^f010129a:	4a                   	dec    %edx$/;"	l
-f010129b	./obj/kern/kernel.asm	/^f010129b:	74 0a                	je     f01012a7 <strlcpy+0x2b>$/;"	l
-f010129d	./obj/kern/kernel.asm	/^f010129d:	8a 19                	mov    (%ecx),%bl$/;"	l
-f010129f	./obj/kern/kernel.asm	/^f010129f:	84 db                	test   %bl,%bl$/;"	l
-f01012a1	./obj/kern/kernel.asm	/^f01012a1:	75 ef                	jne    f0101292 <strlcpy+0x16>$/;"	l
-f01012a3	./obj/kern/kernel.asm	/^f01012a3:	89 c2                	mov    %eax,%edx$/;"	l
-f01012a5	./obj/kern/kernel.asm	/^f01012a5:	eb 02                	jmp    f01012a9 <strlcpy+0x2d>$/;"	l
-f01012a7	./obj/kern/kernel.asm	/^f01012a7:	89 c2                	mov    %eax,%edx$/;"	l
-f01012a9	./obj/kern/kernel.asm	/^f01012a9:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
-f01012ac	./obj/kern/kernel.asm	/^f01012ac:	29 f0                	sub    %esi,%eax$/;"	l
-f01012ae	./obj/kern/kernel.asm	/^f01012ae:	5b                   	pop    %ebx$/;"	l
-f01012af	./obj/kern/kernel.asm	/^f01012af:	5e                   	pop    %esi$/;"	l
-f01012b0	./obj/kern/kernel.asm	/^f01012b0:	5d                   	pop    %ebp$/;"	l
-f01012b1	./obj/kern/kernel.asm	/^f01012b1:	c3                   	ret    $/;"	l
-f01012b2	./obj/kern/kernel.asm	/^f01012b2 <strcmp>:$/;"	l
-f01012b2	./obj/kern/kernel.asm	/^f01012b2:	55                   	push   %ebp$/;"	l
-f01012b3	./obj/kern/kernel.asm	/^f01012b3:	89 e5                	mov    %esp,%ebp$/;"	l
-f01012b5	./obj/kern/kernel.asm	/^f01012b5:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
-f01012b8	./obj/kern/kernel.asm	/^f01012b8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
-f01012bb	./obj/kern/kernel.asm	/^f01012bb:	eb 02                	jmp    f01012bf <strcmp+0xd>$/;"	l
-f01012bd	./obj/kern/kernel.asm	/^f01012bd:	41                   	inc    %ecx$/;"	l
-f01012be	./obj/kern/kernel.asm	/^f01012be:	42                   	inc    %edx$/;"	l
-f01012bf	./obj/kern/kernel.asm	/^f01012bf:	8a 01                	mov    (%ecx),%al$/;"	l
-f01012c1	./obj/kern/kernel.asm	/^f01012c1:	84 c0                	test   %al,%al$/;"	l
-f01012c3	./obj/kern/kernel.asm	/^f01012c3:	74 04                	je     f01012c9 <strcmp+0x17>$/;"	l
-f01012c5	./obj/kern/kernel.asm	/^f01012c5:	3a 02                	cmp    (%edx),%al$/;"	l
-f01012c7	./obj/kern/kernel.asm	/^f01012c7:	74 f4                	je     f01012bd <strcmp+0xb>$/;"	l
-f01012c9	./obj/kern/kernel.asm	/^f01012c9:	0f b6 c0             	movzbl %al,%eax$/;"	l
-f01012cc	./obj/kern/kernel.asm	/^f01012cc:	0f b6 12             	movzbl (%edx),%edx$/;"	l
-f01012cf	./obj/kern/kernel.asm	/^f01012cf:	29 d0                	sub    %edx,%eax$/;"	l
-f01012d1	./obj/kern/kernel.asm	/^f01012d1:	5d                   	pop    %ebp$/;"	l
-f01012d2	./obj/kern/kernel.asm	/^f01012d2:	c3                   	ret    $/;"	l
-f01012d3	./obj/kern/kernel.asm	/^f01012d3 <strncmp>:$/;"	l
-f01012d3	./obj/kern/kernel.asm	/^f01012d3:	55                   	push   %ebp$/;"	l
-f01012d4	./obj/kern/kernel.asm	/^f01012d4:	89 e5                	mov    %esp,%ebp$/;"	l
-f01012d6	./obj/kern/kernel.asm	/^f01012d6:	53                   	push   %ebx$/;"	l
-f01012d7	./obj/kern/kernel.asm	/^f01012d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f01012da	./obj/kern/kernel.asm	/^f01012da:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
-f01012dd	./obj/kern/kernel.asm	/^f01012dd:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
-f01012e0	./obj/kern/kernel.asm	/^f01012e0:	eb 03                	jmp    f01012e5 <strncmp+0x12>$/;"	l
-f01012e2	./obj/kern/kernel.asm	/^f01012e2:	4a                   	dec    %edx$/;"	l
-f01012e3	./obj/kern/kernel.asm	/^f01012e3:	40                   	inc    %eax$/;"	l
-f01012e4	./obj/kern/kernel.asm	/^f01012e4:	41                   	inc    %ecx$/;"	l
-f01012e5	./obj/kern/kernel.asm	/^f01012e5:	85 d2                	test   %edx,%edx$/;"	l
-f01012e7	./obj/kern/kernel.asm	/^f01012e7:	74 14                	je     f01012fd <strncmp+0x2a>$/;"	l
-f01012e9	./obj/kern/kernel.asm	/^f01012e9:	8a 18                	mov    (%eax),%bl$/;"	l
-f01012eb	./obj/kern/kernel.asm	/^f01012eb:	84 db                	test   %bl,%bl$/;"	l
-f01012ed	./obj/kern/kernel.asm	/^f01012ed:	74 04                	je     f01012f3 <strncmp+0x20>$/;"	l
-f01012ef	./obj/kern/kernel.asm	/^f01012ef:	3a 19                	cmp    (%ecx),%bl$/;"	l
-f01012f1	./obj/kern/kernel.asm	/^f01012f1:	74 ef                	je     f01012e2 <strncmp+0xf>$/;"	l
-f01012f3	./obj/kern/kernel.asm	/^f01012f3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
-f01012f6	./obj/kern/kernel.asm	/^f01012f6:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
-f01012f9	./obj/kern/kernel.asm	/^f01012f9:	29 d0                	sub    %edx,%eax$/;"	l
-f01012fb	./obj/kern/kernel.asm	/^f01012fb:	eb 05                	jmp    f0101302 <strncmp+0x2f>$/;"	l
-f01012fd	./obj/kern/kernel.asm	/^f01012fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0101302	./obj/kern/kernel.asm	/^f0101302:	5b                   	pop    %ebx$/;"	l
-f0101303	./obj/kern/kernel.asm	/^f0101303:	5d                   	pop    %ebp$/;"	l
-f0101304	./obj/kern/kernel.asm	/^f0101304:	c3                   	ret    $/;"	l
-f0101305	./obj/kern/kernel.asm	/^f0101305 <strchr>:$/;"	l
-f0101305	./obj/kern/kernel.asm	/^f0101305:	55                   	push   %ebp$/;"	l
-f0101306	./obj/kern/kernel.asm	/^f0101306:	89 e5                	mov    %esp,%ebp$/;"	l
-f0101308	./obj/kern/kernel.asm	/^f0101308:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f010130b	./obj/kern/kernel.asm	/^f010130b:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
-f010130e	./obj/kern/kernel.asm	/^f010130e:	eb 05                	jmp    f0101315 <strchr+0x10>$/;"	l
-f0101310	./obj/kern/kernel.asm	/^f0101310:	38 ca                	cmp    %cl,%dl$/;"	l
-f0101312	./obj/kern/kernel.asm	/^f0101312:	74 0c                	je     f0101320 <strchr+0x1b>$/;"	l
-f0101314	./obj/kern/kernel.asm	/^f0101314:	40                   	inc    %eax$/;"	l
-f0101315	./obj/kern/kernel.asm	/^f0101315:	8a 10                	mov    (%eax),%dl$/;"	l
-f0101317	./obj/kern/kernel.asm	/^f0101317:	84 d2                	test   %dl,%dl$/;"	l
-f0101319	./obj/kern/kernel.asm	/^f0101319:	75 f5                	jne    f0101310 <strchr+0xb>$/;"	l
-f010131b	./obj/kern/kernel.asm	/^f010131b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0101320	./obj/kern/kernel.asm	/^f0101320:	5d                   	pop    %ebp$/;"	l
-f0101321	./obj/kern/kernel.asm	/^f0101321:	c3                   	ret    $/;"	l
-f0101322	./obj/kern/kernel.asm	/^f0101322 <strfind>:$/;"	l
-f0101322	./obj/kern/kernel.asm	/^f0101322:	55                   	push   %ebp$/;"	l
-f0101323	./obj/kern/kernel.asm	/^f0101323:	89 e5                	mov    %esp,%ebp$/;"	l
-f0101325	./obj/kern/kernel.asm	/^f0101325:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0101328	./obj/kern/kernel.asm	/^f0101328:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
-f010132b	./obj/kern/kernel.asm	/^f010132b:	eb 05                	jmp    f0101332 <strfind+0x10>$/;"	l
-f010132d	./obj/kern/kernel.asm	/^f010132d:	38 ca                	cmp    %cl,%dl$/;"	l
-f010132f	./obj/kern/kernel.asm	/^f010132f:	74 07                	je     f0101338 <strfind+0x16>$/;"	l
-f0101331	./obj/kern/kernel.asm	/^f0101331:	40                   	inc    %eax$/;"	l
-f0101332	./obj/kern/kernel.asm	/^f0101332:	8a 10                	mov    (%eax),%dl$/;"	l
-f0101334	./obj/kern/kernel.asm	/^f0101334:	84 d2                	test   %dl,%dl$/;"	l
-f0101336	./obj/kern/kernel.asm	/^f0101336:	75 f5                	jne    f010132d <strfind+0xb>$/;"	l
-f0101338	./obj/kern/kernel.asm	/^f0101338:	5d                   	pop    %ebp$/;"	l
-f0101339	./obj/kern/kernel.asm	/^f0101339:	c3                   	ret    $/;"	l
-f010133a	./obj/kern/kernel.asm	/^f010133a <memset>:$/;"	l
-f010133a	./obj/kern/kernel.asm	/^f010133a:	55                   	push   %ebp$/;"	l
-f010133b	./obj/kern/kernel.asm	/^f010133b:	89 e5                	mov    %esp,%ebp$/;"	l
-f010133d	./obj/kern/kernel.asm	/^f010133d:	57                   	push   %edi$/;"	l
-f010133e	./obj/kern/kernel.asm	/^f010133e:	56                   	push   %esi$/;"	l
-f010133f	./obj/kern/kernel.asm	/^f010133f:	53                   	push   %ebx$/;"	l
-f0101340	./obj/kern/kernel.asm	/^f0101340:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
-f0101343	./obj/kern/kernel.asm	/^f0101343:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f0101346	./obj/kern/kernel.asm	/^f0101346:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
-f0101349	./obj/kern/kernel.asm	/^f0101349:	85 c9                	test   %ecx,%ecx$/;"	l
-f010134b	./obj/kern/kernel.asm	/^f010134b:	74 30                	je     f010137d <memset+0x43>$/;"	l
-f010134d	./obj/kern/kernel.asm	/^f010134d:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
-f0101353	./obj/kern/kernel.asm	/^f0101353:	75 25                	jne    f010137a <memset+0x40>$/;"	l
-f0101355	./obj/kern/kernel.asm	/^f0101355:	f6 c1 03             	test   $0x3,%cl$/;"	l
-f0101358	./obj/kern/kernel.asm	/^f0101358:	75 20                	jne    f010137a <memset+0x40>$/;"	l
-f010135a	./obj/kern/kernel.asm	/^f010135a:	0f b6 d0             	movzbl %al,%edx$/;"	l
-f010135d	./obj/kern/kernel.asm	/^f010135d:	89 d3                	mov    %edx,%ebx$/;"	l
-f010135f	./obj/kern/kernel.asm	/^f010135f:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
-f0101362	./obj/kern/kernel.asm	/^f0101362:	89 d6                	mov    %edx,%esi$/;"	l
-f0101364	./obj/kern/kernel.asm	/^f0101364:	c1 e6 18             	shl    $0x18,%esi$/;"	l
-f0101367	./obj/kern/kernel.asm	/^f0101367:	89 d0                	mov    %edx,%eax$/;"	l
-f0101369	./obj/kern/kernel.asm	/^f0101369:	c1 e0 10             	shl    $0x10,%eax$/;"	l
-f010136c	./obj/kern/kernel.asm	/^f010136c:	09 f0                	or     %esi,%eax$/;"	l
-f010136e	./obj/kern/kernel.asm	/^f010136e:	09 d0                	or     %edx,%eax$/;"	l
-f0101370	./obj/kern/kernel.asm	/^f0101370:	09 d8                	or     %ebx,%eax$/;"	l
-f0101372	./obj/kern/kernel.asm	/^f0101372:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
-f0101375	./obj/kern/kernel.asm	/^f0101375:	fc                   	cld    $/;"	l
-f0101376	./obj/kern/kernel.asm	/^f0101376:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
-f0101378	./obj/kern/kernel.asm	/^f0101378:	eb 03                	jmp    f010137d <memset+0x43>$/;"	l
-f010137a	./obj/kern/kernel.asm	/^f010137a:	fc                   	cld    $/;"	l
-f010137b	./obj/kern/kernel.asm	/^f010137b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
-f010137d	./obj/kern/kernel.asm	/^f010137d:	89 f8                	mov    %edi,%eax$/;"	l
-f010137f	./obj/kern/kernel.asm	/^f010137f:	5b                   	pop    %ebx$/;"	l
-f0101380	./obj/kern/kernel.asm	/^f0101380:	5e                   	pop    %esi$/;"	l
-f0101381	./obj/kern/kernel.asm	/^f0101381:	5f                   	pop    %edi$/;"	l
-f0101382	./obj/kern/kernel.asm	/^f0101382:	5d                   	pop    %ebp$/;"	l
-f0101383	./obj/kern/kernel.asm	/^f0101383:	c3                   	ret    $/;"	l
-f0101384	./obj/kern/kernel.asm	/^f0101384 <memmove>:$/;"	l
-f0101384	./obj/kern/kernel.asm	/^f0101384:	55                   	push   %ebp$/;"	l
-f0101385	./obj/kern/kernel.asm	/^f0101385:	89 e5                	mov    %esp,%ebp$/;"	l
-f0101387	./obj/kern/kernel.asm	/^f0101387:	57                   	push   %edi$/;"	l
-f0101388	./obj/kern/kernel.asm	/^f0101388:	56                   	push   %esi$/;"	l
-f0101389	./obj/kern/kernel.asm	/^f0101389:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f010138c	./obj/kern/kernel.asm	/^f010138c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
-f010138f	./obj/kern/kernel.asm	/^f010138f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
-f0101392	./obj/kern/kernel.asm	/^f0101392:	39 c6                	cmp    %eax,%esi$/;"	l
-f0101394	./obj/kern/kernel.asm	/^f0101394:	73 34                	jae    f01013ca <memmove+0x46>$/;"	l
-f0101396	./obj/kern/kernel.asm	/^f0101396:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
-f0101399	./obj/kern/kernel.asm	/^f0101399:	39 d0                	cmp    %edx,%eax$/;"	l
-f010139b	./obj/kern/kernel.asm	/^f010139b:	73 2d                	jae    f01013ca <memmove+0x46>$/;"	l
-f010139d	./obj/kern/kernel.asm	/^f010139d:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
-f01013a0	./obj/kern/kernel.asm	/^f01013a0:	f6 c2 03             	test   $0x3,%dl$/;"	l
-f01013a3	./obj/kern/kernel.asm	/^f01013a3:	75 1b                	jne    f01013c0 <memmove+0x3c>$/;"	l
-f01013a5	./obj/kern/kernel.asm	/^f01013a5:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
-f01013ab	./obj/kern/kernel.asm	/^f01013ab:	75 13                	jne    f01013c0 <memmove+0x3c>$/;"	l
-f01013ad	./obj/kern/kernel.asm	/^f01013ad:	f6 c1 03             	test   $0x3,%cl$/;"	l
-f01013b0	./obj/kern/kernel.asm	/^f01013b0:	75 0e                	jne    f01013c0 <memmove+0x3c>$/;"	l
-f01013b2	./obj/kern/kernel.asm	/^f01013b2:	83 ef 04             	sub    $0x4,%edi$/;"	l
-f01013b5	./obj/kern/kernel.asm	/^f01013b5:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
-f01013b8	./obj/kern/kernel.asm	/^f01013b8:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
-f01013bb	./obj/kern/kernel.asm	/^f01013bb:	fd                   	std    $/;"	l
-f01013bc	./obj/kern/kernel.asm	/^f01013bc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
-f01013be	./obj/kern/kernel.asm	/^f01013be:	eb 07                	jmp    f01013c7 <memmove+0x43>$/;"	l
-f01013c0	./obj/kern/kernel.asm	/^f01013c0:	4f                   	dec    %edi$/;"	l
-f01013c1	./obj/kern/kernel.asm	/^f01013c1:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
-f01013c4	./obj/kern/kernel.asm	/^f01013c4:	fd                   	std    $/;"	l
-f01013c5	./obj/kern/kernel.asm	/^f01013c5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
-f01013c7	./obj/kern/kernel.asm	/^f01013c7:	fc                   	cld    $/;"	l
-f01013c8	./obj/kern/kernel.asm	/^f01013c8:	eb 20                	jmp    f01013ea <memmove+0x66>$/;"	l
-f01013ca	./obj/kern/kernel.asm	/^f01013ca:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
-f01013d0	./obj/kern/kernel.asm	/^f01013d0:	75 13                	jne    f01013e5 <memmove+0x61>$/;"	l
-f01013d2	./obj/kern/kernel.asm	/^f01013d2:	a8 03                	test   $0x3,%al$/;"	l
-f01013d4	./obj/kern/kernel.asm	/^f01013d4:	75 0f                	jne    f01013e5 <memmove+0x61>$/;"	l
-f01013d6	./obj/kern/kernel.asm	/^f01013d6:	f6 c1 03             	test   $0x3,%cl$/;"	l
-f01013d9	./obj/kern/kernel.asm	/^f01013d9:	75 0a                	jne    f01013e5 <memmove+0x61>$/;"	l
-f01013db	./obj/kern/kernel.asm	/^f01013db:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
-f01013de	./obj/kern/kernel.asm	/^f01013de:	89 c7                	mov    %eax,%edi$/;"	l
-f01013e0	./obj/kern/kernel.asm	/^f01013e0:	fc                   	cld    $/;"	l
-f01013e1	./obj/kern/kernel.asm	/^f01013e1:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
-f01013e3	./obj/kern/kernel.asm	/^f01013e3:	eb 05                	jmp    f01013ea <memmove+0x66>$/;"	l
-f01013e5	./obj/kern/kernel.asm	/^f01013e5:	89 c7                	mov    %eax,%edi$/;"	l
-f01013e7	./obj/kern/kernel.asm	/^f01013e7:	fc                   	cld    $/;"	l
-f01013e8	./obj/kern/kernel.asm	/^f01013e8:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
-f01013ea	./obj/kern/kernel.asm	/^f01013ea:	5e                   	pop    %esi$/;"	l
-f01013eb	./obj/kern/kernel.asm	/^f01013eb:	5f                   	pop    %edi$/;"	l
-f01013ec	./obj/kern/kernel.asm	/^f01013ec:	5d                   	pop    %ebp$/;"	l
-f01013ed	./obj/kern/kernel.asm	/^f01013ed:	c3                   	ret    $/;"	l
-f01013ee	./obj/kern/kernel.asm	/^f01013ee <memcpy>:$/;"	l
-f01013ee	./obj/kern/kernel.asm	/^f01013ee:	55                   	push   %ebp$/;"	l
-f01013ef	./obj/kern/kernel.asm	/^f01013ef:	89 e5                	mov    %esp,%ebp$/;"	l
-f01013f1	./obj/kern/kernel.asm	/^f01013f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
-f01013f4	./obj/kern/kernel.asm	/^f01013f4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
-f01013f7	./obj/kern/kernel.asm	/^f01013f7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
-f01013fb	./obj/kern/kernel.asm	/^f01013fb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
-f01013fe	./obj/kern/kernel.asm	/^f01013fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
-f0101402	./obj/kern/kernel.asm	/^f0101402:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f0101405	./obj/kern/kernel.asm	/^f0101405:	89 04 24             	mov    %eax,(%esp)$/;"	l
-f0101408	./obj/kern/kernel.asm	/^f0101408:	e8 77 ff ff ff       	call   f0101384 <memmove>$/;"	l
-f010140d	./obj/kern/kernel.asm	/^f010140d:	c9                   	leave  $/;"	l
-f010140e	./obj/kern/kernel.asm	/^f010140e:	c3                   	ret    $/;"	l
-f010140f	./obj/kern/kernel.asm	/^f010140f <memcmp>:$/;"	l
-f010140f	./obj/kern/kernel.asm	/^f010140f:	55                   	push   %ebp$/;"	l
-f0101410	./obj/kern/kernel.asm	/^f0101410:	89 e5                	mov    %esp,%ebp$/;"	l
-f0101412	./obj/kern/kernel.asm	/^f0101412:	57                   	push   %edi$/;"	l
-f0101413	./obj/kern/kernel.asm	/^f0101413:	56                   	push   %esi$/;"	l
-f0101414	./obj/kern/kernel.asm	/^f0101414:	53                   	push   %ebx$/;"	l
-f0101415	./obj/kern/kernel.asm	/^f0101415:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
-f0101418	./obj/kern/kernel.asm	/^f0101418:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
-f010141b	./obj/kern/kernel.asm	/^f010141b:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
-f010141e	./obj/kern/kernel.asm	/^f010141e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
-f0101423	./obj/kern/kernel.asm	/^f0101423:	eb 16                	jmp    f010143b <memcmp+0x2c>$/;"	l
-f0101425	./obj/kern/kernel.asm	/^f0101425:	8a 04 17             	mov    (%edi,%edx,1),%al$/;"	l
-f0101428	./obj/kern/kernel.asm	/^f0101428:	42                   	inc    %edx$/;"	l
-f0101429	./obj/kern/kernel.asm	/^f0101429:	8a 4c 16 ff          	mov    -0x1(%esi,%edx,1),%cl$/;"	l
-f010142d	./obj/kern/kernel.asm	/^f010142d:	38 c8                	cmp    %cl,%al$/;"	l
-f010142f	./obj/kern/kernel.asm	/^f010142f:	74 0a                	je     f010143b <memcmp+0x2c>$/;"	l
-f0101431	./obj/kern/kernel.asm	/^f0101431:	0f b6 c0             	movzbl %al,%eax$/;"	l
-f0101434	./obj/kern/kernel.asm	/^f0101434:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
-f0101437	./obj/kern/kernel.asm	/^f0101437:	29 c8                	sub    %ecx,%eax$/;"	l
-f0101439	./obj/kern/kernel.asm	/^f0101439:	eb 09                	jmp    f0101444 <memcmp+0x35>$/;"	l
-f010143b	./obj/kern/kernel.asm	/^f010143b:	39 da                	cmp    %ebx,%edx$/;"	l
-f010143d	./obj/kern/kernel.asm	/^f010143d:	75 e6                	jne    f0101425 <memcmp+0x16>$/;"	l
-f010143f	./obj/kern/kernel.asm	/^f010143f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f0101444	./obj/kern/kernel.asm	/^f0101444:	5b                   	pop    %ebx$/;"	l
-f0101445	./obj/kern/kernel.asm	/^f0101445:	5e                   	pop    %esi$/;"	l
-f0101446	./obj/kern/kernel.asm	/^f0101446:	5f                   	pop    %edi$/;"	l
-f0101447	./obj/kern/kernel.asm	/^f0101447:	5d                   	pop    %ebp$/;"	l
-f0101448	./obj/kern/kernel.asm	/^f0101448:	c3                   	ret    $/;"	l
-f0101449	./obj/kern/kernel.asm	/^f0101449 <memfind>:$/;"	l
-f0101449	./obj/kern/kernel.asm	/^f0101449:	55                   	push   %ebp$/;"	l
-f010144a	./obj/kern/kernel.asm	/^f010144a:	89 e5                	mov    %esp,%ebp$/;"	l
-f010144c	./obj/kern/kernel.asm	/^f010144c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
-f010144f	./obj/kern/kernel.asm	/^f010144f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
-f0101452	./obj/kern/kernel.asm	/^f0101452:	89 c2                	mov    %eax,%edx$/;"	l
-f0101454	./obj/kern/kernel.asm	/^f0101454:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
-f0101457	./obj/kern/kernel.asm	/^f0101457:	eb 05                	jmp    f010145e <memfind+0x15>$/;"	l
-f0101459	./obj/kern/kernel.asm	/^f0101459:	38 08                	cmp    %cl,(%eax)$/;"	l
-f010145b	./obj/kern/kernel.asm	/^f010145b:	74 05                	je     f0101462 <memfind+0x19>$/;"	l
-f010145d	./obj/kern/kernel.asm	/^f010145d:	40                   	inc    %eax$/;"	l
-f010145e	./obj/kern/kernel.asm	/^f010145e:	39 d0                	cmp    %edx,%eax$/;"	l
-f0101460	./obj/kern/kernel.asm	/^f0101460:	72 f7                	jb     f0101459 <memfind+0x10>$/;"	l
-f0101462	./obj/kern/kernel.asm	/^f0101462:	5d                   	pop    %ebp$/;"	l
-f0101463	./obj/kern/kernel.asm	/^f0101463:	c3                   	ret    $/;"	l
-f0101464	./obj/kern/kernel.asm	/^f0101464 <strtol>:$/;"	l
-f0101464	./obj/kern/kernel.asm	/^f0101464:	55                   	push   %ebp$/;"	l
-f0101465	./obj/kern/kernel.asm	/^f0101465:	89 e5                	mov    %esp,%ebp$/;"	l
-f0101467	./obj/kern/kernel.asm	/^f0101467:	57                   	push   %edi$/;"	l
-f0101468	./obj/kern/kernel.asm	/^f0101468:	56                   	push   %esi$/;"	l
-f0101469	./obj/kern/kernel.asm	/^f0101469:	53                   	push   %ebx$/;"	l
-f010146a	./obj/kern/kernel.asm	/^f010146a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
-f010146d	./obj/kern/kernel.asm	/^f010146d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
-f0101470	./obj/kern/kernel.asm	/^f0101470:	eb 01                	jmp    f0101473 <strtol+0xf>$/;"	l
-f0101472	./obj/kern/kernel.asm	/^f0101472:	42                   	inc    %edx$/;"	l
-f0101473	./obj/kern/kernel.asm	/^f0101473:	8a 02                	mov    (%edx),%al$/;"	l
-f0101475	./obj/kern/kernel.asm	/^f0101475:	3c 20                	cmp    $0x20,%al$/;"	l
-f0101477	./obj/kern/kernel.asm	/^f0101477:	74 f9                	je     f0101472 <strtol+0xe>$/;"	l
-f0101479	./obj/kern/kernel.asm	/^f0101479:	3c 09                	cmp    $0x9,%al$/;"	l
-f010147b	./obj/kern/kernel.asm	/^f010147b:	74 f5                	je     f0101472 <strtol+0xe>$/;"	l
-f010147d	./obj/kern/kernel.asm	/^f010147d:	3c 2b                	cmp    $0x2b,%al$/;"	l
-f010147f	./obj/kern/kernel.asm	/^f010147f:	75 08                	jne    f0101489 <strtol+0x25>$/;"	l
-f0101481	./obj/kern/kernel.asm	/^f0101481:	42                   	inc    %edx$/;"	l
-f0101482	./obj/kern/kernel.asm	/^f0101482:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
-f0101487	./obj/kern/kernel.asm	/^f0101487:	eb 13                	jmp    f010149c <strtol+0x38>$/;"	l
-f0101489	./obj/kern/kernel.asm	/^f0101489:	3c 2d                	cmp    $0x2d,%al$/;"	l
-f010148b	./obj/kern/kernel.asm	/^f010148b:	75 0a                	jne    f0101497 <strtol+0x33>$/;"	l
-f010148d	./obj/kern/kernel.asm	/^f010148d:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
-f0101490	./obj/kern/kernel.asm	/^f0101490:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
-f0101495	./obj/kern/kernel.asm	/^f0101495:	eb 05                	jmp    f010149c <strtol+0x38>$/;"	l
-f0101497	./obj/kern/kernel.asm	/^f0101497:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
-f010149c	./obj/kern/kernel.asm	/^f010149c:	85 db                	test   %ebx,%ebx$/;"	l
-f010149e	./obj/kern/kernel.asm	/^f010149e:	74 05                	je     f01014a5 <strtol+0x41>$/;"	l
-f01014a0	./obj/kern/kernel.asm	/^f01014a0:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
-f01014a3	./obj/kern/kernel.asm	/^f01014a3:	75 28                	jne    f01014cd <strtol+0x69>$/;"	l
-f01014a5	./obj/kern/kernel.asm	/^f01014a5:	8a 02                	mov    (%edx),%al$/;"	l
-f01014a7	./obj/kern/kernel.asm	/^f01014a7:	3c 30                	cmp    $0x30,%al$/;"	l
-f01014a9	./obj/kern/kernel.asm	/^f01014a9:	75 10                	jne    f01014bb <strtol+0x57>$/;"	l
-f01014ab	./obj/kern/kernel.asm	/^f01014ab:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
-f01014af	./obj/kern/kernel.asm	/^f01014af:	75 0a                	jne    f01014bb <strtol+0x57>$/;"	l
-f01014b1	./obj/kern/kernel.asm	/^f01014b1:	83 c2 02             	add    $0x2,%edx$/;"	l
-f01014b4	./obj/kern/kernel.asm	/^f01014b4:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
-f01014b9	./obj/kern/kernel.asm	/^f01014b9:	eb 12                	jmp    f01014cd <strtol+0x69>$/;"	l
-f01014bb	./obj/kern/kernel.asm	/^f01014bb:	85 db                	test   %ebx,%ebx$/;"	l
-f01014bd	./obj/kern/kernel.asm	/^f01014bd:	75 0e                	jne    f01014cd <strtol+0x69>$/;"	l
-f01014bf	./obj/kern/kernel.asm	/^f01014bf:	3c 30                	cmp    $0x30,%al$/;"	l
-f01014c1	./obj/kern/kernel.asm	/^f01014c1:	75 05                	jne    f01014c8 <strtol+0x64>$/;"	l
-f01014c3	./obj/kern/kernel.asm	/^f01014c3:	42                   	inc    %edx$/;"	l
-f01014c4	./obj/kern/kernel.asm	/^f01014c4:	b3 08                	mov    $0x8,%bl$/;"	l
-f01014c6	./obj/kern/kernel.asm	/^f01014c6:	eb 05                	jmp    f01014cd <strtol+0x69>$/;"	l
-f01014c8	./obj/kern/kernel.asm	/^f01014c8:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
-f01014cd	./obj/kern/kernel.asm	/^f01014cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
-f01014d2	./obj/kern/kernel.asm	/^f01014d2:	89 de                	mov    %ebx,%esi$/;"	l
-f01014d4	./obj/kern/kernel.asm	/^f01014d4:	8a 0a                	mov    (%edx),%cl$/;"	l
-f01014d6	./obj/kern/kernel.asm	/^f01014d6:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
-f01014d9	./obj/kern/kernel.asm	/^f01014d9:	80 fb 09             	cmp    $0x9,%bl$/;"	l
-f01014dc	./obj/kern/kernel.asm	/^f01014dc:	77 08                	ja     f01014e6 <strtol+0x82>$/;"	l
-f01014de	./obj/kern/kernel.asm	/^f01014de:	0f be c9             	movsbl %cl,%ecx$/;"	l
-f01014e1	./obj/kern/kernel.asm	/^f01014e1:	83 e9 30             	sub    $0x30,%ecx$/;"	l
-f01014e4	./obj/kern/kernel.asm	/^f01014e4:	eb 1e                	jmp    f0101504 <strtol+0xa0>$/;"	l
-f01014e6	./obj/kern/kernel.asm	/^f01014e6:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
-f01014e9	./obj/kern/kernel.asm	/^f01014e9:	80 fb 19             	cmp    $0x19,%bl$/;"	l
-f01014ec	./obj/kern/kernel.asm	/^f01014ec:	77 08                	ja     f01014f6 <strtol+0x92>$/;"	l
-f01014ee	./obj/kern/kernel.asm	/^f01014ee:	0f be c9             	movsbl %cl,%ecx$/;"	l
-f01014f1	./obj/kern/kernel.asm	/^f01014f1:	83 e9 57             	sub    $0x57,%ecx$/;"	l
-f01014f4	./obj/kern/kernel.asm	/^f01014f4:	eb 0e                	jmp    f0101504 <strtol+0xa0>$/;"	l
-f01014f6	./obj/kern/kernel.asm	/^f01014f6:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
-f01014f9	./obj/kern/kernel.asm	/^f01014f9:	80 fb 19             	cmp    $0x19,%bl$/;"	l
-f01014fc	./obj/kern/kernel.asm	/^f01014fc:	77 12                	ja     f0101510 <strtol+0xac>$/;"	l
-f01014fe	./obj/kern/kernel.asm	/^f01014fe:	0f be c9             	movsbl %cl,%ecx$/;"	l
-f0101501	./obj/kern/kernel.asm	/^f0101501:	83 e9 37             	sub    $0x37,%ecx$/;"	l
-f0101504	./obj/kern/kernel.asm	/^f0101504:	39 f1                	cmp    %esi,%ecx$/;"	l
-f0101506	./obj/kern/kernel.asm	/^f0101506:	7d 0c                	jge    f0101514 <strtol+0xb0>$/;"	l
-f0101508	./obj/kern/kernel.asm	/^f0101508:	42                   	inc    %edx$/;"	l
-f0101509	./obj/kern/kernel.asm	/^f0101509:	0f af c6             	imul   %esi,%eax$/;"	l
-f010150c	./obj/kern/kernel.asm	/^f010150c:	01 c8                	add    %ecx,%eax$/;"	l
-f010150e	./obj/kern/kernel.asm	/^f010150e:	eb c4                	jmp    f01014d4 <strtol+0x70>$/;"	l
-f0101510	./obj/kern/kernel.asm	/^f0101510:	89 c1                	mov    %eax,%ecx$/;"	l
-f0101512	./obj/kern/kernel.asm	/^f0101512:	eb 02                	jmp    f0101516 <strtol+0xb2>$/;"	l
-f0101514	./obj/kern/kernel.asm	/^f0101514:	89 c1                	mov    %eax,%ecx$/;"	l
-f0101516	./obj/kern/kernel.asm	/^f0101516:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
-f010151a	./obj/kern/kernel.asm	/^f010151a:	74 05                	je     f0101521 <strtol+0xbd>$/;"	l
-f010151c	./obj/kern/kernel.asm	/^f010151c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
-f010151f	./obj/kern/kernel.asm	/^f010151f:	89 13                	mov    %edx,(%ebx)$/;"	l
-f0101521	./obj/kern/kernel.asm	/^f0101521:	85 ff                	test   %edi,%edi$/;"	l
-f0101523	./obj/kern/kernel.asm	/^f0101523:	74 04                	je     f0101529 <strtol+0xc5>$/;"	l
-f0101525	./obj/kern/kernel.asm	/^f0101525:	89 c8                	mov    %ecx,%eax$/;"	l
-f0101527	./obj/kern/kernel.asm	/^f0101527:	f7 d8                	neg    %eax$/;"	l
-f0101529	./obj/kern/kernel.asm	/^f0101529:	5b                   	pop    %ebx$/;"	l
-f010152a	./obj/kern/kernel.asm	/^f010152a:	5e                   	pop    %esi$/;"	l
-f010152b	./obj/kern/kernel.asm	/^f010152b:	5f                   	pop    %edi$/;"	l
-f010152c	./obj/kern/kernel.asm	/^f010152c:	5d                   	pop    %ebp$/;"	l
-f010152d	./obj/kern/kernel.asm	/^f010152d:	c3                   	ret    $/;"	l
-f0101530	./obj/kern/kernel.asm	/^f0101530 <__udivdi3>:$/;"	l
-f0101530	./obj/kern/kernel.asm	/^f0101530:	55                   	push   %ebp$/;"	l
-f0101531	./obj/kern/kernel.asm	/^f0101531:	57                   	push   %edi$/;"	l
-f0101532	./obj/kern/kernel.asm	/^f0101532:	56                   	push   %esi$/;"	l
-f0101533	./obj/kern/kernel.asm	/^f0101533:	83 ec 10             	sub    $0x10,%esp$/;"	l
-f0101536	./obj/kern/kernel.asm	/^f0101536:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
-f010153a	./obj/kern/kernel.asm	/^f010153a:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
-f010153e	./obj/kern/kernel.asm	/^f010153e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
-f0101542	./obj/kern/kernel.asm	/^f0101542:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
-f0101546	./obj/kern/kernel.asm	/^f0101546:	89 cd                	mov    %ecx,%ebp$/;"	l
-f0101548	./obj/kern/kernel.asm	/^f0101548:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
-f010154c	./obj/kern/kernel.asm	/^f010154c:	85 c0                	test   %eax,%eax$/;"	l
-f010154e	./obj/kern/kernel.asm	/^f010154e:	75 2c                	jne    f010157c <__udivdi3+0x4c>$/;"	l
-f0101550	./obj/kern/kernel.asm	/^f0101550:	39 f9                	cmp    %edi,%ecx$/;"	l
-f0101552	./obj/kern/kernel.asm	/^f0101552:	77 68                	ja     f01015bc <__udivdi3+0x8c>$/;"	l
-f0101554	./obj/kern/kernel.asm	/^f0101554:	85 c9                	test   %ecx,%ecx$/;"	l
-f0101556	./obj/kern/kernel.asm	/^f0101556:	75 0b                	jne    f0101563 <__udivdi3+0x33>$/;"	l
-f0101558	./obj/kern/kernel.asm	/^f0101558:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
-f010155d	./obj/kern/kernel.asm	/^f010155d:	31 d2                	xor    %edx,%edx$/;"	l
-f010155f	./obj/kern/kernel.asm	/^f010155f:	f7 f1                	div    %ecx$/;"	l
-f0101561	./obj/kern/kernel.asm	/^f0101561:	89 c1                	mov    %eax,%ecx$/;"	l
-f0101563	./obj/kern/kernel.asm	/^f0101563:	31 d2                	xor    %edx,%edx$/;"	l
-f0101565	./obj/kern/kernel.asm	/^f0101565:	89 f8                	mov    %edi,%eax$/;"	l
-f0101567	./obj/kern/kernel.asm	/^f0101567:	f7 f1                	div    %ecx$/;"	l
-f0101569	./obj/kern/kernel.asm	/^f0101569:	89 c7                	mov    %eax,%edi$/;"	l
-f010156b	./obj/kern/kernel.asm	/^f010156b:	89 f0                	mov    %esi,%eax$/;"	l
-f010156d	./obj/kern/kernel.asm	/^f010156d:	f7 f1                	div    %ecx$/;"	l
-f010156f	./obj/kern/kernel.asm	/^f010156f:	89 c6                	mov    %eax,%esi$/;"	l
-f0101571	./obj/kern/kernel.asm	/^f0101571:	89 f0                	mov    %esi,%eax$/;"	l
-f0101573	./obj/kern/kernel.asm	/^f0101573:	89 fa                	mov    %edi,%edx$/;"	l
-f0101575	./obj/kern/kernel.asm	/^f0101575:	83 c4 10             	add    $0x10,%esp$/;"	l
-f0101578	./obj/kern/kernel.asm	/^f0101578:	5e                   	pop    %esi$/;"	l
-f0101579	./obj/kern/kernel.asm	/^f0101579:	5f                   	pop    %edi$/;"	l
-f010157a	./obj/kern/kernel.asm	/^f010157a:	5d                   	pop    %ebp$/;"	l
-f010157b	./obj/kern/kernel.asm	/^f010157b:	c3                   	ret    $/;"	l
-f010157c	./obj/kern/kernel.asm	/^f010157c:	39 f8                	cmp    %edi,%eax$/;"	l
-f010157e	./obj/kern/kernel.asm	/^f010157e:	77 2c                	ja     f01015ac <__udivdi3+0x7c>$/;"	l
-f0101580	./obj/kern/kernel.asm	/^f0101580:	0f bd f0             	bsr    %eax,%esi$/;"	l
-f0101583	./obj/kern/kernel.asm	/^f0101583:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
-f0101586	./obj/kern/kernel.asm	/^f0101586:	75 4c                	jne    f01015d4 <__udivdi3+0xa4>$/;"	l
-f0101588	./obj/kern/kernel.asm	/^f0101588:	39 f8                	cmp    %edi,%eax$/;"	l
-f010158a	./obj/kern/kernel.asm	/^f010158a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
-f010158f	./obj/kern/kernel.asm	/^f010158f:	72 0a                	jb     f010159b <__udivdi3+0x6b>$/;"	l
-f0101591	./obj/kern/kernel.asm	/^f0101591:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
-f0101595	./obj/kern/kernel.asm	/^f0101595:	0f 87 ad 00 00 00    	ja     f0101648 <__udivdi3+0x118>$/;"	l
-f010159b	./obj/kern/kernel.asm	/^f010159b:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
-f01015a0	./obj/kern/kernel.asm	/^f01015a0:	89 f0                	mov    %esi,%eax$/;"	l
-f01015a2	./obj/kern/kernel.asm	/^f01015a2:	89 fa                	mov    %edi,%edx$/;"	l
-f01015a4	./obj/kern/kernel.asm	/^f01015a4:	83 c4 10             	add    $0x10,%esp$/;"	l
-f01015a7	./obj/kern/kernel.asm	/^f01015a7:	5e                   	pop    %esi$/;"	l
-f01015a8	./obj/kern/kernel.asm	/^f01015a8:	5f                   	pop    %edi$/;"	l
-f01015a9	./obj/kern/kernel.asm	/^f01015a9:	5d                   	pop    %ebp$/;"	l
-f01015aa	./obj/kern/kernel.asm	/^f01015aa:	c3                   	ret    $/;"	l
-f01015ab	./obj/kern/kernel.asm	/^f01015ab:	90                   	nop$/;"	l
-f01015ac	./obj/kern/kernel.asm	/^f01015ac:	31 ff                	xor    %edi,%edi$/;"	l
-f01015ae	./obj/kern/kernel.asm	/^f01015ae:	31 f6                	xor    %esi,%esi$/;"	l
-f01015b0	./obj/kern/kernel.asm	/^f01015b0:	89 f0                	mov    %esi,%eax$/;"	l
-f01015b2	./obj/kern/kernel.asm	/^f01015b2:	89 fa                	mov    %edi,%edx$/;"	l
-f01015b4	./obj/kern/kernel.asm	/^f01015b4:	83 c4 10             	add    $0x10,%esp$/;"	l
-f01015b7	./obj/kern/kernel.asm	/^f01015b7:	5e                   	pop    %esi$/;"	l
-f01015b8	./obj/kern/kernel.asm	/^f01015b8:	5f                   	pop    %edi$/;"	l
-f01015b9	./obj/kern/kernel.asm	/^f01015b9:	5d                   	pop    %ebp$/;"	l
-f01015ba	./obj/kern/kernel.asm	/^f01015ba:	c3                   	ret    $/;"	l
-f01015bb	./obj/kern/kernel.asm	/^f01015bb:	90                   	nop$/;"	l
-f01015bc	./obj/kern/kernel.asm	/^f01015bc:	89 fa                	mov    %edi,%edx$/;"	l
-f01015be	./obj/kern/kernel.asm	/^f01015be:	89 f0                	mov    %esi,%eax$/;"	l
-f01015c0	./obj/kern/kernel.asm	/^f01015c0:	f7 f1                	div    %ecx$/;"	l
-f01015c2	./obj/kern/kernel.asm	/^f01015c2:	89 c6                	mov    %eax,%esi$/;"	l
-f01015c4	./obj/kern/kernel.asm	/^f01015c4:	31 ff                	xor    %edi,%edi$/;"	l
-f01015c6	./obj/kern/kernel.asm	/^f01015c6:	89 f0                	mov    %esi,%eax$/;"	l
-f01015c8	./obj/kern/kernel.asm	/^f01015c8:	89 fa                	mov    %edi,%edx$/;"	l
-f01015ca	./obj/kern/kernel.asm	/^f01015ca:	83 c4 10             	add    $0x10,%esp$/;"	l
-f01015cd	./obj/kern/kernel.asm	/^f01015cd:	5e                   	pop    %esi$/;"	l
-f01015ce	./obj/kern/kernel.asm	/^f01015ce:	5f                   	pop    %edi$/;"	l
-f01015cf	./obj/kern/kernel.asm	/^f01015cf:	5d                   	pop    %ebp$/;"	l
-f01015d0	./obj/kern/kernel.asm	/^f01015d0:	c3                   	ret    $/;"	l
-f01015d1	./obj/kern/kernel.asm	/^f01015d1:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
-f01015d4	./obj/kern/kernel.asm	/^f01015d4:	89 f1                	mov    %esi,%ecx$/;"	l
-f01015d6	./obj/kern/kernel.asm	/^f01015d6:	d3 e0                	shl    %cl,%eax$/;"	d
-f01015d8	./obj/kern/kernel.asm	/^f01015d8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
-f01015dc	./obj/kern/kernel.asm	/^f01015dc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
-f01015e1	./obj/kern/kernel.asm	/^f01015e1:	29 f0                	sub    %esi,%eax$/;"	l
-f01015e3	./obj/kern/kernel.asm	/^f01015e3:	89 ea                	mov    %ebp,%edx$/;"	l
-f01015e5	./obj/kern/kernel.asm	/^f01015e5:	88 c1                	mov    %al,%cl$/;"	l
-f01015e7	./obj/kern/kernel.asm	/^f01015e7:	d3 ea                	shr    %cl,%edx$/;"	d
-f01015e9	./obj/kern/kernel.asm	/^f01015e9:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
-f01015ed	./obj/kern/kernel.asm	/^f01015ed:	09 ca                	or     %ecx,%edx$/;"	l
-f01015ef	./obj/kern/kernel.asm	/^f01015ef:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
-f01015f3	./obj/kern/kernel.asm	/^f01015f3:	89 f1                	mov    %esi,%ecx$/;"	l
-f01015f5	./obj/kern/kernel.asm	/^f01015f5:	d3 e5                	shl    %cl,%ebp$/;"	d
-f01015f7	./obj/kern/kernel.asm	/^f01015f7:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
-f01015fb	./obj/kern/kernel.asm	/^f01015fb:	89 fd                	mov    %edi,%ebp$/;"	l
-f01015fd	./obj/kern/kernel.asm	/^f01015fd:	88 c1                	mov    %al,%cl$/;"	l
-f01015ff	./obj/kern/kernel.asm	/^f01015ff:	d3 ed                	shr    %cl,%ebp$/;"	d
-f0101601	./obj/kern/kernel.asm	/^f0101601:	89 fa                	mov    %edi,%edx$/;"	l
-f0101603	./obj/kern/kernel.asm	/^f0101603:	89 f1                	mov    %esi,%ecx$/;"	l
-f0101605	./obj/kern/kernel.asm	/^f0101605:	d3 e2                	shl    %cl,%edx$/;"	d
-f0101607	./obj/kern/kernel.asm	/^f0101607:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
-f010160b	./obj/kern/kernel.asm	/^f010160b:	88 c1                	mov    %al,%cl$/;"	l
-f010160d	./obj/kern/kernel.asm	/^f010160d:	d3 ef                	shr    %cl,%edi$/;"	d
-f010160f	./obj/kern/kernel.asm	/^f010160f:	09 d7                	or     %edx,%edi$/;"	l
-f0101611	./obj/kern/kernel.asm	/^f0101611:	89 f8                	mov    %edi,%eax$/;"	l
-f0101613	./obj/kern/kernel.asm	/^f0101613:	89 ea                	mov    %ebp,%edx$/;"	l
-f0101615	./obj/kern/kernel.asm	/^f0101615:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
-f0101619	./obj/kern/kernel.asm	/^f0101619:	89 d1                	mov    %edx,%ecx$/;"	l
-f010161b	./obj/kern/kernel.asm	/^f010161b:	89 c7                	mov    %eax,%edi$/;"	l
-f010161d	./obj/kern/kernel.asm	/^f010161d:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
-f0101621	./obj/kern/kernel.asm	/^f0101621:	39 d1                	cmp    %edx,%ecx$/;"	l
-f0101623	./obj/kern/kernel.asm	/^f0101623:	72 17                	jb     f010163c <__udivdi3+0x10c>$/;"	l
-f0101625	./obj/kern/kernel.asm	/^f0101625:	74 09                	je     f0101630 <__udivdi3+0x100>$/;"	l
-f0101627	./obj/kern/kernel.asm	/^f0101627:	89 fe                	mov    %edi,%esi$/;"	l
-f0101629	./obj/kern/kernel.asm	/^f0101629:	31 ff                	xor    %edi,%edi$/;"	l
-f010162b	./obj/kern/kernel.asm	/^f010162b:	e9 41 ff ff ff       	jmp    f0101571 <__udivdi3+0x41>$/;"	l
-f0101630	./obj/kern/kernel.asm	/^f0101630:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
-f0101634	./obj/kern/kernel.asm	/^f0101634:	89 f1                	mov    %esi,%ecx$/;"	l
-f0101636	./obj/kern/kernel.asm	/^f0101636:	d3 e2                	shl    %cl,%edx$/;"	d
-f0101638	./obj/kern/kernel.asm	/^f0101638:	39 c2                	cmp    %eax,%edx$/;"	l
-f010163a	./obj/kern/kernel.asm	/^f010163a:	73 eb                	jae    f0101627 <__udivdi3+0xf7>$/;"	l
-f010163c	./obj/kern/kernel.asm	/^f010163c:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
-f010163f	./obj/kern/kernel.asm	/^f010163f:	31 ff                	xor    %edi,%edi$/;"	l
-f0101641	./obj/kern/kernel.asm	/^f0101641:	e9 2b ff ff ff       	jmp    f0101571 <__udivdi3+0x41>$/;"	l
-f0101646	./obj/kern/kernel.asm	/^f0101646:	66 90                	xchg   %ax,%ax$/;"	l
-f0101648	./obj/kern/kernel.asm	/^f0101648:	31 f6                	xor    %esi,%esi$/;"	l
-f010164a	./obj/kern/kernel.asm	/^f010164a:	e9 22 ff ff ff       	jmp    f0101571 <__udivdi3+0x41>$/;"	l
-f0101650	./obj/kern/kernel.asm	/^f0101650 <__umoddi3>:$/;"	l
-f0101650	./obj/kern/kernel.asm	/^f0101650:	55                   	push   %ebp$/;"	l
-f0101651	./obj/kern/kernel.asm	/^f0101651:	57                   	push   %edi$/;"	l
-f0101652	./obj/kern/kernel.asm	/^f0101652:	56                   	push   %esi$/;"	l
-f0101653	./obj/kern/kernel.asm	/^f0101653:	83 ec 20             	sub    $0x20,%esp$/;"	l
-f0101656	./obj/kern/kernel.asm	/^f0101656:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
-f010165a	./obj/kern/kernel.asm	/^f010165a:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
-f010165e	./obj/kern/kernel.asm	/^f010165e:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
-f0101662	./obj/kern/kernel.asm	/^f0101662:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
-f0101666	./obj/kern/kernel.asm	/^f0101666:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
-f010166a	./obj/kern/kernel.asm	/^f010166a:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
-f010166e	./obj/kern/kernel.asm	/^f010166e:	89 c7                	mov    %eax,%edi$/;"	l
-f0101670	./obj/kern/kernel.asm	/^f0101670:	89 f2                	mov    %esi,%edx$/;"	l
-f0101672	./obj/kern/kernel.asm	/^f0101672:	85 ed                	test   %ebp,%ebp$/;"	l
-f0101674	./obj/kern/kernel.asm	/^f0101674:	75 16                	jne    f010168c <__umoddi3+0x3c>$/;"	l
-f0101676	./obj/kern/kernel.asm	/^f0101676:	39 f1                	cmp    %esi,%ecx$/;"	l
-f0101678	./obj/kern/kernel.asm	/^f0101678:	0f 86 a6 00 00 00    	jbe    f0101724 <__umoddi3+0xd4>$/;"	l
-f010167e	./obj/kern/kernel.asm	/^f010167e:	f7 f1                	div    %ecx$/;"	l
-f0101680	./obj/kern/kernel.asm	/^f0101680:	89 d0                	mov    %edx,%eax$/;"	l
-f0101682	./obj/kern/kernel.asm	/^f0101682:	31 d2                	xor    %edx,%edx$/;"	l
-f0101684	./obj/kern/kernel.asm	/^f0101684:	83 c4 20             	add    $0x20,%esp$/;"	l
-f0101687	./obj/kern/kernel.asm	/^f0101687:	5e                   	pop    %esi$/;"	l
-f0101688	./obj/kern/kernel.asm	/^f0101688:	5f                   	pop    %edi$/;"	l
-f0101689	./obj/kern/kernel.asm	/^f0101689:	5d                   	pop    %ebp$/;"	l
-f010168a	./obj/kern/kernel.asm	/^f010168a:	c3                   	ret    $/;"	l
-f010168b	./obj/kern/kernel.asm	/^f010168b:	90                   	nop$/;"	l
-f010168c	./obj/kern/kernel.asm	/^f010168c:	39 f5                	cmp    %esi,%ebp$/;"	l
-f010168e	./obj/kern/kernel.asm	/^f010168e:	0f 87 ac 00 00 00    	ja     f0101740 <__umoddi3+0xf0>$/;"	l
-f0101694	./obj/kern/kernel.asm	/^f0101694:	0f bd c5             	bsr    %ebp,%eax$/;"	l
-f0101697	./obj/kern/kernel.asm	/^f0101697:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
-f010169a	./obj/kern/kernel.asm	/^f010169a:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
-f010169e	./obj/kern/kernel.asm	/^f010169e:	0f 84 a8 00 00 00    	je     f010174c <__umoddi3+0xfc>$/;"	l
-f01016a4	./obj/kern/kernel.asm	/^f01016a4:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
-f01016a8	./obj/kern/kernel.asm	/^f01016a8:	d3 e5                	shl    %cl,%ebp$/;"	d
-f01016aa	./obj/kern/kernel.asm	/^f01016aa:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
-f01016af	./obj/kern/kernel.asm	/^f01016af:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
-f01016b3	./obj/kern/kernel.asm	/^f01016b3:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
-f01016b7	./obj/kern/kernel.asm	/^f01016b7:	89 f9                	mov    %edi,%ecx$/;"	l
-f01016b9	./obj/kern/kernel.asm	/^f01016b9:	d3 e8                	shr    %cl,%eax$/;"	d
-f01016bb	./obj/kern/kernel.asm	/^f01016bb:	09 e8                	or     %ebp,%eax$/;"	l
-f01016bd	./obj/kern/kernel.asm	/^f01016bd:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
-f01016c1	./obj/kern/kernel.asm	/^f01016c1:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
-f01016c5	./obj/kern/kernel.asm	/^f01016c5:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
-f01016c9	./obj/kern/kernel.asm	/^f01016c9:	d3 e0                	shl    %cl,%eax$/;"	d
-f01016cb	./obj/kern/kernel.asm	/^f01016cb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
-f01016cf	./obj/kern/kernel.asm	/^f01016cf:	89 f2                	mov    %esi,%edx$/;"	l
-f01016d1	./obj/kern/kernel.asm	/^f01016d1:	d3 e2                	shl    %cl,%edx$/;"	d
-f01016d3	./obj/kern/kernel.asm	/^f01016d3:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
-f01016d7	./obj/kern/kernel.asm	/^f01016d7:	d3 e0                	shl    %cl,%eax$/;"	d
-f01016d9	./obj/kern/kernel.asm	/^f01016d9:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
-f01016dd	./obj/kern/kernel.asm	/^f01016dd:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
-f01016e1	./obj/kern/kernel.asm	/^f01016e1:	89 f9                	mov    %edi,%ecx$/;"	l
-f01016e3	./obj/kern/kernel.asm	/^f01016e3:	d3 e8                	shr    %cl,%eax$/;"	d
-f01016e5	./obj/kern/kernel.asm	/^f01016e5:	09 d0                	or     %edx,%eax$/;"	l
-f01016e7	./obj/kern/kernel.asm	/^f01016e7:	d3 ee                	shr    %cl,%esi$/;"	d
-f01016e9	./obj/kern/kernel.asm	/^f01016e9:	89 f2                	mov    %esi,%edx$/;"	l
-f01016eb	./obj/kern/kernel.asm	/^f01016eb:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
-f01016ef	./obj/kern/kernel.asm	/^f01016ef:	89 d6                	mov    %edx,%esi$/;"	l
-f01016f1	./obj/kern/kernel.asm	/^f01016f1:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
-f01016f5	./obj/kern/kernel.asm	/^f01016f5:	89 c5                	mov    %eax,%ebp$/;"	l
-f01016f7	./obj/kern/kernel.asm	/^f01016f7:	89 d1                	mov    %edx,%ecx$/;"	l
-f01016f9	./obj/kern/kernel.asm	/^f01016f9:	39 d6                	cmp    %edx,%esi$/;"	l
-f01016fb	./obj/kern/kernel.asm	/^f01016fb:	72 67                	jb     f0101764 <__umoddi3+0x114>$/;"	l
-f01016fd	./obj/kern/kernel.asm	/^f01016fd:	74 75                	je     f0101774 <__umoddi3+0x124>$/;"	l
-f01016ff	./obj/kern/kernel.asm	/^f01016ff:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
-f0101703	./obj/kern/kernel.asm	/^f0101703:	29 e8                	sub    %ebp,%eax$/;"	l
-f0101705	./obj/kern/kernel.asm	/^f0101705:	19 ce                	sbb    %ecx,%esi$/;"	l
-f0101707	./obj/kern/kernel.asm	/^f0101707:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
-f010170b	./obj/kern/kernel.asm	/^f010170b:	d3 e8                	shr    %cl,%eax$/;"	d
-f010170d	./obj/kern/kernel.asm	/^f010170d:	89 f2                	mov    %esi,%edx$/;"	l
-f010170f	./obj/kern/kernel.asm	/^f010170f:	89 f9                	mov    %edi,%ecx$/;"	l
-f0101711	./obj/kern/kernel.asm	/^f0101711:	d3 e2                	shl    %cl,%edx$/;"	d
-f0101713	./obj/kern/kernel.asm	/^f0101713:	09 d0                	or     %edx,%eax$/;"	l
-f0101715	./obj/kern/kernel.asm	/^f0101715:	89 f2                	mov    %esi,%edx$/;"	l
-f0101717	./obj/kern/kernel.asm	/^f0101717:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
-f010171b	./obj/kern/kernel.asm	/^f010171b:	d3 ea                	shr    %cl,%edx$/;"	d
-f010171d	./obj/kern/kernel.asm	/^f010171d:	83 c4 20             	add    $0x20,%esp$/;"	l
-f0101720	./obj/kern/kernel.asm	/^f0101720:	5e                   	pop    %esi$/;"	l
-f0101721	./obj/kern/kernel.asm	/^f0101721:	5f                   	pop    %edi$/;"	l
-f0101722	./obj/kern/kernel.asm	/^f0101722:	5d                   	pop    %ebp$/;"	l
-f0101723	./obj/kern/kernel.asm	/^f0101723:	c3                   	ret    $/;"	l
-f0101724	./obj/kern/kernel.asm	/^f0101724:	85 c9                	test   %ecx,%ecx$/;"	l
-f0101726	./obj/kern/kernel.asm	/^f0101726:	75 0b                	jne    f0101733 <__umoddi3+0xe3>$/;"	l
-f0101728	./obj/kern/kernel.asm	/^f0101728:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
-f010172d	./obj/kern/kernel.asm	/^f010172d:	31 d2                	xor    %edx,%edx$/;"	l
-f010172f	./obj/kern/kernel.asm	/^f010172f:	f7 f1                	div    %ecx$/;"	l
-f0101731	./obj/kern/kernel.asm	/^f0101731:	89 c1                	mov    %eax,%ecx$/;"	l
-f0101733	./obj/kern/kernel.asm	/^f0101733:	89 f0                	mov    %esi,%eax$/;"	l
-f0101735	./obj/kern/kernel.asm	/^f0101735:	31 d2                	xor    %edx,%edx$/;"	l
-f0101737	./obj/kern/kernel.asm	/^f0101737:	f7 f1                	div    %ecx$/;"	l
-f0101739	./obj/kern/kernel.asm	/^f0101739:	89 f8                	mov    %edi,%eax$/;"	l
-f010173b	./obj/kern/kernel.asm	/^f010173b:	e9 3e ff ff ff       	jmp    f010167e <__umoddi3+0x2e>$/;"	l
-f0101740	./obj/kern/kernel.asm	/^f0101740:	89 f2                	mov    %esi,%edx$/;"	l
-f0101742	./obj/kern/kernel.asm	/^f0101742:	83 c4 20             	add    $0x20,%esp$/;"	l
-f0101745	./obj/kern/kernel.asm	/^f0101745:	5e                   	pop    %esi$/;"	l
-f0101746	./obj/kern/kernel.asm	/^f0101746:	5f                   	pop    %edi$/;"	l
-f0101747	./obj/kern/kernel.asm	/^f0101747:	5d                   	pop    %ebp$/;"	l
-f0101748	./obj/kern/kernel.asm	/^f0101748:	c3                   	ret    $/;"	l
-f0101749	./obj/kern/kernel.asm	/^f0101749:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
-f010174c	./obj/kern/kernel.asm	/^f010174c:	39 f5                	cmp    %esi,%ebp$/;"	l
-f010174e	./obj/kern/kernel.asm	/^f010174e:	72 04                	jb     f0101754 <__umoddi3+0x104>$/;"	l
-f0101750	./obj/kern/kernel.asm	/^f0101750:	39 f9                	cmp    %edi,%ecx$/;"	l
-f0101752	./obj/kern/kernel.asm	/^f0101752:	77 06                	ja     f010175a <__umoddi3+0x10a>$/;"	l
-f0101754	./obj/kern/kernel.asm	/^f0101754:	89 f2                	mov    %esi,%edx$/;"	l
-f0101756	./obj/kern/kernel.asm	/^f0101756:	29 cf                	sub    %ecx,%edi$/;"	l
-f0101758	./obj/kern/kernel.asm	/^f0101758:	19 ea                	sbb    %ebp,%edx$/;"	l
-f010175a	./obj/kern/kernel.asm	/^f010175a:	89 f8                	mov    %edi,%eax$/;"	l
-f010175c	./obj/kern/kernel.asm	/^f010175c:	83 c4 20             	add    $0x20,%esp$/;"	l
-f010175f	./obj/kern/kernel.asm	/^f010175f:	5e                   	pop    %esi$/;"	l
-f0101760	./obj/kern/kernel.asm	/^f0101760:	5f                   	pop    %edi$/;"	l
-f0101761	./obj/kern/kernel.asm	/^f0101761:	5d                   	pop    %ebp$/;"	l
-f0101762	./obj/kern/kernel.asm	/^f0101762:	c3                   	ret    $/;"	l
-f0101763	./obj/kern/kernel.asm	/^f0101763:	90                   	nop$/;"	l
-f0101764	./obj/kern/kernel.asm	/^f0101764:	89 d1                	mov    %edx,%ecx$/;"	l
-f0101766	./obj/kern/kernel.asm	/^f0101766:	89 c5                	mov    %eax,%ebp$/;"	l
-f0101768	./obj/kern/kernel.asm	/^f0101768:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
-f010176c	./obj/kern/kernel.asm	/^f010176c:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
-f0101770	./obj/kern/kernel.asm	/^f0101770:	eb 8d                	jmp    f01016ff <__umoddi3+0xaf>$/;"	l
-f0101772	./obj/kern/kernel.asm	/^f0101772:	66 90                	xchg   %ax,%ax$/;"	l
-f0101774	./obj/kern/kernel.asm	/^f0101774:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
-f0101778	./obj/kern/kernel.asm	/^f0101778:	72 ea                	jb     f0101764 <__umoddi3+0x114>$/;"	l
-f010177a	./obj/kern/kernel.asm	/^f010177a:	89 f1                	mov    %esi,%ecx$/;"	l
-f010177c	./obj/kern/kernel.asm	/^f010177c:	eb 81                	jmp    f01016ff <__umoddi3+0xaf>$/;"	l
-false	./inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
-fileno	./gradelib.py	/^    def fileno(self):$/;"	f
-fileno	./gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
-func	./kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
-gd_args	./inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
-gd_dpl	./inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
-gd_off_15_0	./inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
-gd_off_31_16	./inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
-gd_p	./inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
-gd_rsv1	./inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
-gd_s	./inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
-gd_sel	./inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
-gd_type	./inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
-gdt	./boot/boot.S	/^gdt:$/;"	l
-gdtdesc	./boot/boot.S	/^gdtdesc:$/;"	l
-get_current_test	./gradelib.py	/^def get_current_test():$/;"	f
-get_gdb_port	./gradelib.py	/^    def get_gdb_port():$/;"	f
-getchar	./kern/console.c	/^getchar(void)$/;"	f
-getint	./lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
-getuint	./lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
-handle_output	./gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
-handle_read	./gradelib.py	/^    def handle_read(self):$/;"	f
-handle_read	./gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
-i	./obj/kern/kernel.asm	/^	i = 0;$/;"	d
-i386_init	./kern/init.c	/^i386_init(void)$/;"	f
-inb	./inc/x86.h	/^inb(int port)$/;"	f
-inl	./inc/x86.h	/^inl(int port)$/;"	f
-insb	./inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
-insl	./inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
-insw	./inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
-int	./obj/kern/kernel.asm	/^int$/;"	l
-int16_t	./inc/types.h	/^typedef short int16_t;$/;"	t
-int32_t	./inc/types.h	/^typedef int int32_t;$/;"	t
-int64_t	./inc/types.h	/^typedef long long int64_t;$/;"	t
-int8_t	./inc/types.h	/^typedef __signed char int8_t;$/;"	t
-intptr_t	./inc/types.h	/^typedef int32_t intptr_t;$/;"	t
-invlpg	./inc/x86.h	/^invlpg(void *addr)$/;"	f
-inw	./inc/x86.h	/^inw(int port)$/;"	f
-iscons	./kern/console.c	/^iscons(int fdnum)$/;"	f
-kbd_init	./kern/console.c	/^kbd_init(void)$/;"	f	file:
-kbd_intr	./kern/console.c	/^kbd_intr(void)$/;"	f
-kbd_proc_data	./kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
-kill	./gradelib.py	/^    def kill(self):$/;"	f
-l	./obj/kern/kernel.asm	/^			l = m;$/;"	d
-l	./obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
-lcr0	./inc/x86.h	/^lcr0(uint32_t val)$/;"	f
-lcr3	./inc/x86.h	/^lcr3(uint32_t val)$/;"	f
-lcr4	./inc/x86.h	/^lcr4(uint32_t val)$/;"	f
-lfile	./obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
-lflag	./obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
-lfun	./obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
-lgdt	./inc/x86.h	/^lgdt(void *p)$/;"	f
-lidt	./inc/x86.h	/^lidt(void *p)$/;"	f
-lldt	./inc/x86.h	/^lldt(uint16_t sel)$/;"	f
-lline	./obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
-lline	./obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
-long	./obj/kern/kernel.asm	/^long$/;"	l
-lpt_putc	./kern/console.c	/^lpt_putc(int c)$/;"	f	file:
-ltr	./inc/x86.h	/^ltr(uint16_t sel)$/;"	f
-make	./gradelib.py	/^def make(*target):$/;"	f
-match	./gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
-maybe_unlink	./gradelib.py	/^def maybe_unlink(*paths):$/;"	f
-memcmp	./lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
-memcpy	./lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
-memfind	./lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
-memmove	./lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
-memset	./lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
-mon_backtrace	./kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
-mon_help	./kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
-mon_kerninfo	./kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
-monitor	./kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
-n0	./obj/kern/kernel.asm	/^	      n0 = n0 << bm;$/;"	d
-n0	./obj/kern/kernel.asm	/^  n0 = nn.s.low;$/;"	d
-n1	./obj/kern/kernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
-n1	./obj/kern/kernel.asm	/^  n1 = nn.s.high;$/;"	d
-n2	./obj/kern/kernel.asm	/^	      n2 = n1 >> b;$/;"	d
-n_desc	./inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
-n_other	./inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
-n_strx	./inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
-n_type	./inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
-n_value	./inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
-name	./kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
-normalmap	./kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
-num	./obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
-num	./obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
-num	./obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
-num	./obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
-number	./obj/kern/kernel.asm	/^		number:$/;"	l
-off_t	./inc/types.h	/^typedef int32_t off_t;$/;"	t
-offset	./obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
-offsetof	./inc/types.h	/^#define offsetof(/;"	d
-os	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-outb	./inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
-outl	./inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
-outsb	./inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
-outsl	./inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
-outsw	./inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
-outw	./inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
-p	./obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
-p_align	./inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
-p_filesz	./inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
-p_flags	./inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
-p_memsz	./inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
-p_offset	./inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
-p_pa	./inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
-p_type	./inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
-p_va	./inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
-padc	./obj/kern/kernel.asm	/^			padc = '-';$/;"	d
-padc	./obj/kern/kernel.asm	/^			padc = '0';$/;"	d
-panic	./inc/assert.h	/^#define panic(/;"	d
-panicstr	./kern/init.c	/^const char *panicstr;$/;"	v
-panicstr	./obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
-pd_base	./inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
-pd_lim	./inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
-pde_t	./inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
-ph	./obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
-physaddr_t	./inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
-pos	./obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
-post_make	./gradelib.py	/^def post_make():$/;"	f
-ppn_t	./inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
-pre_make	./gradelib.py	/^def pre_make():$/;"	f
-precision	./obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
-precision	./obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
-precision	./obj/kern/kernel.asm	/^		precision = -1;$/;"	d
-print_function	./gradelib.py	/^from __future__ import print_function$/;"	i
-printfmt	./lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
-printnum	./lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
-process_precision	./obj/kern/kernel.asm	/^		process_precision:$/;"	l
-protcseg	./boot/boot.S	/^protcseg:$/;"	l
-protcseg	./obj/boot/boot.asm	/^protcseg:$/;"	l
-pte_t	./inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
-putch	./kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
-q0	./obj/kern/kernel.asm	/^		  q0 = 1;$/;"	d
-q1	./obj/kern/kernel.asm	/^	      q1 = 0;$/;"	d
-quote	./gradelib.py	/^    from pipes import quote$/;"	i
-r	./grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
-r	./obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
-rc	./obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
-rcr0	./inc/x86.h	/^rcr0(void)$/;"	f
-rcr2	./inc/x86.h	/^rcr2(void)$/;"	f
-rcr3	./inc/x86.h	/^rcr3(void)$/;"	f
-rcr4	./inc/x86.h	/^rcr4(void)$/;"	f
-re	./grade-lab1	/^import re$/;"	i
-re	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-read_ebp	./inc/x86.h	/^read_ebp(void)$/;"	f
-read_eflags	./inc/x86.h	/^read_eflags(void)$/;"	f
-read_esp	./inc/x86.h	/^read_esp(void)$/;"	f
-read_tsc	./inc/x86.h	/^read_tsc(void)$/;"	f
-readdeps	./mergedep.pl	/^sub readdeps {$/;"	s
-readline	./lib/readline.c	/^readline(const char *prompt)$/;"	f
-readsect	./boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
-readseg	./boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
-register_test	./gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
-relocated	./kern/entry.S	/^relocated:$/;"	l
-relocated	./obj/kern/kernel.asm	/^relocated:$/;"	l
-reset_fs	./gradelib.py	/^def reset_fs():$/;"	f
-reswitch	./obj/kern/kernel.asm	/^	reswitch:$/;"	l
-ret	./obj/kern/kernel.asm	/^	ret = dst;$/;"	d
-rfile	./obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
-rfun	./obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
-rline	./obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
-rline	./obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
-rpos	./kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon3	file:
-run_qemu	./gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
-run_qemu_kw	./gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
-run_test	./gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
-run_tests	./gradelib.py	/^def run_tests():$/;"	f
-runcmd	./kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
-s	./obj/kern/kernel.asm	/^	s = src;$/;"	d
-save	./gradelib.py	/^def save(path):$/;"	f
-save_on_finish	./gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
-sd_avl	./inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
-sd_base_15_0	./inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
-sd_base_23_16	./inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
-sd_base_31_24	./inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
-sd_db	./inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
-sd_dpl	./inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
-sd_g	./inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
-sd_lim_15_0	./inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
-sd_lim_19_16	./inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
-sd_p	./inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
-sd_rsv1	./inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
-sd_s	./inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
-sd_type	./inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
-select	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-serial_exists	./kern/console.c	/^static bool serial_exists;$/;"	v	file:
-serial_exists	./obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
-serial_init	./kern/console.c	/^serial_init(void)$/;"	f	file:
-serial_intr	./kern/console.c	/^serial_intr(void)$/;"	f
-serial_proc_data	./kern/console.c	/^serial_proc_data(void)$/;"	f	file:
-serial_putc	./kern/console.c	/^serial_putc(int c)$/;"	f	file:
-setup_breakpoint	./gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
-setup_call_on_line	./gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
-setup_save	./gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
-sh_addr	./inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
-sh_addralign	./inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
-sh_entsize	./inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
-sh_flags	./inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
-sh_info	./inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
-sh_link	./inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
-sh_name	./inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
-sh_offset	./inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
-sh_size	./inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
-sh_type	./inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
-shiftcode	./kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
-shiftmap	./kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
-show_command	./gradelib.py	/^def show_command(cmd):$/;"	f
-show_part	./gradelib.py	/^    def show_part():$/;"	f	function:end_part
-shutil	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-size_t	./inc/types.h	/^typedef uint32_t size_t;$/;"	t
-size_t	./obj/kern/kernel.asm	/^size_t$/;"	l
-snprintf	./lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
-socket	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-spin	./boot/boot.S	/^spin:$/;"	l
-spin	./kern/entry.S	/^spin:	jmp	spin$/;"	l
-spin	./obj/boot/boot.asm	/^spin:$/;"	l
-spin	./obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
-sprintbuf	./lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
-sprintputch	./lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
-ssize_t	./inc/types.h	/^typedef int32_t ssize_t;$/;"	t
-stab_binsearch	./kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
-stab_end	./obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
-stabstr	./obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
-stabstr_end	./obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
-start	./boot/boot.S	/^start:$/;"	l
-start	./obj/boot/boot.asm	/^start:$/;"	l
-static	./obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
-static	./obj/boot/boot.asm	/^static __inline void$/;"	l
-static	./obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
-static	./obj/kern/kernel.asm	/^static __inline void$/;"	l
-static	./obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
-static	./obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
-static	./obj/kern/kernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
-static	./obj/kern/kernel.asm	/^static int$/;"	l
-static	./obj/kern/kernel.asm	/^static long long$/;"	l
-static	./obj/kern/kernel.asm	/^static unsigned long long$/;"	l
-static	./obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
-static	./obj/kern/kernel.asm	/^static void$/;"	l
-static_assert	./inc/assert.h	/^#define static_assert(/;"	d
-stop	./gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
-stop_breakpoint	./gradelib.py	/^def stop_breakpoint(addr):$/;"	f
-stop_on_line	./gradelib.py	/^def stop_on_line(regexp):$/;"	f
-str1	./user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
-str2	./user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
-strcat	./lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
-strchr	./lib/string.c	/^strchr(const char *s, char c)$/;"	f
-strcmp	./lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
-strcpy	./lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
-strfind	./lib/string.c	/^strfind(const char *s, char c)$/;"	f
-strlcpy	./lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
-strlen	./lib/string.c	/^strlen(const char *s)$/;"	f
-strncmp	./lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
-strncpy	./lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
-strnlen	./lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
-strtol	./lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
-subprocess	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-sys	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-test	./gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
-test_backtrace	./kern/init.c	/^test_backtrace(int x)$/;"	f
-test_backtrace_arguments	./grade-lab1	/^def test_backtrace_arguments():$/;"	f
-test_backtrace_count	./grade-lab1	/^def test_backtrace_count():$/;"	f
-test_backtrace_lines	./grade-lab1	/^def test_backtrace_lines():$/;"	f
-test_backtrace_symbols	./grade-lab1	/^def test_backtrace_symbols():$/;"	f
-test_jos	./grade-lab1	/^def test_jos():$/;"	f
-test_printf	./grade-lab1	/^def test_printf():$/;"	f
-time	./gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
-tlbflush	./inc/x86.h	/^tlbflush(void)$/;"	f
-togglecode	./kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
-true	./inc/types.h	/^enum { false, true };$/;"	e	enum:__anon2
-ts_cr3	./inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
-ts_cs	./inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
-ts_ds	./inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
-ts_eax	./inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
-ts_ebp	./inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
-ts_ebx	./inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
-ts_ecx	./inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
-ts_edi	./inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
-ts_edx	./inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
-ts_eflags	./inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
-ts_eip	./inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
-ts_es	./inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
-ts_esi	./inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
-ts_esp	./inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
-ts_esp0	./inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
-ts_esp1	./inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
-ts_esp2	./inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
-ts_fs	./inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
-ts_gs	./inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
-ts_iomb	./inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
-ts_ldt	./inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
-ts_link	./inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
-ts_padding1	./inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
-ts_padding10	./inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
-ts_padding2	./inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
-ts_padding3	./inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
-ts_padding4	./inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
-ts_padding5	./inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
-ts_padding6	./inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
-ts_padding7	./inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
-ts_padding8	./inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
-ts_padding9	./inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
-ts_ss	./inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
-ts_ss0	./inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
-ts_ss1	./inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
-ts_ss2	./inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
-ts_t	./inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
-uint16_t	./inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
-uint32_t	./inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
-uint64_t	./inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
-uint8_t	./inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
-uintptr_t	./inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
-umain	./user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
-user_test	./gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
-va_arg	./inc/stdarg.h	/^#define va_arg(/;"	d
-va_end	./inc/stdarg.h	/^#define va_end(/;"	d
-va_list	./inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
-va_start	./inc/stdarg.h	/^#define va_start(/;"	d
-vcprintf	./kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
-void	./obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
-void	./obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
-void	./obj/boot/boot.asm	/^void$/;"	l
-void	./obj/kern/kernel.asm	/^void *$/;"	l
-void	./obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
-void	./obj/kern/kernel.asm	/^void$/;"	l
-vprintfmt	./lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
-vsnprintf	./lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
-wait	./gradelib.py	/^    def wait(self):$/;"	f
-waitdisk	./boot/main.c	/^waitdisk(void)$/;"	f
-warn	./inc/assert.h	/^#define warn(/;"	d
-was	./obj/kern/kernel.asm	/^	was = *cp;$/;"	d
-width	./obj/kern/kernel.asm	/^				width = 0;$/;"	d
-width	./obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
-width	./obj/kern/kernel.asm	/^		width = -1;$/;"	d
-wpos	./kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon3	file:
-write_eflags	./inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
-xchg	./inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
+-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
+ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon6
+ALT	kern/console.c	/^#define ALT	/;"	d	file:
+AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
+ARRAYSIZE	user/testbss.c	/^#define ARRAYSIZE /;"	d	file:
+AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
+ASM	lib/string.c	/^#define ASM /;"	d	file:
+ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
+ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
+BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
+BUFLEN	lib/readline.c	/^#define BUFLEN /;"	d	file:
+BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
+C	kern/console.c	/^#define C(/;"	d	file:
+CAPSLOCK	kern/console.c	/^#define CAPSLOCK	/;"	d	file:
+CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
+CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
+CGA_BASE	kern/console.h	/^#define CGA_BASE	/;"	d
+CGA_BUF	kern/console.h	/^#define CGA_BUF	/;"	d
+CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
+CMDBUF_SIZE	kern/monitor.c	/^#define CMDBUF_SIZE	/;"	d	file:
+CMDBYTE	inc/kbdreg.h	/^#define	CMDBYTE	/;"	d
+COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
+COM1	kern/console.c	/^#define COM1	/;"	d	file:
+COM_DLL	kern/console.c	/^#define COM_DLL	/;"	d	file:
+COM_DLM	kern/console.c	/^#define COM_DLM	/;"	d	file:
+COM_FCR	kern/console.c	/^#define COM_FCR	/;"	d	file:
+COM_IER	kern/console.c	/^#define COM_IER	/;"	d	file:
+COM_IER_RDI	kern/console.c	/^#define   COM_IER_RDI	/;"	d	file:
+COM_IIR	kern/console.c	/^#define COM_IIR	/;"	d	file:
+COM_LCR	kern/console.c	/^#define COM_LCR	/;"	d	file:
+COM_LCR_DLAB	kern/console.c	/^#define	  COM_LCR_DLAB	/;"	d	file:
+COM_LCR_WLEN8	kern/console.c	/^#define	  COM_LCR_WLEN8	/;"	d	file:
+COM_LSR	kern/console.c	/^#define COM_LSR	/;"	d	file:
+COM_LSR_DATA	kern/console.c	/^#define   COM_LSR_DATA	/;"	d	file:
+COM_LSR_TSRE	kern/console.c	/^#define   COM_LSR_TSRE	/;"	d	file:
+COM_LSR_TXRDY	kern/console.c	/^#define   COM_LSR_TXRDY	/;"	d	file:
+COM_MCR	kern/console.c	/^#define COM_MCR	/;"	d	file:
+COM_MCR_DTR	kern/console.c	/^#define	  COM_MCR_DTR	/;"	d	file:
+COM_MCR_OUT2	kern/console.c	/^#define	  COM_MCR_OUT2	/;"	d	file:
+COM_MCR_RTS	kern/console.c	/^#define	  COM_MCR_RTS	/;"	d	file:
+COM_RX	kern/console.c	/^#define COM_RX	/;"	d	file:
+COM_TX	kern/console.c	/^#define COM_TX	/;"	d	file:
+CONSBUFSIZE	kern/console.c	/^#define CONSBUFSIZE /;"	d	file:
+CR0_AM	inc/mmu.h	/^#define CR0_AM	/;"	d
+CR0_CD	inc/mmu.h	/^#define CR0_CD	/;"	d
+CR0_EM	inc/mmu.h	/^#define CR0_EM	/;"	d
+CR0_ET	inc/mmu.h	/^#define CR0_ET	/;"	d
+CR0_MP	inc/mmu.h	/^#define CR0_MP	/;"	d
+CR0_NE	inc/mmu.h	/^#define CR0_NE	/;"	d
+CR0_NW	inc/mmu.h	/^#define CR0_NW	/;"	d
+CR0_PE	inc/mmu.h	/^#define CR0_PE	/;"	d
+CR0_PG	inc/mmu.h	/^#define CR0_PG	/;"	d
+CR0_TS	inc/mmu.h	/^#define CR0_TS	/;"	d
+CR0_WP	inc/mmu.h	/^#define CR0_WP	/;"	d
+CR4_DE	inc/mmu.h	/^#define CR4_DE	/;"	d
+CR4_MCE	inc/mmu.h	/^#define CR4_MCE	/;"	d
+CR4_PCE	inc/mmu.h	/^#define CR4_PCE	/;"	d
+CR4_PSE	inc/mmu.h	/^#define CR4_PSE	/;"	d
+CR4_PVI	inc/mmu.h	/^#define CR4_PVI	/;"	d
+CR4_TSD	inc/mmu.h	/^#define CR4_TSD	/;"	d
+CR4_VME	inc/mmu.h	/^#define CR4_VME	/;"	d
+CRT_COLS	kern/console.h	/^#define CRT_COLS	/;"	d
+CRT_ROWS	kern/console.h	/^#define CRT_ROWS	/;"	d
+CRT_SIZE	kern/console.h	/^#define CRT_SIZE	/;"	d
+CTL	kern/console.c	/^#define CTL	/;"	d	file:
+CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
+Command	kern/monitor.c	/^struct Command {$/;"	s	file:
+Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
+Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
+E0ESC	kern/console.c	/^#define E0ESC	/;"	d	file:
+ELFHDR	boot/main.c	/^#define ELFHDR	/;"	d	file:
+ELF_MAGIC	inc/elf.h	/^#define ELF_MAGIC /;"	d
+ELF_PROG_FLAG_EXEC	inc/elf.h	/^#define ELF_PROG_FLAG_EXEC	/;"	d
+ELF_PROG_FLAG_READ	inc/elf.h	/^#define ELF_PROG_FLAG_READ	/;"	d
+ELF_PROG_FLAG_WRITE	inc/elf.h	/^#define ELF_PROG_FLAG_WRITE	/;"	d
+ELF_PROG_LOAD	inc/elf.h	/^#define ELF_PROG_LOAD	/;"	d
+ELF_SHN_UNDEF	inc/elf.h	/^#define ELF_SHN_UNDEF	/;"	d
+ELF_SHT_NULL	inc/elf.h	/^#define ELF_SHT_NULL	/;"	d
+ELF_SHT_PROGBITS	inc/elf.h	/^#define ELF_SHT_PROGBITS	/;"	d
+ELF_SHT_STRTAB	inc/elf.h	/^#define ELF_SHT_STRTAB	/;"	d
+ELF_SHT_SYMTAB	inc/elf.h	/^#define ELF_SHT_SYMTAB	/;"	d
+ENVGENSHIFT	kern/env.c	/^#define ENVGENSHIFT	/;"	d	file:
+ENVX	inc/env.h	/^#define ENVX(/;"	d
+ENV_CREATE	kern/env.h	/^#define ENV_CREATE(/;"	d
+ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon1
+ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon1
+ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon1
+ENV_PASTE3	kern/env.h	/^#define ENV_PASTE3(/;"	d
+ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon1
+ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon1
+ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
+EXTPHYSMEM	inc/memlayout.h	/^#define EXTPHYSMEM	/;"	d
+E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
+E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
+E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
+E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
+E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
+E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon2
+E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
+Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
+Elf	inc/elf.h	/^struct Elf {$/;"	s
+Env	inc/env.h	/^struct Env {$/;"	s
+EnvType	inc/env.h	/^enum EnvType {$/;"	g
+FEC_PR	inc/mmu.h	/^#define FEC_PR	/;"	d
+FEC_U	inc/mmu.h	/^#define FEC_U	/;"	d
+FEC_WR	inc/mmu.h	/^#define FEC_WR	/;"	d
+FL_AC	inc/mmu.h	/^#define FL_AC	/;"	d
+FL_AF	inc/mmu.h	/^#define FL_AF	/;"	d
+FL_CF	inc/mmu.h	/^#define FL_CF	/;"	d
+FL_DF	inc/mmu.h	/^#define FL_DF	/;"	d
+FL_ID	inc/mmu.h	/^#define FL_ID	/;"	d
+FL_IF	inc/mmu.h	/^#define FL_IF	/;"	d
+FL_IOPL_0	inc/mmu.h	/^#define FL_IOPL_0	/;"	d
+FL_IOPL_1	inc/mmu.h	/^#define FL_IOPL_1	/;"	d
+FL_IOPL_2	inc/mmu.h	/^#define FL_IOPL_2	/;"	d
+FL_IOPL_3	inc/mmu.h	/^#define FL_IOPL_3	/;"	d
+FL_IOPL_MASK	inc/mmu.h	/^#define FL_IOPL_MASK	/;"	d
+FL_NT	inc/mmu.h	/^#define FL_NT	/;"	d
+FL_OF	inc/mmu.h	/^#define FL_OF	/;"	d
+FL_PF	inc/mmu.h	/^#define FL_PF	/;"	d
+FL_RF	inc/mmu.h	/^#define FL_RF	/;"	d
+FL_SF	inc/mmu.h	/^#define FL_SF	/;"	d
+FL_TF	inc/mmu.h	/^#define FL_TF	/;"	d
+FL_VIF	inc/mmu.h	/^#define FL_VIF	/;"	d
+FL_VIP	inc/mmu.h	/^#define FL_VIP	/;"	d
+FL_VM	inc/mmu.h	/^#define FL_VM	/;"	d
+FL_ZF	inc/mmu.h	/^#define FL_ZF	/;"	d
+GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
+GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
+GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
+GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
+GD_KD	inc/memlayout.h	/^#define GD_KD /;"	d
+GD_KT	inc/memlayout.h	/^#define GD_KT /;"	d
+GD_TSS0	inc/memlayout.h	/^#define GD_TSS0 /;"	d
+GD_UD	inc/memlayout.h	/^#define GD_UD /;"	d
+GD_UT	inc/memlayout.h	/^#define GD_UT /;"	d
+Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
+IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
+IOPHYSMEM	inc/memlayout.h	/^#define IOPHYSMEM	/;"	d
+IO_RTC	kern/kclock.h	/^#define	IO_RTC	/;"	d
+IRQ_ERROR	inc/trap.h	/^#define IRQ_ERROR /;"	d
+IRQ_IDE	inc/trap.h	/^#define IRQ_IDE /;"	d
+IRQ_KBD	inc/trap.h	/^#define IRQ_KBD /;"	d
+IRQ_OFFSET	inc/trap.h	/^#define IRQ_OFFSET	/;"	d
+IRQ_SERIAL	inc/trap.h	/^#define IRQ_SERIAL /;"	d
+IRQ_SPURIOUS	inc/trap.h	/^#define IRQ_SPURIOUS /;"	d
+IRQ_TIMER	inc/trap.h	/^#define IRQ_TIMER /;"	d
+JOS_INC_ASSERT_H	inc/assert.h	/^#define JOS_INC_ASSERT_H$/;"	d
+JOS_INC_ELF_H	inc/elf.h	/^#define JOS_INC_ELF_H$/;"	d
+JOS_INC_ENV_H	inc/env.h	/^#define JOS_INC_ENV_H$/;"	d
+JOS_INC_ERROR_H	inc/error.h	/^#define JOS_INC_ERROR_H$/;"	d
+JOS_INC_LIB_H	inc/lib.h	/^#define JOS_INC_LIB_H /;"	d
+JOS_INC_MEMLAYOUT_H	inc/memlayout.h	/^#define JOS_INC_MEMLAYOUT_H$/;"	d
+JOS_INC_MMU_H	inc/mmu.h	/^#define JOS_INC_MMU_H$/;"	d
+JOS_INC_STDARG_H	inc/stdarg.h	/^#define	JOS_INC_STDARG_H$/;"	d
+JOS_INC_STDIO_H	inc/stdio.h	/^#define JOS_INC_STDIO_H$/;"	d
+JOS_INC_STRING_H	inc/string.h	/^#define JOS_INC_STRING_H$/;"	d
+JOS_INC_SYSCALL_H	inc/syscall.h	/^#define JOS_INC_SYSCALL_H$/;"	d
+JOS_INC_TRAP_H	inc/trap.h	/^#define JOS_INC_TRAP_H$/;"	d
+JOS_INC_TYPES_H	inc/types.h	/^#define JOS_INC_TYPES_H$/;"	d
+JOS_INC_X86_H	inc/x86.h	/^#define JOS_INC_X86_H$/;"	d
+JOS_KBDREG_H	inc/kbdreg.h	/^#define JOS_KBDREG_H$/;"	d
+JOS_KERN_ENV_H	kern/env.h	/^#define JOS_KERN_ENV_H$/;"	d
+JOS_KERN_KCLOCK_H	kern/kclock.h	/^#define JOS_KERN_KCLOCK_H$/;"	d
+JOS_KERN_KDEBUG_H	kern/kdebug.h	/^#define JOS_KERN_KDEBUG_H$/;"	d
+JOS_KERN_MONITOR_H	kern/monitor.h	/^#define JOS_KERN_MONITOR_H$/;"	d
+JOS_KERN_PMAP_H	kern/pmap.h	/^#define JOS_KERN_PMAP_H$/;"	d
+JOS_KERN_SYSCALL_H	kern/syscall.h	/^#define JOS_KERN_SYSCALL_H$/;"	d
+JOS_KERN_TRAP_H	kern/trap.h	/^#define JOS_KERN_TRAP_H$/;"	d
+JOS_STAB_H	inc/stab.h	/^#define JOS_STAB_H$/;"	d
+KADDR	kern/pmap.h	/^#define KADDR(/;"	d
+KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
+KBCMDP	inc/kbdreg.h	/^#define	KBCMDP	/;"	d
+KBC_AUXDISABLE	inc/kbdreg.h	/^#define	 KBC_AUXDISABLE	/;"	d
+KBC_AUXECHO	inc/kbdreg.h	/^#define	 KBC_AUXECHO	/;"	d
+KBC_AUXENABLE	inc/kbdreg.h	/^#define	 KBC_AUXENABLE	/;"	d
+KBC_AUXTEST	inc/kbdreg.h	/^#define	 KBC_AUXTEST	/;"	d
+KBC_AUXWRITE	inc/kbdreg.h	/^#define	 KBC_AUXWRITE	/;"	d
+KBC_DISABLE	inc/kbdreg.h	/^#define	KBC_DISABLE	/;"	d
+KBC_ECHO	inc/kbdreg.h	/^#define	KBC_ECHO	/;"	d
+KBC_ENABLE	inc/kbdreg.h	/^#define	KBC_ENABLE	/;"	d
+KBC_KBDDISABLE	inc/kbdreg.h	/^#define	 KBC_KBDDISABLE	/;"	d
+KBC_KBDECHO	inc/kbdreg.h	/^#define	 KBC_KBDECHO	/;"	d
+KBC_KBDENABLE	inc/kbdreg.h	/^#define	 KBC_KBDENABLE	/;"	d
+KBC_KBDTEST	inc/kbdreg.h	/^#define	 KBC_KBDTEST	/;"	d
+KBC_MODEIND	inc/kbdreg.h	/^#define	KBC_MODEIND	/;"	d
+KBC_PULSE0	inc/kbdreg.h	/^#define	 KBC_PULSE0	/;"	d
+KBC_PULSE1	inc/kbdreg.h	/^#define	 KBC_PULSE1	/;"	d
+KBC_PULSE2	inc/kbdreg.h	/^#define	 KBC_PULSE2	/;"	d
+KBC_PULSE3	inc/kbdreg.h	/^#define	 KBC_PULSE3	/;"	d
+KBC_RAMREAD	inc/kbdreg.h	/^#define	 KBC_RAMREAD	/;"	d
+KBC_RAMWRITE	inc/kbdreg.h	/^#define	 KBC_RAMWRITE	/;"	d
+KBC_RESEND	inc/kbdreg.h	/^#define	KBC_RESEND	/;"	d
+KBC_RESET	inc/kbdreg.h	/^#define	KBC_RESET	/;"	d
+KBC_SELFTEST	inc/kbdreg.h	/^#define	 KBC_SELFTEST	/;"	d
+KBC_SETDEFAULT	inc/kbdreg.h	/^#define	KBC_SETDEFAULT	/;"	d
+KBC_SETTABLE	inc/kbdreg.h	/^#define	KBC_SETTABLE	/;"	d
+KBC_TYPEMATIC	inc/kbdreg.h	/^#define	KBC_TYPEMATIC	/;"	d
+KBDATAP	inc/kbdreg.h	/^#define	KBDATAP	/;"	d
+KBOUTP	inc/kbdreg.h	/^#define	KBOUTP	/;"	d
+KBR_ACK	inc/kbdreg.h	/^#define	KBR_ACK	/;"	d
+KBR_BREAK	inc/kbdreg.h	/^#define	KBR_BREAK	/;"	d
+KBR_ECHO	inc/kbdreg.h	/^#define	KBR_ECHO	/;"	d
+KBR_EXTENDED	inc/kbdreg.h	/^#define	KBR_EXTENDED	/;"	d
+KBR_FAILURE	inc/kbdreg.h	/^#define	KBR_FAILURE	/;"	d
+KBR_OVERRUN	inc/kbdreg.h	/^#define	KBR_OVERRUN	/;"	d
+KBR_RESEND	inc/kbdreg.h	/^#define	KBR_RESEND	/;"	d
+KBR_RSTDONE	inc/kbdreg.h	/^#define	KBR_RSTDONE	/;"	d
+KBSTATP	inc/kbdreg.h	/^#define	KBSTATP	/;"	d
+KBS_DIB	inc/kbdreg.h	/^#define	 KBS_DIB	/;"	d
+KBS_IBF	inc/kbdreg.h	/^#define	 KBS_IBF	/;"	d
+KBS_NOSEC	inc/kbdreg.h	/^#define	 KBS_NOSEC	/;"	d
+KBS_OCMD	inc/kbdreg.h	/^#define	 KBS_OCMD	/;"	d
+KBS_PERR	inc/kbdreg.h	/^#define	 KBS_PERR	/;"	d
+KBS_RERR	inc/kbdreg.h	/^#define	 KBS_RERR	/;"	d
+KBS_TERR	inc/kbdreg.h	/^#define	 KBS_TERR	/;"	d
+KBS_WARM	inc/kbdreg.h	/^#define	 KBS_WARM	/;"	d
+KC8_CPU	inc/kbdreg.h	/^#define	KC8_CPU	/;"	d
+KC8_IGNSEC	inc/kbdreg.h	/^#define	KC8_IGNSEC	/;"	d
+KC8_KDISABLE	inc/kbdreg.h	/^#define	KC8_KDISABLE	/;"	d
+KC8_KENABLE	inc/kbdreg.h	/^#define	KC8_KENABLE	/;"	d
+KC8_MDISABLE	inc/kbdreg.h	/^#define	KC8_MDISABLE	/;"	d
+KC8_MENABLE	inc/kbdreg.h	/^#define	KC8_MENABLE	/;"	d
+KC8_TRANS	inc/kbdreg.h	/^#define	KC8_TRANS	/;"	d
+KERNBASE	inc/memlayout.h	/^#define	KERNBASE	/;"	d
+KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
+KEY_DEL	inc/kbdreg.h	/^#define KEY_DEL	/;"	d
+KEY_DN	inc/kbdreg.h	/^#define KEY_DN	/;"	d
+KEY_END	inc/kbdreg.h	/^#define KEY_END	/;"	d
+KEY_HOME	inc/kbdreg.h	/^#define KEY_HOME	/;"	d
+KEY_INS	inc/kbdreg.h	/^#define KEY_INS	/;"	d
+KEY_LF	inc/kbdreg.h	/^#define KEY_LF	/;"	d
+KEY_PGDN	inc/kbdreg.h	/^#define KEY_PGDN	/;"	d
+KEY_PGUP	inc/kbdreg.h	/^#define KEY_PGUP	/;"	d
+KEY_RT	inc/kbdreg.h	/^#define KEY_RT	/;"	d
+KEY_UP	inc/kbdreg.h	/^#define KEY_UP	/;"	d
+KSTACKTOP	inc/memlayout.h	/^#define KSTACKTOP	/;"	d
+KSTKGAP	inc/memlayout.h	/^#define KSTKGAP	/;"	d
+KSTKSIZE	inc/memlayout.h	/^#define KSTKSIZE	/;"	d
+K_LDCMDBYTE	inc/kbdreg.h	/^#define	K_LDCMDBYTE	/;"	d
+K_RDCMDBYTE	inc/kbdreg.h	/^#define	K_RDCMDBYTE	/;"	d
+LAB	conf/lab.mk	/^LAB=3$/;"	m
+LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
+LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
+LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
+LOG2NENV	inc/env.h	/^#define LOG2NENV	/;"	d
+MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
+MAX	inc/types.h	/^#define MAX(/;"	d
+MAXARGS	kern/monitor.c	/^#define MAXARGS /;"	d	file:
+MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
+MC_NVRAM_SIZE	kern/kclock.h	/^#define	MC_NVRAM_SIZE	/;"	d
+MC_NVRAM_START	kern/kclock.h	/^#define	MC_NVRAM_START	/;"	d
+MIN	inc/types.h	/^#define MIN(/;"	d
+MMIOBASE	inc/memlayout.h	/^#define MMIOBASE	/;"	d
+MMIOLIM	inc/memlayout.h	/^#define MMIOLIM	/;"	d
+MONO_BASE	kern/console.h	/^#define MONO_BASE	/;"	d
+MONO_BUF	kern/console.h	/^#define MONO_BUF	/;"	d
+MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
+MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
+NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
+NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
+NCOMMANDS	kern/monitor.c	/^#define NCOMMANDS /;"	d	file:
+NENV	inc/env.h	/^#define NENV	/;"	d
+NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
+NO	kern/console.c	/^#define NO	/;"	d	file:
+NPDENTRIES	inc/mmu.h	/^#define NPDENTRIES	/;"	d
+NPTENTRIES	inc/mmu.h	/^#define NPTENTRIES	/;"	d
+NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
+NULL	inc/stdio.h	/^#define NULL	/;"	d
+NULL	inc/types.h	/^#define NULL /;"	d
+NUMLOCK	kern/console.c	/^#define NUMLOCK	/;"	d	file:
+NVRAM_BASEHI	kern/kclock.h	/^#define NVRAM_BASEHI	/;"	d
+NVRAM_BASELO	kern/kclock.h	/^#define NVRAM_BASELO	/;"	d
+NVRAM_CENTURY	kern/kclock.h	/^#define NVRAM_CENTURY	/;"	d
+NVRAM_EXTHI	kern/kclock.h	/^#define NVRAM_EXTHI	/;"	d
+NVRAM_EXTLO	kern/kclock.h	/^#define NVRAM_EXTLO	/;"	d
+NVRAM_PEXTHI	kern/kclock.h	/^#define NVRAM_PEXTHI	/;"	d
+NVRAM_PEXTLO	kern/kclock.h	/^#define NVRAM_PEXTLO	/;"	d
+N_BCOMM	inc/stab.h	/^#define	N_BCOMM	/;"	d
+N_BINCL	inc/stab.h	/^#define	N_BINCL	/;"	d
+N_BSLINE	inc/stab.h	/^#define	N_BSLINE	/;"	d
+N_DSLINE	inc/stab.h	/^#define	N_DSLINE	/;"	d
+N_ECOML	inc/stab.h	/^#define	N_ECOML	/;"	d
+N_ECOMM	inc/stab.h	/^#define	N_ECOMM	/;"	d
+N_EINCL	inc/stab.h	/^#define	N_EINCL	/;"	d
+N_ENTRY	inc/stab.h	/^#define	N_ENTRY	/;"	d
+N_EXCL	inc/stab.h	/^#define	N_EXCL	/;"	d
+N_FNAME	inc/stab.h	/^#define	N_FNAME	/;"	d
+N_FUN	inc/stab.h	/^#define	N_FUN	/;"	d
+N_GSYM	inc/stab.h	/^#define	N_GSYM	/;"	d
+N_LBRAC	inc/stab.h	/^#define	N_LBRAC	/;"	d
+N_LCSYM	inc/stab.h	/^#define	N_LCSYM	/;"	d
+N_LENG	inc/stab.h	/^#define	N_LENG	/;"	d
+N_LSYM	inc/stab.h	/^#define	N_LSYM	/;"	d
+N_MAIN	inc/stab.h	/^#define	N_MAIN	/;"	d
+N_PC	inc/stab.h	/^#define	N_PC	/;"	d
+N_PSYM	inc/stab.h	/^#define	N_PSYM	/;"	d
+N_RBRAC	inc/stab.h	/^#define	N_RBRAC	/;"	d
+N_RSYM	inc/stab.h	/^#define	N_RSYM	/;"	d
+N_SLINE	inc/stab.h	/^#define	N_SLINE	/;"	d
+N_SO	inc/stab.h	/^#define	N_SO	/;"	d
+N_SOL	inc/stab.h	/^#define	N_SOL	/;"	d
+N_SSYM	inc/stab.h	/^#define	N_SSYM	/;"	d
+N_STSYM	inc/stab.h	/^#define	N_STSYM	/;"	d
+OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
+OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
+OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
+OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
+O_ACCMODE	inc/lib.h	/^#define	O_ACCMODE	/;"	d
+O_CREAT	inc/lib.h	/^#define	O_CREAT	/;"	d
+O_EXCL	inc/lib.h	/^#define	O_EXCL	/;"	d
+O_MKDIR	inc/lib.h	/^#define O_MKDIR	/;"	d
+O_RDONLY	inc/lib.h	/^#define	O_RDONLY	/;"	d
+O_RDWR	inc/lib.h	/^#define	O_RDWR	/;"	d
+O_TRUNC	inc/lib.h	/^#define	O_TRUNC	/;"	d
+O_WRONLY	inc/lib.h	/^#define	O_WRONLY	/;"	d
+OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
+PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 3 09:38:39 EDT 2014$/;"	m
+PADDR	kern/pmap.h	/^#define PADDR(/;"	d
+PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
+PDX	inc/mmu.h	/^#define PDX(/;"	d
+PDXSHIFT	inc/mmu.h	/^#define PDXSHIFT	/;"	d
+PERL	GNUmakefile	/^PERL	:= perl$/;"	m
+PFTEMP	inc/memlayout.h	/^#define PFTEMP	/;"	d
+PGADDR	inc/mmu.h	/^#define PGADDR(/;"	d
+PGNUM	inc/mmu.h	/^#define PGNUM(/;"	d
+PGOFF	inc/mmu.h	/^#define PGOFF(/;"	d
+PGSHIFT	inc/mmu.h	/^#define PGSHIFT	/;"	d
+PGSIZE	inc/mmu.h	/^#define PGSIZE	/;"	d
+PTE_A	inc/mmu.h	/^#define PTE_A	/;"	d
+PTE_ADDR	inc/mmu.h	/^#define PTE_ADDR(/;"	d
+PTE_AVAIL	inc/mmu.h	/^#define PTE_AVAIL	/;"	d
+PTE_D	inc/mmu.h	/^#define PTE_D	/;"	d
+PTE_G	inc/mmu.h	/^#define PTE_G	/;"	d
+PTE_P	inc/mmu.h	/^#define PTE_P	/;"	d
+PTE_PCD	inc/mmu.h	/^#define PTE_PCD	/;"	d
+PTE_PS	inc/mmu.h	/^#define PTE_PS	/;"	d
+PTE_PWT	inc/mmu.h	/^#define PTE_PWT	/;"	d
+PTE_SYSCALL	inc/mmu.h	/^#define PTE_SYSCALL	/;"	d
+PTE_U	inc/mmu.h	/^#define PTE_U	/;"	d
+PTE_W	inc/mmu.h	/^#define PTE_W	/;"	d
+PTSHIFT	inc/mmu.h	/^#define PTSHIFT	/;"	d
+PTSIZE	inc/mmu.h	/^#define PTSIZE	/;"	d
+PTX	inc/mmu.h	/^#define PTX(/;"	d
+PTXSHIFT	inc/mmu.h	/^#define PTXSHIFT	/;"	d
+PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
+Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
+Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
+Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
+PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
+QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
+QEMU	gradelib.py	/^class QEMU(object):$/;"	c
+QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
+RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
+ROUNDDOWN	inc/types.h	/^#define ROUNDDOWN(/;"	d
+ROUNDUP	inc/types.h	/^#define ROUNDUP(/;"	d
+Runner	gradelib.py	/^class Runner():$/;"	c
+SCROLLLOCK	kern/console.c	/^#define SCROLLLOCK	/;"	d	file:
+SECTSIZE	boot/main.c	/^#define SECTSIZE	/;"	d	file:
+SEG	inc/mmu.h	/^#define SEG(/;"	d
+SEG16	inc/mmu.h	/^#define SEG16(/;"	d
+SEG_FAULT	inc/mmu.h	/^#define SEG_FAULT	/;"	d
+SEG_NULL	inc/mmu.h	/^#define SEG_NULL	/;"	d
+SETCALLGATE	inc/mmu.h	/^#define SETCALLGATE(/;"	d
+SETGATE	inc/mmu.h	/^#define SETGATE(/;"	d
+SHIFT	kern/console.c	/^#define SHIFT	/;"	d	file:
+SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
+STA_A	inc/mmu.h	/^#define STA_A	/;"	d
+STA_C	inc/mmu.h	/^#define STA_C	/;"	d
+STA_E	inc/mmu.h	/^#define STA_E	/;"	d
+STA_R	inc/mmu.h	/^#define STA_R	/;"	d
+STA_W	inc/mmu.h	/^#define STA_W	/;"	d
+STA_X	inc/mmu.h	/^#define STA_X	/;"	d
+STS_CG16	inc/mmu.h	/^#define STS_CG16	/;"	d
+STS_CG32	inc/mmu.h	/^#define STS_CG32	/;"	d
+STS_IG16	inc/mmu.h	/^#define STS_IG16	/;"	d
+STS_IG32	inc/mmu.h	/^#define STS_IG32	/;"	d
+STS_LDT	inc/mmu.h	/^#define STS_LDT	/;"	d
+STS_T16A	inc/mmu.h	/^#define STS_T16A	/;"	d
+STS_T16B	inc/mmu.h	/^#define STS_T16B	/;"	d
+STS_T32A	inc/mmu.h	/^#define STS_T32A	/;"	d
+STS_T32B	inc/mmu.h	/^#define STS_T32B	/;"	d
+STS_TG	inc/mmu.h	/^#define STS_TG	/;"	d
+STS_TG16	inc/mmu.h	/^#define STS_TG16	/;"	d
+STS_TG32	inc/mmu.h	/^#define STS_TG32	/;"	d
+SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
+SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
+SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
+SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
+Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
+Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
+Stab	inc/stab.h	/^struct Stab {$/;"	s
+TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
+TEMP_ADDR	user/sendpage.c	/^#define TEMP_ADDR	/;"	d	file:
+TEMP_ADDR_CHILD	user/sendpage.c	/^#define TEMP_ADDR_CHILD	/;"	d	file:
+TESTS	gradelib.py	/^TESTS = []$/;"	v
+TOP	GNUmakefile	/^TOP = .$/;"	m
+TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
+TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
+T_ALIGN	inc/trap.h	/^#define T_ALIGN /;"	d
+T_BOUND	inc/trap.h	/^#define T_BOUND /;"	d
+T_BRKPT	inc/trap.h	/^#define T_BRKPT /;"	d
+T_DBLFLT	inc/trap.h	/^#define T_DBLFLT /;"	d
+T_DEBUG	inc/trap.h	/^#define T_DEBUG /;"	d
+T_DEFAULT	inc/trap.h	/^#define T_DEFAULT /;"	d
+T_DEVICE	inc/trap.h	/^#define T_DEVICE /;"	d
+T_DIVIDE	inc/trap.h	/^#define T_DIVIDE /;"	d
+T_FPERR	inc/trap.h	/^#define T_FPERR /;"	d
+T_GPFLT	inc/trap.h	/^#define T_GPFLT /;"	d
+T_ILLOP	inc/trap.h	/^#define T_ILLOP /;"	d
+T_MCHK	inc/trap.h	/^#define T_MCHK /;"	d
+T_NMI	inc/trap.h	/^#define T_NMI /;"	d
+T_OFLOW	inc/trap.h	/^#define T_OFLOW /;"	d
+T_PGFLT	inc/trap.h	/^#define T_PGFLT /;"	d
+T_SEGNP	inc/trap.h	/^#define T_SEGNP /;"	d
+T_SIMDERR	inc/trap.h	/^#define T_SIMDERR /;"	d
+T_STACK	inc/trap.h	/^#define T_STACK /;"	d
+T_SYSCALL	inc/trap.h	/^#define T_SYSCALL /;"	d
+T_TSS	inc/trap.h	/^#define T_TSS /;"	d
+Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
+TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
+Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
+UDWtype	obj/kern/kernel.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/badsegment.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/breakpoint.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/buggyhello.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/buggyhello2.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/divzero.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/evilhello.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/faultread.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/faultreadkernel.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/faultwrite.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/faultwritekernel.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/hello.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/softint.asm	/^UDWtype$/;"	l
+UDWtype	obj/user/testbss.asm	/^UDWtype$/;"	l
+UENVS	inc/memlayout.h	/^#define UENVS	/;"	d
+ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
+ULIM	inc/memlayout.h	/^#define ULIM	/;"	d
+UPAGES	inc/memlayout.h	/^#define UPAGES	/;"	d
+USED	inc/lib.h	/^#define USED(/;"	d
+USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
+USTABDATA	inc/memlayout.h	/^#define USTABDATA	/;"	d
+USTACKTOP	inc/memlayout.h	/^#define USTACKTOP	/;"	d
+UTEMP	inc/memlayout.h	/^#define UTEMP	/;"	d
+UTEXT	inc/memlayout.h	/^#define UTEXT	/;"	d
+UTOP	inc/memlayout.h	/^#define UTOP	/;"	d
+UVPT	inc/memlayout.h	/^#define UVPT	/;"	d
+UXSTACKTOP	inc/memlayout.h	/^#define UXSTACKTOP	/;"	d
+UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
+V	conf/env.mk	/^V = @$/;"	m
+WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
+WHITESPACE	kern/monitor.c	/^#define WHITESPACE /;"	d	file:
+_CONSOLE_H_	kern/console.h	/^#define _CONSOLE_H_$/;"	d
+_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
+__all__	gradelib.py	/^__all__ = []$/;"	v
+__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
+__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
+__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
+__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
+__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
+__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
+__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
+__udivdi3	obj/kern/kernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/badsegment.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/breakpoint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/buggyhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/buggyhello2.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/divzero.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/evilhello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/faultread.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/faultreadkernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/faultwrite.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/faultwritekernel.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/hello.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/softint.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivdi3	obj/user/testbss.asm	/^__udivdi3 (UDWtype n, UDWtype d)$/;"	l
+__udivmoddi4	obj/kern/kernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/badsegment.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/breakpoint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/buggyhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/buggyhello2.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/divzero.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/evilhello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/faultread.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/faultreadkernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/faultwrite.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/faultwritekernel.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/hello.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/softint.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__udivmoddi4	obj/user/testbss.asm	/^__udivmoddi4 (UDWtype n, UDWtype d, UDWtype *rp)$/;"	l
+__umoddi3	obj/kern/kernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/badsegment.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/breakpoint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/buggyhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/buggyhello2.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/divzero.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/evilhello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/faultread.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/faultreadkernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/faultwrite.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/faultwritekernel.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/hello.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/softint.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+__umoddi3	obj/user/testbss.asm	/^__umoddi3 (UDWtype u, UDWtype v)$/;"	l
+_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
+_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
+_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
+_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
+_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
+_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
+_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
+_start	lib/entry.S	/^_start:$/;"	l
+_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
+_start	obj/user/badsegment.asm	/^_start:$/;"	l
+_start	obj/user/breakpoint.asm	/^_start:$/;"	l
+_start	obj/user/buggyhello.asm	/^_start:$/;"	l
+_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
+_start	obj/user/divzero.asm	/^_start:$/;"	l
+_start	obj/user/evilhello.asm	/^_start:$/;"	l
+_start	obj/user/faultread.asm	/^_start:$/;"	l
+_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
+_start	obj/user/faultwrite.asm	/^_start:$/;"	l
+_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
+_start	obj/user/hello.asm	/^_start:$/;"	l
+_start	obj/user/softint.asm	/^_start:$/;"	l
+_start	obj/user/testbss.asm	/^_start:$/;"	l
+_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
+addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
+addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
+addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
+altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
+altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
+altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
+altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
+any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
+argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
+args_exist	lib/entry.S	/^args_exist:$/;"	l
+args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
+args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
+args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
+args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
+args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
+args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
+args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
+args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
+args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
+args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
+args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
+args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
+args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
+assert	inc/assert.h	/^#define assert(/;"	d
+assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
+assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
+assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
+b	obj/kern/kernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/badsegment.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/breakpoint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/buggyhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/buggyhello2.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/divzero.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/evilhello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/faultread.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/faultreadkernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/faultwrite.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/faultwritekernel.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/hello.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/softint.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+b	obj/user/testbss.asm	/^	      b = W_TYPE_SIZE - bm;$/;"	d
+base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
+base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
+base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
+base	obj/kern/kernel.asm	/^                        base = 8;$/;"	d
+base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
+base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
+base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
+base	obj/user/badsegment.asm	/^                        base = 8;$/;"	d
+base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
+base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
+base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
+base	obj/user/breakpoint.asm	/^                        base = 8;$/;"	d
+base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
+base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
+base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
+base	obj/user/buggyhello.asm	/^                        base = 8;$/;"	d
+base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
+base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
+base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
+base	obj/user/buggyhello2.asm	/^                        base = 8;$/;"	d
+base	obj/user/divzero.asm	/^			base = 10;$/;"	d
+base	obj/user/divzero.asm	/^			base = 16;$/;"	d
+base	obj/user/divzero.asm	/^		base = 10;$/;"	d
+base	obj/user/divzero.asm	/^                        base = 8;$/;"	d
+base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
+base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
+base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
+base	obj/user/evilhello.asm	/^                        base = 8;$/;"	d
+base	obj/user/faultread.asm	/^			base = 10;$/;"	d
+base	obj/user/faultread.asm	/^			base = 16;$/;"	d
+base	obj/user/faultread.asm	/^		base = 10;$/;"	d
+base	obj/user/faultread.asm	/^                        base = 8;$/;"	d
+base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
+base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
+base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
+base	obj/user/faultreadkernel.asm	/^                        base = 8;$/;"	d
+base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
+base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
+base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
+base	obj/user/faultwrite.asm	/^                        base = 8;$/;"	d
+base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
+base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
+base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
+base	obj/user/faultwritekernel.asm	/^                        base = 8;$/;"	d
+base	obj/user/hello.asm	/^			base = 10;$/;"	d
+base	obj/user/hello.asm	/^			base = 16;$/;"	d
+base	obj/user/hello.asm	/^		base = 10;$/;"	d
+base	obj/user/hello.asm	/^                        base = 8;$/;"	d
+base	obj/user/softint.asm	/^			base = 10;$/;"	d
+base	obj/user/softint.asm	/^			base = 16;$/;"	d
+base	obj/user/softint.asm	/^		base = 10;$/;"	d
+base	obj/user/softint.asm	/^                        base = 8;$/;"	d
+base	obj/user/testbss.asm	/^			base = 10;$/;"	d
+base	obj/user/testbss.asm	/^			base = 16;$/;"	d
+base	obj/user/testbss.asm	/^		base = 10;$/;"	d
+base	obj/user/testbss.asm	/^                        base = 8;$/;"	d
+bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
+binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
+binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
+binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
+bool	inc/types.h	/^typedef _Bool bool;$/;"	t
+boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
+boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
+bootmain	boot/main.c	/^bootmain(void)$/;"	f
+bootstack	kern/entry.S	/^bootstack:$/;"	l
+bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
+breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
+breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
+buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon5	file:
+buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
+buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
+buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
+buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
+c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
+c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
+c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
+c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
+c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
+call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
+cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
+cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
+ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
+ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
+char	obj/kern/kernel.asm	/^char *$/;"	l
+char	obj/user/badsegment.asm	/^char *$/;"	l
+char	obj/user/breakpoint.asm	/^char *$/;"	l
+char	obj/user/buggyhello.asm	/^char *$/;"	l
+char	obj/user/buggyhello2.asm	/^char *$/;"	l
+char	obj/user/divzero.asm	/^char *$/;"	l
+char	obj/user/evilhello.asm	/^char *$/;"	l
+char	obj/user/faultread.asm	/^char *$/;"	l
+char	obj/user/faultreadkernel.asm	/^char *$/;"	l
+char	obj/user/faultwrite.asm	/^char *$/;"	l
+char	obj/user/faultwritekernel.asm	/^char *$/;"	l
+char	obj/user/hello.asm	/^char *$/;"	l
+char	obj/user/softint.asm	/^char *$/;"	l
+char	obj/user/testbss.asm	/^char *$/;"	l
+charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
+check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
+check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
+check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
+check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
+check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
+check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
+check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
+close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
+cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
+cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
+cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
+color	gradelib.py	/^def color(name, text):$/;"	f
+commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
+cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon5	file:
+cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
+cons_init	kern/console.c	/^cons_init(void)$/;"	f
+cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
+cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
+const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
+const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
+const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
+const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
+const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
+cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
+cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
+cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
+cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
+cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
+cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
+cputchar	kern/console.c	/^cputchar(int c)$/;"	f
+cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
+cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
+crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
+crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
+crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
+crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
+ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
+curenv	kern/env.c	/^struct Env *curenv = NULL;		\/\/ The current env$/;"	v	typeref:struct:Env
+curenv	obj/kern/kernel.asm	/^            curenv = e;$/;"	d
+d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
+d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
+d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
+d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
+d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
+d	obj/user/divzero.asm	/^	d = dst;$/;"	d
+d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
+d	obj/user/faultread.asm	/^	d = dst;$/;"	d
+d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
+d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
+d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
+d	obj/user/hello.asm	/^	d = dst;$/;"	d
+d	obj/user/softint.asm	/^	d = dst;$/;"	d
+d	obj/user/testbss.asm	/^	d = dst;$/;"	d
+d0	obj/kern/kernel.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/kern/kernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/kern/kernel.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/badsegment.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/badsegment.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/badsegment.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/breakpoint.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/breakpoint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/breakpoint.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/buggyhello.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/buggyhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/buggyhello.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/buggyhello2.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/buggyhello2.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/buggyhello2.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/divzero.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/divzero.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/divzero.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/evilhello.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/evilhello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/evilhello.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/faultread.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/faultread.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/faultread.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/faultreadkernel.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/faultreadkernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/faultreadkernel.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/faultwrite.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/faultwrite.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/faultwrite.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/faultwritekernel.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/faultwritekernel.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/faultwritekernel.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/hello.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/hello.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/hello.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/softint.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/softint.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/softint.asm	/^  d0 = dd.s.low;$/;"	d
+d0	obj/user/testbss.asm	/^	      d0 = d0 << bm;$/;"	d
+d0	obj/user/testbss.asm	/^	    d0 = 1 \/ d0;	\/* Divide intentionally by zero.  *\/$/;"	d
+d0	obj/user/testbss.asm	/^  d0 = dd.s.low;$/;"	d
+d1	obj/kern/kernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/kern/kernel.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/badsegment.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/badsegment.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/breakpoint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/breakpoint.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/buggyhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/buggyhello.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/buggyhello2.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/buggyhello2.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/divzero.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/divzero.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/evilhello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/evilhello.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/faultread.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/faultread.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/faultreadkernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/faultreadkernel.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/faultwrite.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/faultwrite.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/faultwritekernel.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/faultwritekernel.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/hello.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/hello.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/softint.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/softint.asm	/^  d1 = dd.s.high;$/;"	d
+d1	obj/user/testbss.asm	/^	      d1 = (d1 << bm) | (d0 >> b);$/;"	d
+d1	obj/user/testbss.asm	/^  d1 = dd.s.high;$/;"	d
+data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
+data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
+dead	obj/kern/kernel.asm	/^dead:$/;"	l
+debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
+default	obj/kern/kernel.asm	/^		default:$/;"	l
+default	obj/kern/kernel.asm	/^	default:$/;"	l
+default	obj/user/badsegment.asm	/^		default:$/;"	l
+default	obj/user/breakpoint.asm	/^		default:$/;"	l
+default	obj/user/buggyhello.asm	/^		default:$/;"	l
+default	obj/user/buggyhello2.asm	/^		default:$/;"	l
+default	obj/user/divzero.asm	/^		default:$/;"	l
+default	obj/user/evilhello.asm	/^		default:$/;"	l
+default	obj/user/faultread.asm	/^		default:$/;"	l
+default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
+default	obj/user/faultwrite.asm	/^		default:$/;"	l
+default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
+default	obj/user/hello.asm	/^		default:$/;"	l
+default	obj/user/softint.asm	/^		default:$/;"	l
+default	obj/user/testbss.asm	/^		default:$/;"	l
+delay	kern/console.c	/^delay(void)$/;"	f	file:
+desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
+dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
+dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
+dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
+dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
+dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
+e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
+e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
+e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
+e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
+e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
+e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
+e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
+e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
+e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
+e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
+e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
+e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
+e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
+e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
+e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
+e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
+ebp	obj/kern/kernel.asm	/^            ebp = old_ebp;$/;"	d
+ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
+echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
+eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
+eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
+eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
+eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
+eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
+eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
+end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
+end_part	gradelib.py	/^def end_part(name):$/;"	f
+entry	kern/entry.S	/^entry:$/;"	l
+entry	obj/kern/kernel.asm	/^        entry = pgdir_walk(pgdir, va, 1);    \/\/通过pgdir_walk函数求出va对应的页表项$/;"	d
+entry	obj/kern/kernel.asm	/^entry:$/;"	l
+entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
+entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
+entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
+env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
+env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
+env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
+env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
+env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
+env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
+env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
+env_free_list	obj/kern/kernel.asm	/^            env_free_list = &envs[i];$/;"	d
+env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
+env_init	kern/env.c	/^env_init(void)$/;"	f
+env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
+env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
+env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
+env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
+env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
+env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
+env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
+env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
+env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
+env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
+env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
+envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
+envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
+envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
+envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
+envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
+envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
+envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
+envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
+envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
+envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
+envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
+envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
+envid_t	obj/user/hello.asm	/^envid_t$/;"	l
+envid_t	obj/user/softint.asm	/^envid_t$/;"	l
+envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
+envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
+envs	obj/kern/kernel.asm	/^        envs = (struct Env*)boot_alloc(sizeof(struct Env)*NENV);$/;"	d
+eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
+eph	obj/kern/kernel.asm	/^        eph = ph + elfhdr->e_phnum;$/;"	d
+err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
+err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
+err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
+err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
+err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
+err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/divzero.asm	/^				err = -err;$/;"	d
+err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
+err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/faultread.asm	/^				err = -err;$/;"	d
+err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
+err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
+err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
+err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/hello.asm	/^				err = -err;$/;"	d
+err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/softint.asm	/^				err = -err;$/;"	d
+err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
+err	obj/user/testbss.asm	/^				err = -err;$/;"	d
+err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
+errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
+exit	lib/exit.c	/^exit(void)$/;"	f
+f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
+f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
+f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
+f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
+f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
+f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
+f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
+f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
+f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
+f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
+f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
+f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
+f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
+f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
+f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
+f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
+f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
+f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 12 f0       	mov    $0xf0121000,%esp$/;"	l
+f0100039	obj/kern/kernel.asm	/^f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>$/;"	l
+f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
+f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
+f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
+f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
+f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100043	obj/kern/kernel.asm	/^f0100043:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f0100046	obj/kern/kernel.asm	/^f0100046:	b8 50 5e 1e f0       	mov    $0xf01e5e50,%eax$/;"	l
+f010004b	obj/kern/kernel.asm	/^f010004b:	2d 51 4f 1e f0       	sub    $0xf01e4f51,%eax$/;"	l
+f0100050	obj/kern/kernel.asm	/^f0100050:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f0100054	obj/kern/kernel.asm	/^f0100054:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f010005b	obj/kern/kernel.asm	/^f010005b:	00 $/;"	l
+f010005c	obj/kern/kernel.asm	/^f010005c:	c7 04 24 51 4f 1e f0 	movl   $0xf01e4f51,(%esp)$/;"	l
+f0100063	obj/kern/kernel.asm	/^f0100063:	e8 aa 48 00 00       	call   f0104912 <memset>$/;"	l
+f0100068	obj/kern/kernel.asm	/^f0100068:	e8 7e 04 00 00       	call   f01004eb <cons_init>$/;"	l
+f010006d	obj/kern/kernel.asm	/^f010006d:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
+f0100074	obj/kern/kernel.asm	/^f0100074:	00 $/;"	l
+f0100075	obj/kern/kernel.asm	/^f0100075:	c7 04 24 60 4d 10 f0 	movl   $0xf0104d60,(%esp)$/;"	l
+f010007c	obj/kern/kernel.asm	/^f010007c:	e8 a5 36 00 00       	call   f0103726 <cprintf>$/;"	l
+f0100081	obj/kern/kernel.asm	/^f0100081:	e8 29 11 00 00       	call   f01011af <mem_init>$/;"	l
+f0100086	obj/kern/kernel.asm	/^f0100086:	e8 99 2f 00 00       	call   f0103024 <env_init>$/;"	l
+f010008b	obj/kern/kernel.asm	/^f010008b:	e8 0d 37 00 00       	call   f010379d <trap_init>$/;"	l
+f0100090	obj/kern/kernel.asm	/^f0100090:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f0100097	obj/kern/kernel.asm	/^f0100097:	00 $/;"	l
+f0100098	obj/kern/kernel.asm	/^f0100098:	c7 04 24 49 fc 14 f0 	movl   $0xf014fc49,(%esp)$/;"	l
+f010009f	obj/kern/kernel.asm	/^f010009f:	e8 90 31 00 00       	call   f0103234 <env_create>$/;"	l
+f01000a4	obj/kern/kernel.asm	/^f01000a4:	a1 a8 51 1e f0       	mov    0xf01e51a8,%eax$/;"	l
+f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01000ac	obj/kern/kernel.asm	/^f01000ac:	e8 6c 35 00 00       	call   f010361d <env_run>$/;"	l
+f01000b1	obj/kern/kernel.asm	/^f01000b1 <_panic>:$/;"	l
+f01000b1	obj/kern/kernel.asm	/^f01000b1:	55                   	push   %ebp$/;"	l
+f01000b2	obj/kern/kernel.asm	/^f01000b2:	89 e5                	mov    %esp,%ebp$/;"	l
+f01000b4	obj/kern/kernel.asm	/^f01000b4:	56                   	push   %esi$/;"	l
+f01000b5	obj/kern/kernel.asm	/^f01000b5:	53                   	push   %ebx$/;"	l
+f01000b6	obj/kern/kernel.asm	/^f01000b6:	83 ec 10             	sub    $0x10,%esp$/;"	l
+f01000b9	obj/kern/kernel.asm	/^f01000b9:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
+f01000bc	obj/kern/kernel.asm	/^f01000bc:	83 3d 40 5e 1e f0 00 	cmpl   $0x0,0xf01e5e40$/;"	l
+f01000c3	obj/kern/kernel.asm	/^f01000c3:	75 3d                	jne    f0100102 <_panic+0x51>$/;"	l
+f01000c5	obj/kern/kernel.asm	/^f01000c5:	89 35 40 5e 1e f0    	mov    %esi,0xf01e5e40$/;"	l
+f01000cb	obj/kern/kernel.asm	/^f01000cb:	fa                   	cli    $/;"	l
+f01000cc	obj/kern/kernel.asm	/^f01000cc:	fc                   	cld    $/;"	l
+f01000cd	obj/kern/kernel.asm	/^f01000cd:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
+f01000d0	obj/kern/kernel.asm	/^f01000d0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f01000d3	obj/kern/kernel.asm	/^f01000d3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f01000d7	obj/kern/kernel.asm	/^f01000d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01000da	obj/kern/kernel.asm	/^f01000da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f01000de	obj/kern/kernel.asm	/^f01000de:	c7 04 24 7b 4d 10 f0 	movl   $0xf0104d7b,(%esp)$/;"	l
+f01000e5	obj/kern/kernel.asm	/^f01000e5:	e8 3c 36 00 00       	call   f0103726 <cprintf>$/;"	l
+f01000ea	obj/kern/kernel.asm	/^f01000ea:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01000ee	obj/kern/kernel.asm	/^f01000ee:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f01000f1	obj/kern/kernel.asm	/^f01000f1:	e8 fd 35 00 00       	call   f01036f3 <vcprintf>$/;"	l
+f01000f6	obj/kern/kernel.asm	/^f01000f6:	c7 04 24 c7 5c 10 f0 	movl   $0xf0105cc7,(%esp)$/;"	l
+f01000fd	obj/kern/kernel.asm	/^f01000fd:	e8 24 36 00 00       	call   f0103726 <cprintf>$/;"	l
+f0100102	obj/kern/kernel.asm	/^f0100102:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0100109	obj/kern/kernel.asm	/^f0100109:	e8 c7 06 00 00       	call   f01007d5 <monitor>$/;"	l
+f010010e	obj/kern/kernel.asm	/^f010010e:	eb f2                	jmp    f0100102 <_panic+0x51>$/;"	l
+f0100110	obj/kern/kernel.asm	/^f0100110 <_warn>:$/;"	l
+f0100110	obj/kern/kernel.asm	/^f0100110:	55                   	push   %ebp$/;"	l
+f0100111	obj/kern/kernel.asm	/^f0100111:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100113	obj/kern/kernel.asm	/^f0100113:	53                   	push   %ebx$/;"	l
+f0100114	obj/kern/kernel.asm	/^f0100114:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0100117	obj/kern/kernel.asm	/^f0100117:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
+f010011a	obj/kern/kernel.asm	/^f010011a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f010011d	obj/kern/kernel.asm	/^f010011d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f0100121	obj/kern/kernel.asm	/^f0100121:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0100124	obj/kern/kernel.asm	/^f0100124:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0100128	obj/kern/kernel.asm	/^f0100128:	c7 04 24 93 4d 10 f0 	movl   $0xf0104d93,(%esp)$/;"	l
+f010012f	obj/kern/kernel.asm	/^f010012f:	e8 f2 35 00 00       	call   f0103726 <cprintf>$/;"	l
+f0100134	obj/kern/kernel.asm	/^f0100134:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0100138	obj/kern/kernel.asm	/^f0100138:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f010013b	obj/kern/kernel.asm	/^f010013b:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f010013e	obj/kern/kernel.asm	/^f010013e:	e8 b0 35 00 00       	call   f01036f3 <vcprintf>$/;"	l
+f0100143	obj/kern/kernel.asm	/^f0100143:	c7 04 24 c7 5c 10 f0 	movl   $0xf0105cc7,(%esp)$/;"	l
+f010014a	obj/kern/kernel.asm	/^f010014a:	e8 d7 35 00 00       	call   f0103726 <cprintf>$/;"	l
+f010014f	obj/kern/kernel.asm	/^f010014f:	83 c4 14             	add    $0x14,%esp$/;"	l
+f0100152	obj/kern/kernel.asm	/^f0100152:	5b                   	pop    %ebx$/;"	l
+f0100153	obj/kern/kernel.asm	/^f0100153:	5d                   	pop    %ebp$/;"	l
+f0100154	obj/kern/kernel.asm	/^f0100154:	c3                   	ret    $/;"	l
+f0100155	obj/kern/kernel.asm	/^f0100155:	00 00                	add    %al,(%eax)$/;"	l
+f0100158	obj/kern/kernel.asm	/^f0100158 <delay>:$/;"	l
+f0100158	obj/kern/kernel.asm	/^f0100158:	55                   	push   %ebp$/;"	l
+f0100159	obj/kern/kernel.asm	/^f0100159:	89 e5                	mov    %esp,%ebp$/;"	l
+f010015b	obj/kern/kernel.asm	/^f010015b:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
+f0100160	obj/kern/kernel.asm	/^f0100160:	ec                   	in     (%dx),%al$/;"	l
+f0100161	obj/kern/kernel.asm	/^f0100161:	ec                   	in     (%dx),%al$/;"	l
+f0100162	obj/kern/kernel.asm	/^f0100162:	ec                   	in     (%dx),%al$/;"	l
+f0100163	obj/kern/kernel.asm	/^f0100163:	ec                   	in     (%dx),%al$/;"	l
+f0100164	obj/kern/kernel.asm	/^f0100164:	5d                   	pop    %ebp$/;"	l
+f0100165	obj/kern/kernel.asm	/^f0100165:	c3                   	ret    $/;"	l
+f0100166	obj/kern/kernel.asm	/^f0100166 <serial_proc_data>:$/;"	l
+f0100166	obj/kern/kernel.asm	/^f0100166:	55                   	push   %ebp$/;"	l
+f0100167	obj/kern/kernel.asm	/^f0100167:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100169	obj/kern/kernel.asm	/^f0100169:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
+f010016e	obj/kern/kernel.asm	/^f010016e:	ec                   	in     (%dx),%al$/;"	l
+f010016f	obj/kern/kernel.asm	/^f010016f:	a8 01                	test   $0x1,%al$/;"	l
+f0100171	obj/kern/kernel.asm	/^f0100171:	74 08                	je     f010017b <serial_proc_data+0x15>$/;"	l
+f0100173	obj/kern/kernel.asm	/^f0100173:	b2 f8                	mov    $0xf8,%dl$/;"	l
+f0100175	obj/kern/kernel.asm	/^f0100175:	ec                   	in     (%dx),%al$/;"	l
+f0100176	obj/kern/kernel.asm	/^f0100176:	0f b6 c0             	movzbl %al,%eax$/;"	l
+f0100179	obj/kern/kernel.asm	/^f0100179:	eb 05                	jmp    f0100180 <serial_proc_data+0x1a>$/;"	l
+f010017b	obj/kern/kernel.asm	/^f010017b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
+f0100180	obj/kern/kernel.asm	/^f0100180:	5d                   	pop    %ebp$/;"	l
+f0100181	obj/kern/kernel.asm	/^f0100181:	c3                   	ret    $/;"	l
+f0100182	obj/kern/kernel.asm	/^f0100182 <cons_intr>:$/;"	l
+f0100182	obj/kern/kernel.asm	/^f0100182:	55                   	push   %ebp$/;"	l
+f0100183	obj/kern/kernel.asm	/^f0100183:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100185	obj/kern/kernel.asm	/^f0100185:	53                   	push   %ebx$/;"	l
+f0100186	obj/kern/kernel.asm	/^f0100186:	83 ec 04             	sub    $0x4,%esp$/;"	l
+f0100189	obj/kern/kernel.asm	/^f0100189:	89 c3                	mov    %eax,%ebx$/;"	l
+f010018b	obj/kern/kernel.asm	/^f010018b:	eb 29                	jmp    f01001b6 <cons_intr+0x34>$/;"	l
+f010018d	obj/kern/kernel.asm	/^f010018d:	85 c0                	test   %eax,%eax$/;"	l
+f010018f	obj/kern/kernel.asm	/^f010018f:	74 25                	je     f01001b6 <cons_intr+0x34>$/;"	l
+f0100191	obj/kern/kernel.asm	/^f0100191:	8b 15 84 51 1e f0    	mov    0xf01e5184,%edx$/;"	l
+f0100197	obj/kern/kernel.asm	/^f0100197:	88 82 80 4f 1e f0    	mov    %al,-0xfe1b080(%edx)$/;"	l
+f010019d	obj/kern/kernel.asm	/^f010019d:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
+f01001a0	obj/kern/kernel.asm	/^f01001a0:	a3 84 51 1e f0       	mov    %eax,0xf01e5184$/;"	l
+f01001a5	obj/kern/kernel.asm	/^f01001a5:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
+f01001aa	obj/kern/kernel.asm	/^f01001aa:	75 0a                	jne    f01001b6 <cons_intr+0x34>$/;"	l
+f01001ac	obj/kern/kernel.asm	/^f01001ac:	c7 05 84 51 1e f0 00 	movl   $0x0,0xf01e5184$/;"	l
+f01001b3	obj/kern/kernel.asm	/^f01001b3:	00 00 00 $/;"	l
+f01001b6	obj/kern/kernel.asm	/^f01001b6:	ff d3                	call   *%ebx$/;"	l
+f01001b8	obj/kern/kernel.asm	/^f01001b8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
+f01001bb	obj/kern/kernel.asm	/^f01001bb:	75 d0                	jne    f010018d <cons_intr+0xb>$/;"	l
+f01001bd	obj/kern/kernel.asm	/^f01001bd:	83 c4 04             	add    $0x4,%esp$/;"	l
+f01001c0	obj/kern/kernel.asm	/^f01001c0:	5b                   	pop    %ebx$/;"	l
+f01001c1	obj/kern/kernel.asm	/^f01001c1:	5d                   	pop    %ebp$/;"	l
+f01001c2	obj/kern/kernel.asm	/^f01001c2:	c3                   	ret    $/;"	l
+f01001c3	obj/kern/kernel.asm	/^f01001c3 <cons_putc>:$/;"	l
+f01001c3	obj/kern/kernel.asm	/^f01001c3:	55                   	push   %ebp$/;"	l
+f01001c4	obj/kern/kernel.asm	/^f01001c4:	89 e5                	mov    %esp,%ebp$/;"	l
+f01001c6	obj/kern/kernel.asm	/^f01001c6:	57                   	push   %edi$/;"	l
+f01001c7	obj/kern/kernel.asm	/^f01001c7:	56                   	push   %esi$/;"	l
+f01001c8	obj/kern/kernel.asm	/^f01001c8:	53                   	push   %ebx$/;"	l
+f01001c9	obj/kern/kernel.asm	/^f01001c9:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
+f01001cc	obj/kern/kernel.asm	/^f01001cc:	89 c6                	mov    %eax,%esi$/;"	l
+f01001ce	obj/kern/kernel.asm	/^f01001ce:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
+f01001d3	obj/kern/kernel.asm	/^f01001d3:	bf fd 03 00 00       	mov    $0x3fd,%edi$/;"	l
+f01001d8	obj/kern/kernel.asm	/^f01001d8:	eb 05                	jmp    f01001df <cons_putc+0x1c>$/;"	l
+f01001da	obj/kern/kernel.asm	/^f01001da:	e8 79 ff ff ff       	call   f0100158 <delay>$/;"	l
+f01001df	obj/kern/kernel.asm	/^f01001df:	89 fa                	mov    %edi,%edx$/;"	l
+f01001e1	obj/kern/kernel.asm	/^f01001e1:	ec                   	in     (%dx),%al$/;"	l
+f01001e2	obj/kern/kernel.asm	/^f01001e2:	a8 20                	test   $0x20,%al$/;"	l
+f01001e4	obj/kern/kernel.asm	/^f01001e4:	75 03                	jne    f01001e9 <cons_putc+0x26>$/;"	l
+f01001e6	obj/kern/kernel.asm	/^f01001e6:	4b                   	dec    %ebx$/;"	l
+f01001e7	obj/kern/kernel.asm	/^f01001e7:	75 f1                	jne    f01001da <cons_putc+0x17>$/;"	l
+f01001e9	obj/kern/kernel.asm	/^f01001e9:	89 f2                	mov    %esi,%edx$/;"	l
+f01001eb	obj/kern/kernel.asm	/^f01001eb:	89 f0                	mov    %esi,%eax$/;"	l
+f01001ed	obj/kern/kernel.asm	/^f01001ed:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
+f01001f0	obj/kern/kernel.asm	/^f01001f0:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
+f01001f5	obj/kern/kernel.asm	/^f01001f5:	ee                   	out    %al,(%dx)$/;"	l
+f01001f6	obj/kern/kernel.asm	/^f01001f6:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
+f01001fb	obj/kern/kernel.asm	/^f01001fb:	bf 79 03 00 00       	mov    $0x379,%edi$/;"	l
+f0100200	obj/kern/kernel.asm	/^f0100200:	eb 05                	jmp    f0100207 <cons_putc+0x44>$/;"	l
+f0100202	obj/kern/kernel.asm	/^f0100202:	e8 51 ff ff ff       	call   f0100158 <delay>$/;"	l
+f0100207	obj/kern/kernel.asm	/^f0100207:	89 fa                	mov    %edi,%edx$/;"	l
+f0100209	obj/kern/kernel.asm	/^f0100209:	ec                   	in     (%dx),%al$/;"	l
+f010020a	obj/kern/kernel.asm	/^f010020a:	84 c0                	test   %al,%al$/;"	l
+f010020c	obj/kern/kernel.asm	/^f010020c:	78 03                	js     f0100211 <cons_putc+0x4e>$/;"	l
+f010020e	obj/kern/kernel.asm	/^f010020e:	4b                   	dec    %ebx$/;"	l
+f010020f	obj/kern/kernel.asm	/^f010020f:	75 f1                	jne    f0100202 <cons_putc+0x3f>$/;"	l
+f0100211	obj/kern/kernel.asm	/^f0100211:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
+f0100216	obj/kern/kernel.asm	/^f0100216:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
+f0100219	obj/kern/kernel.asm	/^f0100219:	ee                   	out    %al,(%dx)$/;"	l
+f010021a	obj/kern/kernel.asm	/^f010021a:	b2 7a                	mov    $0x7a,%dl$/;"	l
+f010021c	obj/kern/kernel.asm	/^f010021c:	b0 0d                	mov    $0xd,%al$/;"	l
+f010021e	obj/kern/kernel.asm	/^f010021e:	ee                   	out    %al,(%dx)$/;"	l
+f010021f	obj/kern/kernel.asm	/^f010021f:	b0 08                	mov    $0x8,%al$/;"	l
+f0100221	obj/kern/kernel.asm	/^f0100221:	ee                   	out    %al,(%dx)$/;"	l
+f0100222	obj/kern/kernel.asm	/^f0100222:	f7 c6 00 ff ff ff    	test   $0xffffff00,%esi$/;"	l
+f0100228	obj/kern/kernel.asm	/^f0100228:	75 06                	jne    f0100230 <cons_putc+0x6d>$/;"	l
+f010022a	obj/kern/kernel.asm	/^f010022a:	81 ce 00 07 00 00    	or     $0x700,%esi$/;"	l
+f0100230	obj/kern/kernel.asm	/^f0100230:	89 f0                	mov    %esi,%eax$/;"	l
+f0100232	obj/kern/kernel.asm	/^f0100232:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
+f0100237	obj/kern/kernel.asm	/^f0100237:	83 f8 09             	cmp    $0x9,%eax$/;"	l
+f010023a	obj/kern/kernel.asm	/^f010023a:	74 78                	je     f01002b4 <cons_putc+0xf1>$/;"	l
+f010023c	obj/kern/kernel.asm	/^f010023c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
+f010023f	obj/kern/kernel.asm	/^f010023f:	7f 0b                	jg     f010024c <cons_putc+0x89>$/;"	l
+f0100241	obj/kern/kernel.asm	/^f0100241:	83 f8 08             	cmp    $0x8,%eax$/;"	l
+f0100244	obj/kern/kernel.asm	/^f0100244:	0f 85 9e 00 00 00    	jne    f01002e8 <cons_putc+0x125>$/;"	l
+f010024a	obj/kern/kernel.asm	/^f010024a:	eb 10                	jmp    f010025c <cons_putc+0x99>$/;"	l
+f010024c	obj/kern/kernel.asm	/^f010024c:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
+f010024f	obj/kern/kernel.asm	/^f010024f:	74 39                	je     f010028a <cons_putc+0xc7>$/;"	l
+f0100251	obj/kern/kernel.asm	/^f0100251:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
+f0100254	obj/kern/kernel.asm	/^f0100254:	0f 85 8e 00 00 00    	jne    f01002e8 <cons_putc+0x125>$/;"	l
+f010025a	obj/kern/kernel.asm	/^f010025a:	eb 36                	jmp    f0100292 <cons_putc+0xcf>$/;"	l
+f010025c	obj/kern/kernel.asm	/^f010025c:	66 a1 94 51 1e f0    	mov    0xf01e5194,%ax$/;"	l
+f0100262	obj/kern/kernel.asm	/^f0100262:	66 85 c0             	test   %ax,%ax$/;"	l
+f0100265	obj/kern/kernel.asm	/^f0100265:	0f 84 e2 00 00 00    	je     f010034d <cons_putc+0x18a>$/;"	l
+f010026b	obj/kern/kernel.asm	/^f010026b:	48                   	dec    %eax$/;"	l
+f010026c	obj/kern/kernel.asm	/^f010026c:	66 a3 94 51 1e f0    	mov    %ax,0xf01e5194$/;"	l
+f0100272	obj/kern/kernel.asm	/^f0100272:	0f b7 c0             	movzwl %ax,%eax$/;"	l
+f0100275	obj/kern/kernel.asm	/^f0100275:	81 e6 00 ff ff ff    	and    $0xffffff00,%esi$/;"	l
+f010027b	obj/kern/kernel.asm	/^f010027b:	83 ce 20             	or     $0x20,%esi$/;"	l
+f010027e	obj/kern/kernel.asm	/^f010027e:	8b 15 90 51 1e f0    	mov    0xf01e5190,%edx$/;"	l
+f0100284	obj/kern/kernel.asm	/^f0100284:	66 89 34 42          	mov    %si,(%edx,%eax,2)$/;"	l
+f0100288	obj/kern/kernel.asm	/^f0100288:	eb 78                	jmp    f0100302 <cons_putc+0x13f>$/;"	l
+f010028a	obj/kern/kernel.asm	/^f010028a:	66 83 05 94 51 1e f0 	addw   $0x50,0xf01e5194$/;"	l
+f0100291	obj/kern/kernel.asm	/^f0100291:	50 $/;"	l
+f0100292	obj/kern/kernel.asm	/^f0100292:	66 8b 0d 94 51 1e f0 	mov    0xf01e5194,%cx$/;"	l
+f0100299	obj/kern/kernel.asm	/^f0100299:	bb 50 00 00 00       	mov    $0x50,%ebx$/;"	l
+f010029e	obj/kern/kernel.asm	/^f010029e:	89 c8                	mov    %ecx,%eax$/;"	l
+f01002a0	obj/kern/kernel.asm	/^f01002a0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f01002a5	obj/kern/kernel.asm	/^f01002a5:	66 f7 f3             	div    %bx$/;"	l
+f01002a8	obj/kern/kernel.asm	/^f01002a8:	66 29 d1             	sub    %dx,%cx$/;"	l
+f01002ab	obj/kern/kernel.asm	/^f01002ab:	66 89 0d 94 51 1e f0 	mov    %cx,0xf01e5194$/;"	l
+f01002b2	obj/kern/kernel.asm	/^f01002b2:	eb 4e                	jmp    f0100302 <cons_putc+0x13f>$/;"	l
+f01002b4	obj/kern/kernel.asm	/^f01002b4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
+f01002b9	obj/kern/kernel.asm	/^f01002b9:	e8 05 ff ff ff       	call   f01001c3 <cons_putc>$/;"	l
+f01002be	obj/kern/kernel.asm	/^f01002be:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
+f01002c3	obj/kern/kernel.asm	/^f01002c3:	e8 fb fe ff ff       	call   f01001c3 <cons_putc>$/;"	l
+f01002c8	obj/kern/kernel.asm	/^f01002c8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
+f01002cd	obj/kern/kernel.asm	/^f01002cd:	e8 f1 fe ff ff       	call   f01001c3 <cons_putc>$/;"	l
+f01002d2	obj/kern/kernel.asm	/^f01002d2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
+f01002d7	obj/kern/kernel.asm	/^f01002d7:	e8 e7 fe ff ff       	call   f01001c3 <cons_putc>$/;"	l
+f01002dc	obj/kern/kernel.asm	/^f01002dc:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
+f01002e1	obj/kern/kernel.asm	/^f01002e1:	e8 dd fe ff ff       	call   f01001c3 <cons_putc>$/;"	l
+f01002e6	obj/kern/kernel.asm	/^f01002e6:	eb 1a                	jmp    f0100302 <cons_putc+0x13f>$/;"	l
+f01002e8	obj/kern/kernel.asm	/^f01002e8:	66 a1 94 51 1e f0    	mov    0xf01e5194,%ax$/;"	l
+f01002ee	obj/kern/kernel.asm	/^f01002ee:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
+f01002f1	obj/kern/kernel.asm	/^f01002f1:	8b 15 90 51 1e f0    	mov    0xf01e5190,%edx$/;"	l
+f01002f7	obj/kern/kernel.asm	/^f01002f7:	66 89 34 4a          	mov    %si,(%edx,%ecx,2)$/;"	l
+f01002fb	obj/kern/kernel.asm	/^f01002fb:	40                   	inc    %eax$/;"	l
+f01002fc	obj/kern/kernel.asm	/^f01002fc:	66 a3 94 51 1e f0    	mov    %ax,0xf01e5194$/;"	l
+f0100302	obj/kern/kernel.asm	/^f0100302:	66 81 3d 94 51 1e f0 	cmpw   $0x7cf,0xf01e5194$/;"	l
+f0100309	obj/kern/kernel.asm	/^f0100309:	cf 07 $/;"	l
+f010030b	obj/kern/kernel.asm	/^f010030b:	76 40                	jbe    f010034d <cons_putc+0x18a>$/;"	l
+f010030d	obj/kern/kernel.asm	/^f010030d:	a1 90 51 1e f0       	mov    0xf01e5190,%eax$/;"	l
+f0100312	obj/kern/kernel.asm	/^f0100312:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
+f0100319	obj/kern/kernel.asm	/^f0100319:	00 $/;"	l
+f010031a	obj/kern/kernel.asm	/^f010031a:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
+f0100320	obj/kern/kernel.asm	/^f0100320:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
+f0100324	obj/kern/kernel.asm	/^f0100324:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0100327	obj/kern/kernel.asm	/^f0100327:	e8 30 46 00 00       	call   f010495c <memmove>$/;"	l
+f010032c	obj/kern/kernel.asm	/^f010032c:	8b 15 90 51 1e f0    	mov    0xf01e5190,%edx$/;"	l
+f0100332	obj/kern/kernel.asm	/^f0100332:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
+f0100337	obj/kern/kernel.asm	/^f0100337:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
+f010033d	obj/kern/kernel.asm	/^f010033d:	40                   	inc    %eax$/;"	l
+f010033e	obj/kern/kernel.asm	/^f010033e:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
+f0100343	obj/kern/kernel.asm	/^f0100343:	75 f2                	jne    f0100337 <cons_putc+0x174>$/;"	l
+f0100345	obj/kern/kernel.asm	/^f0100345:	66 83 2d 94 51 1e f0 	subw   $0x50,0xf01e5194$/;"	l
+f010034c	obj/kern/kernel.asm	/^f010034c:	50 $/;"	l
+f010034d	obj/kern/kernel.asm	/^f010034d:	8b 0d 8c 51 1e f0    	mov    0xf01e518c,%ecx$/;"	l
+f0100353	obj/kern/kernel.asm	/^f0100353:	b0 0e                	mov    $0xe,%al$/;"	l
+f0100355	obj/kern/kernel.asm	/^f0100355:	89 ca                	mov    %ecx,%edx$/;"	l
+f0100357	obj/kern/kernel.asm	/^f0100357:	ee                   	out    %al,(%dx)$/;"	l
+f0100358	obj/kern/kernel.asm	/^f0100358:	66 8b 35 94 51 1e f0 	mov    0xf01e5194,%si$/;"	l
+f010035f	obj/kern/kernel.asm	/^f010035f:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
+f0100362	obj/kern/kernel.asm	/^f0100362:	89 f0                	mov    %esi,%eax$/;"	l
+f0100364	obj/kern/kernel.asm	/^f0100364:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
+f0100368	obj/kern/kernel.asm	/^f0100368:	89 da                	mov    %ebx,%edx$/;"	l
+f010036a	obj/kern/kernel.asm	/^f010036a:	ee                   	out    %al,(%dx)$/;"	l
+f010036b	obj/kern/kernel.asm	/^f010036b:	b0 0f                	mov    $0xf,%al$/;"	l
+f010036d	obj/kern/kernel.asm	/^f010036d:	89 ca                	mov    %ecx,%edx$/;"	l
+f010036f	obj/kern/kernel.asm	/^f010036f:	ee                   	out    %al,(%dx)$/;"	l
+f0100370	obj/kern/kernel.asm	/^f0100370:	89 f0                	mov    %esi,%eax$/;"	l
+f0100372	obj/kern/kernel.asm	/^f0100372:	89 da                	mov    %ebx,%edx$/;"	l
+f0100374	obj/kern/kernel.asm	/^f0100374:	ee                   	out    %al,(%dx)$/;"	l
+f0100375	obj/kern/kernel.asm	/^f0100375:	83 c4 2c             	add    $0x2c,%esp$/;"	l
+f0100378	obj/kern/kernel.asm	/^f0100378:	5b                   	pop    %ebx$/;"	l
+f0100379	obj/kern/kernel.asm	/^f0100379:	5e                   	pop    %esi$/;"	l
+f010037a	obj/kern/kernel.asm	/^f010037a:	5f                   	pop    %edi$/;"	l
+f010037b	obj/kern/kernel.asm	/^f010037b:	5d                   	pop    %ebp$/;"	l
+f010037c	obj/kern/kernel.asm	/^f010037c:	c3                   	ret    $/;"	l
+f010037d	obj/kern/kernel.asm	/^f010037d <kbd_proc_data>:$/;"	l
+f010037d	obj/kern/kernel.asm	/^f010037d:	55                   	push   %ebp$/;"	l
+f010037e	obj/kern/kernel.asm	/^f010037e:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100380	obj/kern/kernel.asm	/^f0100380:	53                   	push   %ebx$/;"	l
+f0100381	obj/kern/kernel.asm	/^f0100381:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0100384	obj/kern/kernel.asm	/^f0100384:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
+f0100389	obj/kern/kernel.asm	/^f0100389:	ec                   	in     (%dx),%al$/;"	l
+f010038a	obj/kern/kernel.asm	/^f010038a:	a8 01                	test   $0x1,%al$/;"	l
+f010038c	obj/kern/kernel.asm	/^f010038c:	0f 84 d8 00 00 00    	je     f010046a <kbd_proc_data+0xed>$/;"	l
+f0100392	obj/kern/kernel.asm	/^f0100392:	b2 60                	mov    $0x60,%dl$/;"	l
+f0100394	obj/kern/kernel.asm	/^f0100394:	ec                   	in     (%dx),%al$/;"	l
+f0100395	obj/kern/kernel.asm	/^f0100395:	88 c2                	mov    %al,%dl$/;"	l
+f0100397	obj/kern/kernel.asm	/^f0100397:	3c e0                	cmp    $0xe0,%al$/;"	l
+f0100399	obj/kern/kernel.asm	/^f0100399:	75 11                	jne    f01003ac <kbd_proc_data+0x2f>$/;"	l
+f010039b	obj/kern/kernel.asm	/^f010039b:	83 0d 88 51 1e f0 40 	orl    $0x40,0xf01e5188$/;"	l
+f01003a2	obj/kern/kernel.asm	/^f01003a2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
+f01003a7	obj/kern/kernel.asm	/^f01003a7:	e9 c3 00 00 00       	jmp    f010046f <kbd_proc_data+0xf2>$/;"	l
+f01003ac	obj/kern/kernel.asm	/^f01003ac:	84 c0                	test   %al,%al$/;"	l
+f01003ae	obj/kern/kernel.asm	/^f01003ae:	79 33                	jns    f01003e3 <kbd_proc_data+0x66>$/;"	l
+f01003b0	obj/kern/kernel.asm	/^f01003b0:	8b 0d 88 51 1e f0    	mov    0xf01e5188,%ecx$/;"	l
+f01003b6	obj/kern/kernel.asm	/^f01003b6:	f6 c1 40             	test   $0x40,%cl$/;"	l
+f01003b9	obj/kern/kernel.asm	/^f01003b9:	75 05                	jne    f01003c0 <kbd_proc_data+0x43>$/;"	l
+f01003bb	obj/kern/kernel.asm	/^f01003bb:	88 c2                	mov    %al,%dl$/;"	l
+f01003bd	obj/kern/kernel.asm	/^f01003bd:	83 e2 7f             	and    $0x7f,%edx$/;"	l
+f01003c0	obj/kern/kernel.asm	/^f01003c0:	0f b6 d2             	movzbl %dl,%edx$/;"	l
+f01003c3	obj/kern/kernel.asm	/^f01003c3:	8a 82 e0 4d 10 f0    	mov    -0xfefb220(%edx),%al$/;"	l
+f01003c9	obj/kern/kernel.asm	/^f01003c9:	83 c8 40             	or     $0x40,%eax$/;"	l
+f01003cc	obj/kern/kernel.asm	/^f01003cc:	0f b6 c0             	movzbl %al,%eax$/;"	l
+f01003cf	obj/kern/kernel.asm	/^f01003cf:	f7 d0                	not    %eax$/;"	l
+f01003d1	obj/kern/kernel.asm	/^f01003d1:	21 c1                	and    %eax,%ecx$/;"	l
+f01003d3	obj/kern/kernel.asm	/^f01003d3:	89 0d 88 51 1e f0    	mov    %ecx,0xf01e5188$/;"	l
+f01003d9	obj/kern/kernel.asm	/^f01003d9:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
+f01003de	obj/kern/kernel.asm	/^f01003de:	e9 8c 00 00 00       	jmp    f010046f <kbd_proc_data+0xf2>$/;"	l
+f01003e3	obj/kern/kernel.asm	/^f01003e3:	8b 0d 88 51 1e f0    	mov    0xf01e5188,%ecx$/;"	l
+f01003e9	obj/kern/kernel.asm	/^f01003e9:	f6 c1 40             	test   $0x40,%cl$/;"	l
+f01003ec	obj/kern/kernel.asm	/^f01003ec:	74 0e                	je     f01003fc <kbd_proc_data+0x7f>$/;"	l
+f01003ee	obj/kern/kernel.asm	/^f01003ee:	88 c2                	mov    %al,%dl$/;"	l
+f01003f0	obj/kern/kernel.asm	/^f01003f0:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
+f01003f3	obj/kern/kernel.asm	/^f01003f3:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
+f01003f6	obj/kern/kernel.asm	/^f01003f6:	89 0d 88 51 1e f0    	mov    %ecx,0xf01e5188$/;"	l
+f01003fc	obj/kern/kernel.asm	/^f01003fc:	0f b6 d2             	movzbl %dl,%edx$/;"	l
+f01003ff	obj/kern/kernel.asm	/^f01003ff:	0f b6 82 e0 4d 10 f0 	movzbl -0xfefb220(%edx),%eax$/;"	l
+f0100406	obj/kern/kernel.asm	/^f0100406:	0b 05 88 51 1e f0    	or     0xf01e5188,%eax$/;"	l
+f010040c	obj/kern/kernel.asm	/^f010040c:	0f b6 8a e0 4e 10 f0 	movzbl -0xfefb120(%edx),%ecx$/;"	l
+f0100413	obj/kern/kernel.asm	/^f0100413:	31 c8                	xor    %ecx,%eax$/;"	l
+f0100415	obj/kern/kernel.asm	/^f0100415:	a3 88 51 1e f0       	mov    %eax,0xf01e5188$/;"	l
+f010041a	obj/kern/kernel.asm	/^f010041a:	89 c1                	mov    %eax,%ecx$/;"	l
+f010041c	obj/kern/kernel.asm	/^f010041c:	83 e1 03             	and    $0x3,%ecx$/;"	l
+f010041f	obj/kern/kernel.asm	/^f010041f:	8b 0c 8d e0 4f 10 f0 	mov    -0xfefb020(,%ecx,4),%ecx$/;"	l
+f0100426	obj/kern/kernel.asm	/^f0100426:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
+f010042a	obj/kern/kernel.asm	/^f010042a:	a8 08                	test   $0x8,%al$/;"	l
+f010042c	obj/kern/kernel.asm	/^f010042c:	74 18                	je     f0100446 <kbd_proc_data+0xc9>$/;"	l
+f010042e	obj/kern/kernel.asm	/^f010042e:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
+f0100431	obj/kern/kernel.asm	/^f0100431:	83 fa 19             	cmp    $0x19,%edx$/;"	l
+f0100434	obj/kern/kernel.asm	/^f0100434:	77 05                	ja     f010043b <kbd_proc_data+0xbe>$/;"	l
+f0100436	obj/kern/kernel.asm	/^f0100436:	83 eb 20             	sub    $0x20,%ebx$/;"	l
+f0100439	obj/kern/kernel.asm	/^f0100439:	eb 0b                	jmp    f0100446 <kbd_proc_data+0xc9>$/;"	l
+f010043b	obj/kern/kernel.asm	/^f010043b:	8d 53 bf             	lea    -0x41(%ebx),%edx$/;"	l
+f010043e	obj/kern/kernel.asm	/^f010043e:	83 fa 19             	cmp    $0x19,%edx$/;"	l
+f0100441	obj/kern/kernel.asm	/^f0100441:	77 03                	ja     f0100446 <kbd_proc_data+0xc9>$/;"	l
+f0100443	obj/kern/kernel.asm	/^f0100443:	83 c3 20             	add    $0x20,%ebx$/;"	l
+f0100446	obj/kern/kernel.asm	/^f0100446:	f7 d0                	not    %eax$/;"	l
+f0100448	obj/kern/kernel.asm	/^f0100448:	a8 06                	test   $0x6,%al$/;"	l
+f010044a	obj/kern/kernel.asm	/^f010044a:	75 23                	jne    f010046f <kbd_proc_data+0xf2>$/;"	l
+f010044c	obj/kern/kernel.asm	/^f010044c:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
+f0100452	obj/kern/kernel.asm	/^f0100452:	75 1b                	jne    f010046f <kbd_proc_data+0xf2>$/;"	l
+f0100454	obj/kern/kernel.asm	/^f0100454:	c7 04 24 ad 4d 10 f0 	movl   $0xf0104dad,(%esp)$/;"	l
+f010045b	obj/kern/kernel.asm	/^f010045b:	e8 c6 32 00 00       	call   f0103726 <cprintf>$/;"	l
+f0100460	obj/kern/kernel.asm	/^f0100460:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
+f0100465	obj/kern/kernel.asm	/^f0100465:	b0 03                	mov    $0x3,%al$/;"	l
+f0100467	obj/kern/kernel.asm	/^f0100467:	ee                   	out    %al,(%dx)$/;"	l
+f0100468	obj/kern/kernel.asm	/^f0100468:	eb 05                	jmp    f010046f <kbd_proc_data+0xf2>$/;"	l
+f010046a	obj/kern/kernel.asm	/^f010046a:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
+f010046f	obj/kern/kernel.asm	/^f010046f:	89 d8                	mov    %ebx,%eax$/;"	l
+f0100471	obj/kern/kernel.asm	/^f0100471:	83 c4 14             	add    $0x14,%esp$/;"	l
+f0100474	obj/kern/kernel.asm	/^f0100474:	5b                   	pop    %ebx$/;"	l
+f0100475	obj/kern/kernel.asm	/^f0100475:	5d                   	pop    %ebp$/;"	l
+f0100476	obj/kern/kernel.asm	/^f0100476:	c3                   	ret    $/;"	l
+f0100477	obj/kern/kernel.asm	/^f0100477 <serial_intr>:$/;"	l
+f0100477	obj/kern/kernel.asm	/^f0100477:	55                   	push   %ebp$/;"	l
+f0100478	obj/kern/kernel.asm	/^f0100478:	89 e5                	mov    %esp,%ebp$/;"	l
+f010047a	obj/kern/kernel.asm	/^f010047a:	83 ec 08             	sub    $0x8,%esp$/;"	l
+f010047d	obj/kern/kernel.asm	/^f010047d:	80 3d 60 4f 1e f0 00 	cmpb   $0x0,0xf01e4f60$/;"	l
+f0100484	obj/kern/kernel.asm	/^f0100484:	74 0a                	je     f0100490 <serial_intr+0x19>$/;"	l
+f0100486	obj/kern/kernel.asm	/^f0100486:	b8 66 01 10 f0       	mov    $0xf0100166,%eax$/;"	l
+f010048b	obj/kern/kernel.asm	/^f010048b:	e8 f2 fc ff ff       	call   f0100182 <cons_intr>$/;"	l
+f0100490	obj/kern/kernel.asm	/^f0100490:	c9                   	leave  $/;"	l
+f0100491	obj/kern/kernel.asm	/^f0100491:	c3                   	ret    $/;"	l
+f0100492	obj/kern/kernel.asm	/^f0100492 <kbd_intr>:$/;"	l
+f0100492	obj/kern/kernel.asm	/^f0100492:	55                   	push   %ebp$/;"	l
+f0100493	obj/kern/kernel.asm	/^f0100493:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100495	obj/kern/kernel.asm	/^f0100495:	83 ec 08             	sub    $0x8,%esp$/;"	l
+f0100498	obj/kern/kernel.asm	/^f0100498:	b8 7d 03 10 f0       	mov    $0xf010037d,%eax$/;"	l
+f010049d	obj/kern/kernel.asm	/^f010049d:	e8 e0 fc ff ff       	call   f0100182 <cons_intr>$/;"	l
+f01004a2	obj/kern/kernel.asm	/^f01004a2:	c9                   	leave  $/;"	l
+f01004a3	obj/kern/kernel.asm	/^f01004a3:	c3                   	ret    $/;"	l
+f01004a4	obj/kern/kernel.asm	/^f01004a4 <cons_getc>:$/;"	l
+f01004a4	obj/kern/kernel.asm	/^f01004a4:	55                   	push   %ebp$/;"	l
+f01004a5	obj/kern/kernel.asm	/^f01004a5:	89 e5                	mov    %esp,%ebp$/;"	l
+f01004a7	obj/kern/kernel.asm	/^f01004a7:	83 ec 08             	sub    $0x8,%esp$/;"	l
+f01004aa	obj/kern/kernel.asm	/^f01004aa:	e8 c8 ff ff ff       	call   f0100477 <serial_intr>$/;"	l
+f01004af	obj/kern/kernel.asm	/^f01004af:	e8 de ff ff ff       	call   f0100492 <kbd_intr>$/;"	l
+f01004b4	obj/kern/kernel.asm	/^f01004b4:	8b 15 80 51 1e f0    	mov    0xf01e5180,%edx$/;"	l
+f01004ba	obj/kern/kernel.asm	/^f01004ba:	3b 15 84 51 1e f0    	cmp    0xf01e5184,%edx$/;"	l
+f01004c0	obj/kern/kernel.asm	/^f01004c0:	74 22                	je     f01004e4 <cons_getc+0x40>$/;"	l
+f01004c2	obj/kern/kernel.asm	/^f01004c2:	0f b6 82 80 4f 1e f0 	movzbl -0xfe1b080(%edx),%eax$/;"	l
+f01004c9	obj/kern/kernel.asm	/^f01004c9:	42                   	inc    %edx$/;"	l
+f01004ca	obj/kern/kernel.asm	/^f01004ca:	89 15 80 51 1e f0    	mov    %edx,0xf01e5180$/;"	l
+f01004d0	obj/kern/kernel.asm	/^f01004d0:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
+f01004d6	obj/kern/kernel.asm	/^f01004d6:	75 11                	jne    f01004e9 <cons_getc+0x45>$/;"	l
+f01004d8	obj/kern/kernel.asm	/^f01004d8:	c7 05 80 51 1e f0 00 	movl   $0x0,0xf01e5180$/;"	l
+f01004df	obj/kern/kernel.asm	/^f01004df:	00 00 00 $/;"	l
+f01004e2	obj/kern/kernel.asm	/^f01004e2:	eb 05                	jmp    f01004e9 <cons_getc+0x45>$/;"	l
+f01004e4	obj/kern/kernel.asm	/^f01004e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01004e9	obj/kern/kernel.asm	/^f01004e9:	c9                   	leave  $/;"	l
+f01004ea	obj/kern/kernel.asm	/^f01004ea:	c3                   	ret    $/;"	l
+f01004eb	obj/kern/kernel.asm	/^f01004eb <cons_init>:$/;"	l
+f01004eb	obj/kern/kernel.asm	/^f01004eb:	55                   	push   %ebp$/;"	l
+f01004ec	obj/kern/kernel.asm	/^f01004ec:	89 e5                	mov    %esp,%ebp$/;"	l
+f01004ee	obj/kern/kernel.asm	/^f01004ee:	57                   	push   %edi$/;"	l
+f01004ef	obj/kern/kernel.asm	/^f01004ef:	56                   	push   %esi$/;"	l
+f01004f0	obj/kern/kernel.asm	/^f01004f0:	53                   	push   %ebx$/;"	l
+f01004f1	obj/kern/kernel.asm	/^f01004f1:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
+f01004f4	obj/kern/kernel.asm	/^f01004f4:	66 8b 15 00 80 0b f0 	mov    0xf00b8000,%dx$/;"	l
+f01004fb	obj/kern/kernel.asm	/^f01004fb:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
+f0100502	obj/kern/kernel.asm	/^f0100502:	5a a5 $/;"	l
+f0100504	obj/kern/kernel.asm	/^f0100504:	66 a1 00 80 0b f0    	mov    0xf00b8000,%ax$/;"	l
+f010050a	obj/kern/kernel.asm	/^f010050a:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
+f010050e	obj/kern/kernel.asm	/^f010050e:	74 11                	je     f0100521 <cons_init+0x36>$/;"	l
+f0100510	obj/kern/kernel.asm	/^f0100510:	c7 05 8c 51 1e f0 b4 	movl   $0x3b4,0xf01e518c$/;"	l
+f0100517	obj/kern/kernel.asm	/^f0100517:	03 00 00 $/;"	l
+f010051a	obj/kern/kernel.asm	/^f010051a:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
+f010051f	obj/kern/kernel.asm	/^f010051f:	eb 16                	jmp    f0100537 <cons_init+0x4c>$/;"	l
+f0100521	obj/kern/kernel.asm	/^f0100521:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
+f0100528	obj/kern/kernel.asm	/^f0100528:	c7 05 8c 51 1e f0 d4 	movl   $0x3d4,0xf01e518c$/;"	l
+f010052f	obj/kern/kernel.asm	/^f010052f:	03 00 00 $/;"	l
+f0100532	obj/kern/kernel.asm	/^f0100532:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
+f0100537	obj/kern/kernel.asm	/^f0100537:	8b 0d 8c 51 1e f0    	mov    0xf01e518c,%ecx$/;"	l
+f010053d	obj/kern/kernel.asm	/^f010053d:	b0 0e                	mov    $0xe,%al$/;"	l
+f010053f	obj/kern/kernel.asm	/^f010053f:	89 ca                	mov    %ecx,%edx$/;"	l
+f0100541	obj/kern/kernel.asm	/^f0100541:	ee                   	out    %al,(%dx)$/;"	l
+f0100542	obj/kern/kernel.asm	/^f0100542:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
+f0100545	obj/kern/kernel.asm	/^f0100545:	89 da                	mov    %ebx,%edx$/;"	l
+f0100547	obj/kern/kernel.asm	/^f0100547:	ec                   	in     (%dx),%al$/;"	l
+f0100548	obj/kern/kernel.asm	/^f0100548:	0f b6 f8             	movzbl %al,%edi$/;"	l
+f010054b	obj/kern/kernel.asm	/^f010054b:	c1 e7 08             	shl    $0x8,%edi$/;"	l
+f010054e	obj/kern/kernel.asm	/^f010054e:	b0 0f                	mov    $0xf,%al$/;"	l
+f0100550	obj/kern/kernel.asm	/^f0100550:	89 ca                	mov    %ecx,%edx$/;"	l
+f0100552	obj/kern/kernel.asm	/^f0100552:	ee                   	out    %al,(%dx)$/;"	l
+f0100553	obj/kern/kernel.asm	/^f0100553:	89 da                	mov    %ebx,%edx$/;"	l
+f0100555	obj/kern/kernel.asm	/^f0100555:	ec                   	in     (%dx),%al$/;"	l
+f0100556	obj/kern/kernel.asm	/^f0100556:	89 35 90 51 1e f0    	mov    %esi,0xf01e5190$/;"	l
+f010055c	obj/kern/kernel.asm	/^f010055c:	0f b6 d8             	movzbl %al,%ebx$/;"	l
+f010055f	obj/kern/kernel.asm	/^f010055f:	09 df                	or     %ebx,%edi$/;"	l
+f0100561	obj/kern/kernel.asm	/^f0100561:	66 89 3d 94 51 1e f0 	mov    %di,0xf01e5194$/;"	l
+f0100568	obj/kern/kernel.asm	/^f0100568:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
+f010056d	obj/kern/kernel.asm	/^f010056d:	b0 00                	mov    $0x0,%al$/;"	l
+f010056f	obj/kern/kernel.asm	/^f010056f:	89 da                	mov    %ebx,%edx$/;"	l
+f0100571	obj/kern/kernel.asm	/^f0100571:	ee                   	out    %al,(%dx)$/;"	l
+f0100572	obj/kern/kernel.asm	/^f0100572:	b2 fb                	mov    $0xfb,%dl$/;"	l
+f0100574	obj/kern/kernel.asm	/^f0100574:	b0 80                	mov    $0x80,%al$/;"	l
+f0100576	obj/kern/kernel.asm	/^f0100576:	ee                   	out    %al,(%dx)$/;"	l
+f0100577	obj/kern/kernel.asm	/^f0100577:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
+f010057c	obj/kern/kernel.asm	/^f010057c:	b0 0c                	mov    $0xc,%al$/;"	l
+f010057e	obj/kern/kernel.asm	/^f010057e:	89 ca                	mov    %ecx,%edx$/;"	l
+f0100580	obj/kern/kernel.asm	/^f0100580:	ee                   	out    %al,(%dx)$/;"	l
+f0100581	obj/kern/kernel.asm	/^f0100581:	b2 f9                	mov    $0xf9,%dl$/;"	l
+f0100583	obj/kern/kernel.asm	/^f0100583:	b0 00                	mov    $0x0,%al$/;"	l
+f0100585	obj/kern/kernel.asm	/^f0100585:	ee                   	out    %al,(%dx)$/;"	l
+f0100586	obj/kern/kernel.asm	/^f0100586:	b2 fb                	mov    $0xfb,%dl$/;"	l
+f0100588	obj/kern/kernel.asm	/^f0100588:	b0 03                	mov    $0x3,%al$/;"	l
+f010058a	obj/kern/kernel.asm	/^f010058a:	ee                   	out    %al,(%dx)$/;"	l
+f010058b	obj/kern/kernel.asm	/^f010058b:	b2 fc                	mov    $0xfc,%dl$/;"	l
+f010058d	obj/kern/kernel.asm	/^f010058d:	b0 00                	mov    $0x0,%al$/;"	l
+f010058f	obj/kern/kernel.asm	/^f010058f:	ee                   	out    %al,(%dx)$/;"	l
+f0100590	obj/kern/kernel.asm	/^f0100590:	b2 f9                	mov    $0xf9,%dl$/;"	l
+f0100592	obj/kern/kernel.asm	/^f0100592:	b0 01                	mov    $0x1,%al$/;"	l
+f0100594	obj/kern/kernel.asm	/^f0100594:	ee                   	out    %al,(%dx)$/;"	l
+f0100595	obj/kern/kernel.asm	/^f0100595:	b2 fd                	mov    $0xfd,%dl$/;"	l
+f0100597	obj/kern/kernel.asm	/^f0100597:	ec                   	in     (%dx),%al$/;"	l
+f0100598	obj/kern/kernel.asm	/^f0100598:	3c ff                	cmp    $0xff,%al$/;"	l
+f010059a	obj/kern/kernel.asm	/^f010059a:	0f 95 45 e7          	setne  -0x19(%ebp)$/;"	l
+f010059e	obj/kern/kernel.asm	/^f010059e:	8a 45 e7             	mov    -0x19(%ebp),%al$/;"	l
+f01005a1	obj/kern/kernel.asm	/^f01005a1:	a2 60 4f 1e f0       	mov    %al,0xf01e4f60$/;"	l
+f01005a6	obj/kern/kernel.asm	/^f01005a6:	89 da                	mov    %ebx,%edx$/;"	l
+f01005a8	obj/kern/kernel.asm	/^f01005a8:	ec                   	in     (%dx),%al$/;"	l
+f01005a9	obj/kern/kernel.asm	/^f01005a9:	89 ca                	mov    %ecx,%edx$/;"	l
+f01005ab	obj/kern/kernel.asm	/^f01005ab:	ec                   	in     (%dx),%al$/;"	l
+f01005ac	obj/kern/kernel.asm	/^f01005ac:	80 7d e7 00          	cmpb   $0x0,-0x19(%ebp)$/;"	l
+f01005b0	obj/kern/kernel.asm	/^f01005b0:	75 0c                	jne    f01005be <cons_init+0xd3>$/;"	l
+f01005b2	obj/kern/kernel.asm	/^f01005b2:	c7 04 24 b9 4d 10 f0 	movl   $0xf0104db9,(%esp)$/;"	l
+f01005b9	obj/kern/kernel.asm	/^f01005b9:	e8 68 31 00 00       	call   f0103726 <cprintf>$/;"	l
+f01005be	obj/kern/kernel.asm	/^f01005be:	83 c4 2c             	add    $0x2c,%esp$/;"	l
+f01005c1	obj/kern/kernel.asm	/^f01005c1:	5b                   	pop    %ebx$/;"	l
+f01005c2	obj/kern/kernel.asm	/^f01005c2:	5e                   	pop    %esi$/;"	l
+f01005c3	obj/kern/kernel.asm	/^f01005c3:	5f                   	pop    %edi$/;"	l
+f01005c4	obj/kern/kernel.asm	/^f01005c4:	5d                   	pop    %ebp$/;"	l
+f01005c5	obj/kern/kernel.asm	/^f01005c5:	c3                   	ret    $/;"	l
+f01005c6	obj/kern/kernel.asm	/^f01005c6 <cputchar>:$/;"	l
+f01005c6	obj/kern/kernel.asm	/^f01005c6:	55                   	push   %ebp$/;"	l
+f01005c7	obj/kern/kernel.asm	/^f01005c7:	89 e5                	mov    %esp,%ebp$/;"	l
+f01005c9	obj/kern/kernel.asm	/^f01005c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
+f01005cc	obj/kern/kernel.asm	/^f01005cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01005cf	obj/kern/kernel.asm	/^f01005cf:	e8 ef fb ff ff       	call   f01001c3 <cons_putc>$/;"	l
+f01005d4	obj/kern/kernel.asm	/^f01005d4:	c9                   	leave  $/;"	l
+f01005d5	obj/kern/kernel.asm	/^f01005d5:	c3                   	ret    $/;"	l
+f01005d6	obj/kern/kernel.asm	/^f01005d6 <getchar>:$/;"	l
+f01005d6	obj/kern/kernel.asm	/^f01005d6:	55                   	push   %ebp$/;"	l
+f01005d7	obj/kern/kernel.asm	/^f01005d7:	89 e5                	mov    %esp,%ebp$/;"	l
+f01005d9	obj/kern/kernel.asm	/^f01005d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
+f01005dc	obj/kern/kernel.asm	/^f01005dc:	e8 c3 fe ff ff       	call   f01004a4 <cons_getc>$/;"	l
+f01005e1	obj/kern/kernel.asm	/^f01005e1:	85 c0                	test   %eax,%eax$/;"	l
+f01005e3	obj/kern/kernel.asm	/^f01005e3:	74 f7                	je     f01005dc <getchar+0x6>$/;"	l
+f01005e5	obj/kern/kernel.asm	/^f01005e5:	c9                   	leave  $/;"	l
+f01005e6	obj/kern/kernel.asm	/^f01005e6:	c3                   	ret    $/;"	l
+f01005e7	obj/kern/kernel.asm	/^f01005e7 <iscons>:$/;"	l
+f01005e7	obj/kern/kernel.asm	/^f01005e7:	55                   	push   %ebp$/;"	l
+f01005e8	obj/kern/kernel.asm	/^f01005e8:	89 e5                	mov    %esp,%ebp$/;"	l
+f01005ea	obj/kern/kernel.asm	/^f01005ea:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
+f01005ef	obj/kern/kernel.asm	/^f01005ef:	5d                   	pop    %ebp$/;"	l
+f01005f0	obj/kern/kernel.asm	/^f01005f0:	c3                   	ret    $/;"	l
+f01005f1	obj/kern/kernel.asm	/^f01005f1:	00 00                	add    %al,(%eax)$/;"	l
+f01005f4	obj/kern/kernel.asm	/^f01005f4 <mon_kerninfo>:$/;"	l
+f01005f4	obj/kern/kernel.asm	/^f01005f4:	55                   	push   %ebp$/;"	l
+f01005f5	obj/kern/kernel.asm	/^f01005f5:	89 e5                	mov    %esp,%ebp$/;"	l
+f01005f7	obj/kern/kernel.asm	/^f01005f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f01005fa	obj/kern/kernel.asm	/^f01005fa:	c7 04 24 f0 4f 10 f0 	movl   $0xf0104ff0,(%esp)$/;"	l
+f0100601	obj/kern/kernel.asm	/^f0100601:	e8 20 31 00 00       	call   f0103726 <cprintf>$/;"	l
+f0100606	obj/kern/kernel.asm	/^f0100606:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
+f010060d	obj/kern/kernel.asm	/^f010060d:	00 $/;"	l
+f010060e	obj/kern/kernel.asm	/^f010060e:	c7 04 24 8c 50 10 f0 	movl   $0xf010508c,(%esp)$/;"	l
+f0100615	obj/kern/kernel.asm	/^f0100615:	e8 0c 31 00 00       	call   f0103726 <cprintf>$/;"	l
+f010061a	obj/kern/kernel.asm	/^f010061a:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
+f0100621	obj/kern/kernel.asm	/^f0100621:	00 $/;"	l
+f0100622	obj/kern/kernel.asm	/^f0100622:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
+f0100629	obj/kern/kernel.asm	/^f0100629:	f0 $/;"	l
+f010062a	obj/kern/kernel.asm	/^f010062a:	c7 04 24 b4 50 10 f0 	movl   $0xf01050b4,(%esp)$/;"	l
+f0100631	obj/kern/kernel.asm	/^f0100631:	e8 f0 30 00 00       	call   f0103726 <cprintf>$/;"	l
+f0100636	obj/kern/kernel.asm	/^f0100636:	c7 44 24 08 56 4d 10 	movl   $0x104d56,0x8(%esp)$/;"	l
+f010063d	obj/kern/kernel.asm	/^f010063d:	00 $/;"	l
+f010063e	obj/kern/kernel.asm	/^f010063e:	c7 44 24 04 56 4d 10 	movl   $0xf0104d56,0x4(%esp)$/;"	l
+f0100645	obj/kern/kernel.asm	/^f0100645:	f0 $/;"	l
+f0100646	obj/kern/kernel.asm	/^f0100646:	c7 04 24 d8 50 10 f0 	movl   $0xf01050d8,(%esp)$/;"	l
+f010064d	obj/kern/kernel.asm	/^f010064d:	e8 d4 30 00 00       	call   f0103726 <cprintf>$/;"	l
+f0100652	obj/kern/kernel.asm	/^f0100652:	c7 44 24 08 51 4f 1e 	movl   $0x1e4f51,0x8(%esp)$/;"	l
+f0100659	obj/kern/kernel.asm	/^f0100659:	00 $/;"	l
+f010065a	obj/kern/kernel.asm	/^f010065a:	c7 44 24 04 51 4f 1e 	movl   $0xf01e4f51,0x4(%esp)$/;"	l
+f0100661	obj/kern/kernel.asm	/^f0100661:	f0 $/;"	l
+f0100662	obj/kern/kernel.asm	/^f0100662:	c7 04 24 fc 50 10 f0 	movl   $0xf01050fc,(%esp)$/;"	l
+f0100669	obj/kern/kernel.asm	/^f0100669:	e8 b8 30 00 00       	call   f0103726 <cprintf>$/;"	l
+f010066e	obj/kern/kernel.asm	/^f010066e:	c7 44 24 08 50 5e 1e 	movl   $0x1e5e50,0x8(%esp)$/;"	l
+f0100675	obj/kern/kernel.asm	/^f0100675:	00 $/;"	l
+f0100676	obj/kern/kernel.asm	/^f0100676:	c7 44 24 04 50 5e 1e 	movl   $0xf01e5e50,0x4(%esp)$/;"	l
+f010067d	obj/kern/kernel.asm	/^f010067d:	f0 $/;"	l
+f010067e	obj/kern/kernel.asm	/^f010067e:	c7 04 24 20 51 10 f0 	movl   $0xf0105120,(%esp)$/;"	l
+f0100685	obj/kern/kernel.asm	/^f0100685:	e8 9c 30 00 00       	call   f0103726 <cprintf>$/;"	l
+f010068a	obj/kern/kernel.asm	/^f010068a:	b8 4f 62 1e f0       	mov    $0xf01e624f,%eax$/;"	l
+f010068f	obj/kern/kernel.asm	/^f010068f:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
+f0100694	obj/kern/kernel.asm	/^f0100694:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
+f0100699	obj/kern/kernel.asm	/^f0100699:	89 c2                	mov    %eax,%edx$/;"	l
+f010069b	obj/kern/kernel.asm	/^f010069b:	85 c0                	test   %eax,%eax$/;"	l
+f010069d	obj/kern/kernel.asm	/^f010069d:	79 06                	jns    f01006a5 <mon_kerninfo+0xb1>$/;"	l
+f010069f	obj/kern/kernel.asm	/^f010069f:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
+f01006a5	obj/kern/kernel.asm	/^f01006a5:	c1 fa 0a             	sar    $0xa,%edx$/;"	l
+f01006a8	obj/kern/kernel.asm	/^f01006a8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
+f01006ac	obj/kern/kernel.asm	/^f01006ac:	c7 04 24 44 51 10 f0 	movl   $0xf0105144,(%esp)$/;"	l
+f01006b3	obj/kern/kernel.asm	/^f01006b3:	e8 6e 30 00 00       	call   f0103726 <cprintf>$/;"	l
+f01006b8	obj/kern/kernel.asm	/^f01006b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01006bd	obj/kern/kernel.asm	/^f01006bd:	c9                   	leave  $/;"	l
+f01006be	obj/kern/kernel.asm	/^f01006be:	c3                   	ret    $/;"	l
+f01006bf	obj/kern/kernel.asm	/^f01006bf <mon_help>:$/;"	l
+f01006bf	obj/kern/kernel.asm	/^f01006bf:	55                   	push   %ebp$/;"	l
+f01006c0	obj/kern/kernel.asm	/^f01006c0:	89 e5                	mov    %esp,%ebp$/;"	l
+f01006c2	obj/kern/kernel.asm	/^f01006c2:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f01006c5	obj/kern/kernel.asm	/^f01006c5:	c7 44 24 08 09 50 10 	movl   $0xf0105009,0x8(%esp)$/;"	l
+f01006cc	obj/kern/kernel.asm	/^f01006cc:	f0 $/;"	l
+f01006cd	obj/kern/kernel.asm	/^f01006cd:	c7 44 24 04 27 50 10 	movl   $0xf0105027,0x4(%esp)$/;"	l
+f01006d4	obj/kern/kernel.asm	/^f01006d4:	f0 $/;"	l
+f01006d5	obj/kern/kernel.asm	/^f01006d5:	c7 04 24 2c 50 10 f0 	movl   $0xf010502c,(%esp)$/;"	l
+f01006dc	obj/kern/kernel.asm	/^f01006dc:	e8 45 30 00 00       	call   f0103726 <cprintf>$/;"	l
+f01006e1	obj/kern/kernel.asm	/^f01006e1:	c7 44 24 08 70 51 10 	movl   $0xf0105170,0x8(%esp)$/;"	l
+f01006e8	obj/kern/kernel.asm	/^f01006e8:	f0 $/;"	l
+f01006e9	obj/kern/kernel.asm	/^f01006e9:	c7 44 24 04 35 50 10 	movl   $0xf0105035,0x4(%esp)$/;"	l
+f01006f0	obj/kern/kernel.asm	/^f01006f0:	f0 $/;"	l
+f01006f1	obj/kern/kernel.asm	/^f01006f1:	c7 04 24 2c 50 10 f0 	movl   $0xf010502c,(%esp)$/;"	l
+f01006f8	obj/kern/kernel.asm	/^f01006f8:	e8 29 30 00 00       	call   f0103726 <cprintf>$/;"	l
+f01006fd	obj/kern/kernel.asm	/^f01006fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0100702	obj/kern/kernel.asm	/^f0100702:	c9                   	leave  $/;"	l
+f0100703	obj/kern/kernel.asm	/^f0100703:	c3                   	ret    $/;"	l
+f0100704	obj/kern/kernel.asm	/^f0100704 <mon_backtrace>:$/;"	l
+f0100704	obj/kern/kernel.asm	/^f0100704:	55                   	push   %ebp$/;"	l
+f0100705	obj/kern/kernel.asm	/^f0100705:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100707	obj/kern/kernel.asm	/^f0100707:	57                   	push   %edi$/;"	l
+f0100708	obj/kern/kernel.asm	/^f0100708:	56                   	push   %esi$/;"	l
+f0100709	obj/kern/kernel.asm	/^f0100709:	53                   	push   %ebx$/;"	l
+f010070a	obj/kern/kernel.asm	/^f010070a:	81 ec 8c 00 00 00    	sub    $0x8c,%esp$/;"	l
+f0100710	obj/kern/kernel.asm	/^f0100710:	c7 04 24 3e 50 10 f0 	movl   $0xf010503e,(%esp)$/;"	l
+f0100717	obj/kern/kernel.asm	/^f0100717:	e8 0a 30 00 00       	call   f0103726 <cprintf>$/;"	l
+f010071c	obj/kern/kernel.asm	/^f010071c:	89 e8                	mov    %ebp,%eax$/;"	l
+f010071e	obj/kern/kernel.asm	/^f010071e:	89 c3                	mov    %eax,%ebx$/;"	l
+f0100720	obj/kern/kernel.asm	/^f0100720:	8b 38                	mov    (%eax),%edi$/;"	l
+f0100722	obj/kern/kernel.asm	/^f0100722:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
+f0100725	obj/kern/kernel.asm	/^f0100725:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
+f0100728	obj/kern/kernel.asm	/^f0100728:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
+f010072b	obj/kern/kernel.asm	/^f010072b:	e9 8d 00 00 00       	jmp    f01007bd <mon_backtrace+0xb9>$/;"	l
+f0100730	obj/kern/kernel.asm	/^f0100730:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0100735	obj/kern/kernel.asm	/^f0100735:	8b 54 83 08          	mov    0x8(%ebx,%eax,4),%edx$/;"	l
+f0100739	obj/kern/kernel.asm	/^f0100739:	89 54 85 d4          	mov    %edx,-0x2c(%ebp,%eax,4)$/;"	l
+f010073d	obj/kern/kernel.asm	/^f010073d:	40                   	inc    %eax$/;"	l
+f010073e	obj/kern/kernel.asm	/^f010073e:	83 f8 05             	cmp    $0x5,%eax$/;"	l
+f0100741	obj/kern/kernel.asm	/^f0100741:	75 f2                	jne    f0100735 <mon_backtrace+0x31>$/;"	l
+f0100743	obj/kern/kernel.asm	/^f0100743:	8d 55 bc             	lea    -0x44(%ebp),%edx$/;"	l
+f0100746	obj/kern/kernel.asm	/^f0100746:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
+f010074a	obj/kern/kernel.asm	/^f010074a:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f010074d	obj/kern/kernel.asm	/^f010074d:	e8 d7 37 00 00       	call   f0103f29 <debuginfo_eip>$/;"	l
+f0100752	obj/kern/kernel.asm	/^f0100752:	89 f0                	mov    %esi,%eax$/;"	l
+f0100754	obj/kern/kernel.asm	/^f0100754:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
+f0100757	obj/kern/kernel.asm	/^f0100757:	89 44 24 30          	mov    %eax,0x30(%esp)$/;"	l
+f010075b	obj/kern/kernel.asm	/^f010075b:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
+f010075e	obj/kern/kernel.asm	/^f010075e:	89 44 24 2c          	mov    %eax,0x2c(%esp)$/;"	l
+f0100762	obj/kern/kernel.asm	/^f0100762:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
+f0100765	obj/kern/kernel.asm	/^f0100765:	89 44 24 28          	mov    %eax,0x28(%esp)$/;"	l
+f0100769	obj/kern/kernel.asm	/^f0100769:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
+f010076c	obj/kern/kernel.asm	/^f010076c:	89 44 24 24          	mov    %eax,0x24(%esp)$/;"	l
+f0100770	obj/kern/kernel.asm	/^f0100770:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
+f0100773	obj/kern/kernel.asm	/^f0100773:	89 44 24 20          	mov    %eax,0x20(%esp)$/;"	l
+f0100777	obj/kern/kernel.asm	/^f0100777:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
+f010077a	obj/kern/kernel.asm	/^f010077a:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
+f010077e	obj/kern/kernel.asm	/^f010077e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f0100781	obj/kern/kernel.asm	/^f0100781:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
+f0100785	obj/kern/kernel.asm	/^f0100785:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
+f0100788	obj/kern/kernel.asm	/^f0100788:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
+f010078c	obj/kern/kernel.asm	/^f010078c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
+f010078f	obj/kern/kernel.asm	/^f010078f:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
+f0100793	obj/kern/kernel.asm	/^f0100793:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f0100796	obj/kern/kernel.asm	/^f0100796:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f010079a	obj/kern/kernel.asm	/^f010079a:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
+f010079e	obj/kern/kernel.asm	/^f010079e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01007a2	obj/kern/kernel.asm	/^f01007a2:	c7 04 24 98 51 10 f0 	movl   $0xf0105198,(%esp)$/;"	l
+f01007a9	obj/kern/kernel.asm	/^f01007a9:	e8 78 2f 00 00       	call   f0103726 <cprintf>$/;"	l
+f01007ae	obj/kern/kernel.asm	/^f01007ae:	8b 07                	mov    (%edi),%eax$/;"	l
+f01007b0	obj/kern/kernel.asm	/^f01007b0:	89 fb                	mov    %edi,%ebx$/;"	l
+f01007b2	obj/kern/kernel.asm	/^f01007b2:	8b 75 b4             	mov    -0x4c(%ebp),%esi$/;"	l
+f01007b5	obj/kern/kernel.asm	/^f01007b5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
+f01007b8	obj/kern/kernel.asm	/^f01007b8:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
+f01007bb	obj/kern/kernel.asm	/^f01007bb:	89 c7                	mov    %eax,%edi$/;"	l
+f01007bd	obj/kern/kernel.asm	/^f01007bd:	85 db                	test   %ebx,%ebx$/;"	l
+f01007bf	obj/kern/kernel.asm	/^f01007bf:	0f 85 6b ff ff ff    	jne    f0100730 <mon_backtrace+0x2c>$/;"	l
+f01007c5	obj/kern/kernel.asm	/^f01007c5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01007ca	obj/kern/kernel.asm	/^f01007ca:	81 c4 8c 00 00 00    	add    $0x8c,%esp$/;"	l
+f01007d0	obj/kern/kernel.asm	/^f01007d0:	5b                   	pop    %ebx$/;"	l
+f01007d1	obj/kern/kernel.asm	/^f01007d1:	5e                   	pop    %esi$/;"	l
+f01007d2	obj/kern/kernel.asm	/^f01007d2:	5f                   	pop    %edi$/;"	l
+f01007d3	obj/kern/kernel.asm	/^f01007d3:	5d                   	pop    %ebp$/;"	l
+f01007d4	obj/kern/kernel.asm	/^f01007d4:	c3                   	ret    $/;"	l
+f01007d5	obj/kern/kernel.asm	/^f01007d5 <monitor>:$/;"	l
+f01007d5	obj/kern/kernel.asm	/^f01007d5:	55                   	push   %ebp$/;"	l
+f01007d6	obj/kern/kernel.asm	/^f01007d6:	89 e5                	mov    %esp,%ebp$/;"	l
+f01007d8	obj/kern/kernel.asm	/^f01007d8:	57                   	push   %edi$/;"	l
+f01007d9	obj/kern/kernel.asm	/^f01007d9:	56                   	push   %esi$/;"	l
+f01007da	obj/kern/kernel.asm	/^f01007da:	53                   	push   %ebx$/;"	l
+f01007db	obj/kern/kernel.asm	/^f01007db:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
+f01007de	obj/kern/kernel.asm	/^f01007de:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f01007e1	obj/kern/kernel.asm	/^f01007e1:	c7 04 24 e0 51 10 f0 	movl   $0xf01051e0,(%esp)$/;"	l
+f01007e8	obj/kern/kernel.asm	/^f01007e8:	e8 39 2f 00 00       	call   f0103726 <cprintf>$/;"	l
+f01007ed	obj/kern/kernel.asm	/^f01007ed:	c7 04 24 04 52 10 f0 	movl   $0xf0105204,(%esp)$/;"	l
+f01007f4	obj/kern/kernel.asm	/^f01007f4:	e8 2d 2f 00 00       	call   f0103726 <cprintf>$/;"	l
+f01007f9	obj/kern/kernel.asm	/^f01007f9:	85 ff                	test   %edi,%edi$/;"	l
+f01007fb	obj/kern/kernel.asm	/^f01007fb:	74 08                	je     f0100805 <monitor+0x30>$/;"	l
+f01007fd	obj/kern/kernel.asm	/^f01007fd:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f0100800	obj/kern/kernel.asm	/^f0100800:	e8 ce 32 00 00       	call   f0103ad3 <print_trapframe>$/;"	l
+f0100805	obj/kern/kernel.asm	/^f0100805:	c7 04 24 50 50 10 f0 	movl   $0xf0105050,(%esp)$/;"	l
+f010080c	obj/kern/kernel.asm	/^f010080c:	e8 d7 3e 00 00       	call   f01046e8 <readline>$/;"	l
+f0100811	obj/kern/kernel.asm	/^f0100811:	89 c3                	mov    %eax,%ebx$/;"	l
+f0100813	obj/kern/kernel.asm	/^f0100813:	85 c0                	test   %eax,%eax$/;"	l
+f0100815	obj/kern/kernel.asm	/^f0100815:	74 ee                	je     f0100805 <monitor+0x30>$/;"	l
+f0100817	obj/kern/kernel.asm	/^f0100817:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
+f010081e	obj/kern/kernel.asm	/^f010081e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
+f0100823	obj/kern/kernel.asm	/^f0100823:	eb 04                	jmp    f0100829 <monitor+0x54>$/;"	l
+f0100825	obj/kern/kernel.asm	/^f0100825:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
+f0100828	obj/kern/kernel.asm	/^f0100828:	43                   	inc    %ebx$/;"	l
+f0100829	obj/kern/kernel.asm	/^f0100829:	8a 03                	mov    (%ebx),%al$/;"	l
+f010082b	obj/kern/kernel.asm	/^f010082b:	84 c0                	test   %al,%al$/;"	l
+f010082d	obj/kern/kernel.asm	/^f010082d:	74 5e                	je     f010088d <monitor+0xb8>$/;"	l
+f010082f	obj/kern/kernel.asm	/^f010082f:	0f be c0             	movsbl %al,%eax$/;"	l
+f0100832	obj/kern/kernel.asm	/^f0100832:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0100836	obj/kern/kernel.asm	/^f0100836:	c7 04 24 54 50 10 f0 	movl   $0xf0105054,(%esp)$/;"	l
+f010083d	obj/kern/kernel.asm	/^f010083d:	e8 9b 40 00 00       	call   f01048dd <strchr>$/;"	l
+f0100842	obj/kern/kernel.asm	/^f0100842:	85 c0                	test   %eax,%eax$/;"	l
+f0100844	obj/kern/kernel.asm	/^f0100844:	75 df                	jne    f0100825 <monitor+0x50>$/;"	l
+f0100846	obj/kern/kernel.asm	/^f0100846:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
+f0100849	obj/kern/kernel.asm	/^f0100849:	74 42                	je     f010088d <monitor+0xb8>$/;"	l
+f010084b	obj/kern/kernel.asm	/^f010084b:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
+f010084e	obj/kern/kernel.asm	/^f010084e:	75 16                	jne    f0100866 <monitor+0x91>$/;"	l
+f0100850	obj/kern/kernel.asm	/^f0100850:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
+f0100857	obj/kern/kernel.asm	/^f0100857:	00 $/;"	l
+f0100858	obj/kern/kernel.asm	/^f0100858:	c7 04 24 59 50 10 f0 	movl   $0xf0105059,(%esp)$/;"	l
+f010085f	obj/kern/kernel.asm	/^f010085f:	e8 c2 2e 00 00       	call   f0103726 <cprintf>$/;"	l
+f0100864	obj/kern/kernel.asm	/^f0100864:	eb 9f                	jmp    f0100805 <monitor+0x30>$/;"	l
+f0100866	obj/kern/kernel.asm	/^f0100866:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
+f010086a	obj/kern/kernel.asm	/^f010086a:	46                   	inc    %esi$/;"	l
+f010086b	obj/kern/kernel.asm	/^f010086b:	eb 01                	jmp    f010086e <monitor+0x99>$/;"	l
+f010086d	obj/kern/kernel.asm	/^f010086d:	43                   	inc    %ebx$/;"	l
+f010086e	obj/kern/kernel.asm	/^f010086e:	8a 03                	mov    (%ebx),%al$/;"	l
+f0100870	obj/kern/kernel.asm	/^f0100870:	84 c0                	test   %al,%al$/;"	l
+f0100872	obj/kern/kernel.asm	/^f0100872:	74 b5                	je     f0100829 <monitor+0x54>$/;"	l
+f0100874	obj/kern/kernel.asm	/^f0100874:	0f be c0             	movsbl %al,%eax$/;"	l
+f0100877	obj/kern/kernel.asm	/^f0100877:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f010087b	obj/kern/kernel.asm	/^f010087b:	c7 04 24 54 50 10 f0 	movl   $0xf0105054,(%esp)$/;"	l
+f0100882	obj/kern/kernel.asm	/^f0100882:	e8 56 40 00 00       	call   f01048dd <strchr>$/;"	l
+f0100887	obj/kern/kernel.asm	/^f0100887:	85 c0                	test   %eax,%eax$/;"	l
+f0100889	obj/kern/kernel.asm	/^f0100889:	74 e2                	je     f010086d <monitor+0x98>$/;"	l
+f010088b	obj/kern/kernel.asm	/^f010088b:	eb 9c                	jmp    f0100829 <monitor+0x54>$/;"	l
+f010088d	obj/kern/kernel.asm	/^f010088d:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
+f0100894	obj/kern/kernel.asm	/^f0100894:	00 $/;"	l
+f0100895	obj/kern/kernel.asm	/^f0100895:	85 f6                	test   %esi,%esi$/;"	l
+f0100897	obj/kern/kernel.asm	/^f0100897:	0f 84 68 ff ff ff    	je     f0100805 <monitor+0x30>$/;"	l
+f010089d	obj/kern/kernel.asm	/^f010089d:	c7 44 24 04 27 50 10 	movl   $0xf0105027,0x4(%esp)$/;"	l
+f01008a4	obj/kern/kernel.asm	/^f01008a4:	f0 $/;"	l
+f01008a5	obj/kern/kernel.asm	/^f01008a5:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
+f01008a8	obj/kern/kernel.asm	/^f01008a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01008ab	obj/kern/kernel.asm	/^f01008ab:	e8 da 3f 00 00       	call   f010488a <strcmp>$/;"	l
+f01008b0	obj/kern/kernel.asm	/^f01008b0:	85 c0                	test   %eax,%eax$/;"	l
+f01008b2	obj/kern/kernel.asm	/^f01008b2:	74 1b                	je     f01008cf <monitor+0xfa>$/;"	l
+f01008b4	obj/kern/kernel.asm	/^f01008b4:	c7 44 24 04 35 50 10 	movl   $0xf0105035,0x4(%esp)$/;"	l
+f01008bb	obj/kern/kernel.asm	/^f01008bb:	f0 $/;"	l
+f01008bc	obj/kern/kernel.asm	/^f01008bc:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
+f01008bf	obj/kern/kernel.asm	/^f01008bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01008c2	obj/kern/kernel.asm	/^f01008c2:	e8 c3 3f 00 00       	call   f010488a <strcmp>$/;"	l
+f01008c7	obj/kern/kernel.asm	/^f01008c7:	85 c0                	test   %eax,%eax$/;"	l
+f01008c9	obj/kern/kernel.asm	/^f01008c9:	75 2c                	jne    f01008f7 <monitor+0x122>$/;"	l
+f01008cb	obj/kern/kernel.asm	/^f01008cb:	b0 01                	mov    $0x1,%al$/;"	l
+f01008cd	obj/kern/kernel.asm	/^f01008cd:	eb 05                	jmp    f01008d4 <monitor+0xff>$/;"	l
+f01008cf	obj/kern/kernel.asm	/^f01008cf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01008d4	obj/kern/kernel.asm	/^f01008d4:	8d 14 00             	lea    (%eax,%eax,1),%edx$/;"	l
+f01008d7	obj/kern/kernel.asm	/^f01008d7:	01 d0                	add    %edx,%eax$/;"	l
+f01008d9	obj/kern/kernel.asm	/^f01008d9:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
+f01008dd	obj/kern/kernel.asm	/^f01008dd:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
+f01008e0	obj/kern/kernel.asm	/^f01008e0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
+f01008e4	obj/kern/kernel.asm	/^f01008e4:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f01008e7	obj/kern/kernel.asm	/^f01008e7:	ff 14 85 34 52 10 f0 	call   *-0xfefadcc(,%eax,4)$/;"	l
+f01008ee	obj/kern/kernel.asm	/^f01008ee:	85 c0                	test   %eax,%eax$/;"	l
+f01008f0	obj/kern/kernel.asm	/^f01008f0:	78 1d                	js     f010090f <monitor+0x13a>$/;"	l
+f01008f2	obj/kern/kernel.asm	/^f01008f2:	e9 0e ff ff ff       	jmp    f0100805 <monitor+0x30>$/;"	l
+f01008f7	obj/kern/kernel.asm	/^f01008f7:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
+f01008fa	obj/kern/kernel.asm	/^f01008fa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f01008fe	obj/kern/kernel.asm	/^f01008fe:	c7 04 24 76 50 10 f0 	movl   $0xf0105076,(%esp)$/;"	l
+f0100905	obj/kern/kernel.asm	/^f0100905:	e8 1c 2e 00 00       	call   f0103726 <cprintf>$/;"	l
+f010090a	obj/kern/kernel.asm	/^f010090a:	e9 f6 fe ff ff       	jmp    f0100805 <monitor+0x30>$/;"	l
+f010090f	obj/kern/kernel.asm	/^f010090f:	83 c4 5c             	add    $0x5c,%esp$/;"	l
+f0100912	obj/kern/kernel.asm	/^f0100912:	5b                   	pop    %ebx$/;"	l
+f0100913	obj/kern/kernel.asm	/^f0100913:	5e                   	pop    %esi$/;"	l
+f0100914	obj/kern/kernel.asm	/^f0100914:	5f                   	pop    %edi$/;"	l
+f0100915	obj/kern/kernel.asm	/^f0100915:	5d                   	pop    %ebp$/;"	l
+f0100916	obj/kern/kernel.asm	/^f0100916:	c3                   	ret    $/;"	l
+f0100918	obj/kern/kernel.asm	/^f0100918 <boot_alloc>:$/;"	l
+f0100918	obj/kern/kernel.asm	/^f0100918:	55                   	push   %ebp$/;"	l
+f0100919	obj/kern/kernel.asm	/^f0100919:	89 e5                	mov    %esp,%ebp$/;"	l
+f010091b	obj/kern/kernel.asm	/^f010091b:	83 3d 9c 51 1e f0 00 	cmpl   $0x0,0xf01e519c$/;"	l
+f0100922	obj/kern/kernel.asm	/^f0100922:	75 11                	jne    f0100935 <boot_alloc+0x1d>$/;"	l
+f0100924	obj/kern/kernel.asm	/^f0100924:	ba 4f 6e 1e f0       	mov    $0xf01e6e4f,%edx$/;"	l
+f0100929	obj/kern/kernel.asm	/^f0100929:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
+f010092f	obj/kern/kernel.asm	/^f010092f:	89 15 9c 51 1e f0    	mov    %edx,0xf01e519c$/;"	l
+f0100935	obj/kern/kernel.asm	/^f0100935:	85 c0                	test   %eax,%eax$/;"	l
+f0100937	obj/kern/kernel.asm	/^f0100937:	74 19                	je     f0100952 <boot_alloc+0x3a>$/;"	l
+f0100939	obj/kern/kernel.asm	/^f0100939:	8b 15 9c 51 1e f0    	mov    0xf01e519c,%edx$/;"	l
+f010093f	obj/kern/kernel.asm	/^f010093f:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
+f0100946	obj/kern/kernel.asm	/^f0100946:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
+f010094b	obj/kern/kernel.asm	/^f010094b:	a3 9c 51 1e f0       	mov    %eax,0xf01e519c$/;"	l
+f0100950	obj/kern/kernel.asm	/^f0100950:	eb 06                	jmp    f0100958 <boot_alloc+0x40>$/;"	l
+f0100952	obj/kern/kernel.asm	/^f0100952:	8b 15 9c 51 1e f0    	mov    0xf01e519c,%edx$/;"	l
+f0100958	obj/kern/kernel.asm	/^f0100958:	89 d0                	mov    %edx,%eax$/;"	l
+f010095a	obj/kern/kernel.asm	/^f010095a:	5d                   	pop    %ebp$/;"	l
+f010095b	obj/kern/kernel.asm	/^f010095b:	c3                   	ret    $/;"	l
+f010095c	obj/kern/kernel.asm	/^f010095c <check_va2pa>:$/;"	l
+f010095c	obj/kern/kernel.asm	/^f010095c:	55                   	push   %ebp$/;"	l
+f010095d	obj/kern/kernel.asm	/^f010095d:	89 e5                	mov    %esp,%ebp$/;"	l
+f010095f	obj/kern/kernel.asm	/^f010095f:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f0100962	obj/kern/kernel.asm	/^f0100962:	89 d1                	mov    %edx,%ecx$/;"	l
+f0100964	obj/kern/kernel.asm	/^f0100964:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
+f0100967	obj/kern/kernel.asm	/^f0100967:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
+f010096a	obj/kern/kernel.asm	/^f010096a:	a8 01                	test   $0x1,%al$/;"	l
+f010096c	obj/kern/kernel.asm	/^f010096c:	74 4d                	je     f01009bb <check_va2pa+0x5f>$/;"	l
+f010096e	obj/kern/kernel.asm	/^f010096e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
+f0100973	obj/kern/kernel.asm	/^f0100973:	89 c1                	mov    %eax,%ecx$/;"	l
+f0100975	obj/kern/kernel.asm	/^f0100975:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
+f0100978	obj/kern/kernel.asm	/^f0100978:	3b 0d 44 5e 1e f0    	cmp    0xf01e5e44,%ecx$/;"	l
+f010097e	obj/kern/kernel.asm	/^f010097e:	72 20                	jb     f01009a0 <check_va2pa+0x44>$/;"	l
+f0100980	obj/kern/kernel.asm	/^f0100980:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0100984	obj/kern/kernel.asm	/^f0100984:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f010098b	obj/kern/kernel.asm	/^f010098b:	f0 $/;"	l
+f010098c	obj/kern/kernel.asm	/^f010098c:	c7 44 24 04 57 03 00 	movl   $0x357,0x4(%esp)$/;"	l
+f0100993	obj/kern/kernel.asm	/^f0100993:	00 $/;"	l
+f0100994	obj/kern/kernel.asm	/^f0100994:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010099b	obj/kern/kernel.asm	/^f010099b:	e8 11 f7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f01009a0	obj/kern/kernel.asm	/^f01009a0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f01009a3	obj/kern/kernel.asm	/^f01009a3:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
+f01009a9	obj/kern/kernel.asm	/^f01009a9:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
+f01009b0	obj/kern/kernel.asm	/^f01009b0:	a8 01                	test   $0x1,%al$/;"	l
+f01009b2	obj/kern/kernel.asm	/^f01009b2:	74 0e                	je     f01009c2 <check_va2pa+0x66>$/;"	l
+f01009b4	obj/kern/kernel.asm	/^f01009b4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
+f01009b9	obj/kern/kernel.asm	/^f01009b9:	eb 0c                	jmp    f01009c7 <check_va2pa+0x6b>$/;"	l
+f01009bb	obj/kern/kernel.asm	/^f01009bb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
+f01009c0	obj/kern/kernel.asm	/^f01009c0:	eb 05                	jmp    f01009c7 <check_va2pa+0x6b>$/;"	l
+f01009c2	obj/kern/kernel.asm	/^f01009c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
+f01009c7	obj/kern/kernel.asm	/^f01009c7:	c9                   	leave  $/;"	l
+f01009c8	obj/kern/kernel.asm	/^f01009c8:	c3                   	ret    $/;"	l
+f01009c9	obj/kern/kernel.asm	/^f01009c9 <nvram_read>:$/;"	l
+f01009c9	obj/kern/kernel.asm	/^f01009c9:	55                   	push   %ebp$/;"	l
+f01009ca	obj/kern/kernel.asm	/^f01009ca:	89 e5                	mov    %esp,%ebp$/;"	l
+f01009cc	obj/kern/kernel.asm	/^f01009cc:	56                   	push   %esi$/;"	l
+f01009cd	obj/kern/kernel.asm	/^f01009cd:	53                   	push   %ebx$/;"	l
+f01009ce	obj/kern/kernel.asm	/^f01009ce:	83 ec 10             	sub    $0x10,%esp$/;"	l
+f01009d1	obj/kern/kernel.asm	/^f01009d1:	89 c3                	mov    %eax,%ebx$/;"	l
+f01009d3	obj/kern/kernel.asm	/^f01009d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01009d6	obj/kern/kernel.asm	/^f01009d6:	e8 dd 2c 00 00       	call   f01036b8 <mc146818_read>$/;"	l
+f01009db	obj/kern/kernel.asm	/^f01009db:	89 c6                	mov    %eax,%esi$/;"	l
+f01009dd	obj/kern/kernel.asm	/^f01009dd:	43                   	inc    %ebx$/;"	l
+f01009de	obj/kern/kernel.asm	/^f01009de:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f01009e1	obj/kern/kernel.asm	/^f01009e1:	e8 d2 2c 00 00       	call   f01036b8 <mc146818_read>$/;"	l
+f01009e6	obj/kern/kernel.asm	/^f01009e6:	c1 e0 08             	shl    $0x8,%eax$/;"	l
+f01009e9	obj/kern/kernel.asm	/^f01009e9:	09 f0                	or     %esi,%eax$/;"	l
+f01009eb	obj/kern/kernel.asm	/^f01009eb:	83 c4 10             	add    $0x10,%esp$/;"	l
+f01009ee	obj/kern/kernel.asm	/^f01009ee:	5b                   	pop    %ebx$/;"	l
+f01009ef	obj/kern/kernel.asm	/^f01009ef:	5e                   	pop    %esi$/;"	l
+f01009f0	obj/kern/kernel.asm	/^f01009f0:	5d                   	pop    %ebp$/;"	l
+f01009f1	obj/kern/kernel.asm	/^f01009f1:	c3                   	ret    $/;"	l
+f01009f2	obj/kern/kernel.asm	/^f01009f2 <check_page_free_list>:$/;"	l
+f01009f2	obj/kern/kernel.asm	/^f01009f2:	55                   	push   %ebp$/;"	l
+f01009f3	obj/kern/kernel.asm	/^f01009f3:	89 e5                	mov    %esp,%ebp$/;"	l
+f01009f5	obj/kern/kernel.asm	/^f01009f5:	57                   	push   %edi$/;"	l
+f01009f6	obj/kern/kernel.asm	/^f01009f6:	56                   	push   %esi$/;"	l
+f01009f7	obj/kern/kernel.asm	/^f01009f7:	53                   	push   %ebx$/;"	l
+f01009f8	obj/kern/kernel.asm	/^f01009f8:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
+f01009fb	obj/kern/kernel.asm	/^f01009fb:	3c 01                	cmp    $0x1,%al$/;"	l
+f01009fd	obj/kern/kernel.asm	/^f01009fd:	19 f6                	sbb    %esi,%esi$/;"	l
+f01009ff	obj/kern/kernel.asm	/^f01009ff:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
+f0100a05	obj/kern/kernel.asm	/^f0100a05:	46                   	inc    %esi$/;"	l
+f0100a06	obj/kern/kernel.asm	/^f0100a06:	8b 15 a0 51 1e f0    	mov    0xf01e51a0,%edx$/;"	l
+f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	85 d2                	test   %edx,%edx$/;"	l
+f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	75 1c                	jne    f0100a2c <check_page_free_list+0x3a>$/;"	l
+f0100a10	obj/kern/kernel.asm	/^f0100a10:	c7 44 24 08 68 52 10 	movl   $0xf0105268,0x8(%esp)$/;"	l
+f0100a17	obj/kern/kernel.asm	/^f0100a17:	f0 $/;"	l
+f0100a18	obj/kern/kernel.asm	/^f0100a18:	c7 44 24 04 95 02 00 	movl   $0x295,0x4(%esp)$/;"	l
+f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	00 $/;"	l
+f0100a20	obj/kern/kernel.asm	/^f0100a20:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100a27	obj/kern/kernel.asm	/^f0100a27:	e8 85 f6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	84 c0                	test   %al,%al$/;"	l
+f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	74 4b                	je     f0100a7b <check_page_free_list+0x89>$/;"	l
+f0100a30	obj/kern/kernel.asm	/^f0100a30:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
+f0100a33	obj/kern/kernel.asm	/^f0100a33:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
+f0100a36	obj/kern/kernel.asm	/^f0100a36:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
+f0100a39	obj/kern/kernel.asm	/^f0100a39:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
+f0100a3c	obj/kern/kernel.asm	/^f0100a3c:	89 d0                	mov    %edx,%eax$/;"	l
+f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f0100a44	obj/kern/kernel.asm	/^f0100a44:	c1 e0 09             	shl    $0x9,%eax$/;"	l
+f0100a47	obj/kern/kernel.asm	/^f0100a47:	c1 e8 16             	shr    $0x16,%eax$/;"	l
+f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	39 c6                	cmp    %eax,%esi$/;"	l
+f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	0f 96 c0             	setbe  %al$/;"	l
+f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	0f b6 c0             	movzbl %al,%eax$/;"	l
+f0100a52	obj/kern/kernel.asm	/^f0100a52:	8b 4c 85 d8          	mov    -0x28(%ebp,%eax,4),%ecx$/;"	l
+f0100a56	obj/kern/kernel.asm	/^f0100a56:	89 11                	mov    %edx,(%ecx)$/;"	l
+f0100a58	obj/kern/kernel.asm	/^f0100a58:	89 54 85 d8          	mov    %edx,-0x28(%ebp,%eax,4)$/;"	l
+f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	8b 12                	mov    (%edx),%edx$/;"	l
+f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	85 d2                	test   %edx,%edx$/;"	l
+f0100a60	obj/kern/kernel.asm	/^f0100a60:	75 da                	jne    f0100a3c <check_page_free_list+0x4a>$/;"	l
+f0100a62	obj/kern/kernel.asm	/^f0100a62:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
+f0100a65	obj/kern/kernel.asm	/^f0100a65:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
+f0100a6b	obj/kern/kernel.asm	/^f0100a6b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
+f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
+f0100a71	obj/kern/kernel.asm	/^f0100a71:	89 10                	mov    %edx,(%eax)$/;"	l
+f0100a73	obj/kern/kernel.asm	/^f0100a73:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f0100a76	obj/kern/kernel.asm	/^f0100a76:	a3 a0 51 1e f0       	mov    %eax,0xf01e51a0$/;"	l
+f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	8b 1d a0 51 1e f0    	mov    0xf01e51a0,%ebx$/;"	l
+f0100a81	obj/kern/kernel.asm	/^f0100a81:	eb 63                	jmp    f0100ae6 <check_page_free_list+0xf4>$/;"	l
+f0100a83	obj/kern/kernel.asm	/^f0100a83:	89 d8                	mov    %ebx,%eax$/;"	l
+f0100a85	obj/kern/kernel.asm	/^f0100a85:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0100a91	obj/kern/kernel.asm	/^f0100a91:	89 c2                	mov    %eax,%edx$/;"	l
+f0100a93	obj/kern/kernel.asm	/^f0100a93:	c1 ea 16             	shr    $0x16,%edx$/;"	l
+f0100a96	obj/kern/kernel.asm	/^f0100a96:	39 d6                	cmp    %edx,%esi$/;"	l
+f0100a98	obj/kern/kernel.asm	/^f0100a98:	76 4a                	jbe    f0100ae4 <check_page_free_list+0xf2>$/;"	l
+f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	89 c2                	mov    %eax,%edx$/;"	l
+f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	3b 15 44 5e 1e f0    	cmp    0xf01e5e44,%edx$/;"	l
+f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	72 20                	jb     f0100ac7 <check_page_free_list+0xd5>$/;"	l
+f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0100aab	obj/kern/kernel.asm	/^f0100aab:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	f0 $/;"	l
+f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f0100aba	obj/kern/kernel.asm	/^f0100aba:	00 $/;"	l
+f0100abb	obj/kern/kernel.asm	/^f0100abb:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0100ac2	obj/kern/kernel.asm	/^f0100ac2:	e8 ea f5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
+f0100ace	obj/kern/kernel.asm	/^f0100ace:	00 $/;"	l
+f0100acf	obj/kern/kernel.asm	/^f0100acf:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
+f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	00 $/;"	l
+f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f0100adc	obj/kern/kernel.asm	/^f0100adc:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0100adf	obj/kern/kernel.asm	/^f0100adf:	e8 2e 3e 00 00       	call   f0104912 <memset>$/;"	l
+f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	8b 1b                	mov    (%ebx),%ebx$/;"	l
+f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	85 db                	test   %ebx,%ebx$/;"	l
+f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	75 99                	jne    f0100a83 <check_page_free_list+0x91>$/;"	l
+f0100aea	obj/kern/kernel.asm	/^f0100aea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0100aef	obj/kern/kernel.asm	/^f0100aef:	e8 24 fe ff ff       	call   f0100918 <boot_alloc>$/;"	l
+f0100af4	obj/kern/kernel.asm	/^f0100af4:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
+f0100af7	obj/kern/kernel.asm	/^f0100af7:	8b 15 a0 51 1e f0    	mov    0xf01e51a0,%edx$/;"	l
+f0100afd	obj/kern/kernel.asm	/^f0100afd:	8b 0d 4c 5e 1e f0    	mov    0xf01e5e4c,%ecx$/;"	l
+f0100b03	obj/kern/kernel.asm	/^f0100b03:	a1 44 5e 1e f0       	mov    0xf01e5e44,%eax$/;"	l
+f0100b08	obj/kern/kernel.asm	/^f0100b08:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
+f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
+f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f0100b11	obj/kern/kernel.asm	/^f0100b11:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
+f0100b14	obj/kern/kernel.asm	/^f0100b14:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
+f0100b19	obj/kern/kernel.asm	/^f0100b19:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
+f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	e9 91 01 00 00       	jmp    f0100cb2 <check_page_free_list+0x2c0>$/;"	l
+f0100b21	obj/kern/kernel.asm	/^f0100b21:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
+f0100b24	obj/kern/kernel.asm	/^f0100b24:	73 24                	jae    f0100b4a <check_page_free_list+0x158>$/;"	l
+f0100b26	obj/kern/kernel.asm	/^f0100b26:	c7 44 24 0c 1b 5a 10 	movl   $0xf0105a1b,0xc(%esp)$/;"	l
+f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	f0 $/;"	l
+f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100b35	obj/kern/kernel.asm	/^f0100b35:	f0 $/;"	l
+f0100b36	obj/kern/kernel.asm	/^f0100b36:	c7 44 24 04 af 02 00 	movl   $0x2af,0x4(%esp)$/;"	l
+f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	00 $/;"	l
+f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100b45	obj/kern/kernel.asm	/^f0100b45:	e8 67 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
+f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	72 24                	jb     f0100b73 <check_page_free_list+0x181>$/;"	l
+f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	c7 44 24 0c 3c 5a 10 	movl   $0xf0105a3c,0xc(%esp)$/;"	l
+f0100b56	obj/kern/kernel.asm	/^f0100b56:	f0 $/;"	l
+f0100b57	obj/kern/kernel.asm	/^f0100b57:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	f0 $/;"	l
+f0100b5f	obj/kern/kernel.asm	/^f0100b5f:	c7 44 24 04 b0 02 00 	movl   $0x2b0,0x4(%esp)$/;"	l
+f0100b66	obj/kern/kernel.asm	/^f0100b66:	00 $/;"	l
+f0100b67	obj/kern/kernel.asm	/^f0100b67:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100b6e	obj/kern/kernel.asm	/^f0100b6e:	e8 3e f5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100b73	obj/kern/kernel.asm	/^f0100b73:	89 d0                	mov    %edx,%eax$/;"	l
+f0100b75	obj/kern/kernel.asm	/^f0100b75:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
+f0100b78	obj/kern/kernel.asm	/^f0100b78:	a8 07                	test   $0x7,%al$/;"	l
+f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	74 24                	je     f0100ba0 <check_page_free_list+0x1ae>$/;"	l
+f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	c7 44 24 0c 8c 52 10 	movl   $0xf010528c,0xc(%esp)$/;"	l
+f0100b83	obj/kern/kernel.asm	/^f0100b83:	f0 $/;"	l
+f0100b84	obj/kern/kernel.asm	/^f0100b84:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	f0 $/;"	l
+f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	c7 44 24 04 b1 02 00 	movl   $0x2b1,0x4(%esp)$/;"	l
+f0100b93	obj/kern/kernel.asm	/^f0100b93:	00 $/;"	l
+f0100b94	obj/kern/kernel.asm	/^f0100b94:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	e8 11 f5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	75 24                	jne    f0100bcc <check_page_free_list+0x1da>$/;"	l
+f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	c7 44 24 0c 50 5a 10 	movl   $0xf0105a50,0xc(%esp)$/;"	l
+f0100baf	obj/kern/kernel.asm	/^f0100baf:	f0 $/;"	l
+f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	f0 $/;"	l
+f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	c7 44 24 04 b4 02 00 	movl   $0x2b4,0x4(%esp)$/;"	l
+f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	00 $/;"	l
+f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	e8 e5 f4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
+f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	75 24                	jne    f0100bf7 <check_page_free_list+0x205>$/;"	l
+f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	c7 44 24 0c 61 5a 10 	movl   $0xf0105a61,0xc(%esp)$/;"	l
+f0100bda	obj/kern/kernel.asm	/^f0100bda:	f0 $/;"	l
+f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100be2	obj/kern/kernel.asm	/^f0100be2:	f0 $/;"	l
+f0100be3	obj/kern/kernel.asm	/^f0100be3:	c7 44 24 04 b5 02 00 	movl   $0x2b5,0x4(%esp)$/;"	l
+f0100bea	obj/kern/kernel.asm	/^f0100bea:	00 $/;"	l
+f0100beb	obj/kern/kernel.asm	/^f0100beb:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	e8 ba f4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
+f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	75 24                	jne    f0100c22 <check_page_free_list+0x230>$/;"	l
+f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	c7 44 24 0c c0 52 10 	movl   $0xf01052c0,0xc(%esp)$/;"	l
+f0100c05	obj/kern/kernel.asm	/^f0100c05:	f0 $/;"	l
+f0100c06	obj/kern/kernel.asm	/^f0100c06:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	f0 $/;"	l
+f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	c7 44 24 04 b6 02 00 	movl   $0x2b6,0x4(%esp)$/;"	l
+f0100c15	obj/kern/kernel.asm	/^f0100c15:	00 $/;"	l
+f0100c16	obj/kern/kernel.asm	/^f0100c16:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	e8 8f f4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100c22	obj/kern/kernel.asm	/^f0100c22:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
+f0100c27	obj/kern/kernel.asm	/^f0100c27:	75 24                	jne    f0100c4d <check_page_free_list+0x25b>$/;"	l
+f0100c29	obj/kern/kernel.asm	/^f0100c29:	c7 44 24 0c 7a 5a 10 	movl   $0xf0105a7a,0xc(%esp)$/;"	l
+f0100c30	obj/kern/kernel.asm	/^f0100c30:	f0 $/;"	l
+f0100c31	obj/kern/kernel.asm	/^f0100c31:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100c38	obj/kern/kernel.asm	/^f0100c38:	f0 $/;"	l
+f0100c39	obj/kern/kernel.asm	/^f0100c39:	c7 44 24 04 b7 02 00 	movl   $0x2b7,0x4(%esp)$/;"	l
+f0100c40	obj/kern/kernel.asm	/^f0100c40:	00 $/;"	l
+f0100c41	obj/kern/kernel.asm	/^f0100c41:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100c48	obj/kern/kernel.asm	/^f0100c48:	e8 64 f4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
+f0100c52	obj/kern/kernel.asm	/^f0100c52:	76 58                	jbe    f0100cac <check_page_free_list+0x2ba>$/;"	l
+f0100c54	obj/kern/kernel.asm	/^f0100c54:	89 c1                	mov    %eax,%ecx$/;"	l
+f0100c56	obj/kern/kernel.asm	/^f0100c56:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
+f0100c59	obj/kern/kernel.asm	/^f0100c59:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
+f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	77 20                	ja     f0100c7e <check_page_free_list+0x28c>$/;"	l
+f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0100c62	obj/kern/kernel.asm	/^f0100c62:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0100c69	obj/kern/kernel.asm	/^f0100c69:	f0 $/;"	l
+f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f0100c71	obj/kern/kernel.asm	/^f0100c71:	00 $/;"	l
+f0100c72	obj/kern/kernel.asm	/^f0100c72:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0100c79	obj/kern/kernel.asm	/^f0100c79:	e8 33 f4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f0100c83	obj/kern/kernel.asm	/^f0100c83:	39 45 c4             	cmp    %eax,-0x3c(%ebp)$/;"	l
+f0100c86	obj/kern/kernel.asm	/^f0100c86:	76 27                	jbe    f0100caf <check_page_free_list+0x2bd>$/;"	l
+f0100c88	obj/kern/kernel.asm	/^f0100c88:	c7 44 24 0c e4 52 10 	movl   $0xf01052e4,0xc(%esp)$/;"	l
+f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	f0 $/;"	l
+f0100c90	obj/kern/kernel.asm	/^f0100c90:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100c97	obj/kern/kernel.asm	/^f0100c97:	f0 $/;"	l
+f0100c98	obj/kern/kernel.asm	/^f0100c98:	c7 44 24 04 b8 02 00 	movl   $0x2b8,0x4(%esp)$/;"	l
+f0100c9f	obj/kern/kernel.asm	/^f0100c9f:	00 $/;"	l
+f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	e8 05 f4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100cac	obj/kern/kernel.asm	/^f0100cac:	46                   	inc    %esi$/;"	l
+f0100cad	obj/kern/kernel.asm	/^f0100cad:	eb 01                	jmp    f0100cb0 <check_page_free_list+0x2be>$/;"	l
+f0100caf	obj/kern/kernel.asm	/^f0100caf:	43                   	inc    %ebx$/;"	l
+f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	8b 12                	mov    (%edx),%edx$/;"	l
+f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	85 d2                	test   %edx,%edx$/;"	l
+f0100cb4	obj/kern/kernel.asm	/^f0100cb4:	0f 85 67 fe ff ff    	jne    f0100b21 <check_page_free_list+0x12f>$/;"	l
+f0100cba	obj/kern/kernel.asm	/^f0100cba:	85 f6                	test   %esi,%esi$/;"	l
+f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	7f 24                	jg     f0100ce2 <check_page_free_list+0x2f0>$/;"	l
+f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	c7 44 24 0c 94 5a 10 	movl   $0xf0105a94,0xc(%esp)$/;"	l
+f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	f0 $/;"	l
+f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	f0 $/;"	l
+f0100cce	obj/kern/kernel.asm	/^f0100cce:	c7 44 24 04 c0 02 00 	movl   $0x2c0,0x4(%esp)$/;"	l
+f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	00 $/;"	l
+f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	e8 cf f3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	85 db                	test   %ebx,%ebx$/;"	l
+f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	7f 24                	jg     f0100d0a <check_page_free_list+0x318>$/;"	l
+f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	c7 44 24 0c a6 5a 10 	movl   $0xf0105aa6,0xc(%esp)$/;"	l
+f0100ced	obj/kern/kernel.asm	/^f0100ced:	f0 $/;"	l
+f0100cee	obj/kern/kernel.asm	/^f0100cee:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	f0 $/;"	l
+f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	c7 44 24 04 c1 02 00 	movl   $0x2c1,0x4(%esp)$/;"	l
+f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	00 $/;"	l
+f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100d05	obj/kern/kernel.asm	/^f0100d05:	e8 a7 f3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	83 c4 4c             	add    $0x4c,%esp$/;"	l
+f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	5b                   	pop    %ebx$/;"	l
+f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	5e                   	pop    %esi$/;"	l
+f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	5f                   	pop    %edi$/;"	l
+f0100d10	obj/kern/kernel.asm	/^f0100d10:	5d                   	pop    %ebp$/;"	l
+f0100d11	obj/kern/kernel.asm	/^f0100d11:	c3                   	ret    $/;"	l
+f0100d12	obj/kern/kernel.asm	/^f0100d12 <page_init>:$/;"	l
+f0100d12	obj/kern/kernel.asm	/^f0100d12:	55                   	push   %ebp$/;"	l
+f0100d13	obj/kern/kernel.asm	/^f0100d13:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100d15	obj/kern/kernel.asm	/^f0100d15:	56                   	push   %esi$/;"	l
+f0100d16	obj/kern/kernel.asm	/^f0100d16:	53                   	push   %ebx$/;"	l
+f0100d17	obj/kern/kernel.asm	/^f0100d17:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
+f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
+f0100d21	obj/kern/kernel.asm	/^f0100d21:	e9 bb 00 00 00       	jmp    f0100de1 <page_init+0xcf>$/;"	l
+f0100d26	obj/kern/kernel.asm	/^f0100d26:	85 db                	test   %ebx,%ebx$/;"	l
+f0100d28	obj/kern/kernel.asm	/^f0100d28:	75 16                	jne    f0100d40 <page_init+0x2e>$/;"	l
+f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	a1 4c 5e 1e f0       	mov    0xf01e5e4c,%eax$/;"	l
+f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
+f0100d35	obj/kern/kernel.asm	/^f0100d35:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
+f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	e9 9d 00 00 00       	jmp    f0100ddd <page_init+0xcb>$/;"	l
+f0100d40	obj/kern/kernel.asm	/^f0100d40:	3b 1d 98 51 1e f0    	cmp    0xf01e5198,%ebx$/;"	l
+f0100d46	obj/kern/kernel.asm	/^f0100d46:	73 25                	jae    f0100d6d <page_init+0x5b>$/;"	l
+f0100d48	obj/kern/kernel.asm	/^f0100d48:	89 f0                	mov    %esi,%eax$/;"	l
+f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f0100d50	obj/kern/kernel.asm	/^f0100d50:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
+f0100d56	obj/kern/kernel.asm	/^f0100d56:	8b 15 a0 51 1e f0    	mov    0xf01e51a0,%edx$/;"	l
+f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	89 10                	mov    %edx,(%eax)$/;"	l
+f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	89 f0                	mov    %esi,%eax$/;"	l
+f0100d60	obj/kern/kernel.asm	/^f0100d60:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f0100d66	obj/kern/kernel.asm	/^f0100d66:	a3 a0 51 1e f0       	mov    %eax,0xf01e51a0$/;"	l
+f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	eb 70                	jmp    f0100ddd <page_init+0xcb>$/;"	l
+f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	8d 83 60 ff ff ff    	lea    -0xa0(%ebx),%eax$/;"	l
+f0100d73	obj/kern/kernel.asm	/^f0100d73:	83 f8 5f             	cmp    $0x5f,%eax$/;"	l
+f0100d76	obj/kern/kernel.asm	/^f0100d76:	77 16                	ja     f0100d8e <page_init+0x7c>$/;"	l
+f0100d78	obj/kern/kernel.asm	/^f0100d78:	89 f0                	mov    %esi,%eax$/;"	l
+f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f0100d80	obj/kern/kernel.asm	/^f0100d80:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
+f0100d86	obj/kern/kernel.asm	/^f0100d86:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
+f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	eb 4f                	jmp    f0100ddd <page_init+0xcb>$/;"	l
+f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0100d93	obj/kern/kernel.asm	/^f0100d93:	e8 80 fb ff ff       	call   f0100918 <boot_alloc>$/;"	l
+f0100d98	obj/kern/kernel.asm	/^f0100d98:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
+f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
+f0100da0	obj/kern/kernel.asm	/^f0100da0:	39 c3                	cmp    %eax,%ebx$/;"	l
+f0100da2	obj/kern/kernel.asm	/^f0100da2:	73 16                	jae    f0100dba <page_init+0xa8>$/;"	l
+f0100da4	obj/kern/kernel.asm	/^f0100da4:	89 f0                	mov    %esi,%eax$/;"	l
+f0100da6	obj/kern/kernel.asm	/^f0100da6:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f0100dac	obj/kern/kernel.asm	/^f0100dac:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
+f0100db2	obj/kern/kernel.asm	/^f0100db2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
+f0100db8	obj/kern/kernel.asm	/^f0100db8:	eb 23                	jmp    f0100ddd <page_init+0xcb>$/;"	l
+f0100dba	obj/kern/kernel.asm	/^f0100dba:	89 f0                	mov    %esi,%eax$/;"	l
+f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
+f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	8b 15 a0 51 1e f0    	mov    0xf01e51a0,%edx$/;"	l
+f0100dce	obj/kern/kernel.asm	/^f0100dce:	89 10                	mov    %edx,(%eax)$/;"	l
+f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	89 f0                	mov    %esi,%eax$/;"	l
+f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	a3 a0 51 1e f0       	mov    %eax,0xf01e51a0$/;"	l
+f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	43                   	inc    %ebx$/;"	l
+f0100dde	obj/kern/kernel.asm	/^f0100dde:	83 c6 08             	add    $0x8,%esi$/;"	l
+f0100de1	obj/kern/kernel.asm	/^f0100de1:	3b 1d 44 5e 1e f0    	cmp    0xf01e5e44,%ebx$/;"	l
+f0100de7	obj/kern/kernel.asm	/^f0100de7:	0f 82 39 ff ff ff    	jb     f0100d26 <page_init+0x14>$/;"	l
+f0100ded	obj/kern/kernel.asm	/^f0100ded:	5b                   	pop    %ebx$/;"	l
+f0100dee	obj/kern/kernel.asm	/^f0100dee:	5e                   	pop    %esi$/;"	l
+f0100def	obj/kern/kernel.asm	/^f0100def:	5d                   	pop    %ebp$/;"	l
+f0100df0	obj/kern/kernel.asm	/^f0100df0:	c3                   	ret    $/;"	l
+f0100df1	obj/kern/kernel.asm	/^f0100df1 <page_alloc>:$/;"	l
+f0100df1	obj/kern/kernel.asm	/^f0100df1:	55                   	push   %ebp$/;"	l
+f0100df2	obj/kern/kernel.asm	/^f0100df2:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100df4	obj/kern/kernel.asm	/^f0100df4:	53                   	push   %ebx$/;"	l
+f0100df5	obj/kern/kernel.asm	/^f0100df5:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0100df8	obj/kern/kernel.asm	/^f0100df8:	8b 1d a0 51 1e f0    	mov    0xf01e51a0,%ebx$/;"	l
+f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	85 db                	test   %ebx,%ebx$/;"	l
+f0100e00	obj/kern/kernel.asm	/^f0100e00:	74 6b                	je     f0100e6d <page_alloc+0x7c>$/;"	l
+f0100e02	obj/kern/kernel.asm	/^f0100e02:	8b 03                	mov    (%ebx),%eax$/;"	l
+f0100e04	obj/kern/kernel.asm	/^f0100e04:	a3 a0 51 1e f0       	mov    %eax,0xf01e51a0$/;"	l
+f0100e09	obj/kern/kernel.asm	/^f0100e09:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
+f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
+f0100e13	obj/kern/kernel.asm	/^f0100e13:	74 58                	je     f0100e6d <page_alloc+0x7c>$/;"	l
+f0100e15	obj/kern/kernel.asm	/^f0100e15:	89 d8                	mov    %ebx,%eax$/;"	l
+f0100e17	obj/kern/kernel.asm	/^f0100e17:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0100e20	obj/kern/kernel.asm	/^f0100e20:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0100e23	obj/kern/kernel.asm	/^f0100e23:	89 c2                	mov    %eax,%edx$/;"	l
+f0100e25	obj/kern/kernel.asm	/^f0100e25:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f0100e28	obj/kern/kernel.asm	/^f0100e28:	3b 15 44 5e 1e f0    	cmp    0xf01e5e44,%edx$/;"	l
+f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	72 20                	jb     f0100e50 <page_alloc+0x5f>$/;"	l
+f0100e30	obj/kern/kernel.asm	/^f0100e30:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0100e34	obj/kern/kernel.asm	/^f0100e34:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	f0 $/;"	l
+f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f0100e43	obj/kern/kernel.asm	/^f0100e43:	00 $/;"	l
+f0100e44	obj/kern/kernel.asm	/^f0100e44:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	e8 61 f2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100e50	obj/kern/kernel.asm	/^f0100e50:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0100e57	obj/kern/kernel.asm	/^f0100e57:	00 $/;"	l
+f0100e58	obj/kern/kernel.asm	/^f0100e58:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	00 $/;"	l
+f0100e60	obj/kern/kernel.asm	/^f0100e60:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f0100e65	obj/kern/kernel.asm	/^f0100e65:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0100e68	obj/kern/kernel.asm	/^f0100e68:	e8 a5 3a 00 00       	call   f0104912 <memset>$/;"	l
+f0100e6d	obj/kern/kernel.asm	/^f0100e6d:	89 d8                	mov    %ebx,%eax$/;"	l
+f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	83 c4 14             	add    $0x14,%esp$/;"	l
+f0100e72	obj/kern/kernel.asm	/^f0100e72:	5b                   	pop    %ebx$/;"	l
+f0100e73	obj/kern/kernel.asm	/^f0100e73:	5d                   	pop    %ebp$/;"	l
+f0100e74	obj/kern/kernel.asm	/^f0100e74:	c3                   	ret    $/;"	l
+f0100e75	obj/kern/kernel.asm	/^f0100e75 <page_free>:$/;"	l
+f0100e75	obj/kern/kernel.asm	/^f0100e75:	55                   	push   %ebp$/;"	l
+f0100e76	obj/kern/kernel.asm	/^f0100e76:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100e78	obj/kern/kernel.asm	/^f0100e78:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
+f0100e83	obj/kern/kernel.asm	/^f0100e83:	75 05                	jne    f0100e8a <page_free+0x15>$/;"	l
+f0100e85	obj/kern/kernel.asm	/^f0100e85:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
+f0100e88	obj/kern/kernel.asm	/^f0100e88:	74 1c                	je     f0100ea6 <page_free+0x31>$/;"	l
+f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	c7 44 24 08 b7 5a 10 	movl   $0xf0105ab7,0x8(%esp)$/;"	l
+f0100e91	obj/kern/kernel.asm	/^f0100e91:	f0 $/;"	l
+f0100e92	obj/kern/kernel.asm	/^f0100e92:	c7 44 24 04 78 01 00 	movl   $0x178,0x4(%esp)$/;"	l
+f0100e99	obj/kern/kernel.asm	/^f0100e99:	00 $/;"	l
+f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	e8 0b f2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	8b 15 a0 51 1e f0    	mov    0xf01e51a0,%edx$/;"	l
+f0100eac	obj/kern/kernel.asm	/^f0100eac:	89 10                	mov    %edx,(%eax)$/;"	l
+f0100eae	obj/kern/kernel.asm	/^f0100eae:	a3 a0 51 1e f0       	mov    %eax,0xf01e51a0$/;"	l
+f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	c9                   	leave  $/;"	l
+f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	c3                   	ret    $/;"	l
+f0100eb5	obj/kern/kernel.asm	/^f0100eb5 <page_decref>:$/;"	l
+f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	55                   	push   %ebp$/;"	l
+f0100eb6	obj/kern/kernel.asm	/^f0100eb6:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
+f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	4a                   	dec    %edx$/;"	l
+f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
+f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	66 85 d2             	test   %dx,%dx$/;"	l
+f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	75 08                	jne    f0100ed3 <page_decref+0x1e>$/;"	l
+f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0100ece	obj/kern/kernel.asm	/^f0100ece:	e8 a2 ff ff ff       	call   f0100e75 <page_free>$/;"	l
+f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	c9                   	leave  $/;"	l
+f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	c3                   	ret    $/;"	l
+f0100ed5	obj/kern/kernel.asm	/^f0100ed5 <pgdir_walk>:$/;"	l
+f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	55                   	push   %ebp$/;"	l
+f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	56                   	push   %esi$/;"	l
+f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	53                   	push   %ebx$/;"	l
+f0100eda	obj/kern/kernel.asm	/^f0100eda:	83 ec 10             	sub    $0x10,%esp$/;"	l
+f0100edd	obj/kern/kernel.asm	/^f0100edd:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
+f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	89 f3                	mov    %esi,%ebx$/;"	l
+f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
+f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
+f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
+f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	8b 03                	mov    (%ebx),%eax$/;"	l
+f0100eed	obj/kern/kernel.asm	/^f0100eed:	85 c0                	test   %eax,%eax$/;"	l
+f0100eef	obj/kern/kernel.asm	/^f0100eef:	75 75                	jne    f0100f66 <pgdir_walk+0x91>$/;"	l
+f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
+f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	0f 84 d0 00 00 00    	je     f0100fcb <pgdir_walk+0xf6>$/;"	l
+f0100efb	obj/kern/kernel.asm	/^f0100efb:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
+f0100f02	obj/kern/kernel.asm	/^f0100f02:	e8 ea fe ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0100f07	obj/kern/kernel.asm	/^f0100f07:	85 c0                	test   %eax,%eax$/;"	l
+f0100f09	obj/kern/kernel.asm	/^f0100f09:	0f 84 c3 00 00 00    	je     f0100fd2 <pgdir_walk+0xfd>$/;"	l
+f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
+f0100f13	obj/kern/kernel.asm	/^f0100f13:	89 c2                	mov    %eax,%edx$/;"	l
+f0100f15	obj/kern/kernel.asm	/^f0100f15:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f0100f21	obj/kern/kernel.asm	/^f0100f21:	83 ca 07             	or     $0x7,%edx$/;"	l
+f0100f24	obj/kern/kernel.asm	/^f0100f24:	89 13                	mov    %edx,(%ebx)$/;"	l
+f0100f26	obj/kern/kernel.asm	/^f0100f26:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0100f32	obj/kern/kernel.asm	/^f0100f32:	89 c2                	mov    %eax,%edx$/;"	l
+f0100f34	obj/kern/kernel.asm	/^f0100f34:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f0100f37	obj/kern/kernel.asm	/^f0100f37:	3b 15 44 5e 1e f0    	cmp    0xf01e5e44,%edx$/;"	l
+f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	72 20                	jb     f0100f5f <pgdir_walk+0x8a>$/;"	l
+f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0100f43	obj/kern/kernel.asm	/^f0100f43:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	f0 $/;"	l
+f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f0100f52	obj/kern/kernel.asm	/^f0100f52:	00 $/;"	l
+f0100f53	obj/kern/kernel.asm	/^f0100f53:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	e8 52 f1 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100f5f	obj/kern/kernel.asm	/^f0100f5f:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f0100f64	obj/kern/kernel.asm	/^f0100f64:	eb 58                	jmp    f0100fbe <pgdir_walk+0xe9>$/;"	l
+f0100f66	obj/kern/kernel.asm	/^f0100f66:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
+f0100f69	obj/kern/kernel.asm	/^f0100f69:	8b 15 44 5e 1e f0    	mov    0xf01e5e44,%edx$/;"	l
+f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	39 d0                	cmp    %edx,%eax$/;"	l
+f0100f71	obj/kern/kernel.asm	/^f0100f71:	72 1c                	jb     f0100f8f <pgdir_walk+0xba>$/;"	l
+f0100f73	obj/kern/kernel.asm	/^f0100f73:	c7 44 24 08 2c 53 10 	movl   $0xf010532c,0x8(%esp)$/;"	l
+f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	f0 $/;"	l
+f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
+f0100f82	obj/kern/kernel.asm	/^f0100f82:	00 $/;"	l
+f0100f83	obj/kern/kernel.asm	/^f0100f83:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	e8 22 f1 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	89 c1                	mov    %eax,%ecx$/;"	l
+f0100f91	obj/kern/kernel.asm	/^f0100f91:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
+f0100f94	obj/kern/kernel.asm	/^f0100f94:	39 d0                	cmp    %edx,%eax$/;"	l
+f0100f96	obj/kern/kernel.asm	/^f0100f96:	72 20                	jb     f0100fb8 <pgdir_walk+0xe3>$/;"	l
+f0100f98	obj/kern/kernel.asm	/^f0100f98:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
+f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	f0 $/;"	l
+f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f0100fab	obj/kern/kernel.asm	/^f0100fab:	00 $/;"	l
+f0100fac	obj/kern/kernel.asm	/^f0100fac:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	e8 f9 f0 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	8d 81 00 00 00 f0    	lea    -0x10000000(%ecx),%eax$/;"	l
+f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
+f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
+f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	01 f0                	add    %esi,%eax$/;"	l
+f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	eb 0c                	jmp    f0100fd7 <pgdir_walk+0x102>$/;"	l
+f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	eb 05                	jmp    f0100fd7 <pgdir_walk+0x102>$/;"	l
+f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	83 c4 10             	add    $0x10,%esp$/;"	l
+f0100fda	obj/kern/kernel.asm	/^f0100fda:	5b                   	pop    %ebx$/;"	l
+f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	5e                   	pop    %esi$/;"	l
+f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	5d                   	pop    %ebp$/;"	l
+f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	c3                   	ret    $/;"	l
+f0100fde	obj/kern/kernel.asm	/^f0100fde <boot_map_region>:$/;"	l
+f0100fde	obj/kern/kernel.asm	/^f0100fde:	55                   	push   %ebp$/;"	l
+f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	89 e5                	mov    %esp,%ebp$/;"	l
+f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	57                   	push   %edi$/;"	l
+f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	56                   	push   %esi$/;"	l
+f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	53                   	push   %ebx$/;"	l
+f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
+f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
+f0100fea	obj/kern/kernel.asm	/^f0100fea:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
+f0100fed	obj/kern/kernel.asm	/^f0100fed:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
+f0100ff0	obj/kern/kernel.asm	/^f0100ff0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	89 d3                	mov    %edx,%ebx$/;"	l
+f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
+f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	83 c8 01             	or     $0x1,%eax$/;"	l
+f0101000	obj/kern/kernel.asm	/^f0101000:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
+f0101003	obj/kern/kernel.asm	/^f0101003:	eb 2f                	jmp    f0101034 <boot_map_region+0x56>$/;"	l
+f0101005	obj/kern/kernel.asm	/^f0101005:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
+f010100c	obj/kern/kernel.asm	/^f010100c:	00 $/;"	l
+f010100d	obj/kern/kernel.asm	/^f010100d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0101011	obj/kern/kernel.asm	/^f0101011:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f0101014	obj/kern/kernel.asm	/^f0101014:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101017	obj/kern/kernel.asm	/^f0101017:	e8 b9 fe ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f010101c	obj/kern/kernel.asm	/^f010101c:	85 c0                	test   %eax,%eax$/;"	l
+f010101e	obj/kern/kernel.asm	/^f010101e:	74 19                	je     f0101039 <boot_map_region+0x5b>$/;"	l
+f0101020	obj/kern/kernel.asm	/^f0101020:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
+f0101023	obj/kern/kernel.asm	/^f0101023:	09 fa                	or     %edi,%edx$/;"	l
+f0101025	obj/kern/kernel.asm	/^f0101025:	89 10                	mov    %edx,(%eax)$/;"	l
+f0101027	obj/kern/kernel.asm	/^f0101027:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
+f010102d	obj/kern/kernel.asm	/^f010102d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
+f0101033	obj/kern/kernel.asm	/^f0101033:	46                   	inc    %esi$/;"	l
+f0101034	obj/kern/kernel.asm	/^f0101034:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
+f0101037	obj/kern/kernel.asm	/^f0101037:	75 cc                	jne    f0101005 <boot_map_region+0x27>$/;"	l
+f0101039	obj/kern/kernel.asm	/^f0101039:	83 c4 2c             	add    $0x2c,%esp$/;"	l
+f010103c	obj/kern/kernel.asm	/^f010103c:	5b                   	pop    %ebx$/;"	l
+f010103d	obj/kern/kernel.asm	/^f010103d:	5e                   	pop    %esi$/;"	l
+f010103e	obj/kern/kernel.asm	/^f010103e:	5f                   	pop    %edi$/;"	l
+f010103f	obj/kern/kernel.asm	/^f010103f:	5d                   	pop    %ebp$/;"	l
+f0101040	obj/kern/kernel.asm	/^f0101040:	c3                   	ret    $/;"	l
+f0101041	obj/kern/kernel.asm	/^f0101041 <page_lookup>:$/;"	l
+f0101041	obj/kern/kernel.asm	/^f0101041:	55                   	push   %ebp$/;"	l
+f0101042	obj/kern/kernel.asm	/^f0101042:	89 e5                	mov    %esp,%ebp$/;"	l
+f0101044	obj/kern/kernel.asm	/^f0101044:	53                   	push   %ebx$/;"	l
+f0101045	obj/kern/kernel.asm	/^f0101045:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0101048	obj/kern/kernel.asm	/^f0101048:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
+f010104b	obj/kern/kernel.asm	/^f010104b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f0101052	obj/kern/kernel.asm	/^f0101052:	00 $/;"	l
+f0101053	obj/kern/kernel.asm	/^f0101053:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f0101056	obj/kern/kernel.asm	/^f0101056:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f010105a	obj/kern/kernel.asm	/^f010105a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f010105d	obj/kern/kernel.asm	/^f010105d:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101060	obj/kern/kernel.asm	/^f0101060:	e8 70 fe ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f0101065	obj/kern/kernel.asm	/^f0101065:	85 c0                	test   %eax,%eax$/;"	l
+f0101067	obj/kern/kernel.asm	/^f0101067:	74 3a                	je     f01010a3 <page_lookup+0x62>$/;"	l
+f0101069	obj/kern/kernel.asm	/^f0101069:	85 db                	test   %ebx,%ebx$/;"	l
+f010106b	obj/kern/kernel.asm	/^f010106b:	74 02                	je     f010106f <page_lookup+0x2e>$/;"	l
+f010106d	obj/kern/kernel.asm	/^f010106d:	89 03                	mov    %eax,(%ebx)$/;"	l
+f010106f	obj/kern/kernel.asm	/^f010106f:	8b 00                	mov    (%eax),%eax$/;"	l
+f0101071	obj/kern/kernel.asm	/^f0101071:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
+f0101074	obj/kern/kernel.asm	/^f0101074:	3b 05 44 5e 1e f0    	cmp    0xf01e5e44,%eax$/;"	l
+f010107a	obj/kern/kernel.asm	/^f010107a:	72 1c                	jb     f0101098 <page_lookup+0x57>$/;"	l
+f010107c	obj/kern/kernel.asm	/^f010107c:	c7 44 24 08 2c 53 10 	movl   $0xf010532c,0x8(%esp)$/;"	l
+f0101083	obj/kern/kernel.asm	/^f0101083:	f0 $/;"	l
+f0101084	obj/kern/kernel.asm	/^f0101084:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
+f010108b	obj/kern/kernel.asm	/^f010108b:	00 $/;"	l
+f010108c	obj/kern/kernel.asm	/^f010108c:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0101093	obj/kern/kernel.asm	/^f0101093:	e8 19 f0 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101098	obj/kern/kernel.asm	/^f0101098:	c1 e0 03             	shl    $0x3,%eax$/;"	l
+f010109b	obj/kern/kernel.asm	/^f010109b:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f01010a1	obj/kern/kernel.asm	/^f01010a1:	eb 05                	jmp    f01010a8 <page_lookup+0x67>$/;"	l
+f01010a3	obj/kern/kernel.asm	/^f01010a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01010a8	obj/kern/kernel.asm	/^f01010a8:	83 c4 14             	add    $0x14,%esp$/;"	l
+f01010ab	obj/kern/kernel.asm	/^f01010ab:	5b                   	pop    %ebx$/;"	l
+f01010ac	obj/kern/kernel.asm	/^f01010ac:	5d                   	pop    %ebp$/;"	l
+f01010ad	obj/kern/kernel.asm	/^f01010ad:	c3                   	ret    $/;"	l
+f01010ae	obj/kern/kernel.asm	/^f01010ae <tlb_invalidate>:$/;"	l
+f01010ae	obj/kern/kernel.asm	/^f01010ae:	55                   	push   %ebp$/;"	l
+f01010af	obj/kern/kernel.asm	/^f01010af:	89 e5                	mov    %esp,%ebp$/;"	l
+f01010b1	obj/kern/kernel.asm	/^f01010b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f01010b4	obj/kern/kernel.asm	/^f01010b4:	0f 01 38             	invlpg (%eax)$/;"	l
+f01010b7	obj/kern/kernel.asm	/^f01010b7:	5d                   	pop    %ebp$/;"	l
+f01010b8	obj/kern/kernel.asm	/^f01010b8:	c3                   	ret    $/;"	l
+f01010b9	obj/kern/kernel.asm	/^f01010b9 <page_remove>:$/;"	l
+f01010b9	obj/kern/kernel.asm	/^f01010b9:	55                   	push   %ebp$/;"	l
+f01010ba	obj/kern/kernel.asm	/^f01010ba:	89 e5                	mov    %esp,%ebp$/;"	l
+f01010bc	obj/kern/kernel.asm	/^f01010bc:	56                   	push   %esi$/;"	l
+f01010bd	obj/kern/kernel.asm	/^f01010bd:	53                   	push   %ebx$/;"	l
+f01010be	obj/kern/kernel.asm	/^f01010be:	83 ec 20             	sub    $0x20,%esp$/;"	l
+f01010c1	obj/kern/kernel.asm	/^f01010c1:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
+f01010c4	obj/kern/kernel.asm	/^f01010c4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
+f01010c7	obj/kern/kernel.asm	/^f01010c7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f01010ce	obj/kern/kernel.asm	/^f01010ce:	00 $/;"	l
+f01010cf	obj/kern/kernel.asm	/^f01010cf:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01010d3	obj/kern/kernel.asm	/^f01010d3:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f01010d6	obj/kern/kernel.asm	/^f01010d6:	e8 fa fd ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f01010db	obj/kern/kernel.asm	/^f01010db:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
+f01010de	obj/kern/kernel.asm	/^f01010de:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
+f01010e1	obj/kern/kernel.asm	/^f01010e1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f01010e5	obj/kern/kernel.asm	/^f01010e5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01010e9	obj/kern/kernel.asm	/^f01010e9:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f01010ec	obj/kern/kernel.asm	/^f01010ec:	e8 50 ff ff ff       	call   f0101041 <page_lookup>$/;"	l
+f01010f1	obj/kern/kernel.asm	/^f01010f1:	85 c0                	test   %eax,%eax$/;"	l
+f01010f3	obj/kern/kernel.asm	/^f01010f3:	74 2a                	je     f010111f <page_remove+0x66>$/;"	l
+f01010f5	obj/kern/kernel.asm	/^f01010f5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
+f01010f8	obj/kern/kernel.asm	/^f01010f8:	4a                   	dec    %edx$/;"	l
+f01010f9	obj/kern/kernel.asm	/^f01010f9:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
+f01010fd	obj/kern/kernel.asm	/^f01010fd:	66 85 d2             	test   %dx,%dx$/;"	l
+f0101100	obj/kern/kernel.asm	/^f0101100:	75 08                	jne    f010110a <page_remove+0x51>$/;"	l
+f0101102	obj/kern/kernel.asm	/^f0101102:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101105	obj/kern/kernel.asm	/^f0101105:	e8 6b fd ff ff       	call   f0100e75 <page_free>$/;"	l
+f010110a	obj/kern/kernel.asm	/^f010110a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
+f010110d	obj/kern/kernel.asm	/^f010110d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
+f0101113	obj/kern/kernel.asm	/^f0101113:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0101117	obj/kern/kernel.asm	/^f0101117:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f010111a	obj/kern/kernel.asm	/^f010111a:	e8 8f ff ff ff       	call   f01010ae <tlb_invalidate>$/;"	l
+f010111f	obj/kern/kernel.asm	/^f010111f:	83 c4 20             	add    $0x20,%esp$/;"	l
+f0101122	obj/kern/kernel.asm	/^f0101122:	5b                   	pop    %ebx$/;"	l
+f0101123	obj/kern/kernel.asm	/^f0101123:	5e                   	pop    %esi$/;"	l
+f0101124	obj/kern/kernel.asm	/^f0101124:	5d                   	pop    %ebp$/;"	l
+f0101125	obj/kern/kernel.asm	/^f0101125:	c3                   	ret    $/;"	l
+f0101126	obj/kern/kernel.asm	/^f0101126 <page_insert>:$/;"	l
+f0101126	obj/kern/kernel.asm	/^f0101126:	55                   	push   %ebp$/;"	l
+f0101127	obj/kern/kernel.asm	/^f0101127:	89 e5                	mov    %esp,%ebp$/;"	l
+f0101129	obj/kern/kernel.asm	/^f0101129:	57                   	push   %edi$/;"	l
+f010112a	obj/kern/kernel.asm	/^f010112a:	56                   	push   %esi$/;"	l
+f010112b	obj/kern/kernel.asm	/^f010112b:	53                   	push   %ebx$/;"	l
+f010112c	obj/kern/kernel.asm	/^f010112c:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
+f010112f	obj/kern/kernel.asm	/^f010112f:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f0101132	obj/kern/kernel.asm	/^f0101132:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
+f0101135	obj/kern/kernel.asm	/^f0101135:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
+f010113c	obj/kern/kernel.asm	/^f010113c:	00 $/;"	l
+f010113d	obj/kern/kernel.asm	/^f010113d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f0101140	obj/kern/kernel.asm	/^f0101140:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0101144	obj/kern/kernel.asm	/^f0101144:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f0101147	obj/kern/kernel.asm	/^f0101147:	e8 89 fd ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f010114c	obj/kern/kernel.asm	/^f010114c:	89 c6                	mov    %eax,%esi$/;"	l
+f010114e	obj/kern/kernel.asm	/^f010114e:	85 c0                	test   %eax,%eax$/;"	l
+f0101150	obj/kern/kernel.asm	/^f0101150:	74 50                	je     f01011a2 <page_insert+0x7c>$/;"	l
+f0101152	obj/kern/kernel.asm	/^f0101152:	66 ff 43 04          	incw   0x4(%ebx)$/;"	l
+f0101156	obj/kern/kernel.asm	/^f0101156:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
+f0101159	obj/kern/kernel.asm	/^f0101159:	74 1e                	je     f0101179 <page_insert+0x53>$/;"	l
+f010115b	obj/kern/kernel.asm	/^f010115b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
+f010115e	obj/kern/kernel.asm	/^f010115e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
+f0101162	obj/kern/kernel.asm	/^f0101162:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f0101165	obj/kern/kernel.asm	/^f0101165:	e8 44 ff ff ff       	call   f01010ae <tlb_invalidate>$/;"	l
+f010116a	obj/kern/kernel.asm	/^f010116a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f010116d	obj/kern/kernel.asm	/^f010116d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0101171	obj/kern/kernel.asm	/^f0101171:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f0101174	obj/kern/kernel.asm	/^f0101174:	e8 40 ff ff ff       	call   f01010b9 <page_remove>$/;"	l
+f0101179	obj/kern/kernel.asm	/^f0101179:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f010117c	obj/kern/kernel.asm	/^f010117c:	83 c8 01             	or     $0x1,%eax$/;"	l
+f010117f	obj/kern/kernel.asm	/^f010117f:	2b 1d 4c 5e 1e f0    	sub    0xf01e5e4c,%ebx$/;"	l
+f0101185	obj/kern/kernel.asm	/^f0101185:	c1 fb 03             	sar    $0x3,%ebx$/;"	l
+f0101188	obj/kern/kernel.asm	/^f0101188:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
+f010118b	obj/kern/kernel.asm	/^f010118b:	09 c3                	or     %eax,%ebx$/;"	l
+f010118d	obj/kern/kernel.asm	/^f010118d:	89 1e                	mov    %ebx,(%esi)$/;"	l
+f010118f	obj/kern/kernel.asm	/^f010118f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f0101192	obj/kern/kernel.asm	/^f0101192:	c1 e8 16             	shr    $0x16,%eax$/;"	l
+f0101195	obj/kern/kernel.asm	/^f0101195:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
+f0101198	obj/kern/kernel.asm	/^f0101198:	09 14 87             	or     %edx,(%edi,%eax,4)$/;"	l
+f010119b	obj/kern/kernel.asm	/^f010119b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01011a0	obj/kern/kernel.asm	/^f01011a0:	eb 05                	jmp    f01011a7 <page_insert+0x81>$/;"	l
+f01011a2	obj/kern/kernel.asm	/^f01011a2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
+f01011a7	obj/kern/kernel.asm	/^f01011a7:	83 c4 1c             	add    $0x1c,%esp$/;"	l
+f01011aa	obj/kern/kernel.asm	/^f01011aa:	5b                   	pop    %ebx$/;"	l
+f01011ab	obj/kern/kernel.asm	/^f01011ab:	5e                   	pop    %esi$/;"	l
+f01011ac	obj/kern/kernel.asm	/^f01011ac:	5f                   	pop    %edi$/;"	l
+f01011ad	obj/kern/kernel.asm	/^f01011ad:	5d                   	pop    %ebp$/;"	l
+f01011ae	obj/kern/kernel.asm	/^f01011ae:	c3                   	ret    $/;"	l
+f01011af	obj/kern/kernel.asm	/^f01011af <mem_init>:$/;"	l
+f01011af	obj/kern/kernel.asm	/^f01011af:	55                   	push   %ebp$/;"	l
+f01011b0	obj/kern/kernel.asm	/^f01011b0:	89 e5                	mov    %esp,%ebp$/;"	l
+f01011b2	obj/kern/kernel.asm	/^f01011b2:	57                   	push   %edi$/;"	l
+f01011b3	obj/kern/kernel.asm	/^f01011b3:	56                   	push   %esi$/;"	l
+f01011b4	obj/kern/kernel.asm	/^f01011b4:	53                   	push   %ebx$/;"	l
+f01011b5	obj/kern/kernel.asm	/^f01011b5:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
+f01011b8	obj/kern/kernel.asm	/^f01011b8:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
+f01011bd	obj/kern/kernel.asm	/^f01011bd:	e8 07 f8 ff ff       	call   f01009c9 <nvram_read>$/;"	l
+f01011c2	obj/kern/kernel.asm	/^f01011c2:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
+f01011c5	obj/kern/kernel.asm	/^f01011c5:	89 c2                	mov    %eax,%edx$/;"	l
+f01011c7	obj/kern/kernel.asm	/^f01011c7:	85 c0                	test   %eax,%eax$/;"	l
+f01011c9	obj/kern/kernel.asm	/^f01011c9:	79 06                	jns    f01011d1 <mem_init+0x22>$/;"	l
+f01011cb	obj/kern/kernel.asm	/^f01011cb:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
+f01011d1	obj/kern/kernel.asm	/^f01011d1:	c1 fa 0c             	sar    $0xc,%edx$/;"	l
+f01011d4	obj/kern/kernel.asm	/^f01011d4:	89 15 98 51 1e f0    	mov    %edx,0xf01e5198$/;"	l
+f01011da	obj/kern/kernel.asm	/^f01011da:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
+f01011df	obj/kern/kernel.asm	/^f01011df:	e8 e5 f7 ff ff       	call   f01009c9 <nvram_read>$/;"	l
+f01011e4	obj/kern/kernel.asm	/^f01011e4:	89 c2                	mov    %eax,%edx$/;"	l
+f01011e6	obj/kern/kernel.asm	/^f01011e6:	c1 e2 0a             	shl    $0xa,%edx$/;"	l
+f01011e9	obj/kern/kernel.asm	/^f01011e9:	89 d0                	mov    %edx,%eax$/;"	l
+f01011eb	obj/kern/kernel.asm	/^f01011eb:	85 d2                	test   %edx,%edx$/;"	l
+f01011ed	obj/kern/kernel.asm	/^f01011ed:	79 06                	jns    f01011f5 <mem_init+0x46>$/;"	l
+f01011ef	obj/kern/kernel.asm	/^f01011ef:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
+f01011f5	obj/kern/kernel.asm	/^f01011f5:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
+f01011f8	obj/kern/kernel.asm	/^f01011f8:	74 0e                	je     f0101208 <mem_init+0x59>$/;"	l
+f01011fa	obj/kern/kernel.asm	/^f01011fa:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
+f0101200	obj/kern/kernel.asm	/^f0101200:	89 15 44 5e 1e f0    	mov    %edx,0xf01e5e44$/;"	l
+f0101206	obj/kern/kernel.asm	/^f0101206:	eb 0c                	jmp    f0101214 <mem_init+0x65>$/;"	l
+f0101208	obj/kern/kernel.asm	/^f0101208:	8b 15 98 51 1e f0    	mov    0xf01e5198,%edx$/;"	l
+f010120e	obj/kern/kernel.asm	/^f010120e:	89 15 44 5e 1e f0    	mov    %edx,0xf01e5e44$/;"	l
+f0101214	obj/kern/kernel.asm	/^f0101214:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0101217	obj/kern/kernel.asm	/^f0101217:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
+f010121a	obj/kern/kernel.asm	/^f010121a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f010121e	obj/kern/kernel.asm	/^f010121e:	a1 98 51 1e f0       	mov    0xf01e5198,%eax$/;"	l
+f0101223	obj/kern/kernel.asm	/^f0101223:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0101226	obj/kern/kernel.asm	/^f0101226:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
+f0101229	obj/kern/kernel.asm	/^f0101229:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f010122d	obj/kern/kernel.asm	/^f010122d:	a1 44 5e 1e f0       	mov    0xf01e5e44,%eax$/;"	l
+f0101232	obj/kern/kernel.asm	/^f0101232:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0101235	obj/kern/kernel.asm	/^f0101235:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
+f0101238	obj/kern/kernel.asm	/^f0101238:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f010123c	obj/kern/kernel.asm	/^f010123c:	c7 04 24 4c 53 10 f0 	movl   $0xf010534c,(%esp)$/;"	l
+f0101243	obj/kern/kernel.asm	/^f0101243:	e8 de 24 00 00       	call   f0103726 <cprintf>$/;"	l
+f0101248	obj/kern/kernel.asm	/^f0101248:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
+f010124d	obj/kern/kernel.asm	/^f010124d:	e8 c6 f6 ff ff       	call   f0100918 <boot_alloc>$/;"	l
+f0101252	obj/kern/kernel.asm	/^f0101252:	a3 48 5e 1e f0       	mov    %eax,0xf01e5e48$/;"	l
+f0101257	obj/kern/kernel.asm	/^f0101257:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f010125e	obj/kern/kernel.asm	/^f010125e:	00 $/;"	l
+f010125f	obj/kern/kernel.asm	/^f010125f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f0101266	obj/kern/kernel.asm	/^f0101266:	00 $/;"	l
+f0101267	obj/kern/kernel.asm	/^f0101267:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f010126a	obj/kern/kernel.asm	/^f010126a:	e8 a3 36 00 00       	call   f0104912 <memset>$/;"	l
+f010126f	obj/kern/kernel.asm	/^f010126f:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101274	obj/kern/kernel.asm	/^f0101274:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f0101279	obj/kern/kernel.asm	/^f0101279:	77 20                	ja     f010129b <mem_init+0xec>$/;"	l
+f010127b	obj/kern/kernel.asm	/^f010127b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f010127f	obj/kern/kernel.asm	/^f010127f:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f0101286	obj/kern/kernel.asm	/^f0101286:	f0 $/;"	l
+f0101287	obj/kern/kernel.asm	/^f0101287:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
+f010128e	obj/kern/kernel.asm	/^f010128e:	00 $/;"	l
+f010128f	obj/kern/kernel.asm	/^f010128f:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101296	obj/kern/kernel.asm	/^f0101296:	e8 16 ee ff ff       	call   f01000b1 <_panic>$/;"	l
+f010129b	obj/kern/kernel.asm	/^f010129b:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
+f01012a1	obj/kern/kernel.asm	/^f01012a1:	83 ca 05             	or     $0x5,%edx$/;"	l
+f01012a4	obj/kern/kernel.asm	/^f01012a4:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
+f01012aa	obj/kern/kernel.asm	/^f01012aa:	a1 44 5e 1e f0       	mov    0xf01e5e44,%eax$/;"	l
+f01012af	obj/kern/kernel.asm	/^f01012af:	c1 e0 03             	shl    $0x3,%eax$/;"	l
+f01012b2	obj/kern/kernel.asm	/^f01012b2:	e8 61 f6 ff ff       	call   f0100918 <boot_alloc>$/;"	l
+f01012b7	obj/kern/kernel.asm	/^f01012b7:	a3 4c 5e 1e f0       	mov    %eax,0xf01e5e4c$/;"	l
+f01012bc	obj/kern/kernel.asm	/^f01012bc:	8b 15 44 5e 1e f0    	mov    0xf01e5e44,%edx$/;"	l
+f01012c2	obj/kern/kernel.asm	/^f01012c2:	c1 e2 03             	shl    $0x3,%edx$/;"	l
+f01012c5	obj/kern/kernel.asm	/^f01012c5:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
+f01012c9	obj/kern/kernel.asm	/^f01012c9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f01012d0	obj/kern/kernel.asm	/^f01012d0:	00 $/;"	l
+f01012d1	obj/kern/kernel.asm	/^f01012d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01012d4	obj/kern/kernel.asm	/^f01012d4:	e8 39 36 00 00       	call   f0104912 <memset>$/;"	l
+f01012d9	obj/kern/kernel.asm	/^f01012d9:	b8 00 80 01 00       	mov    $0x18000,%eax$/;"	l
+f01012de	obj/kern/kernel.asm	/^f01012de:	e8 35 f6 ff ff       	call   f0100918 <boot_alloc>$/;"	l
+f01012e3	obj/kern/kernel.asm	/^f01012e3:	a3 a8 51 1e f0       	mov    %eax,0xf01e51a8$/;"	l
+f01012e8	obj/kern/kernel.asm	/^f01012e8:	c7 44 24 08 00 80 01 	movl   $0x18000,0x8(%esp)$/;"	l
+f01012ef	obj/kern/kernel.asm	/^f01012ef:	00 $/;"	l
+f01012f0	obj/kern/kernel.asm	/^f01012f0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f01012f7	obj/kern/kernel.asm	/^f01012f7:	00 $/;"	l
+f01012f8	obj/kern/kernel.asm	/^f01012f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01012fb	obj/kern/kernel.asm	/^f01012fb:	e8 12 36 00 00       	call   f0104912 <memset>$/;"	l
+f0101300	obj/kern/kernel.asm	/^f0101300:	e8 0d fa ff ff       	call   f0100d12 <page_init>$/;"	l
+f0101305	obj/kern/kernel.asm	/^f0101305:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
+f010130a	obj/kern/kernel.asm	/^f010130a:	e8 e3 f6 ff ff       	call   f01009f2 <check_page_free_list>$/;"	l
+f010130f	obj/kern/kernel.asm	/^f010130f:	83 3d 4c 5e 1e f0 00 	cmpl   $0x0,0xf01e5e4c$/;"	l
+f0101316	obj/kern/kernel.asm	/^f0101316:	75 1c                	jne    f0101334 <mem_init+0x185>$/;"	l
+f0101318	obj/kern/kernel.asm	/^f0101318:	c7 44 24 08 cc 5a 10 	movl   $0xf0105acc,0x8(%esp)$/;"	l
+f010131f	obj/kern/kernel.asm	/^f010131f:	f0 $/;"	l
+f0101320	obj/kern/kernel.asm	/^f0101320:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
+f0101327	obj/kern/kernel.asm	/^f0101327:	00 $/;"	l
+f0101328	obj/kern/kernel.asm	/^f0101328:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010132f	obj/kern/kernel.asm	/^f010132f:	e8 7d ed ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101334	obj/kern/kernel.asm	/^f0101334:	a1 a0 51 1e f0       	mov    0xf01e51a0,%eax$/;"	l
+f0101339	obj/kern/kernel.asm	/^f0101339:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
+f010133e	obj/kern/kernel.asm	/^f010133e:	eb 03                	jmp    f0101343 <mem_init+0x194>$/;"	l
+f0101340	obj/kern/kernel.asm	/^f0101340:	43                   	inc    %ebx$/;"	l
+f0101341	obj/kern/kernel.asm	/^f0101341:	8b 00                	mov    (%eax),%eax$/;"	l
+f0101343	obj/kern/kernel.asm	/^f0101343:	85 c0                	test   %eax,%eax$/;"	l
+f0101345	obj/kern/kernel.asm	/^f0101345:	75 f9                	jne    f0101340 <mem_init+0x191>$/;"	l
+f0101347	obj/kern/kernel.asm	/^f0101347:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f010134e	obj/kern/kernel.asm	/^f010134e:	e8 9e fa ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101353	obj/kern/kernel.asm	/^f0101353:	89 c6                	mov    %eax,%esi$/;"	l
+f0101355	obj/kern/kernel.asm	/^f0101355:	85 c0                	test   %eax,%eax$/;"	l
+f0101357	obj/kern/kernel.asm	/^f0101357:	75 24                	jne    f010137d <mem_init+0x1ce>$/;"	l
+f0101359	obj/kern/kernel.asm	/^f0101359:	c7 44 24 0c e7 5a 10 	movl   $0xf0105ae7,0xc(%esp)$/;"	l
+f0101360	obj/kern/kernel.asm	/^f0101360:	f0 $/;"	l
+f0101361	obj/kern/kernel.asm	/^f0101361:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101368	obj/kern/kernel.asm	/^f0101368:	f0 $/;"	l
+f0101369	obj/kern/kernel.asm	/^f0101369:	c7 44 24 04 da 02 00 	movl   $0x2da,0x4(%esp)$/;"	l
+f0101370	obj/kern/kernel.asm	/^f0101370:	00 $/;"	l
+f0101371	obj/kern/kernel.asm	/^f0101371:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101378	obj/kern/kernel.asm	/^f0101378:	e8 34 ed ff ff       	call   f01000b1 <_panic>$/;"	l
+f010137d	obj/kern/kernel.asm	/^f010137d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0101384	obj/kern/kernel.asm	/^f0101384:	e8 68 fa ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101389	obj/kern/kernel.asm	/^f0101389:	89 c7                	mov    %eax,%edi$/;"	l
+f010138b	obj/kern/kernel.asm	/^f010138b:	85 c0                	test   %eax,%eax$/;"	l
+f010138d	obj/kern/kernel.asm	/^f010138d:	75 24                	jne    f01013b3 <mem_init+0x204>$/;"	l
+f010138f	obj/kern/kernel.asm	/^f010138f:	c7 44 24 0c fd 5a 10 	movl   $0xf0105afd,0xc(%esp)$/;"	l
+f0101396	obj/kern/kernel.asm	/^f0101396:	f0 $/;"	l
+f0101397	obj/kern/kernel.asm	/^f0101397:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010139e	obj/kern/kernel.asm	/^f010139e:	f0 $/;"	l
+f010139f	obj/kern/kernel.asm	/^f010139f:	c7 44 24 04 db 02 00 	movl   $0x2db,0x4(%esp)$/;"	l
+f01013a6	obj/kern/kernel.asm	/^f01013a6:	00 $/;"	l
+f01013a7	obj/kern/kernel.asm	/^f01013a7:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01013ae	obj/kern/kernel.asm	/^f01013ae:	e8 fe ec ff ff       	call   f01000b1 <_panic>$/;"	l
+f01013b3	obj/kern/kernel.asm	/^f01013b3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f01013ba	obj/kern/kernel.asm	/^f01013ba:	e8 32 fa ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f01013bf	obj/kern/kernel.asm	/^f01013bf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f01013c2	obj/kern/kernel.asm	/^f01013c2:	85 c0                	test   %eax,%eax$/;"	l
+f01013c4	obj/kern/kernel.asm	/^f01013c4:	75 24                	jne    f01013ea <mem_init+0x23b>$/;"	l
+f01013c6	obj/kern/kernel.asm	/^f01013c6:	c7 44 24 0c 13 5b 10 	movl   $0xf0105b13,0xc(%esp)$/;"	l
+f01013cd	obj/kern/kernel.asm	/^f01013cd:	f0 $/;"	l
+f01013ce	obj/kern/kernel.asm	/^f01013ce:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01013d5	obj/kern/kernel.asm	/^f01013d5:	f0 $/;"	l
+f01013d6	obj/kern/kernel.asm	/^f01013d6:	c7 44 24 04 dc 02 00 	movl   $0x2dc,0x4(%esp)$/;"	l
+f01013dd	obj/kern/kernel.asm	/^f01013dd:	00 $/;"	l
+f01013de	obj/kern/kernel.asm	/^f01013de:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01013e5	obj/kern/kernel.asm	/^f01013e5:	e8 c7 ec ff ff       	call   f01000b1 <_panic>$/;"	l
+f01013ea	obj/kern/kernel.asm	/^f01013ea:	39 fe                	cmp    %edi,%esi$/;"	l
+f01013ec	obj/kern/kernel.asm	/^f01013ec:	75 24                	jne    f0101412 <mem_init+0x263>$/;"	l
+f01013ee	obj/kern/kernel.asm	/^f01013ee:	c7 44 24 0c 29 5b 10 	movl   $0xf0105b29,0xc(%esp)$/;"	l
+f01013f5	obj/kern/kernel.asm	/^f01013f5:	f0 $/;"	l
+f01013f6	obj/kern/kernel.asm	/^f01013f6:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01013fd	obj/kern/kernel.asm	/^f01013fd:	f0 $/;"	l
+f01013fe	obj/kern/kernel.asm	/^f01013fe:	c7 44 24 04 df 02 00 	movl   $0x2df,0x4(%esp)$/;"	l
+f0101405	obj/kern/kernel.asm	/^f0101405:	00 $/;"	l
+f0101406	obj/kern/kernel.asm	/^f0101406:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010140d	obj/kern/kernel.asm	/^f010140d:	e8 9f ec ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101412	obj/kern/kernel.asm	/^f0101412:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
+f0101415	obj/kern/kernel.asm	/^f0101415:	74 05                	je     f010141c <mem_init+0x26d>$/;"	l
+f0101417	obj/kern/kernel.asm	/^f0101417:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
+f010141a	obj/kern/kernel.asm	/^f010141a:	75 24                	jne    f0101440 <mem_init+0x291>$/;"	l
+f010141c	obj/kern/kernel.asm	/^f010141c:	c7 44 24 0c ac 53 10 	movl   $0xf01053ac,0xc(%esp)$/;"	l
+f0101423	obj/kern/kernel.asm	/^f0101423:	f0 $/;"	l
+f0101424	obj/kern/kernel.asm	/^f0101424:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010142b	obj/kern/kernel.asm	/^f010142b:	f0 $/;"	l
+f010142c	obj/kern/kernel.asm	/^f010142c:	c7 44 24 04 e0 02 00 	movl   $0x2e0,0x4(%esp)$/;"	l
+f0101433	obj/kern/kernel.asm	/^f0101433:	00 $/;"	l
+f0101434	obj/kern/kernel.asm	/^f0101434:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010143b	obj/kern/kernel.asm	/^f010143b:	e8 71 ec ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101440	obj/kern/kernel.asm	/^f0101440:	8b 15 4c 5e 1e f0    	mov    0xf01e5e4c,%edx$/;"	l
+f0101446	obj/kern/kernel.asm	/^f0101446:	a1 44 5e 1e f0       	mov    0xf01e5e44,%eax$/;"	l
+f010144b	obj/kern/kernel.asm	/^f010144b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f010144e	obj/kern/kernel.asm	/^f010144e:	89 f1                	mov    %esi,%ecx$/;"	l
+f0101450	obj/kern/kernel.asm	/^f0101450:	29 d1                	sub    %edx,%ecx$/;"	l
+f0101452	obj/kern/kernel.asm	/^f0101452:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
+f0101455	obj/kern/kernel.asm	/^f0101455:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
+f0101458	obj/kern/kernel.asm	/^f0101458:	39 c1                	cmp    %eax,%ecx$/;"	l
+f010145a	obj/kern/kernel.asm	/^f010145a:	72 24                	jb     f0101480 <mem_init+0x2d1>$/;"	l
+f010145c	obj/kern/kernel.asm	/^f010145c:	c7 44 24 0c 3b 5b 10 	movl   $0xf0105b3b,0xc(%esp)$/;"	l
+f0101463	obj/kern/kernel.asm	/^f0101463:	f0 $/;"	l
+f0101464	obj/kern/kernel.asm	/^f0101464:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010146b	obj/kern/kernel.asm	/^f010146b:	f0 $/;"	l
+f010146c	obj/kern/kernel.asm	/^f010146c:	c7 44 24 04 e1 02 00 	movl   $0x2e1,0x4(%esp)$/;"	l
+f0101473	obj/kern/kernel.asm	/^f0101473:	00 $/;"	l
+f0101474	obj/kern/kernel.asm	/^f0101474:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010147b	obj/kern/kernel.asm	/^f010147b:	e8 31 ec ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101480	obj/kern/kernel.asm	/^f0101480:	89 f9                	mov    %edi,%ecx$/;"	l
+f0101482	obj/kern/kernel.asm	/^f0101482:	29 d1                	sub    %edx,%ecx$/;"	l
+f0101484	obj/kern/kernel.asm	/^f0101484:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
+f0101487	obj/kern/kernel.asm	/^f0101487:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
+f010148a	obj/kern/kernel.asm	/^f010148a:	39 c8                	cmp    %ecx,%eax$/;"	l
+f010148c	obj/kern/kernel.asm	/^f010148c:	77 24                	ja     f01014b2 <mem_init+0x303>$/;"	l
+f010148e	obj/kern/kernel.asm	/^f010148e:	c7 44 24 0c 58 5b 10 	movl   $0xf0105b58,0xc(%esp)$/;"	l
+f0101495	obj/kern/kernel.asm	/^f0101495:	f0 $/;"	l
+f0101496	obj/kern/kernel.asm	/^f0101496:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010149d	obj/kern/kernel.asm	/^f010149d:	f0 $/;"	l
+f010149e	obj/kern/kernel.asm	/^f010149e:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
+f01014a5	obj/kern/kernel.asm	/^f01014a5:	00 $/;"	l
+f01014a6	obj/kern/kernel.asm	/^f01014a6:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01014ad	obj/kern/kernel.asm	/^f01014ad:	e8 ff eb ff ff       	call   f01000b1 <_panic>$/;"	l
+f01014b2	obj/kern/kernel.asm	/^f01014b2:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
+f01014b5	obj/kern/kernel.asm	/^f01014b5:	29 d1                	sub    %edx,%ecx$/;"	l
+f01014b7	obj/kern/kernel.asm	/^f01014b7:	89 ca                	mov    %ecx,%edx$/;"	l
+f01014b9	obj/kern/kernel.asm	/^f01014b9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f01014bc	obj/kern/kernel.asm	/^f01014bc:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f01014bf	obj/kern/kernel.asm	/^f01014bf:	39 d0                	cmp    %edx,%eax$/;"	l
+f01014c1	obj/kern/kernel.asm	/^f01014c1:	77 24                	ja     f01014e7 <mem_init+0x338>$/;"	l
+f01014c3	obj/kern/kernel.asm	/^f01014c3:	c7 44 24 0c 75 5b 10 	movl   $0xf0105b75,0xc(%esp)$/;"	l
+f01014ca	obj/kern/kernel.asm	/^f01014ca:	f0 $/;"	l
+f01014cb	obj/kern/kernel.asm	/^f01014cb:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01014d2	obj/kern/kernel.asm	/^f01014d2:	f0 $/;"	l
+f01014d3	obj/kern/kernel.asm	/^f01014d3:	c7 44 24 04 e3 02 00 	movl   $0x2e3,0x4(%esp)$/;"	l
+f01014da	obj/kern/kernel.asm	/^f01014da:	00 $/;"	l
+f01014db	obj/kern/kernel.asm	/^f01014db:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01014e2	obj/kern/kernel.asm	/^f01014e2:	e8 ca eb ff ff       	call   f01000b1 <_panic>$/;"	l
+f01014e7	obj/kern/kernel.asm	/^f01014e7:	a1 a0 51 1e f0       	mov    0xf01e51a0,%eax$/;"	l
+f01014ec	obj/kern/kernel.asm	/^f01014ec:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
+f01014ef	obj/kern/kernel.asm	/^f01014ef:	c7 05 a0 51 1e f0 00 	movl   $0x0,0xf01e51a0$/;"	l
+f01014f6	obj/kern/kernel.asm	/^f01014f6:	00 00 00 $/;"	l
+f01014f9	obj/kern/kernel.asm	/^f01014f9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0101500	obj/kern/kernel.asm	/^f0101500:	e8 ec f8 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101505	obj/kern/kernel.asm	/^f0101505:	85 c0                	test   %eax,%eax$/;"	l
+f0101507	obj/kern/kernel.asm	/^f0101507:	74 24                	je     f010152d <mem_init+0x37e>$/;"	l
+f0101509	obj/kern/kernel.asm	/^f0101509:	c7 44 24 0c 92 5b 10 	movl   $0xf0105b92,0xc(%esp)$/;"	l
+f0101510	obj/kern/kernel.asm	/^f0101510:	f0 $/;"	l
+f0101511	obj/kern/kernel.asm	/^f0101511:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101518	obj/kern/kernel.asm	/^f0101518:	f0 $/;"	l
+f0101519	obj/kern/kernel.asm	/^f0101519:	c7 44 24 04 ea 02 00 	movl   $0x2ea,0x4(%esp)$/;"	l
+f0101520	obj/kern/kernel.asm	/^f0101520:	00 $/;"	l
+f0101521	obj/kern/kernel.asm	/^f0101521:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101528	obj/kern/kernel.asm	/^f0101528:	e8 84 eb ff ff       	call   f01000b1 <_panic>$/;"	l
+f010152d	obj/kern/kernel.asm	/^f010152d:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f0101530	obj/kern/kernel.asm	/^f0101530:	e8 40 f9 ff ff       	call   f0100e75 <page_free>$/;"	l
+f0101535	obj/kern/kernel.asm	/^f0101535:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f0101538	obj/kern/kernel.asm	/^f0101538:	e8 38 f9 ff ff       	call   f0100e75 <page_free>$/;"	l
+f010153d	obj/kern/kernel.asm	/^f010153d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f0101540	obj/kern/kernel.asm	/^f0101540:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101543	obj/kern/kernel.asm	/^f0101543:	e8 2d f9 ff ff       	call   f0100e75 <page_free>$/;"	l
+f0101548	obj/kern/kernel.asm	/^f0101548:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f010154f	obj/kern/kernel.asm	/^f010154f:	e8 9d f8 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101554	obj/kern/kernel.asm	/^f0101554:	89 c6                	mov    %eax,%esi$/;"	l
+f0101556	obj/kern/kernel.asm	/^f0101556:	85 c0                	test   %eax,%eax$/;"	l
+f0101558	obj/kern/kernel.asm	/^f0101558:	75 24                	jne    f010157e <mem_init+0x3cf>$/;"	l
+f010155a	obj/kern/kernel.asm	/^f010155a:	c7 44 24 0c e7 5a 10 	movl   $0xf0105ae7,0xc(%esp)$/;"	l
+f0101561	obj/kern/kernel.asm	/^f0101561:	f0 $/;"	l
+f0101562	obj/kern/kernel.asm	/^f0101562:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101569	obj/kern/kernel.asm	/^f0101569:	f0 $/;"	l
+f010156a	obj/kern/kernel.asm	/^f010156a:	c7 44 24 04 f1 02 00 	movl   $0x2f1,0x4(%esp)$/;"	l
+f0101571	obj/kern/kernel.asm	/^f0101571:	00 $/;"	l
+f0101572	obj/kern/kernel.asm	/^f0101572:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101579	obj/kern/kernel.asm	/^f0101579:	e8 33 eb ff ff       	call   f01000b1 <_panic>$/;"	l
+f010157e	obj/kern/kernel.asm	/^f010157e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0101585	obj/kern/kernel.asm	/^f0101585:	e8 67 f8 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f010158a	obj/kern/kernel.asm	/^f010158a:	89 c7                	mov    %eax,%edi$/;"	l
+f010158c	obj/kern/kernel.asm	/^f010158c:	85 c0                	test   %eax,%eax$/;"	l
+f010158e	obj/kern/kernel.asm	/^f010158e:	75 24                	jne    f01015b4 <mem_init+0x405>$/;"	l
+f0101590	obj/kern/kernel.asm	/^f0101590:	c7 44 24 0c fd 5a 10 	movl   $0xf0105afd,0xc(%esp)$/;"	l
+f0101597	obj/kern/kernel.asm	/^f0101597:	f0 $/;"	l
+f0101598	obj/kern/kernel.asm	/^f0101598:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010159f	obj/kern/kernel.asm	/^f010159f:	f0 $/;"	l
+f01015a0	obj/kern/kernel.asm	/^f01015a0:	c7 44 24 04 f2 02 00 	movl   $0x2f2,0x4(%esp)$/;"	l
+f01015a7	obj/kern/kernel.asm	/^f01015a7:	00 $/;"	l
+f01015a8	obj/kern/kernel.asm	/^f01015a8:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01015af	obj/kern/kernel.asm	/^f01015af:	e8 fd ea ff ff       	call   f01000b1 <_panic>$/;"	l
+f01015b4	obj/kern/kernel.asm	/^f01015b4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f01015bb	obj/kern/kernel.asm	/^f01015bb:	e8 31 f8 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f01015c0	obj/kern/kernel.asm	/^f01015c0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f01015c3	obj/kern/kernel.asm	/^f01015c3:	85 c0                	test   %eax,%eax$/;"	l
+f01015c5	obj/kern/kernel.asm	/^f01015c5:	75 24                	jne    f01015eb <mem_init+0x43c>$/;"	l
+f01015c7	obj/kern/kernel.asm	/^f01015c7:	c7 44 24 0c 13 5b 10 	movl   $0xf0105b13,0xc(%esp)$/;"	l
+f01015ce	obj/kern/kernel.asm	/^f01015ce:	f0 $/;"	l
+f01015cf	obj/kern/kernel.asm	/^f01015cf:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01015d6	obj/kern/kernel.asm	/^f01015d6:	f0 $/;"	l
+f01015d7	obj/kern/kernel.asm	/^f01015d7:	c7 44 24 04 f3 02 00 	movl   $0x2f3,0x4(%esp)$/;"	l
+f01015de	obj/kern/kernel.asm	/^f01015de:	00 $/;"	l
+f01015df	obj/kern/kernel.asm	/^f01015df:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01015e6	obj/kern/kernel.asm	/^f01015e6:	e8 c6 ea ff ff       	call   f01000b1 <_panic>$/;"	l
+f01015eb	obj/kern/kernel.asm	/^f01015eb:	39 fe                	cmp    %edi,%esi$/;"	l
+f01015ed	obj/kern/kernel.asm	/^f01015ed:	75 24                	jne    f0101613 <mem_init+0x464>$/;"	l
+f01015ef	obj/kern/kernel.asm	/^f01015ef:	c7 44 24 0c 29 5b 10 	movl   $0xf0105b29,0xc(%esp)$/;"	l
+f01015f6	obj/kern/kernel.asm	/^f01015f6:	f0 $/;"	l
+f01015f7	obj/kern/kernel.asm	/^f01015f7:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01015fe	obj/kern/kernel.asm	/^f01015fe:	f0 $/;"	l
+f01015ff	obj/kern/kernel.asm	/^f01015ff:	c7 44 24 04 f5 02 00 	movl   $0x2f5,0x4(%esp)$/;"	l
+f0101606	obj/kern/kernel.asm	/^f0101606:	00 $/;"	l
+f0101607	obj/kern/kernel.asm	/^f0101607:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010160e	obj/kern/kernel.asm	/^f010160e:	e8 9e ea ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101613	obj/kern/kernel.asm	/^f0101613:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
+f0101616	obj/kern/kernel.asm	/^f0101616:	74 05                	je     f010161d <mem_init+0x46e>$/;"	l
+f0101618	obj/kern/kernel.asm	/^f0101618:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
+f010161b	obj/kern/kernel.asm	/^f010161b:	75 24                	jne    f0101641 <mem_init+0x492>$/;"	l
+f010161d	obj/kern/kernel.asm	/^f010161d:	c7 44 24 0c ac 53 10 	movl   $0xf01053ac,0xc(%esp)$/;"	l
+f0101624	obj/kern/kernel.asm	/^f0101624:	f0 $/;"	l
+f0101625	obj/kern/kernel.asm	/^f0101625:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010162c	obj/kern/kernel.asm	/^f010162c:	f0 $/;"	l
+f010162d	obj/kern/kernel.asm	/^f010162d:	c7 44 24 04 f6 02 00 	movl   $0x2f6,0x4(%esp)$/;"	l
+f0101634	obj/kern/kernel.asm	/^f0101634:	00 $/;"	l
+f0101635	obj/kern/kernel.asm	/^f0101635:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010163c	obj/kern/kernel.asm	/^f010163c:	e8 70 ea ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101641	obj/kern/kernel.asm	/^f0101641:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0101648	obj/kern/kernel.asm	/^f0101648:	e8 a4 f7 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f010164d	obj/kern/kernel.asm	/^f010164d:	85 c0                	test   %eax,%eax$/;"	l
+f010164f	obj/kern/kernel.asm	/^f010164f:	74 24                	je     f0101675 <mem_init+0x4c6>$/;"	l
+f0101651	obj/kern/kernel.asm	/^f0101651:	c7 44 24 0c 92 5b 10 	movl   $0xf0105b92,0xc(%esp)$/;"	l
+f0101658	obj/kern/kernel.asm	/^f0101658:	f0 $/;"	l
+f0101659	obj/kern/kernel.asm	/^f0101659:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101660	obj/kern/kernel.asm	/^f0101660:	f0 $/;"	l
+f0101661	obj/kern/kernel.asm	/^f0101661:	c7 44 24 04 f7 02 00 	movl   $0x2f7,0x4(%esp)$/;"	l
+f0101668	obj/kern/kernel.asm	/^f0101668:	00 $/;"	l
+f0101669	obj/kern/kernel.asm	/^f0101669:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101670	obj/kern/kernel.asm	/^f0101670:	e8 3c ea ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101675	obj/kern/kernel.asm	/^f0101675:	89 f0                	mov    %esi,%eax$/;"	l
+f0101677	obj/kern/kernel.asm	/^f0101677:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f010167d	obj/kern/kernel.asm	/^f010167d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0101680	obj/kern/kernel.asm	/^f0101680:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0101683	obj/kern/kernel.asm	/^f0101683:	89 c2                	mov    %eax,%edx$/;"	l
+f0101685	obj/kern/kernel.asm	/^f0101685:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f0101688	obj/kern/kernel.asm	/^f0101688:	3b 15 44 5e 1e f0    	cmp    0xf01e5e44,%edx$/;"	l
+f010168e	obj/kern/kernel.asm	/^f010168e:	72 20                	jb     f01016b0 <mem_init+0x501>$/;"	l
+f0101690	obj/kern/kernel.asm	/^f0101690:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0101694	obj/kern/kernel.asm	/^f0101694:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f010169b	obj/kern/kernel.asm	/^f010169b:	f0 $/;"	l
+f010169c	obj/kern/kernel.asm	/^f010169c:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f01016a3	obj/kern/kernel.asm	/^f01016a3:	00 $/;"	l
+f01016a4	obj/kern/kernel.asm	/^f01016a4:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f01016ab	obj/kern/kernel.asm	/^f01016ab:	e8 01 ea ff ff       	call   f01000b1 <_panic>$/;"	l
+f01016b0	obj/kern/kernel.asm	/^f01016b0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f01016b7	obj/kern/kernel.asm	/^f01016b7:	00 $/;"	l
+f01016b8	obj/kern/kernel.asm	/^f01016b8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
+f01016bf	obj/kern/kernel.asm	/^f01016bf:	00 $/;"	l
+f01016c0	obj/kern/kernel.asm	/^f01016c0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f01016c5	obj/kern/kernel.asm	/^f01016c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01016c8	obj/kern/kernel.asm	/^f01016c8:	e8 45 32 00 00       	call   f0104912 <memset>$/;"	l
+f01016cd	obj/kern/kernel.asm	/^f01016cd:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f01016d0	obj/kern/kernel.asm	/^f01016d0:	e8 a0 f7 ff ff       	call   f0100e75 <page_free>$/;"	l
+f01016d5	obj/kern/kernel.asm	/^f01016d5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
+f01016dc	obj/kern/kernel.asm	/^f01016dc:	e8 10 f7 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f01016e1	obj/kern/kernel.asm	/^f01016e1:	85 c0                	test   %eax,%eax$/;"	l
+f01016e3	obj/kern/kernel.asm	/^f01016e3:	75 24                	jne    f0101709 <mem_init+0x55a>$/;"	l
+f01016e5	obj/kern/kernel.asm	/^f01016e5:	c7 44 24 0c a1 5b 10 	movl   $0xf0105ba1,0xc(%esp)$/;"	l
+f01016ec	obj/kern/kernel.asm	/^f01016ec:	f0 $/;"	l
+f01016ed	obj/kern/kernel.asm	/^f01016ed:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01016f4	obj/kern/kernel.asm	/^f01016f4:	f0 $/;"	l
+f01016f5	obj/kern/kernel.asm	/^f01016f5:	c7 44 24 04 fc 02 00 	movl   $0x2fc,0x4(%esp)$/;"	l
+f01016fc	obj/kern/kernel.asm	/^f01016fc:	00 $/;"	l
+f01016fd	obj/kern/kernel.asm	/^f01016fd:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101704	obj/kern/kernel.asm	/^f0101704:	e8 a8 e9 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101709	obj/kern/kernel.asm	/^f0101709:	39 c6                	cmp    %eax,%esi$/;"	l
+f010170b	obj/kern/kernel.asm	/^f010170b:	74 24                	je     f0101731 <mem_init+0x582>$/;"	l
+f010170d	obj/kern/kernel.asm	/^f010170d:	c7 44 24 0c bf 5b 10 	movl   $0xf0105bbf,0xc(%esp)$/;"	l
+f0101714	obj/kern/kernel.asm	/^f0101714:	f0 $/;"	l
+f0101715	obj/kern/kernel.asm	/^f0101715:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010171c	obj/kern/kernel.asm	/^f010171c:	f0 $/;"	l
+f010171d	obj/kern/kernel.asm	/^f010171d:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
+f0101724	obj/kern/kernel.asm	/^f0101724:	00 $/;"	l
+f0101725	obj/kern/kernel.asm	/^f0101725:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010172c	obj/kern/kernel.asm	/^f010172c:	e8 80 e9 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101731	obj/kern/kernel.asm	/^f0101731:	89 f2                	mov    %esi,%edx$/;"	l
+f0101733	obj/kern/kernel.asm	/^f0101733:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f0101739	obj/kern/kernel.asm	/^f0101739:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f010173c	obj/kern/kernel.asm	/^f010173c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f010173f	obj/kern/kernel.asm	/^f010173f:	89 d0                	mov    %edx,%eax$/;"	l
+f0101741	obj/kern/kernel.asm	/^f0101741:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
+f0101744	obj/kern/kernel.asm	/^f0101744:	3b 05 44 5e 1e f0    	cmp    0xf01e5e44,%eax$/;"	l
+f010174a	obj/kern/kernel.asm	/^f010174a:	72 20                	jb     f010176c <mem_init+0x5bd>$/;"	l
+f010174c	obj/kern/kernel.asm	/^f010174c:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
+f0101750	obj/kern/kernel.asm	/^f0101750:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0101757	obj/kern/kernel.asm	/^f0101757:	f0 $/;"	l
+f0101758	obj/kern/kernel.asm	/^f0101758:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f010175f	obj/kern/kernel.asm	/^f010175f:	00 $/;"	l
+f0101760	obj/kern/kernel.asm	/^f0101760:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0101767	obj/kern/kernel.asm	/^f0101767:	e8 45 e9 ff ff       	call   f01000b1 <_panic>$/;"	l
+f010176c	obj/kern/kernel.asm	/^f010176c:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
+f0101772	obj/kern/kernel.asm	/^f0101772:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
+f0101778	obj/kern/kernel.asm	/^f0101778:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
+f010177b	obj/kern/kernel.asm	/^f010177b:	74 24                	je     f01017a1 <mem_init+0x5f2>$/;"	l
+f010177d	obj/kern/kernel.asm	/^f010177d:	c7 44 24 0c cf 5b 10 	movl   $0xf0105bcf,0xc(%esp)$/;"	l
+f0101784	obj/kern/kernel.asm	/^f0101784:	f0 $/;"	l
+f0101785	obj/kern/kernel.asm	/^f0101785:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010178c	obj/kern/kernel.asm	/^f010178c:	f0 $/;"	l
+f010178d	obj/kern/kernel.asm	/^f010178d:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
+f0101794	obj/kern/kernel.asm	/^f0101794:	00 $/;"	l
+f0101795	obj/kern/kernel.asm	/^f0101795:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010179c	obj/kern/kernel.asm	/^f010179c:	e8 10 e9 ff ff       	call   f01000b1 <_panic>$/;"	l
+f01017a1	obj/kern/kernel.asm	/^f01017a1:	40                   	inc    %eax$/;"	l
+f01017a2	obj/kern/kernel.asm	/^f01017a2:	39 d0                	cmp    %edx,%eax$/;"	l
+f01017a4	obj/kern/kernel.asm	/^f01017a4:	75 d2                	jne    f0101778 <mem_init+0x5c9>$/;"	l
+f01017a6	obj/kern/kernel.asm	/^f01017a6:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
+f01017a9	obj/kern/kernel.asm	/^f01017a9:	89 15 a0 51 1e f0    	mov    %edx,0xf01e51a0$/;"	l
+f01017af	obj/kern/kernel.asm	/^f01017af:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f01017b2	obj/kern/kernel.asm	/^f01017b2:	e8 be f6 ff ff       	call   f0100e75 <page_free>$/;"	l
+f01017b7	obj/kern/kernel.asm	/^f01017b7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f01017ba	obj/kern/kernel.asm	/^f01017ba:	e8 b6 f6 ff ff       	call   f0100e75 <page_free>$/;"	l
+f01017bf	obj/kern/kernel.asm	/^f01017bf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f01017c2	obj/kern/kernel.asm	/^f01017c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01017c5	obj/kern/kernel.asm	/^f01017c5:	e8 ab f6 ff ff       	call   f0100e75 <page_free>$/;"	l
+f01017ca	obj/kern/kernel.asm	/^f01017ca:	a1 a0 51 1e f0       	mov    0xf01e51a0,%eax$/;"	l
+f01017cf	obj/kern/kernel.asm	/^f01017cf:	eb 03                	jmp    f01017d4 <mem_init+0x625>$/;"	l
+f01017d1	obj/kern/kernel.asm	/^f01017d1:	4b                   	dec    %ebx$/;"	l
+f01017d2	obj/kern/kernel.asm	/^f01017d2:	8b 00                	mov    (%eax),%eax$/;"	l
+f01017d4	obj/kern/kernel.asm	/^f01017d4:	85 c0                	test   %eax,%eax$/;"	l
+f01017d6	obj/kern/kernel.asm	/^f01017d6:	75 f9                	jne    f01017d1 <mem_init+0x622>$/;"	l
+f01017d8	obj/kern/kernel.asm	/^f01017d8:	85 db                	test   %ebx,%ebx$/;"	l
+f01017da	obj/kern/kernel.asm	/^f01017da:	74 24                	je     f0101800 <mem_init+0x651>$/;"	l
+f01017dc	obj/kern/kernel.asm	/^f01017dc:	c7 44 24 0c d9 5b 10 	movl   $0xf0105bd9,0xc(%esp)$/;"	l
+f01017e3	obj/kern/kernel.asm	/^f01017e3:	f0 $/;"	l
+f01017e4	obj/kern/kernel.asm	/^f01017e4:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01017eb	obj/kern/kernel.asm	/^f01017eb:	f0 $/;"	l
+f01017ec	obj/kern/kernel.asm	/^f01017ec:	c7 44 24 04 0d 03 00 	movl   $0x30d,0x4(%esp)$/;"	l
+f01017f3	obj/kern/kernel.asm	/^f01017f3:	00 $/;"	l
+f01017f4	obj/kern/kernel.asm	/^f01017f4:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01017fb	obj/kern/kernel.asm	/^f01017fb:	e8 b1 e8 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101800	obj/kern/kernel.asm	/^f0101800:	c7 04 24 cc 53 10 f0 	movl   $0xf01053cc,(%esp)$/;"	l
+f0101807	obj/kern/kernel.asm	/^f0101807:	e8 1a 1f 00 00       	call   f0103726 <cprintf>$/;"	l
+f010180c	obj/kern/kernel.asm	/^f010180c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0101813	obj/kern/kernel.asm	/^f0101813:	e8 d9 f5 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101818	obj/kern/kernel.asm	/^f0101818:	89 c7                	mov    %eax,%edi$/;"	l
+f010181a	obj/kern/kernel.asm	/^f010181a:	85 c0                	test   %eax,%eax$/;"	l
+f010181c	obj/kern/kernel.asm	/^f010181c:	75 24                	jne    f0101842 <mem_init+0x693>$/;"	l
+f010181e	obj/kern/kernel.asm	/^f010181e:	c7 44 24 0c e7 5a 10 	movl   $0xf0105ae7,0xc(%esp)$/;"	l
+f0101825	obj/kern/kernel.asm	/^f0101825:	f0 $/;"	l
+f0101826	obj/kern/kernel.asm	/^f0101826:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010182d	obj/kern/kernel.asm	/^f010182d:	f0 $/;"	l
+f010182e	obj/kern/kernel.asm	/^f010182e:	c7 44 24 04 6b 03 00 	movl   $0x36b,0x4(%esp)$/;"	l
+f0101835	obj/kern/kernel.asm	/^f0101835:	00 $/;"	l
+f0101836	obj/kern/kernel.asm	/^f0101836:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010183d	obj/kern/kernel.asm	/^f010183d:	e8 6f e8 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101842	obj/kern/kernel.asm	/^f0101842:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0101849	obj/kern/kernel.asm	/^f0101849:	e8 a3 f5 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f010184e	obj/kern/kernel.asm	/^f010184e:	89 c6                	mov    %eax,%esi$/;"	l
+f0101850	obj/kern/kernel.asm	/^f0101850:	85 c0                	test   %eax,%eax$/;"	l
+f0101852	obj/kern/kernel.asm	/^f0101852:	75 24                	jne    f0101878 <mem_init+0x6c9>$/;"	l
+f0101854	obj/kern/kernel.asm	/^f0101854:	c7 44 24 0c fd 5a 10 	movl   $0xf0105afd,0xc(%esp)$/;"	l
+f010185b	obj/kern/kernel.asm	/^f010185b:	f0 $/;"	l
+f010185c	obj/kern/kernel.asm	/^f010185c:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101863	obj/kern/kernel.asm	/^f0101863:	f0 $/;"	l
+f0101864	obj/kern/kernel.asm	/^f0101864:	c7 44 24 04 6c 03 00 	movl   $0x36c,0x4(%esp)$/;"	l
+f010186b	obj/kern/kernel.asm	/^f010186b:	00 $/;"	l
+f010186c	obj/kern/kernel.asm	/^f010186c:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101873	obj/kern/kernel.asm	/^f0101873:	e8 39 e8 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101878	obj/kern/kernel.asm	/^f0101878:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f010187f	obj/kern/kernel.asm	/^f010187f:	e8 6d f5 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101884	obj/kern/kernel.asm	/^f0101884:	89 c3                	mov    %eax,%ebx$/;"	l
+f0101886	obj/kern/kernel.asm	/^f0101886:	85 c0                	test   %eax,%eax$/;"	l
+f0101888	obj/kern/kernel.asm	/^f0101888:	75 24                	jne    f01018ae <mem_init+0x6ff>$/;"	l
+f010188a	obj/kern/kernel.asm	/^f010188a:	c7 44 24 0c 13 5b 10 	movl   $0xf0105b13,0xc(%esp)$/;"	l
+f0101891	obj/kern/kernel.asm	/^f0101891:	f0 $/;"	l
+f0101892	obj/kern/kernel.asm	/^f0101892:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101899	obj/kern/kernel.asm	/^f0101899:	f0 $/;"	l
+f010189a	obj/kern/kernel.asm	/^f010189a:	c7 44 24 04 6d 03 00 	movl   $0x36d,0x4(%esp)$/;"	l
+f01018a1	obj/kern/kernel.asm	/^f01018a1:	00 $/;"	l
+f01018a2	obj/kern/kernel.asm	/^f01018a2:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01018a9	obj/kern/kernel.asm	/^f01018a9:	e8 03 e8 ff ff       	call   f01000b1 <_panic>$/;"	l
+f01018ae	obj/kern/kernel.asm	/^f01018ae:	39 f7                	cmp    %esi,%edi$/;"	l
+f01018b0	obj/kern/kernel.asm	/^f01018b0:	75 24                	jne    f01018d6 <mem_init+0x727>$/;"	l
+f01018b2	obj/kern/kernel.asm	/^f01018b2:	c7 44 24 0c 29 5b 10 	movl   $0xf0105b29,0xc(%esp)$/;"	l
+f01018b9	obj/kern/kernel.asm	/^f01018b9:	f0 $/;"	l
+f01018ba	obj/kern/kernel.asm	/^f01018ba:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01018c1	obj/kern/kernel.asm	/^f01018c1:	f0 $/;"	l
+f01018c2	obj/kern/kernel.asm	/^f01018c2:	c7 44 24 04 70 03 00 	movl   $0x370,0x4(%esp)$/;"	l
+f01018c9	obj/kern/kernel.asm	/^f01018c9:	00 $/;"	l
+f01018ca	obj/kern/kernel.asm	/^f01018ca:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01018d1	obj/kern/kernel.asm	/^f01018d1:	e8 db e7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f01018d6	obj/kern/kernel.asm	/^f01018d6:	39 c6                	cmp    %eax,%esi$/;"	l
+f01018d8	obj/kern/kernel.asm	/^f01018d8:	74 04                	je     f01018de <mem_init+0x72f>$/;"	l
+f01018da	obj/kern/kernel.asm	/^f01018da:	39 c7                	cmp    %eax,%edi$/;"	l
+f01018dc	obj/kern/kernel.asm	/^f01018dc:	75 24                	jne    f0101902 <mem_init+0x753>$/;"	l
+f01018de	obj/kern/kernel.asm	/^f01018de:	c7 44 24 0c ac 53 10 	movl   $0xf01053ac,0xc(%esp)$/;"	l
+f01018e5	obj/kern/kernel.asm	/^f01018e5:	f0 $/;"	l
+f01018e6	obj/kern/kernel.asm	/^f01018e6:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01018ed	obj/kern/kernel.asm	/^f01018ed:	f0 $/;"	l
+f01018ee	obj/kern/kernel.asm	/^f01018ee:	c7 44 24 04 71 03 00 	movl   $0x371,0x4(%esp)$/;"	l
+f01018f5	obj/kern/kernel.asm	/^f01018f5:	00 $/;"	l
+f01018f6	obj/kern/kernel.asm	/^f01018f6:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01018fd	obj/kern/kernel.asm	/^f01018fd:	e8 af e7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101902	obj/kern/kernel.asm	/^f0101902:	8b 15 a0 51 1e f0    	mov    0xf01e51a0,%edx$/;"	l
+f0101908	obj/kern/kernel.asm	/^f0101908:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
+f010190b	obj/kern/kernel.asm	/^f010190b:	c7 05 a0 51 1e f0 00 	movl   $0x0,0xf01e51a0$/;"	l
+f0101912	obj/kern/kernel.asm	/^f0101912:	00 00 00 $/;"	l
+f0101915	obj/kern/kernel.asm	/^f0101915:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f010191c	obj/kern/kernel.asm	/^f010191c:	e8 d0 f4 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101921	obj/kern/kernel.asm	/^f0101921:	85 c0                	test   %eax,%eax$/;"	l
+f0101923	obj/kern/kernel.asm	/^f0101923:	74 24                	je     f0101949 <mem_init+0x79a>$/;"	l
+f0101925	obj/kern/kernel.asm	/^f0101925:	c7 44 24 0c 92 5b 10 	movl   $0xf0105b92,0xc(%esp)$/;"	l
+f010192c	obj/kern/kernel.asm	/^f010192c:	f0 $/;"	l
+f010192d	obj/kern/kernel.asm	/^f010192d:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101934	obj/kern/kernel.asm	/^f0101934:	f0 $/;"	l
+f0101935	obj/kern/kernel.asm	/^f0101935:	c7 44 24 04 79 03 00 	movl   $0x379,0x4(%esp)$/;"	l
+f010193c	obj/kern/kernel.asm	/^f010193c:	00 $/;"	l
+f010193d	obj/kern/kernel.asm	/^f010193d:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101944	obj/kern/kernel.asm	/^f0101944:	e8 68 e7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101949	obj/kern/kernel.asm	/^f0101949:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
+f010194c	obj/kern/kernel.asm	/^f010194c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f0101950	obj/kern/kernel.asm	/^f0101950:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f0101957	obj/kern/kernel.asm	/^f0101957:	00 $/;"	l
+f0101958	obj/kern/kernel.asm	/^f0101958:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f010195d	obj/kern/kernel.asm	/^f010195d:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101960	obj/kern/kernel.asm	/^f0101960:	e8 dc f6 ff ff       	call   f0101041 <page_lookup>$/;"	l
+f0101965	obj/kern/kernel.asm	/^f0101965:	85 c0                	test   %eax,%eax$/;"	l
+f0101967	obj/kern/kernel.asm	/^f0101967:	74 24                	je     f010198d <mem_init+0x7de>$/;"	l
+f0101969	obj/kern/kernel.asm	/^f0101969:	c7 44 24 0c ec 53 10 	movl   $0xf01053ec,0xc(%esp)$/;"	l
+f0101970	obj/kern/kernel.asm	/^f0101970:	f0 $/;"	l
+f0101971	obj/kern/kernel.asm	/^f0101971:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101978	obj/kern/kernel.asm	/^f0101978:	f0 $/;"	l
+f0101979	obj/kern/kernel.asm	/^f0101979:	c7 44 24 04 7d 03 00 	movl   $0x37d,0x4(%esp)$/;"	l
+f0101980	obj/kern/kernel.asm	/^f0101980:	00 $/;"	l
+f0101981	obj/kern/kernel.asm	/^f0101981:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101988	obj/kern/kernel.asm	/^f0101988:	e8 24 e7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f010198d	obj/kern/kernel.asm	/^f010198d:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f0101994	obj/kern/kernel.asm	/^f0101994:	00 $/;"	l
+f0101995	obj/kern/kernel.asm	/^f0101995:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f010199c	obj/kern/kernel.asm	/^f010199c:	00 $/;"	l
+f010199d	obj/kern/kernel.asm	/^f010199d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f01019a1	obj/kern/kernel.asm	/^f01019a1:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f01019a6	obj/kern/kernel.asm	/^f01019a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01019a9	obj/kern/kernel.asm	/^f01019a9:	e8 78 f7 ff ff       	call   f0101126 <page_insert>$/;"	l
+f01019ae	obj/kern/kernel.asm	/^f01019ae:	85 c0                	test   %eax,%eax$/;"	l
+f01019b0	obj/kern/kernel.asm	/^f01019b0:	78 24                	js     f01019d6 <mem_init+0x827>$/;"	l
+f01019b2	obj/kern/kernel.asm	/^f01019b2:	c7 44 24 0c 24 54 10 	movl   $0xf0105424,0xc(%esp)$/;"	l
+f01019b9	obj/kern/kernel.asm	/^f01019b9:	f0 $/;"	l
+f01019ba	obj/kern/kernel.asm	/^f01019ba:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01019c1	obj/kern/kernel.asm	/^f01019c1:	f0 $/;"	l
+f01019c2	obj/kern/kernel.asm	/^f01019c2:	c7 44 24 04 80 03 00 	movl   $0x380,0x4(%esp)$/;"	l
+f01019c9	obj/kern/kernel.asm	/^f01019c9:	00 $/;"	l
+f01019ca	obj/kern/kernel.asm	/^f01019ca:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01019d1	obj/kern/kernel.asm	/^f01019d1:	e8 db e6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f01019d6	obj/kern/kernel.asm	/^f01019d6:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f01019d9	obj/kern/kernel.asm	/^f01019d9:	e8 97 f4 ff ff       	call   f0100e75 <page_free>$/;"	l
+f01019de	obj/kern/kernel.asm	/^f01019de:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f01019e5	obj/kern/kernel.asm	/^f01019e5:	00 $/;"	l
+f01019e6	obj/kern/kernel.asm	/^f01019e6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f01019ed	obj/kern/kernel.asm	/^f01019ed:	00 $/;"	l
+f01019ee	obj/kern/kernel.asm	/^f01019ee:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f01019f2	obj/kern/kernel.asm	/^f01019f2:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f01019f7	obj/kern/kernel.asm	/^f01019f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01019fa	obj/kern/kernel.asm	/^f01019fa:	e8 27 f7 ff ff       	call   f0101126 <page_insert>$/;"	l
+f01019ff	obj/kern/kernel.asm	/^f01019ff:	85 c0                	test   %eax,%eax$/;"	l
+f0101a01	obj/kern/kernel.asm	/^f0101a01:	74 24                	je     f0101a27 <mem_init+0x878>$/;"	l
+f0101a03	obj/kern/kernel.asm	/^f0101a03:	c7 44 24 0c 54 54 10 	movl   $0xf0105454,0xc(%esp)$/;"	l
+f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	f0 $/;"	l
+f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101a12	obj/kern/kernel.asm	/^f0101a12:	f0 $/;"	l
+f0101a13	obj/kern/kernel.asm	/^f0101a13:	c7 44 24 04 84 03 00 	movl   $0x384,0x4(%esp)$/;"	l
+f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	00 $/;"	l
+f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101a22	obj/kern/kernel.asm	/^f0101a22:	e8 8a e6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101a27	obj/kern/kernel.asm	/^f0101a27:	8b 0d 48 5e 1e f0    	mov    0xf01e5e48,%ecx$/;"	l
+f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
+f0101a30	obj/kern/kernel.asm	/^f0101a30:	a1 4c 5e 1e f0       	mov    0xf01e5e4c,%eax$/;"	l
+f0101a35	obj/kern/kernel.asm	/^f0101a35:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
+f0101a38	obj/kern/kernel.asm	/^f0101a38:	8b 11                	mov    (%ecx),%edx$/;"	l
+f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
+f0101a40	obj/kern/kernel.asm	/^f0101a40:	89 f8                	mov    %edi,%eax$/;"	l
+f0101a42	obj/kern/kernel.asm	/^f0101a42:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
+f0101a45	obj/kern/kernel.asm	/^f0101a45:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0101a48	obj/kern/kernel.asm	/^f0101a48:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	39 c2                	cmp    %eax,%edx$/;"	l
+f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	74 24                	je     f0101a73 <mem_init+0x8c4>$/;"	l
+f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	c7 44 24 0c 84 54 10 	movl   $0xf0105484,0xc(%esp)$/;"	l
+f0101a56	obj/kern/kernel.asm	/^f0101a56:	f0 $/;"	l
+f0101a57	obj/kern/kernel.asm	/^f0101a57:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	f0 $/;"	l
+f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
+f0101a66	obj/kern/kernel.asm	/^f0101a66:	00 $/;"	l
+f0101a67	obj/kern/kernel.asm	/^f0101a67:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	e8 3e e6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101a73	obj/kern/kernel.asm	/^f0101a73:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f0101a78	obj/kern/kernel.asm	/^f0101a78:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	e8 dc ee ff ff       	call   f010095c <check_va2pa>$/;"	l
+f0101a80	obj/kern/kernel.asm	/^f0101a80:	89 f2                	mov    %esi,%edx$/;"	l
+f0101a82	obj/kern/kernel.asm	/^f0101a82:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
+f0101a85	obj/kern/kernel.asm	/^f0101a85:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f0101a88	obj/kern/kernel.asm	/^f0101a88:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	39 d0                	cmp    %edx,%eax$/;"	l
+f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	74 24                	je     f0101ab3 <mem_init+0x904>$/;"	l
+f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	c7 44 24 0c ac 54 10 	movl   $0xf01054ac,0xc(%esp)$/;"	l
+f0101a96	obj/kern/kernel.asm	/^f0101a96:	f0 $/;"	l
+f0101a97	obj/kern/kernel.asm	/^f0101a97:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	f0 $/;"	l
+f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	c7 44 24 04 86 03 00 	movl   $0x386,0x4(%esp)$/;"	l
+f0101aa6	obj/kern/kernel.asm	/^f0101aa6:	00 $/;"	l
+f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101aae	obj/kern/kernel.asm	/^f0101aae:	e8 fe e5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
+f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	74 24                	je     f0101ade <mem_init+0x92f>$/;"	l
+f0101aba	obj/kern/kernel.asm	/^f0101aba:	c7 44 24 0c e4 5b 10 	movl   $0xf0105be4,0xc(%esp)$/;"	l
+f0101ac1	obj/kern/kernel.asm	/^f0101ac1:	f0 $/;"	l
+f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	f0 $/;"	l
+f0101aca	obj/kern/kernel.asm	/^f0101aca:	c7 44 24 04 87 03 00 	movl   $0x387,0x4(%esp)$/;"	l
+f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	00 $/;"	l
+f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	e8 d3 e5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101ade	obj/kern/kernel.asm	/^f0101ade:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
+f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	74 24                	je     f0101b09 <mem_init+0x95a>$/;"	l
+f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	c7 44 24 0c f5 5b 10 	movl   $0xf0105bf5,0xc(%esp)$/;"	l
+f0101aec	obj/kern/kernel.asm	/^f0101aec:	f0 $/;"	l
+f0101aed	obj/kern/kernel.asm	/^f0101aed:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101af4	obj/kern/kernel.asm	/^f0101af4:	f0 $/;"	l
+f0101af5	obj/kern/kernel.asm	/^f0101af5:	c7 44 24 04 88 03 00 	movl   $0x388,0x4(%esp)$/;"	l
+f0101afc	obj/kern/kernel.asm	/^f0101afc:	00 $/;"	l
+f0101afd	obj/kern/kernel.asm	/^f0101afd:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101b04	obj/kern/kernel.asm	/^f0101b04:	e8 a8 e5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101b09	obj/kern/kernel.asm	/^f0101b09:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f0101b10	obj/kern/kernel.asm	/^f0101b10:	00 $/;"	l
+f0101b11	obj/kern/kernel.asm	/^f0101b11:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0101b18	obj/kern/kernel.asm	/^f0101b18:	00 $/;"	l
+f0101b19	obj/kern/kernel.asm	/^f0101b19:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
+f0101b20	obj/kern/kernel.asm	/^f0101b20:	89 14 24             	mov    %edx,(%esp)$/;"	l
+f0101b23	obj/kern/kernel.asm	/^f0101b23:	e8 fe f5 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0101b28	obj/kern/kernel.asm	/^f0101b28:	85 c0                	test   %eax,%eax$/;"	l
+f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	74 24                	je     f0101b50 <mem_init+0x9a1>$/;"	l
+f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	c7 44 24 0c dc 54 10 	movl   $0xf01054dc,0xc(%esp)$/;"	l
+f0101b33	obj/kern/kernel.asm	/^f0101b33:	f0 $/;"	l
+f0101b34	obj/kern/kernel.asm	/^f0101b34:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	f0 $/;"	l
+f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	c7 44 24 04 8b 03 00 	movl   $0x38b,0x4(%esp)$/;"	l
+f0101b43	obj/kern/kernel.asm	/^f0101b43:	00 $/;"	l
+f0101b44	obj/kern/kernel.asm	/^f0101b44:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	e8 61 e5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101b50	obj/kern/kernel.asm	/^f0101b50:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
+f0101b55	obj/kern/kernel.asm	/^f0101b55:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	e8 fd ed ff ff       	call   f010095c <check_va2pa>$/;"	l
+f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	89 da                	mov    %ebx,%edx$/;"	l
+f0101b61	obj/kern/kernel.asm	/^f0101b61:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f0101b67	obj/kern/kernel.asm	/^f0101b67:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	39 d0                	cmp    %edx,%eax$/;"	l
+f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	74 24                	je     f0101b95 <mem_init+0x9e6>$/;"	l
+f0101b71	obj/kern/kernel.asm	/^f0101b71:	c7 44 24 0c 18 55 10 	movl   $0xf0105518,0xc(%esp)$/;"	l
+f0101b78	obj/kern/kernel.asm	/^f0101b78:	f0 $/;"	l
+f0101b79	obj/kern/kernel.asm	/^f0101b79:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101b80	obj/kern/kernel.asm	/^f0101b80:	f0 $/;"	l
+f0101b81	obj/kern/kernel.asm	/^f0101b81:	c7 44 24 04 8c 03 00 	movl   $0x38c,0x4(%esp)$/;"	l
+f0101b88	obj/kern/kernel.asm	/^f0101b88:	00 $/;"	l
+f0101b89	obj/kern/kernel.asm	/^f0101b89:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101b90	obj/kern/kernel.asm	/^f0101b90:	e8 1c e5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101b95	obj/kern/kernel.asm	/^f0101b95:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
+f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	74 24                	je     f0101bc0 <mem_init+0xa11>$/;"	l
+f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	c7 44 24 0c 06 5c 10 	movl   $0xf0105c06,0xc(%esp)$/;"	l
+f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	f0 $/;"	l
+f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101bab	obj/kern/kernel.asm	/^f0101bab:	f0 $/;"	l
+f0101bac	obj/kern/kernel.asm	/^f0101bac:	c7 44 24 04 8d 03 00 	movl   $0x38d,0x4(%esp)$/;"	l
+f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	00 $/;"	l
+f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	e8 f1 e4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	e8 25 f2 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	85 c0                	test   %eax,%eax$/;"	l
+f0101bce	obj/kern/kernel.asm	/^f0101bce:	74 24                	je     f0101bf4 <mem_init+0xa45>$/;"	l
+f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	c7 44 24 0c 92 5b 10 	movl   $0xf0105b92,0xc(%esp)$/;"	l
+f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	f0 $/;"	l
+f0101bd8	obj/kern/kernel.asm	/^f0101bd8:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	f0 $/;"	l
+f0101be0	obj/kern/kernel.asm	/^f0101be0:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
+f0101be7	obj/kern/kernel.asm	/^f0101be7:	00 $/;"	l
+f0101be8	obj/kern/kernel.asm	/^f0101be8:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101bef	obj/kern/kernel.asm	/^f0101bef:	e8 bd e4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	00 $/;"	l
+f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0101c03	obj/kern/kernel.asm	/^f0101c03:	00 $/;"	l
+f0101c04	obj/kern/kernel.asm	/^f0101c04:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0101c08	obj/kern/kernel.asm	/^f0101c08:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101c10	obj/kern/kernel.asm	/^f0101c10:	e8 11 f5 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0101c15	obj/kern/kernel.asm	/^f0101c15:	85 c0                	test   %eax,%eax$/;"	l
+f0101c17	obj/kern/kernel.asm	/^f0101c17:	74 24                	je     f0101c3d <mem_init+0xa8e>$/;"	l
+f0101c19	obj/kern/kernel.asm	/^f0101c19:	c7 44 24 0c dc 54 10 	movl   $0xf01054dc,0xc(%esp)$/;"	l
+f0101c20	obj/kern/kernel.asm	/^f0101c20:	f0 $/;"	l
+f0101c21	obj/kern/kernel.asm	/^f0101c21:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101c28	obj/kern/kernel.asm	/^f0101c28:	f0 $/;"	l
+f0101c29	obj/kern/kernel.asm	/^f0101c29:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
+f0101c30	obj/kern/kernel.asm	/^f0101c30:	00 $/;"	l
+f0101c31	obj/kern/kernel.asm	/^f0101c31:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101c38	obj/kern/kernel.asm	/^f0101c38:	e8 74 e4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101c3d	obj/kern/kernel.asm	/^f0101c3d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
+f0101c42	obj/kern/kernel.asm	/^f0101c42:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101c47	obj/kern/kernel.asm	/^f0101c47:	e8 10 ed ff ff       	call   f010095c <check_va2pa>$/;"	l
+f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	89 da                	mov    %ebx,%edx$/;"	l
+f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f0101c54	obj/kern/kernel.asm	/^f0101c54:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f0101c57	obj/kern/kernel.asm	/^f0101c57:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	39 d0                	cmp    %edx,%eax$/;"	l
+f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	74 24                	je     f0101c82 <mem_init+0xad3>$/;"	l
+f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	c7 44 24 0c 18 55 10 	movl   $0xf0105518,0xc(%esp)$/;"	l
+f0101c65	obj/kern/kernel.asm	/^f0101c65:	f0 $/;"	l
+f0101c66	obj/kern/kernel.asm	/^f0101c66:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	f0 $/;"	l
+f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
+f0101c75	obj/kern/kernel.asm	/^f0101c75:	00 $/;"	l
+f0101c76	obj/kern/kernel.asm	/^f0101c76:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	e8 2f e4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101c82	obj/kern/kernel.asm	/^f0101c82:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
+f0101c87	obj/kern/kernel.asm	/^f0101c87:	74 24                	je     f0101cad <mem_init+0xafe>$/;"	l
+f0101c89	obj/kern/kernel.asm	/^f0101c89:	c7 44 24 0c 06 5c 10 	movl   $0xf0105c06,0xc(%esp)$/;"	l
+f0101c90	obj/kern/kernel.asm	/^f0101c90:	f0 $/;"	l
+f0101c91	obj/kern/kernel.asm	/^f0101c91:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101c98	obj/kern/kernel.asm	/^f0101c98:	f0 $/;"	l
+f0101c99	obj/kern/kernel.asm	/^f0101c99:	c7 44 24 04 95 03 00 	movl   $0x395,0x4(%esp)$/;"	l
+f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	00 $/;"	l
+f0101ca1	obj/kern/kernel.asm	/^f0101ca1:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	e8 04 e4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101cad	obj/kern/kernel.asm	/^f0101cad:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	e8 38 f1 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	85 c0                	test   %eax,%eax$/;"	l
+f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	74 24                	je     f0101ce1 <mem_init+0xb32>$/;"	l
+f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	c7 44 24 0c 92 5b 10 	movl   $0xf0105b92,0xc(%esp)$/;"	l
+f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	f0 $/;"	l
+f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101ccc	obj/kern/kernel.asm	/^f0101ccc:	f0 $/;"	l
+f0101ccd	obj/kern/kernel.asm	/^f0101ccd:	c7 44 24 04 99 03 00 	movl   $0x399,0x4(%esp)$/;"	l
+f0101cd4	obj/kern/kernel.asm	/^f0101cd4:	00 $/;"	l
+f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	e8 d0 e3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	8b 15 48 5e 1e f0    	mov    0xf01e5e48,%edx$/;"	l
+f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	8b 02                	mov    (%edx),%eax$/;"	l
+f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
+f0101cee	obj/kern/kernel.asm	/^f0101cee:	89 c1                	mov    %eax,%ecx$/;"	l
+f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
+f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	3b 0d 44 5e 1e f0    	cmp    0xf01e5e44,%ecx$/;"	l
+f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	72 20                	jb     f0101d1b <mem_init+0xb6c>$/;"	l
+f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0101cff	obj/kern/kernel.asm	/^f0101cff:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0101d06	obj/kern/kernel.asm	/^f0101d06:	f0 $/;"	l
+f0101d07	obj/kern/kernel.asm	/^f0101d07:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
+f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	00 $/;"	l
+f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101d16	obj/kern/kernel.asm	/^f0101d16:	e8 96 e3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f0101d20	obj/kern/kernel.asm	/^f0101d20:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
+f0101d23	obj/kern/kernel.asm	/^f0101d23:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	00 $/;"	l
+f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
+f0101d32	obj/kern/kernel.asm	/^f0101d32:	00 $/;"	l
+f0101d33	obj/kern/kernel.asm	/^f0101d33:	89 14 24             	mov    %edx,(%esp)$/;"	l
+f0101d36	obj/kern/kernel.asm	/^f0101d36:	e8 9a f1 ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
+f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	83 c2 04             	add    $0x4,%edx$/;"	l
+f0101d41	obj/kern/kernel.asm	/^f0101d41:	39 d0                	cmp    %edx,%eax$/;"	l
+f0101d43	obj/kern/kernel.asm	/^f0101d43:	74 24                	je     f0101d69 <mem_init+0xbba>$/;"	l
+f0101d45	obj/kern/kernel.asm	/^f0101d45:	c7 44 24 0c 48 55 10 	movl   $0xf0105548,0xc(%esp)$/;"	l
+f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	f0 $/;"	l
+f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101d54	obj/kern/kernel.asm	/^f0101d54:	f0 $/;"	l
+f0101d55	obj/kern/kernel.asm	/^f0101d55:	c7 44 24 04 9d 03 00 	movl   $0x39d,0x4(%esp)$/;"	l
+f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	00 $/;"	l
+f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101d64	obj/kern/kernel.asm	/^f0101d64:	e8 48 e3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101d69	obj/kern/kernel.asm	/^f0101d69:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
+f0101d70	obj/kern/kernel.asm	/^f0101d70:	00 $/;"	l
+f0101d71	obj/kern/kernel.asm	/^f0101d71:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0101d78	obj/kern/kernel.asm	/^f0101d78:	00 $/;"	l
+f0101d79	obj/kern/kernel.asm	/^f0101d79:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101d82	obj/kern/kernel.asm	/^f0101d82:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101d85	obj/kern/kernel.asm	/^f0101d85:	e8 9c f3 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	85 c0                	test   %eax,%eax$/;"	l
+f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	74 24                	je     f0101db2 <mem_init+0xc03>$/;"	l
+f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	c7 44 24 0c 88 55 10 	movl   $0xf0105588,0xc(%esp)$/;"	l
+f0101d95	obj/kern/kernel.asm	/^f0101d95:	f0 $/;"	l
+f0101d96	obj/kern/kernel.asm	/^f0101d96:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	f0 $/;"	l
+f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
+f0101da5	obj/kern/kernel.asm	/^f0101da5:	00 $/;"	l
+f0101da6	obj/kern/kernel.asm	/^f0101da6:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101dad	obj/kern/kernel.asm	/^f0101dad:	e8 ff e2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101db2	obj/kern/kernel.asm	/^f0101db2:	8b 0d 48 5e 1e f0    	mov    0xf01e5e48,%ecx$/;"	l
+f0101db8	obj/kern/kernel.asm	/^f0101db8:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
+f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
+f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	89 c8                	mov    %ecx,%eax$/;"	l
+f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	e8 95 eb ff ff       	call   f010095c <check_va2pa>$/;"	l
+f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	89 da                	mov    %ebx,%edx$/;"	l
+f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f0101dd5	obj/kern/kernel.asm	/^f0101dd5:	39 d0                	cmp    %edx,%eax$/;"	l
+f0101dd7	obj/kern/kernel.asm	/^f0101dd7:	74 24                	je     f0101dfd <mem_init+0xc4e>$/;"	l
+f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	c7 44 24 0c 18 55 10 	movl   $0xf0105518,0xc(%esp)$/;"	l
+f0101de0	obj/kern/kernel.asm	/^f0101de0:	f0 $/;"	l
+f0101de1	obj/kern/kernel.asm	/^f0101de1:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101de8	obj/kern/kernel.asm	/^f0101de8:	f0 $/;"	l
+f0101de9	obj/kern/kernel.asm	/^f0101de9:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
+f0101df0	obj/kern/kernel.asm	/^f0101df0:	00 $/;"	l
+f0101df1	obj/kern/kernel.asm	/^f0101df1:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101df8	obj/kern/kernel.asm	/^f0101df8:	e8 b4 e2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
+f0101e02	obj/kern/kernel.asm	/^f0101e02:	74 24                	je     f0101e28 <mem_init+0xc79>$/;"	l
+f0101e04	obj/kern/kernel.asm	/^f0101e04:	c7 44 24 0c 06 5c 10 	movl   $0xf0105c06,0xc(%esp)$/;"	l
+f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	f0 $/;"	l
+f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101e13	obj/kern/kernel.asm	/^f0101e13:	f0 $/;"	l
+f0101e14	obj/kern/kernel.asm	/^f0101e14:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
+f0101e1b	obj/kern/kernel.asm	/^f0101e1b:	00 $/;"	l
+f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101e23	obj/kern/kernel.asm	/^f0101e23:	e8 89 e2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101e28	obj/kern/kernel.asm	/^f0101e28:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	00 $/;"	l
+f0101e30	obj/kern/kernel.asm	/^f0101e30:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
+f0101e37	obj/kern/kernel.asm	/^f0101e37:	00 $/;"	l
+f0101e38	obj/kern/kernel.asm	/^f0101e38:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	e8 92 f0 ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f0101e43	obj/kern/kernel.asm	/^f0101e43:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
+f0101e46	obj/kern/kernel.asm	/^f0101e46:	75 24                	jne    f0101e6c <mem_init+0xcbd>$/;"	l
+f0101e48	obj/kern/kernel.asm	/^f0101e48:	c7 44 24 0c c8 55 10 	movl   $0xf01055c8,0xc(%esp)$/;"	l
+f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	f0 $/;"	l
+f0101e50	obj/kern/kernel.asm	/^f0101e50:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101e57	obj/kern/kernel.asm	/^f0101e57:	f0 $/;"	l
+f0101e58	obj/kern/kernel.asm	/^f0101e58:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
+f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	00 $/;"	l
+f0101e60	obj/kern/kernel.asm	/^f0101e60:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101e67	obj/kern/kernel.asm	/^f0101e67:	e8 45 e2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101e71	obj/kern/kernel.asm	/^f0101e71:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
+f0101e74	obj/kern/kernel.asm	/^f0101e74:	75 24                	jne    f0101e9a <mem_init+0xceb>$/;"	l
+f0101e76	obj/kern/kernel.asm	/^f0101e76:	c7 44 24 0c 17 5c 10 	movl   $0xf0105c17,0xc(%esp)$/;"	l
+f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	f0 $/;"	l
+f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101e85	obj/kern/kernel.asm	/^f0101e85:	f0 $/;"	l
+f0101e86	obj/kern/kernel.asm	/^f0101e86:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
+f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	00 $/;"	l
+f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101e95	obj/kern/kernel.asm	/^f0101e95:	e8 17 e2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	00 $/;"	l
+f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0101ea9	obj/kern/kernel.asm	/^f0101ea9:	00 $/;"	l
+f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0101eae	obj/kern/kernel.asm	/^f0101eae:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101eb1	obj/kern/kernel.asm	/^f0101eb1:	e8 70 f2 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0101eb6	obj/kern/kernel.asm	/^f0101eb6:	85 c0                	test   %eax,%eax$/;"	l
+f0101eb8	obj/kern/kernel.asm	/^f0101eb8:	74 24                	je     f0101ede <mem_init+0xd2f>$/;"	l
+f0101eba	obj/kern/kernel.asm	/^f0101eba:	c7 44 24 0c dc 54 10 	movl   $0xf01054dc,0xc(%esp)$/;"	l
+f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	f0 $/;"	l
+f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	f0 $/;"	l
+f0101eca	obj/kern/kernel.asm	/^f0101eca:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
+f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	00 $/;"	l
+f0101ed2	obj/kern/kernel.asm	/^f0101ed2:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	e8 d3 e1 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101ede	obj/kern/kernel.asm	/^f0101ede:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	00 $/;"	l
+f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
+f0101eed	obj/kern/kernel.asm	/^f0101eed:	00 $/;"	l
+f0101eee	obj/kern/kernel.asm	/^f0101eee:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	e8 da ef ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f0101efb	obj/kern/kernel.asm	/^f0101efb:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
+f0101efe	obj/kern/kernel.asm	/^f0101efe:	75 24                	jne    f0101f24 <mem_init+0xd75>$/;"	l
+f0101f00	obj/kern/kernel.asm	/^f0101f00:	c7 44 24 0c fc 55 10 	movl   $0xf01055fc,0xc(%esp)$/;"	l
+f0101f07	obj/kern/kernel.asm	/^f0101f07:	f0 $/;"	l
+f0101f08	obj/kern/kernel.asm	/^f0101f08:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	f0 $/;"	l
+f0101f10	obj/kern/kernel.asm	/^f0101f10:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
+f0101f17	obj/kern/kernel.asm	/^f0101f17:	00 $/;"	l
+f0101f18	obj/kern/kernel.asm	/^f0101f18:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	e8 8d e1 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101f24	obj/kern/kernel.asm	/^f0101f24:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f0101f2b	obj/kern/kernel.asm	/^f0101f2b:	00 $/;"	l
+f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
+f0101f33	obj/kern/kernel.asm	/^f0101f33:	00 $/;"	l
+f0101f34	obj/kern/kernel.asm	/^f0101f34:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101f39	obj/kern/kernel.asm	/^f0101f39:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	e8 94 ef ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f0101f41	obj/kern/kernel.asm	/^f0101f41:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
+f0101f44	obj/kern/kernel.asm	/^f0101f44:	74 24                	je     f0101f6a <mem_init+0xdbb>$/;"	l
+f0101f46	obj/kern/kernel.asm	/^f0101f46:	c7 44 24 0c 30 56 10 	movl   $0xf0105630,0xc(%esp)$/;"	l
+f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	f0 $/;"	l
+f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101f55	obj/kern/kernel.asm	/^f0101f55:	f0 $/;"	l
+f0101f56	obj/kern/kernel.asm	/^f0101f56:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
+f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	00 $/;"	l
+f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101f65	obj/kern/kernel.asm	/^f0101f65:	e8 47 e1 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f0101f71	obj/kern/kernel.asm	/^f0101f71:	00 $/;"	l
+f0101f72	obj/kern/kernel.asm	/^f0101f72:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
+f0101f79	obj/kern/kernel.asm	/^f0101f79:	00 $/;"	l
+f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
+f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101f83	obj/kern/kernel.asm	/^f0101f83:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101f86	obj/kern/kernel.asm	/^f0101f86:	e8 9b f1 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	85 c0                	test   %eax,%eax$/;"	l
+f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	78 24                	js     f0101fb3 <mem_init+0xe04>$/;"	l
+f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	c7 44 24 0c 68 56 10 	movl   $0xf0105668,0xc(%esp)$/;"	l
+f0101f96	obj/kern/kernel.asm	/^f0101f96:	f0 $/;"	l
+f0101f97	obj/kern/kernel.asm	/^f0101f97:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	f0 $/;"	l
+f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	c7 44 24 04 ac 03 00 	movl   $0x3ac,0x4(%esp)$/;"	l
+f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	00 $/;"	l
+f0101fa7	obj/kern/kernel.asm	/^f0101fa7:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101fae	obj/kern/kernel.asm	/^f0101fae:	e8 fe e0 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f0101fba	obj/kern/kernel.asm	/^f0101fba:	00 $/;"	l
+f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0101fc2	obj/kern/kernel.asm	/^f0101fc2:	00 $/;"	l
+f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0101fc7	obj/kern/kernel.asm	/^f0101fc7:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	e8 52 f1 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	85 c0                	test   %eax,%eax$/;"	l
+f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	74 24                	je     f0101ffc <mem_init+0xe4d>$/;"	l
+f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	c7 44 24 0c a0 56 10 	movl   $0xf01056a0,0xc(%esp)$/;"	l
+f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	f0 $/;"	l
+f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0101fe7	obj/kern/kernel.asm	/^f0101fe7:	f0 $/;"	l
+f0101fe8	obj/kern/kernel.asm	/^f0101fe8:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
+f0101fef	obj/kern/kernel.asm	/^f0101fef:	00 $/;"	l
+f0101ff0	obj/kern/kernel.asm	/^f0101ff0:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	e8 b5 e0 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f0102003	obj/kern/kernel.asm	/^f0102003:	00 $/;"	l
+f0102004	obj/kern/kernel.asm	/^f0102004:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
+f010200b	obj/kern/kernel.asm	/^f010200b:	00 $/;"	l
+f010200c	obj/kern/kernel.asm	/^f010200c:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102011	obj/kern/kernel.asm	/^f0102011:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102014	obj/kern/kernel.asm	/^f0102014:	e8 bc ee ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f0102019	obj/kern/kernel.asm	/^f0102019:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
+f010201c	obj/kern/kernel.asm	/^f010201c:	74 24                	je     f0102042 <mem_init+0xe93>$/;"	l
+f010201e	obj/kern/kernel.asm	/^f010201e:	c7 44 24 0c 30 56 10 	movl   $0xf0105630,0xc(%esp)$/;"	l
+f0102025	obj/kern/kernel.asm	/^f0102025:	f0 $/;"	l
+f0102026	obj/kern/kernel.asm	/^f0102026:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010202d	obj/kern/kernel.asm	/^f010202d:	f0 $/;"	l
+f010202e	obj/kern/kernel.asm	/^f010202e:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
+f0102035	obj/kern/kernel.asm	/^f0102035:	00 $/;"	l
+f0102036	obj/kern/kernel.asm	/^f0102036:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010203d	obj/kern/kernel.asm	/^f010203d:	e8 6f e0 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102042	obj/kern/kernel.asm	/^f0102042:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102047	obj/kern/kernel.asm	/^f0102047:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f010204a	obj/kern/kernel.asm	/^f010204a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f010204f	obj/kern/kernel.asm	/^f010204f:	e8 08 e9 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f0102054	obj/kern/kernel.asm	/^f0102054:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
+f0102057	obj/kern/kernel.asm	/^f0102057:	89 f0                	mov    %esi,%eax$/;"	l
+f0102059	obj/kern/kernel.asm	/^f0102059:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f010205f	obj/kern/kernel.asm	/^f010205f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0102062	obj/kern/kernel.asm	/^f0102062:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0102065	obj/kern/kernel.asm	/^f0102065:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
+f0102068	obj/kern/kernel.asm	/^f0102068:	74 24                	je     f010208e <mem_init+0xedf>$/;"	l
+f010206a	obj/kern/kernel.asm	/^f010206a:	c7 44 24 0c dc 56 10 	movl   $0xf01056dc,0xc(%esp)$/;"	l
+f0102071	obj/kern/kernel.asm	/^f0102071:	f0 $/;"	l
+f0102072	obj/kern/kernel.asm	/^f0102072:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102079	obj/kern/kernel.asm	/^f0102079:	f0 $/;"	l
+f010207a	obj/kern/kernel.asm	/^f010207a:	c7 44 24 04 b3 03 00 	movl   $0x3b3,0x4(%esp)$/;"	l
+f0102081	obj/kern/kernel.asm	/^f0102081:	00 $/;"	l
+f0102082	obj/kern/kernel.asm	/^f0102082:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102089	obj/kern/kernel.asm	/^f0102089:	e8 23 e0 ff ff       	call   f01000b1 <_panic>$/;"	l
+f010208e	obj/kern/kernel.asm	/^f010208e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
+f0102093	obj/kern/kernel.asm	/^f0102093:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f0102096	obj/kern/kernel.asm	/^f0102096:	e8 c1 e8 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f010209b	obj/kern/kernel.asm	/^f010209b:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
+f010209e	obj/kern/kernel.asm	/^f010209e:	74 24                	je     f01020c4 <mem_init+0xf15>$/;"	l
+f01020a0	obj/kern/kernel.asm	/^f01020a0:	c7 44 24 0c 08 57 10 	movl   $0xf0105708,0xc(%esp)$/;"	l
+f01020a7	obj/kern/kernel.asm	/^f01020a7:	f0 $/;"	l
+f01020a8	obj/kern/kernel.asm	/^f01020a8:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01020af	obj/kern/kernel.asm	/^f01020af:	f0 $/;"	l
+f01020b0	obj/kern/kernel.asm	/^f01020b0:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
+f01020b7	obj/kern/kernel.asm	/^f01020b7:	00 $/;"	l
+f01020b8	obj/kern/kernel.asm	/^f01020b8:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01020bf	obj/kern/kernel.asm	/^f01020bf:	e8 ed df ff ff       	call   f01000b1 <_panic>$/;"	l
+f01020c4	obj/kern/kernel.asm	/^f01020c4:	66 83 7e 04 02       	cmpw   $0x2,0x4(%esi)$/;"	l
+f01020c9	obj/kern/kernel.asm	/^f01020c9:	74 24                	je     f01020ef <mem_init+0xf40>$/;"	l
+f01020cb	obj/kern/kernel.asm	/^f01020cb:	c7 44 24 0c 2d 5c 10 	movl   $0xf0105c2d,0xc(%esp)$/;"	l
+f01020d2	obj/kern/kernel.asm	/^f01020d2:	f0 $/;"	l
+f01020d3	obj/kern/kernel.asm	/^f01020d3:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01020da	obj/kern/kernel.asm	/^f01020da:	f0 $/;"	l
+f01020db	obj/kern/kernel.asm	/^f01020db:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
+f01020e2	obj/kern/kernel.asm	/^f01020e2:	00 $/;"	l
+f01020e3	obj/kern/kernel.asm	/^f01020e3:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01020ea	obj/kern/kernel.asm	/^f01020ea:	e8 c2 df ff ff       	call   f01000b1 <_panic>$/;"	l
+f01020ef	obj/kern/kernel.asm	/^f01020ef:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
+f01020f4	obj/kern/kernel.asm	/^f01020f4:	74 24                	je     f010211a <mem_init+0xf6b>$/;"	l
+f01020f6	obj/kern/kernel.asm	/^f01020f6:	c7 44 24 0c 3e 5c 10 	movl   $0xf0105c3e,0xc(%esp)$/;"	l
+f01020fd	obj/kern/kernel.asm	/^f01020fd:	f0 $/;"	l
+f01020fe	obj/kern/kernel.asm	/^f01020fe:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102105	obj/kern/kernel.asm	/^f0102105:	f0 $/;"	l
+f0102106	obj/kern/kernel.asm	/^f0102106:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
+f010210d	obj/kern/kernel.asm	/^f010210d:	00 $/;"	l
+f010210e	obj/kern/kernel.asm	/^f010210e:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102115	obj/kern/kernel.asm	/^f0102115:	e8 97 df ff ff       	call   f01000b1 <_panic>$/;"	l
+f010211a	obj/kern/kernel.asm	/^f010211a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0102121	obj/kern/kernel.asm	/^f0102121:	e8 cb ec ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0102126	obj/kern/kernel.asm	/^f0102126:	85 c0                	test   %eax,%eax$/;"	l
+f0102128	obj/kern/kernel.asm	/^f0102128:	74 04                	je     f010212e <mem_init+0xf7f>$/;"	l
+f010212a	obj/kern/kernel.asm	/^f010212a:	39 c3                	cmp    %eax,%ebx$/;"	l
+f010212c	obj/kern/kernel.asm	/^f010212c:	74 24                	je     f0102152 <mem_init+0xfa3>$/;"	l
+f010212e	obj/kern/kernel.asm	/^f010212e:	c7 44 24 0c 38 57 10 	movl   $0xf0105738,0xc(%esp)$/;"	l
+f0102135	obj/kern/kernel.asm	/^f0102135:	f0 $/;"	l
+f0102136	obj/kern/kernel.asm	/^f0102136:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010213d	obj/kern/kernel.asm	/^f010213d:	f0 $/;"	l
+f010213e	obj/kern/kernel.asm	/^f010213e:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
+f0102145	obj/kern/kernel.asm	/^f0102145:	00 $/;"	l
+f0102146	obj/kern/kernel.asm	/^f0102146:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010214d	obj/kern/kernel.asm	/^f010214d:	e8 5f df ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102152	obj/kern/kernel.asm	/^f0102152:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f0102159	obj/kern/kernel.asm	/^f0102159:	00 $/;"	l
+f010215a	obj/kern/kernel.asm	/^f010215a:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f010215f	obj/kern/kernel.asm	/^f010215f:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102162	obj/kern/kernel.asm	/^f0102162:	e8 52 ef ff ff       	call   f01010b9 <page_remove>$/;"	l
+f0102167	obj/kern/kernel.asm	/^f0102167:	8b 15 48 5e 1e f0    	mov    0xf01e5e48,%edx$/;"	l
+f010216d	obj/kern/kernel.asm	/^f010216d:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
+f0102170	obj/kern/kernel.asm	/^f0102170:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f0102175	obj/kern/kernel.asm	/^f0102175:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f0102178	obj/kern/kernel.asm	/^f0102178:	e8 df e7 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f010217d	obj/kern/kernel.asm	/^f010217d:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
+f0102180	obj/kern/kernel.asm	/^f0102180:	74 24                	je     f01021a6 <mem_init+0xff7>$/;"	l
+f0102182	obj/kern/kernel.asm	/^f0102182:	c7 44 24 0c 5c 57 10 	movl   $0xf010575c,0xc(%esp)$/;"	l
+f0102189	obj/kern/kernel.asm	/^f0102189:	f0 $/;"	l
+f010218a	obj/kern/kernel.asm	/^f010218a:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102191	obj/kern/kernel.asm	/^f0102191:	f0 $/;"	l
+f0102192	obj/kern/kernel.asm	/^f0102192:	c7 44 24 04 be 03 00 	movl   $0x3be,0x4(%esp)$/;"	l
+f0102199	obj/kern/kernel.asm	/^f0102199:	00 $/;"	l
+f010219a	obj/kern/kernel.asm	/^f010219a:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01021a1	obj/kern/kernel.asm	/^f01021a1:	e8 0b df ff ff       	call   f01000b1 <_panic>$/;"	l
+f01021a6	obj/kern/kernel.asm	/^f01021a6:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
+f01021ab	obj/kern/kernel.asm	/^f01021ab:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f01021ae	obj/kern/kernel.asm	/^f01021ae:	e8 a9 e7 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f01021b3	obj/kern/kernel.asm	/^f01021b3:	89 f2                	mov    %esi,%edx$/;"	l
+f01021b5	obj/kern/kernel.asm	/^f01021b5:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f01021bb	obj/kern/kernel.asm	/^f01021bb:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f01021be	obj/kern/kernel.asm	/^f01021be:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f01021c1	obj/kern/kernel.asm	/^f01021c1:	39 d0                	cmp    %edx,%eax$/;"	l
+f01021c3	obj/kern/kernel.asm	/^f01021c3:	74 24                	je     f01021e9 <mem_init+0x103a>$/;"	l
+f01021c5	obj/kern/kernel.asm	/^f01021c5:	c7 44 24 0c 08 57 10 	movl   $0xf0105708,0xc(%esp)$/;"	l
+f01021cc	obj/kern/kernel.asm	/^f01021cc:	f0 $/;"	l
+f01021cd	obj/kern/kernel.asm	/^f01021cd:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01021d4	obj/kern/kernel.asm	/^f01021d4:	f0 $/;"	l
+f01021d5	obj/kern/kernel.asm	/^f01021d5:	c7 44 24 04 bf 03 00 	movl   $0x3bf,0x4(%esp)$/;"	l
+f01021dc	obj/kern/kernel.asm	/^f01021dc:	00 $/;"	l
+f01021dd	obj/kern/kernel.asm	/^f01021dd:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01021e4	obj/kern/kernel.asm	/^f01021e4:	e8 c8 de ff ff       	call   f01000b1 <_panic>$/;"	l
+f01021e9	obj/kern/kernel.asm	/^f01021e9:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
+f01021ee	obj/kern/kernel.asm	/^f01021ee:	74 24                	je     f0102214 <mem_init+0x1065>$/;"	l
+f01021f0	obj/kern/kernel.asm	/^f01021f0:	c7 44 24 0c e4 5b 10 	movl   $0xf0105be4,0xc(%esp)$/;"	l
+f01021f7	obj/kern/kernel.asm	/^f01021f7:	f0 $/;"	l
+f01021f8	obj/kern/kernel.asm	/^f01021f8:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01021ff	obj/kern/kernel.asm	/^f01021ff:	f0 $/;"	l
+f0102200	obj/kern/kernel.asm	/^f0102200:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
+f0102207	obj/kern/kernel.asm	/^f0102207:	00 $/;"	l
+f0102208	obj/kern/kernel.asm	/^f0102208:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010220f	obj/kern/kernel.asm	/^f010220f:	e8 9d de ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102214	obj/kern/kernel.asm	/^f0102214:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
+f0102219	obj/kern/kernel.asm	/^f0102219:	74 24                	je     f010223f <mem_init+0x1090>$/;"	l
+f010221b	obj/kern/kernel.asm	/^f010221b:	c7 44 24 0c 3e 5c 10 	movl   $0xf0105c3e,0xc(%esp)$/;"	l
+f0102222	obj/kern/kernel.asm	/^f0102222:	f0 $/;"	l
+f0102223	obj/kern/kernel.asm	/^f0102223:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010222a	obj/kern/kernel.asm	/^f010222a:	f0 $/;"	l
+f010222b	obj/kern/kernel.asm	/^f010222b:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
+f0102232	obj/kern/kernel.asm	/^f0102232:	00 $/;"	l
+f0102233	obj/kern/kernel.asm	/^f0102233:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010223a	obj/kern/kernel.asm	/^f010223a:	e8 72 de ff ff       	call   f01000b1 <_panic>$/;"	l
+f010223f	obj/kern/kernel.asm	/^f010223f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
+f0102246	obj/kern/kernel.asm	/^f0102246:	00 $/;"	l
+f0102247	obj/kern/kernel.asm	/^f0102247:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f010224e	obj/kern/kernel.asm	/^f010224e:	00 $/;"	l
+f010224f	obj/kern/kernel.asm	/^f010224f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0102253	obj/kern/kernel.asm	/^f0102253:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
+f0102256	obj/kern/kernel.asm	/^f0102256:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
+f0102259	obj/kern/kernel.asm	/^f0102259:	e8 c8 ee ff ff       	call   f0101126 <page_insert>$/;"	l
+f010225e	obj/kern/kernel.asm	/^f010225e:	85 c0                	test   %eax,%eax$/;"	l
+f0102260	obj/kern/kernel.asm	/^f0102260:	74 24                	je     f0102286 <mem_init+0x10d7>$/;"	l
+f0102262	obj/kern/kernel.asm	/^f0102262:	c7 44 24 0c 80 57 10 	movl   $0xf0105780,0xc(%esp)$/;"	l
+f0102269	obj/kern/kernel.asm	/^f0102269:	f0 $/;"	l
+f010226a	obj/kern/kernel.asm	/^f010226a:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102271	obj/kern/kernel.asm	/^f0102271:	f0 $/;"	l
+f0102272	obj/kern/kernel.asm	/^f0102272:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
+f0102279	obj/kern/kernel.asm	/^f0102279:	00 $/;"	l
+f010227a	obj/kern/kernel.asm	/^f010227a:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102281	obj/kern/kernel.asm	/^f0102281:	e8 2b de ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102286	obj/kern/kernel.asm	/^f0102286:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
+f010228b	obj/kern/kernel.asm	/^f010228b:	75 24                	jne    f01022b1 <mem_init+0x1102>$/;"	l
+f010228d	obj/kern/kernel.asm	/^f010228d:	c7 44 24 0c 4f 5c 10 	movl   $0xf0105c4f,0xc(%esp)$/;"	l
+f0102294	obj/kern/kernel.asm	/^f0102294:	f0 $/;"	l
+f0102295	obj/kern/kernel.asm	/^f0102295:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010229c	obj/kern/kernel.asm	/^f010229c:	f0 $/;"	l
+f010229d	obj/kern/kernel.asm	/^f010229d:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
+f01022a4	obj/kern/kernel.asm	/^f01022a4:	00 $/;"	l
+f01022a5	obj/kern/kernel.asm	/^f01022a5:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01022ac	obj/kern/kernel.asm	/^f01022ac:	e8 00 de ff ff       	call   f01000b1 <_panic>$/;"	l
+f01022b1	obj/kern/kernel.asm	/^f01022b1:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
+f01022b4	obj/kern/kernel.asm	/^f01022b4:	74 24                	je     f01022da <mem_init+0x112b>$/;"	l
+f01022b6	obj/kern/kernel.asm	/^f01022b6:	c7 44 24 0c 5b 5c 10 	movl   $0xf0105c5b,0xc(%esp)$/;"	l
+f01022bd	obj/kern/kernel.asm	/^f01022bd:	f0 $/;"	l
+f01022be	obj/kern/kernel.asm	/^f01022be:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01022c5	obj/kern/kernel.asm	/^f01022c5:	f0 $/;"	l
+f01022c6	obj/kern/kernel.asm	/^f01022c6:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
+f01022cd	obj/kern/kernel.asm	/^f01022cd:	00 $/;"	l
+f01022ce	obj/kern/kernel.asm	/^f01022ce:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01022d5	obj/kern/kernel.asm	/^f01022d5:	e8 d7 dd ff ff       	call   f01000b1 <_panic>$/;"	l
+f01022da	obj/kern/kernel.asm	/^f01022da:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
+f01022e1	obj/kern/kernel.asm	/^f01022e1:	00 $/;"	l
+f01022e2	obj/kern/kernel.asm	/^f01022e2:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f01022e7	obj/kern/kernel.asm	/^f01022e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01022ea	obj/kern/kernel.asm	/^f01022ea:	e8 ca ed ff ff       	call   f01010b9 <page_remove>$/;"	l
+f01022ef	obj/kern/kernel.asm	/^f01022ef:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f01022f4	obj/kern/kernel.asm	/^f01022f4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f01022f7	obj/kern/kernel.asm	/^f01022f7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f01022fc	obj/kern/kernel.asm	/^f01022fc:	e8 5b e6 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f0102301	obj/kern/kernel.asm	/^f0102301:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
+f0102304	obj/kern/kernel.asm	/^f0102304:	74 24                	je     f010232a <mem_init+0x117b>$/;"	l
+f0102306	obj/kern/kernel.asm	/^f0102306:	c7 44 24 0c 5c 57 10 	movl   $0xf010575c,0xc(%esp)$/;"	l
+f010230d	obj/kern/kernel.asm	/^f010230d:	f0 $/;"	l
+f010230e	obj/kern/kernel.asm	/^f010230e:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102315	obj/kern/kernel.asm	/^f0102315:	f0 $/;"	l
+f0102316	obj/kern/kernel.asm	/^f0102316:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
+f010231d	obj/kern/kernel.asm	/^f010231d:	00 $/;"	l
+f010231e	obj/kern/kernel.asm	/^f010231e:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102325	obj/kern/kernel.asm	/^f0102325:	e8 87 dd ff ff       	call   f01000b1 <_panic>$/;"	l
+f010232a	obj/kern/kernel.asm	/^f010232a:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
+f010232f	obj/kern/kernel.asm	/^f010232f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f0102332	obj/kern/kernel.asm	/^f0102332:	e8 25 e6 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f0102337	obj/kern/kernel.asm	/^f0102337:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
+f010233a	obj/kern/kernel.asm	/^f010233a:	74 24                	je     f0102360 <mem_init+0x11b1>$/;"	l
+f010233c	obj/kern/kernel.asm	/^f010233c:	c7 44 24 0c b8 57 10 	movl   $0xf01057b8,0xc(%esp)$/;"	l
+f0102343	obj/kern/kernel.asm	/^f0102343:	f0 $/;"	l
+f0102344	obj/kern/kernel.asm	/^f0102344:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010234b	obj/kern/kernel.asm	/^f010234b:	f0 $/;"	l
+f010234c	obj/kern/kernel.asm	/^f010234c:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
+f0102353	obj/kern/kernel.asm	/^f0102353:	00 $/;"	l
+f0102354	obj/kern/kernel.asm	/^f0102354:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010235b	obj/kern/kernel.asm	/^f010235b:	e8 51 dd ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102360	obj/kern/kernel.asm	/^f0102360:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
+f0102365	obj/kern/kernel.asm	/^f0102365:	74 24                	je     f010238b <mem_init+0x11dc>$/;"	l
+f0102367	obj/kern/kernel.asm	/^f0102367:	c7 44 24 0c 70 5c 10 	movl   $0xf0105c70,0xc(%esp)$/;"	l
+f010236e	obj/kern/kernel.asm	/^f010236e:	f0 $/;"	l
+f010236f	obj/kern/kernel.asm	/^f010236f:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102376	obj/kern/kernel.asm	/^f0102376:	f0 $/;"	l
+f0102377	obj/kern/kernel.asm	/^f0102377:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
+f010237e	obj/kern/kernel.asm	/^f010237e:	00 $/;"	l
+f010237f	obj/kern/kernel.asm	/^f010237f:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102386	obj/kern/kernel.asm	/^f0102386:	e8 26 dd ff ff       	call   f01000b1 <_panic>$/;"	l
+f010238b	obj/kern/kernel.asm	/^f010238b:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
+f0102390	obj/kern/kernel.asm	/^f0102390:	74 24                	je     f01023b6 <mem_init+0x1207>$/;"	l
+f0102392	obj/kern/kernel.asm	/^f0102392:	c7 44 24 0c 3e 5c 10 	movl   $0xf0105c3e,0xc(%esp)$/;"	l
+f0102399	obj/kern/kernel.asm	/^f0102399:	f0 $/;"	l
+f010239a	obj/kern/kernel.asm	/^f010239a:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01023a1	obj/kern/kernel.asm	/^f01023a1:	f0 $/;"	l
+f01023a2	obj/kern/kernel.asm	/^f01023a2:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
+f01023a9	obj/kern/kernel.asm	/^f01023a9:	00 $/;"	l
+f01023aa	obj/kern/kernel.asm	/^f01023aa:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01023b1	obj/kern/kernel.asm	/^f01023b1:	e8 fb dc ff ff       	call   f01000b1 <_panic>$/;"	l
+f01023b6	obj/kern/kernel.asm	/^f01023b6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f01023bd	obj/kern/kernel.asm	/^f01023bd:	e8 2f ea ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f01023c2	obj/kern/kernel.asm	/^f01023c2:	85 c0                	test   %eax,%eax$/;"	l
+f01023c4	obj/kern/kernel.asm	/^f01023c4:	74 04                	je     f01023ca <mem_init+0x121b>$/;"	l
+f01023c6	obj/kern/kernel.asm	/^f01023c6:	39 c6                	cmp    %eax,%esi$/;"	l
+f01023c8	obj/kern/kernel.asm	/^f01023c8:	74 24                	je     f01023ee <mem_init+0x123f>$/;"	l
+f01023ca	obj/kern/kernel.asm	/^f01023ca:	c7 44 24 0c e0 57 10 	movl   $0xf01057e0,0xc(%esp)$/;"	l
+f01023d1	obj/kern/kernel.asm	/^f01023d1:	f0 $/;"	l
+f01023d2	obj/kern/kernel.asm	/^f01023d2:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01023d9	obj/kern/kernel.asm	/^f01023d9:	f0 $/;"	l
+f01023da	obj/kern/kernel.asm	/^f01023da:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
+f01023e1	obj/kern/kernel.asm	/^f01023e1:	00 $/;"	l
+f01023e2	obj/kern/kernel.asm	/^f01023e2:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01023e9	obj/kern/kernel.asm	/^f01023e9:	e8 c3 dc ff ff       	call   f01000b1 <_panic>$/;"	l
+f01023ee	obj/kern/kernel.asm	/^f01023ee:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f01023f5	obj/kern/kernel.asm	/^f01023f5:	e8 f7 e9 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f01023fa	obj/kern/kernel.asm	/^f01023fa:	85 c0                	test   %eax,%eax$/;"	l
+f01023fc	obj/kern/kernel.asm	/^f01023fc:	74 24                	je     f0102422 <mem_init+0x1273>$/;"	l
+f01023fe	obj/kern/kernel.asm	/^f01023fe:	c7 44 24 0c 92 5b 10 	movl   $0xf0105b92,0xc(%esp)$/;"	l
+f0102405	obj/kern/kernel.asm	/^f0102405:	f0 $/;"	l
+f0102406	obj/kern/kernel.asm	/^f0102406:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010240d	obj/kern/kernel.asm	/^f010240d:	f0 $/;"	l
+f010240e	obj/kern/kernel.asm	/^f010240e:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
+f0102415	obj/kern/kernel.asm	/^f0102415:	00 $/;"	l
+f0102416	obj/kern/kernel.asm	/^f0102416:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010241d	obj/kern/kernel.asm	/^f010241d:	e8 8f dc ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102422	obj/kern/kernel.asm	/^f0102422:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102427	obj/kern/kernel.asm	/^f0102427:	8b 08                	mov    (%eax),%ecx$/;"	l
+f0102429	obj/kern/kernel.asm	/^f0102429:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
+f010242f	obj/kern/kernel.asm	/^f010242f:	89 fa                	mov    %edi,%edx$/;"	l
+f0102431	obj/kern/kernel.asm	/^f0102431:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f0102437	obj/kern/kernel.asm	/^f0102437:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f010243a	obj/kern/kernel.asm	/^f010243a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f010243d	obj/kern/kernel.asm	/^f010243d:	39 d1                	cmp    %edx,%ecx$/;"	l
+f010243f	obj/kern/kernel.asm	/^f010243f:	74 24                	je     f0102465 <mem_init+0x12b6>$/;"	l
+f0102441	obj/kern/kernel.asm	/^f0102441:	c7 44 24 0c 84 54 10 	movl   $0xf0105484,0xc(%esp)$/;"	l
+f0102448	obj/kern/kernel.asm	/^f0102448:	f0 $/;"	l
+f0102449	obj/kern/kernel.asm	/^f0102449:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102450	obj/kern/kernel.asm	/^f0102450:	f0 $/;"	l
+f0102451	obj/kern/kernel.asm	/^f0102451:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
+f0102458	obj/kern/kernel.asm	/^f0102458:	00 $/;"	l
+f0102459	obj/kern/kernel.asm	/^f0102459:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102460	obj/kern/kernel.asm	/^f0102460:	e8 4c dc ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102465	obj/kern/kernel.asm	/^f0102465:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
+f010246b	obj/kern/kernel.asm	/^f010246b:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
+f0102470	obj/kern/kernel.asm	/^f0102470:	74 24                	je     f0102496 <mem_init+0x12e7>$/;"	l
+f0102472	obj/kern/kernel.asm	/^f0102472:	c7 44 24 0c f5 5b 10 	movl   $0xf0105bf5,0xc(%esp)$/;"	l
+f0102479	obj/kern/kernel.asm	/^f0102479:	f0 $/;"	l
+f010247a	obj/kern/kernel.asm	/^f010247a:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102481	obj/kern/kernel.asm	/^f0102481:	f0 $/;"	l
+f0102482	obj/kern/kernel.asm	/^f0102482:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
+f0102489	obj/kern/kernel.asm	/^f0102489:	00 $/;"	l
+f010248a	obj/kern/kernel.asm	/^f010248a:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102491	obj/kern/kernel.asm	/^f0102491:	e8 1b dc ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102496	obj/kern/kernel.asm	/^f0102496:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
+f010249c	obj/kern/kernel.asm	/^f010249c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f010249f	obj/kern/kernel.asm	/^f010249f:	e8 d1 e9 ff ff       	call   f0100e75 <page_free>$/;"	l
+f01024a4	obj/kern/kernel.asm	/^f01024a4:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
+f01024ab	obj/kern/kernel.asm	/^f01024ab:	00 $/;"	l
+f01024ac	obj/kern/kernel.asm	/^f01024ac:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
+f01024b3	obj/kern/kernel.asm	/^f01024b3:	00 $/;"	l
+f01024b4	obj/kern/kernel.asm	/^f01024b4:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f01024b9	obj/kern/kernel.asm	/^f01024b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01024bc	obj/kern/kernel.asm	/^f01024bc:	e8 14 ea ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f01024c1	obj/kern/kernel.asm	/^f01024c1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
+f01024c4	obj/kern/kernel.asm	/^f01024c4:	8b 0d 48 5e 1e f0    	mov    0xf01e5e48,%ecx$/;"	l
+f01024ca	obj/kern/kernel.asm	/^f01024ca:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
+f01024cd	obj/kern/kernel.asm	/^f01024cd:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
+f01024d3	obj/kern/kernel.asm	/^f01024d3:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
+f01024d6	obj/kern/kernel.asm	/^f01024d6:	8b 15 44 5e 1e f0    	mov    0xf01e5e44,%edx$/;"	l
+f01024dc	obj/kern/kernel.asm	/^f01024dc:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
+f01024df	obj/kern/kernel.asm	/^f01024df:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
+f01024e2	obj/kern/kernel.asm	/^f01024e2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f01024e5	obj/kern/kernel.asm	/^f01024e5:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
+f01024e8	obj/kern/kernel.asm	/^f01024e8:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
+f01024eb	obj/kern/kernel.asm	/^f01024eb:	39 55 d0             	cmp    %edx,-0x30(%ebp)$/;"	l
+f01024ee	obj/kern/kernel.asm	/^f01024ee:	72 23                	jb     f0102513 <mem_init+0x1364>$/;"	l
+f01024f0	obj/kern/kernel.asm	/^f01024f0:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
+f01024f3	obj/kern/kernel.asm	/^f01024f3:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
+f01024f7	obj/kern/kernel.asm	/^f01024f7:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f01024fe	obj/kern/kernel.asm	/^f01024fe:	f0 $/;"	l
+f01024ff	obj/kern/kernel.asm	/^f01024ff:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
+f0102506	obj/kern/kernel.asm	/^f0102506:	00 $/;"	l
+f0102507	obj/kern/kernel.asm	/^f0102507:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010250e	obj/kern/kernel.asm	/^f010250e:	e8 9e db ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102513	obj/kern/kernel.asm	/^f0102513:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
+f0102516	obj/kern/kernel.asm	/^f0102516:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
+f010251c	obj/kern/kernel.asm	/^f010251c:	39 d0                	cmp    %edx,%eax$/;"	l
+f010251e	obj/kern/kernel.asm	/^f010251e:	74 24                	je     f0102544 <mem_init+0x1395>$/;"	l
+f0102520	obj/kern/kernel.asm	/^f0102520:	c7 44 24 0c 81 5c 10 	movl   $0xf0105c81,0xc(%esp)$/;"	l
+f0102527	obj/kern/kernel.asm	/^f0102527:	f0 $/;"	l
+f0102528	obj/kern/kernel.asm	/^f0102528:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f010252f	obj/kern/kernel.asm	/^f010252f:	f0 $/;"	l
+f0102530	obj/kern/kernel.asm	/^f0102530:	c7 44 24 04 e0 03 00 	movl   $0x3e0,0x4(%esp)$/;"	l
+f0102537	obj/kern/kernel.asm	/^f0102537:	00 $/;"	l
+f0102538	obj/kern/kernel.asm	/^f0102538:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010253f	obj/kern/kernel.asm	/^f010253f:	e8 6d db ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102544	obj/kern/kernel.asm	/^f0102544:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
+f010254b	obj/kern/kernel.asm	/^f010254b:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
+f0102551	obj/kern/kernel.asm	/^f0102551:	89 f8                	mov    %edi,%eax$/;"	l
+f0102553	obj/kern/kernel.asm	/^f0102553:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f0102559	obj/kern/kernel.asm	/^f0102559:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f010255c	obj/kern/kernel.asm	/^f010255c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f010255f	obj/kern/kernel.asm	/^f010255f:	89 c1                	mov    %eax,%ecx$/;"	l
+f0102561	obj/kern/kernel.asm	/^f0102561:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
+f0102564	obj/kern/kernel.asm	/^f0102564:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
+f0102567	obj/kern/kernel.asm	/^f0102567:	77 20                	ja     f0102589 <mem_init+0x13da>$/;"	l
+f0102569	obj/kern/kernel.asm	/^f0102569:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f010256d	obj/kern/kernel.asm	/^f010256d:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0102574	obj/kern/kernel.asm	/^f0102574:	f0 $/;"	l
+f0102575	obj/kern/kernel.asm	/^f0102575:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f010257c	obj/kern/kernel.asm	/^f010257c:	00 $/;"	l
+f010257d	obj/kern/kernel.asm	/^f010257d:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0102584	obj/kern/kernel.asm	/^f0102584:	e8 28 db ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102589	obj/kern/kernel.asm	/^f0102589:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0102590	obj/kern/kernel.asm	/^f0102590:	00 $/;"	l
+f0102591	obj/kern/kernel.asm	/^f0102591:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
+f0102598	obj/kern/kernel.asm	/^f0102598:	00 $/;"	l
+f0102599	obj/kern/kernel.asm	/^f0102599:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f010259e	obj/kern/kernel.asm	/^f010259e:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01025a1	obj/kern/kernel.asm	/^f01025a1:	e8 6c 23 00 00       	call   f0104912 <memset>$/;"	l
+f01025a6	obj/kern/kernel.asm	/^f01025a6:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f01025a9	obj/kern/kernel.asm	/^f01025a9:	e8 c7 e8 ff ff       	call   f0100e75 <page_free>$/;"	l
+f01025ae	obj/kern/kernel.asm	/^f01025ae:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
+f01025b5	obj/kern/kernel.asm	/^f01025b5:	00 $/;"	l
+f01025b6	obj/kern/kernel.asm	/^f01025b6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f01025bd	obj/kern/kernel.asm	/^f01025bd:	00 $/;"	l
+f01025be	obj/kern/kernel.asm	/^f01025be:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f01025c3	obj/kern/kernel.asm	/^f01025c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01025c6	obj/kern/kernel.asm	/^f01025c6:	e8 0a e9 ff ff       	call   f0100ed5 <pgdir_walk>$/;"	l
+f01025cb	obj/kern/kernel.asm	/^f01025cb:	89 fa                	mov    %edi,%edx$/;"	l
+f01025cd	obj/kern/kernel.asm	/^f01025cd:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f01025d3	obj/kern/kernel.asm	/^f01025d3:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f01025d6	obj/kern/kernel.asm	/^f01025d6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f01025d9	obj/kern/kernel.asm	/^f01025d9:	89 d0                	mov    %edx,%eax$/;"	l
+f01025db	obj/kern/kernel.asm	/^f01025db:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
+f01025de	obj/kern/kernel.asm	/^f01025de:	3b 05 44 5e 1e f0    	cmp    0xf01e5e44,%eax$/;"	l
+f01025e4	obj/kern/kernel.asm	/^f01025e4:	72 20                	jb     f0102606 <mem_init+0x1457>$/;"	l
+f01025e6	obj/kern/kernel.asm	/^f01025e6:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
+f01025ea	obj/kern/kernel.asm	/^f01025ea:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f01025f1	obj/kern/kernel.asm	/^f01025f1:	f0 $/;"	l
+f01025f2	obj/kern/kernel.asm	/^f01025f2:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f01025f9	obj/kern/kernel.asm	/^f01025f9:	00 $/;"	l
+f01025fa	obj/kern/kernel.asm	/^f01025fa:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0102601	obj/kern/kernel.asm	/^f0102601:	e8 ab da ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102606	obj/kern/kernel.asm	/^f0102606:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
+f010260c	obj/kern/kernel.asm	/^f010260c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
+f010260f	obj/kern/kernel.asm	/^f010260f:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
+f0102615	obj/kern/kernel.asm	/^f0102615:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
+f0102618	obj/kern/kernel.asm	/^f0102618:	74 24                	je     f010263e <mem_init+0x148f>$/;"	l
+f010261a	obj/kern/kernel.asm	/^f010261a:	c7 44 24 0c 99 5c 10 	movl   $0xf0105c99,0xc(%esp)$/;"	l
+f0102621	obj/kern/kernel.asm	/^f0102621:	f0 $/;"	l
+f0102622	obj/kern/kernel.asm	/^f0102622:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102629	obj/kern/kernel.asm	/^f0102629:	f0 $/;"	l
+f010262a	obj/kern/kernel.asm	/^f010262a:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
+f0102631	obj/kern/kernel.asm	/^f0102631:	00 $/;"	l
+f0102632	obj/kern/kernel.asm	/^f0102632:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102639	obj/kern/kernel.asm	/^f0102639:	e8 73 da ff ff       	call   f01000b1 <_panic>$/;"	l
+f010263e	obj/kern/kernel.asm	/^f010263e:	83 c0 04             	add    $0x4,%eax$/;"	l
+f0102641	obj/kern/kernel.asm	/^f0102641:	39 d0                	cmp    %edx,%eax$/;"	l
+f0102643	obj/kern/kernel.asm	/^f0102643:	75 d0                	jne    f0102615 <mem_init+0x1466>$/;"	l
+f0102645	obj/kern/kernel.asm	/^f0102645:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f010264a	obj/kern/kernel.asm	/^f010264a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
+f0102650	obj/kern/kernel.asm	/^f0102650:	66 c7 47 04 00 00    	movw   $0x0,0x4(%edi)$/;"	l
+f0102656	obj/kern/kernel.asm	/^f0102656:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
+f0102659	obj/kern/kernel.asm	/^f0102659:	89 0d a0 51 1e f0    	mov    %ecx,0xf01e51a0$/;"	l
+f010265f	obj/kern/kernel.asm	/^f010265f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f0102662	obj/kern/kernel.asm	/^f0102662:	e8 0e e8 ff ff       	call   f0100e75 <page_free>$/;"	l
+f0102667	obj/kern/kernel.asm	/^f0102667:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f010266a	obj/kern/kernel.asm	/^f010266a:	e8 06 e8 ff ff       	call   f0100e75 <page_free>$/;"	l
+f010266f	obj/kern/kernel.asm	/^f010266f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f0102672	obj/kern/kernel.asm	/^f0102672:	e8 fe e7 ff ff       	call   f0100e75 <page_free>$/;"	l
+f0102677	obj/kern/kernel.asm	/^f0102677:	c7 04 24 b0 5c 10 f0 	movl   $0xf0105cb0,(%esp)$/;"	l
+f010267e	obj/kern/kernel.asm	/^f010267e:	e8 a3 10 00 00       	call   f0103726 <cprintf>$/;"	l
+f0102683	obj/kern/kernel.asm	/^f0102683:	a1 4c 5e 1e f0       	mov    0xf01e5e4c,%eax$/;"	l
+f0102688	obj/kern/kernel.asm	/^f0102688:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f010268d	obj/kern/kernel.asm	/^f010268d:	77 20                	ja     f01026af <mem_init+0x1500>$/;"	l
+f010268f	obj/kern/kernel.asm	/^f010268f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0102693	obj/kern/kernel.asm	/^f0102693:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f010269a	obj/kern/kernel.asm	/^f010269a:	f0 $/;"	l
+f010269b	obj/kern/kernel.asm	/^f010269b:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
+f01026a2	obj/kern/kernel.asm	/^f01026a2:	00 $/;"	l
+f01026a3	obj/kern/kernel.asm	/^f01026a3:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01026aa	obj/kern/kernel.asm	/^f01026aa:	e8 02 da ff ff       	call   f01000b1 <_panic>$/;"	l
+f01026af	obj/kern/kernel.asm	/^f01026af:	8b 15 44 5e 1e f0    	mov    0xf01e5e44,%edx$/;"	l
+f01026b5	obj/kern/kernel.asm	/^f01026b5:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
+f01026bc	obj/kern/kernel.asm	/^f01026bc:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
+f01026c2	obj/kern/kernel.asm	/^f01026c2:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
+f01026c9	obj/kern/kernel.asm	/^f01026c9:	00 $/;"	l
+f01026ca	obj/kern/kernel.asm	/^f01026ca:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
+f01026cf	obj/kern/kernel.asm	/^f01026cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01026d2	obj/kern/kernel.asm	/^f01026d2:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
+f01026d7	obj/kern/kernel.asm	/^f01026d7:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f01026dc	obj/kern/kernel.asm	/^f01026dc:	e8 fd e8 ff ff       	call   f0100fde <boot_map_region>$/;"	l
+f01026e1	obj/kern/kernel.asm	/^f01026e1:	a1 a8 51 1e f0       	mov    0xf01e51a8,%eax$/;"	l
+f01026e6	obj/kern/kernel.asm	/^f01026e6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f01026eb	obj/kern/kernel.asm	/^f01026eb:	77 20                	ja     f010270d <mem_init+0x155e>$/;"	l
+f01026ed	obj/kern/kernel.asm	/^f01026ed:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f01026f1	obj/kern/kernel.asm	/^f01026f1:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f01026f8	obj/kern/kernel.asm	/^f01026f8:	f0 $/;"	l
+f01026f9	obj/kern/kernel.asm	/^f01026f9:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
+f0102700	obj/kern/kernel.asm	/^f0102700:	00 $/;"	l
+f0102701	obj/kern/kernel.asm	/^f0102701:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102708	obj/kern/kernel.asm	/^f0102708:	e8 a4 d9 ff ff       	call   f01000b1 <_panic>$/;"	l
+f010270d	obj/kern/kernel.asm	/^f010270d:	8b 15 44 5e 1e f0    	mov    0xf01e5e44,%edx$/;"	l
+f0102713	obj/kern/kernel.asm	/^f0102713:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
+f010271a	obj/kern/kernel.asm	/^f010271a:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
+f0102720	obj/kern/kernel.asm	/^f0102720:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
+f0102727	obj/kern/kernel.asm	/^f0102727:	00 $/;"	l
+f0102728	obj/kern/kernel.asm	/^f0102728:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
+f010272d	obj/kern/kernel.asm	/^f010272d:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102730	obj/kern/kernel.asm	/^f0102730:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
+f0102735	obj/kern/kernel.asm	/^f0102735:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f010273a	obj/kern/kernel.asm	/^f010273a:	e8 9f e8 ff ff       	call   f0100fde <boot_map_region>$/;"	l
+f010273f	obj/kern/kernel.asm	/^f010273f:	b8 00 90 11 f0       	mov    $0xf0119000,%eax$/;"	l
+f0102744	obj/kern/kernel.asm	/^f0102744:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f0102749	obj/kern/kernel.asm	/^f0102749:	77 20                	ja     f010276b <mem_init+0x15bc>$/;"	l
+f010274b	obj/kern/kernel.asm	/^f010274b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f010274f	obj/kern/kernel.asm	/^f010274f:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f0102756	obj/kern/kernel.asm	/^f0102756:	f0 $/;"	l
+f0102757	obj/kern/kernel.asm	/^f0102757:	c7 44 24 04 e5 00 00 	movl   $0xe5,0x4(%esp)$/;"	l
+f010275e	obj/kern/kernel.asm	/^f010275e:	00 $/;"	l
+f010275f	obj/kern/kernel.asm	/^f010275f:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102766	obj/kern/kernel.asm	/^f0102766:	e8 46 d9 ff ff       	call   f01000b1 <_panic>$/;"	l
+f010276b	obj/kern/kernel.asm	/^f010276b:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
+f0102772	obj/kern/kernel.asm	/^f0102772:	00 $/;"	l
+f0102773	obj/kern/kernel.asm	/^f0102773:	c7 04 24 00 90 11 00 	movl   $0x119000,(%esp)$/;"	l
+f010277a	obj/kern/kernel.asm	/^f010277a:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
+f010277f	obj/kern/kernel.asm	/^f010277f:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
+f0102784	obj/kern/kernel.asm	/^f0102784:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102789	obj/kern/kernel.asm	/^f0102789:	e8 50 e8 ff ff       	call   f0100fde <boot_map_region>$/;"	l
+f010278e	obj/kern/kernel.asm	/^f010278e:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
+f0102795	obj/kern/kernel.asm	/^f0102795:	00 $/;"	l
+f0102796	obj/kern/kernel.asm	/^f0102796:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f010279d	obj/kern/kernel.asm	/^f010279d:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
+f01027a2	obj/kern/kernel.asm	/^f01027a2:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
+f01027a7	obj/kern/kernel.asm	/^f01027a7:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f01027ac	obj/kern/kernel.asm	/^f01027ac:	e8 2d e8 ff ff       	call   f0100fde <boot_map_region>$/;"	l
+f01027b1	obj/kern/kernel.asm	/^f01027b1:	8b 1d 48 5e 1e f0    	mov    0xf01e5e48,%ebx$/;"	l
+f01027b7	obj/kern/kernel.asm	/^f01027b7:	8b 15 44 5e 1e f0    	mov    0xf01e5e44,%edx$/;"	l
+f01027bd	obj/kern/kernel.asm	/^f01027bd:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
+f01027c0	obj/kern/kernel.asm	/^f01027c0:	8d 3c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%edi$/;"	l
+f01027c7	obj/kern/kernel.asm	/^f01027c7:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
+f01027cd	obj/kern/kernel.asm	/^f01027cd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
+f01027d2	obj/kern/kernel.asm	/^f01027d2:	eb 70                	jmp    f0102844 <mem_init+0x1695>$/;"	l
+f01027d4	obj/kern/kernel.asm	/^f01027d4:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edx$/;"	l
+f01027da	obj/kern/kernel.asm	/^f01027da:	89 d8                	mov    %ebx,%eax$/;"	l
+f01027dc	obj/kern/kernel.asm	/^f01027dc:	e8 7b e1 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f01027e1	obj/kern/kernel.asm	/^f01027e1:	8b 15 4c 5e 1e f0    	mov    0xf01e5e4c,%edx$/;"	l
+f01027e7	obj/kern/kernel.asm	/^f01027e7:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
+f01027ed	obj/kern/kernel.asm	/^f01027ed:	77 20                	ja     f010280f <mem_init+0x1660>$/;"	l
+f01027ef	obj/kern/kernel.asm	/^f01027ef:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
+f01027f3	obj/kern/kernel.asm	/^f01027f3:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f01027fa	obj/kern/kernel.asm	/^f01027fa:	f0 $/;"	l
+f01027fb	obj/kern/kernel.asm	/^f01027fb:	c7 44 24 04 25 03 00 	movl   $0x325,0x4(%esp)$/;"	l
+f0102802	obj/kern/kernel.asm	/^f0102802:	00 $/;"	l
+f0102803	obj/kern/kernel.asm	/^f0102803:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f010280a	obj/kern/kernel.asm	/^f010280a:	e8 a2 d8 ff ff       	call   f01000b1 <_panic>$/;"	l
+f010280f	obj/kern/kernel.asm	/^f010280f:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
+f0102816	obj/kern/kernel.asm	/^f0102816:	39 d0                	cmp    %edx,%eax$/;"	l
+f0102818	obj/kern/kernel.asm	/^f0102818:	74 24                	je     f010283e <mem_init+0x168f>$/;"	l
+f010281a	obj/kern/kernel.asm	/^f010281a:	c7 44 24 0c 04 58 10 	movl   $0xf0105804,0xc(%esp)$/;"	l
+f0102821	obj/kern/kernel.asm	/^f0102821:	f0 $/;"	l
+f0102822	obj/kern/kernel.asm	/^f0102822:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102829	obj/kern/kernel.asm	/^f0102829:	f0 $/;"	l
+f010282a	obj/kern/kernel.asm	/^f010282a:	c7 44 24 04 25 03 00 	movl   $0x325,0x4(%esp)$/;"	l
+f0102831	obj/kern/kernel.asm	/^f0102831:	00 $/;"	l
+f0102832	obj/kern/kernel.asm	/^f0102832:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102839	obj/kern/kernel.asm	/^f0102839:	e8 73 d8 ff ff       	call   f01000b1 <_panic>$/;"	l
+f010283e	obj/kern/kernel.asm	/^f010283e:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
+f0102844	obj/kern/kernel.asm	/^f0102844:	39 f7                	cmp    %esi,%edi$/;"	l
+f0102846	obj/kern/kernel.asm	/^f0102846:	77 8c                	ja     f01027d4 <mem_init+0x1625>$/;"	l
+f0102848	obj/kern/kernel.asm	/^f0102848:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
+f010284d	obj/kern/kernel.asm	/^f010284d:	8d 96 00 00 c0 ee    	lea    -0x11400000(%esi),%edx$/;"	l
+f0102853	obj/kern/kernel.asm	/^f0102853:	89 d8                	mov    %ebx,%eax$/;"	l
+f0102855	obj/kern/kernel.asm	/^f0102855:	e8 02 e1 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f010285a	obj/kern/kernel.asm	/^f010285a:	8b 15 a8 51 1e f0    	mov    0xf01e51a8,%edx$/;"	l
+f0102860	obj/kern/kernel.asm	/^f0102860:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
+f0102866	obj/kern/kernel.asm	/^f0102866:	77 20                	ja     f0102888 <mem_init+0x16d9>$/;"	l
+f0102868	obj/kern/kernel.asm	/^f0102868:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
+f010286c	obj/kern/kernel.asm	/^f010286c:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f0102873	obj/kern/kernel.asm	/^f0102873:	f0 $/;"	l
+f0102874	obj/kern/kernel.asm	/^f0102874:	c7 44 24 04 2a 03 00 	movl   $0x32a,0x4(%esp)$/;"	l
+f010287b	obj/kern/kernel.asm	/^f010287b:	00 $/;"	l
+f010287c	obj/kern/kernel.asm	/^f010287c:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102883	obj/kern/kernel.asm	/^f0102883:	e8 29 d8 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102888	obj/kern/kernel.asm	/^f0102888:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
+f010288f	obj/kern/kernel.asm	/^f010288f:	39 d0                	cmp    %edx,%eax$/;"	l
+f0102891	obj/kern/kernel.asm	/^f0102891:	74 24                	je     f01028b7 <mem_init+0x1708>$/;"	l
+f0102893	obj/kern/kernel.asm	/^f0102893:	c7 44 24 0c 38 58 10 	movl   $0xf0105838,0xc(%esp)$/;"	l
+f010289a	obj/kern/kernel.asm	/^f010289a:	f0 $/;"	l
+f010289b	obj/kern/kernel.asm	/^f010289b:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01028a2	obj/kern/kernel.asm	/^f01028a2:	f0 $/;"	l
+f01028a3	obj/kern/kernel.asm	/^f01028a3:	c7 44 24 04 2a 03 00 	movl   $0x32a,0x4(%esp)$/;"	l
+f01028aa	obj/kern/kernel.asm	/^f01028aa:	00 $/;"	l
+f01028ab	obj/kern/kernel.asm	/^f01028ab:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01028b2	obj/kern/kernel.asm	/^f01028b2:	e8 fa d7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f01028b7	obj/kern/kernel.asm	/^f01028b7:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
+f01028bd	obj/kern/kernel.asm	/^f01028bd:	81 fe 00 80 01 00    	cmp    $0x18000,%esi$/;"	l
+f01028c3	obj/kern/kernel.asm	/^f01028c3:	75 88                	jne    f010284d <mem_init+0x169e>$/;"	l
+f01028c5	obj/kern/kernel.asm	/^f01028c5:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
+f01028c8	obj/kern/kernel.asm	/^f01028c8:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
+f01028cb	obj/kern/kernel.asm	/^f01028cb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
+f01028d0	obj/kern/kernel.asm	/^f01028d0:	eb 3b                	jmp    f010290d <mem_init+0x175e>$/;"	l
+f01028d2	obj/kern/kernel.asm	/^f01028d2:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edx$/;"	l
+f01028d8	obj/kern/kernel.asm	/^f01028d8:	89 d8                	mov    %ebx,%eax$/;"	l
+f01028da	obj/kern/kernel.asm	/^f01028da:	e8 7d e0 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f01028df	obj/kern/kernel.asm	/^f01028df:	39 c6                	cmp    %eax,%esi$/;"	l
+f01028e1	obj/kern/kernel.asm	/^f01028e1:	74 24                	je     f0102907 <mem_init+0x1758>$/;"	l
+f01028e3	obj/kern/kernel.asm	/^f01028e3:	c7 44 24 0c 6c 58 10 	movl   $0xf010586c,0xc(%esp)$/;"	l
+f01028ea	obj/kern/kernel.asm	/^f01028ea:	f0 $/;"	l
+f01028eb	obj/kern/kernel.asm	/^f01028eb:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01028f2	obj/kern/kernel.asm	/^f01028f2:	f0 $/;"	l
+f01028f3	obj/kern/kernel.asm	/^f01028f3:	c7 44 24 04 2e 03 00 	movl   $0x32e,0x4(%esp)$/;"	l
+f01028fa	obj/kern/kernel.asm	/^f01028fa:	00 $/;"	l
+f01028fb	obj/kern/kernel.asm	/^f01028fb:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102902	obj/kern/kernel.asm	/^f0102902:	e8 aa d7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102907	obj/kern/kernel.asm	/^f0102907:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
+f010290d	obj/kern/kernel.asm	/^f010290d:	39 fe                	cmp    %edi,%esi$/;"	l
+f010290f	obj/kern/kernel.asm	/^f010290f:	72 c1                	jb     f01028d2 <mem_init+0x1723>$/;"	l
+f0102911	obj/kern/kernel.asm	/^f0102911:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
+f0102916	obj/kern/kernel.asm	/^f0102916:	bf 00 90 11 f0       	mov    $0xf0119000,%edi$/;"	l
+f010291b	obj/kern/kernel.asm	/^f010291b:	81 c7 00 80 00 20    	add    $0x20008000,%edi$/;"	l
+f0102921	obj/kern/kernel.asm	/^f0102921:	89 f2                	mov    %esi,%edx$/;"	l
+f0102923	obj/kern/kernel.asm	/^f0102923:	89 d8                	mov    %ebx,%eax$/;"	l
+f0102925	obj/kern/kernel.asm	/^f0102925:	e8 32 e0 ff ff       	call   f010095c <check_va2pa>$/;"	l
+f010292a	obj/kern/kernel.asm	/^f010292a:	8d 14 37             	lea    (%edi,%esi,1),%edx$/;"	l
+f010292d	obj/kern/kernel.asm	/^f010292d:	39 d0                	cmp    %edx,%eax$/;"	l
+f010292f	obj/kern/kernel.asm	/^f010292f:	74 24                	je     f0102955 <mem_init+0x17a6>$/;"	l
+f0102931	obj/kern/kernel.asm	/^f0102931:	c7 44 24 0c 94 58 10 	movl   $0xf0105894,0xc(%esp)$/;"	l
+f0102938	obj/kern/kernel.asm	/^f0102938:	f0 $/;"	l
+f0102939	obj/kern/kernel.asm	/^f0102939:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102940	obj/kern/kernel.asm	/^f0102940:	f0 $/;"	l
+f0102941	obj/kern/kernel.asm	/^f0102941:	c7 44 24 04 32 03 00 	movl   $0x332,0x4(%esp)$/;"	l
+f0102948	obj/kern/kernel.asm	/^f0102948:	00 $/;"	l
+f0102949	obj/kern/kernel.asm	/^f0102949:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102950	obj/kern/kernel.asm	/^f0102950:	e8 5c d7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102955	obj/kern/kernel.asm	/^f0102955:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
+f010295b	obj/kern/kernel.asm	/^f010295b:	81 fe 00 00 00 f0    	cmp    $0xf0000000,%esi$/;"	l
+f0102961	obj/kern/kernel.asm	/^f0102961:	75 be                	jne    f0102921 <mem_init+0x1772>$/;"	l
+f0102963	obj/kern/kernel.asm	/^f0102963:	ba 00 00 c0 ef       	mov    $0xefc00000,%edx$/;"	l
+f0102968	obj/kern/kernel.asm	/^f0102968:	89 d8                	mov    %ebx,%eax$/;"	l
+f010296a	obj/kern/kernel.asm	/^f010296a:	e8 ed df ff ff       	call   f010095c <check_va2pa>$/;"	l
+f010296f	obj/kern/kernel.asm	/^f010296f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
+f0102972	obj/kern/kernel.asm	/^f0102972:	74 24                	je     f0102998 <mem_init+0x17e9>$/;"	l
+f0102974	obj/kern/kernel.asm	/^f0102974:	c7 44 24 0c dc 58 10 	movl   $0xf01058dc,0xc(%esp)$/;"	l
+f010297b	obj/kern/kernel.asm	/^f010297b:	f0 $/;"	l
+f010297c	obj/kern/kernel.asm	/^f010297c:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102983	obj/kern/kernel.asm	/^f0102983:	f0 $/;"	l
+f0102984	obj/kern/kernel.asm	/^f0102984:	c7 44 24 04 33 03 00 	movl   $0x333,0x4(%esp)$/;"	l
+f010298b	obj/kern/kernel.asm	/^f010298b:	00 $/;"	l
+f010298c	obj/kern/kernel.asm	/^f010298c:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102993	obj/kern/kernel.asm	/^f0102993:	e8 19 d7 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102998	obj/kern/kernel.asm	/^f0102998:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f010299d	obj/kern/kernel.asm	/^f010299d:	3d bb 03 00 00       	cmp    $0x3bb,%eax$/;"	l
+f01029a2	obj/kern/kernel.asm	/^f01029a2:	72 3c                	jb     f01029e0 <mem_init+0x1831>$/;"	l
+f01029a4	obj/kern/kernel.asm	/^f01029a4:	3d bd 03 00 00       	cmp    $0x3bd,%eax$/;"	l
+f01029a9	obj/kern/kernel.asm	/^f01029a9:	76 07                	jbe    f01029b2 <mem_init+0x1803>$/;"	l
+f01029ab	obj/kern/kernel.asm	/^f01029ab:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
+f01029b0	obj/kern/kernel.asm	/^f01029b0:	75 2e                	jne    f01029e0 <mem_init+0x1831>$/;"	l
+f01029b2	obj/kern/kernel.asm	/^f01029b2:	f6 04 83 01          	testb  $0x1,(%ebx,%eax,4)$/;"	l
+f01029b6	obj/kern/kernel.asm	/^f01029b6:	0f 85 aa 00 00 00    	jne    f0102a66 <mem_init+0x18b7>$/;"	l
+f01029bc	obj/kern/kernel.asm	/^f01029bc:	c7 44 24 0c c9 5c 10 	movl   $0xf0105cc9,0xc(%esp)$/;"	l
+f01029c3	obj/kern/kernel.asm	/^f01029c3:	f0 $/;"	l
+f01029c4	obj/kern/kernel.asm	/^f01029c4:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01029cb	obj/kern/kernel.asm	/^f01029cb:	f0 $/;"	l
+f01029cc	obj/kern/kernel.asm	/^f01029cc:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
+f01029d3	obj/kern/kernel.asm	/^f01029d3:	00 $/;"	l
+f01029d4	obj/kern/kernel.asm	/^f01029d4:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f01029db	obj/kern/kernel.asm	/^f01029db:	e8 d1 d6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f01029e0	obj/kern/kernel.asm	/^f01029e0:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
+f01029e5	obj/kern/kernel.asm	/^f01029e5:	76 55                	jbe    f0102a3c <mem_init+0x188d>$/;"	l
+f01029e7	obj/kern/kernel.asm	/^f01029e7:	8b 14 83             	mov    (%ebx,%eax,4),%edx$/;"	l
+f01029ea	obj/kern/kernel.asm	/^f01029ea:	f6 c2 01             	test   $0x1,%dl$/;"	l
+f01029ed	obj/kern/kernel.asm	/^f01029ed:	75 24                	jne    f0102a13 <mem_init+0x1864>$/;"	l
+f01029ef	obj/kern/kernel.asm	/^f01029ef:	c7 44 24 0c c9 5c 10 	movl   $0xf0105cc9,0xc(%esp)$/;"	l
+f01029f6	obj/kern/kernel.asm	/^f01029f6:	f0 $/;"	l
+f01029f7	obj/kern/kernel.asm	/^f01029f7:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f01029fe	obj/kern/kernel.asm	/^f01029fe:	f0 $/;"	l
+f01029ff	obj/kern/kernel.asm	/^f01029ff:	c7 44 24 04 40 03 00 	movl   $0x340,0x4(%esp)$/;"	l
+f0102a06	obj/kern/kernel.asm	/^f0102a06:	00 $/;"	l
+f0102a07	obj/kern/kernel.asm	/^f0102a07:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	e8 9e d6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102a13	obj/kern/kernel.asm	/^f0102a13:	f6 c2 02             	test   $0x2,%dl$/;"	l
+f0102a16	obj/kern/kernel.asm	/^f0102a16:	75 4e                	jne    f0102a66 <mem_init+0x18b7>$/;"	l
+f0102a18	obj/kern/kernel.asm	/^f0102a18:	c7 44 24 0c da 5c 10 	movl   $0xf0105cda,0xc(%esp)$/;"	l
+f0102a1f	obj/kern/kernel.asm	/^f0102a1f:	f0 $/;"	l
+f0102a20	obj/kern/kernel.asm	/^f0102a20:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102a27	obj/kern/kernel.asm	/^f0102a27:	f0 $/;"	l
+f0102a28	obj/kern/kernel.asm	/^f0102a28:	c7 44 24 04 41 03 00 	movl   $0x341,0x4(%esp)$/;"	l
+f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	00 $/;"	l
+f0102a30	obj/kern/kernel.asm	/^f0102a30:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102a37	obj/kern/kernel.asm	/^f0102a37:	e8 75 d6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	83 3c 83 00          	cmpl   $0x0,(%ebx,%eax,4)$/;"	l
+f0102a40	obj/kern/kernel.asm	/^f0102a40:	74 24                	je     f0102a66 <mem_init+0x18b7>$/;"	l
+f0102a42	obj/kern/kernel.asm	/^f0102a42:	c7 44 24 0c eb 5c 10 	movl   $0xf0105ceb,0xc(%esp)$/;"	l
+f0102a49	obj/kern/kernel.asm	/^f0102a49:	f0 $/;"	l
+f0102a4a	obj/kern/kernel.asm	/^f0102a4a:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102a51	obj/kern/kernel.asm	/^f0102a51:	f0 $/;"	l
+f0102a52	obj/kern/kernel.asm	/^f0102a52:	c7 44 24 04 43 03 00 	movl   $0x343,0x4(%esp)$/;"	l
+f0102a59	obj/kern/kernel.asm	/^f0102a59:	00 $/;"	l
+f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102a61	obj/kern/kernel.asm	/^f0102a61:	e8 4b d6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102a66	obj/kern/kernel.asm	/^f0102a66:	40                   	inc    %eax$/;"	l
+f0102a67	obj/kern/kernel.asm	/^f0102a67:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
+f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	0f 85 2b ff ff ff    	jne    f010299d <mem_init+0x17ee>$/;"	l
+f0102a72	obj/kern/kernel.asm	/^f0102a72:	c7 04 24 0c 59 10 f0 	movl   $0xf010590c,(%esp)$/;"	l
+f0102a79	obj/kern/kernel.asm	/^f0102a79:	e8 a8 0c 00 00       	call   f0103726 <cprintf>$/;"	l
+f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102a83	obj/kern/kernel.asm	/^f0102a83:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f0102a88	obj/kern/kernel.asm	/^f0102a88:	77 20                	ja     f0102aaa <mem_init+0x18fb>$/;"	l
+f0102a8a	obj/kern/kernel.asm	/^f0102a8a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f0102a95	obj/kern/kernel.asm	/^f0102a95:	f0 $/;"	l
+f0102a96	obj/kern/kernel.asm	/^f0102a96:	c7 44 24 04 02 01 00 	movl   $0x102,0x4(%esp)$/;"	l
+f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	00 $/;"	l
+f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	e8 07 d6 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
+f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
+f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0102ab7	obj/kern/kernel.asm	/^f0102ab7:	e8 36 df ff ff       	call   f01009f2 <check_page_free_list>$/;"	l
+f0102abc	obj/kern/kernel.asm	/^f0102abc:	0f 20 c0             	mov    %cr0,%eax$/;"	l
+f0102abf	obj/kern/kernel.asm	/^f0102abf:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
+f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
+f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	0f 22 c0             	mov    %eax,%cr0$/;"	l
+f0102aca	obj/kern/kernel.asm	/^f0102aca:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	e8 1b e3 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	89 c6                	mov    %eax,%esi$/;"	l
+f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	85 c0                	test   %eax,%eax$/;"	l
+f0102ada	obj/kern/kernel.asm	/^f0102ada:	75 24                	jne    f0102b00 <mem_init+0x1951>$/;"	l
+f0102adc	obj/kern/kernel.asm	/^f0102adc:	c7 44 24 0c e7 5a 10 	movl   $0xf0105ae7,0xc(%esp)$/;"	l
+f0102ae3	obj/kern/kernel.asm	/^f0102ae3:	f0 $/;"	l
+f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102aeb	obj/kern/kernel.asm	/^f0102aeb:	f0 $/;"	l
+f0102aec	obj/kern/kernel.asm	/^f0102aec:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)$/;"	l
+f0102af3	obj/kern/kernel.asm	/^f0102af3:	00 $/;"	l
+f0102af4	obj/kern/kernel.asm	/^f0102af4:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102afb	obj/kern/kernel.asm	/^f0102afb:	e8 b1 d5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102b00	obj/kern/kernel.asm	/^f0102b00:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0102b07	obj/kern/kernel.asm	/^f0102b07:	e8 e5 e2 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	89 c7                	mov    %eax,%edi$/;"	l
+f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	85 c0                	test   %eax,%eax$/;"	l
+f0102b10	obj/kern/kernel.asm	/^f0102b10:	75 24                	jne    f0102b36 <mem_init+0x1987>$/;"	l
+f0102b12	obj/kern/kernel.asm	/^f0102b12:	c7 44 24 0c fd 5a 10 	movl   $0xf0105afd,0xc(%esp)$/;"	l
+f0102b19	obj/kern/kernel.asm	/^f0102b19:	f0 $/;"	l
+f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102b21	obj/kern/kernel.asm	/^f0102b21:	f0 $/;"	l
+f0102b22	obj/kern/kernel.asm	/^f0102b22:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
+f0102b29	obj/kern/kernel.asm	/^f0102b29:	00 $/;"	l
+f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102b31	obj/kern/kernel.asm	/^f0102b31:	e8 7b d5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102b36	obj/kern/kernel.asm	/^f0102b36:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	e8 af e2 ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0102b42	obj/kern/kernel.asm	/^f0102b42:	89 c3                	mov    %eax,%ebx$/;"	l
+f0102b44	obj/kern/kernel.asm	/^f0102b44:	85 c0                	test   %eax,%eax$/;"	l
+f0102b46	obj/kern/kernel.asm	/^f0102b46:	75 24                	jne    f0102b6c <mem_init+0x19bd>$/;"	l
+f0102b48	obj/kern/kernel.asm	/^f0102b48:	c7 44 24 0c 13 5b 10 	movl   $0xf0105b13,0xc(%esp)$/;"	l
+f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	f0 $/;"	l
+f0102b50	obj/kern/kernel.asm	/^f0102b50:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102b57	obj/kern/kernel.asm	/^f0102b57:	f0 $/;"	l
+f0102b58	obj/kern/kernel.asm	/^f0102b58:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
+f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	00 $/;"	l
+f0102b60	obj/kern/kernel.asm	/^f0102b60:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102b67	obj/kern/kernel.asm	/^f0102b67:	e8 45 d5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102b6c	obj/kern/kernel.asm	/^f0102b6c:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	e8 01 e3 ff ff       	call   f0100e75 <page_free>$/;"	l
+f0102b74	obj/kern/kernel.asm	/^f0102b74:	89 f8                	mov    %edi,%eax$/;"	l
+f0102b76	obj/kern/kernel.asm	/^f0102b76:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0102b82	obj/kern/kernel.asm	/^f0102b82:	89 c2                	mov    %eax,%edx$/;"	l
+f0102b84	obj/kern/kernel.asm	/^f0102b84:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f0102b87	obj/kern/kernel.asm	/^f0102b87:	3b 15 44 5e 1e f0    	cmp    0xf01e5e44,%edx$/;"	l
+f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	72 20                	jb     f0102baf <mem_init+0x1a00>$/;"	l
+f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0102b93	obj/kern/kernel.asm	/^f0102b93:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0102b9a	obj/kern/kernel.asm	/^f0102b9a:	f0 $/;"	l
+f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	00 $/;"	l
+f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0102baa	obj/kern/kernel.asm	/^f0102baa:	e8 02 d5 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102baf	obj/kern/kernel.asm	/^f0102baf:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0102bb6	obj/kern/kernel.asm	/^f0102bb6:	00 $/;"	l
+f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
+f0102bbe	obj/kern/kernel.asm	/^f0102bbe:	00 $/;"	l
+f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	e8 46 1d 00 00       	call   f0104912 <memset>$/;"	l
+f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	89 d8                	mov    %ebx,%eax$/;"	l
+f0102bce	obj/kern/kernel.asm	/^f0102bce:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0102bda	obj/kern/kernel.asm	/^f0102bda:	89 c2                	mov    %eax,%edx$/;"	l
+f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	3b 15 44 5e 1e f0    	cmp    0xf01e5e44,%edx$/;"	l
+f0102be5	obj/kern/kernel.asm	/^f0102be5:	72 20                	jb     f0102c07 <mem_init+0x1a58>$/;"	l
+f0102be7	obj/kern/kernel.asm	/^f0102be7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0102beb	obj/kern/kernel.asm	/^f0102beb:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0102bf2	obj/kern/kernel.asm	/^f0102bf2:	f0 $/;"	l
+f0102bf3	obj/kern/kernel.asm	/^f0102bf3:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	00 $/;"	l
+f0102bfb	obj/kern/kernel.asm	/^f0102bfb:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0102c02	obj/kern/kernel.asm	/^f0102c02:	e8 aa d4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102c07	obj/kern/kernel.asm	/^f0102c07:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	00 $/;"	l
+f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
+f0102c16	obj/kern/kernel.asm	/^f0102c16:	00 $/;"	l
+f0102c17	obj/kern/kernel.asm	/^f0102c17:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	e8 ee 1c 00 00       	call   f0104912 <memset>$/;"	l
+f0102c24	obj/kern/kernel.asm	/^f0102c24:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	00 $/;"	l
+f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0102c33	obj/kern/kernel.asm	/^f0102c33:	00 $/;"	l
+f0102c34	obj/kern/kernel.asm	/^f0102c34:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
+f0102c38	obj/kern/kernel.asm	/^f0102c38:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102c3d	obj/kern/kernel.asm	/^f0102c3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102c40	obj/kern/kernel.asm	/^f0102c40:	e8 e1 e4 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0102c45	obj/kern/kernel.asm	/^f0102c45:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
+f0102c4a	obj/kern/kernel.asm	/^f0102c4a:	74 24                	je     f0102c70 <mem_init+0x1ac1>$/;"	l
+f0102c4c	obj/kern/kernel.asm	/^f0102c4c:	c7 44 24 0c e4 5b 10 	movl   $0xf0105be4,0xc(%esp)$/;"	l
+f0102c53	obj/kern/kernel.asm	/^f0102c53:	f0 $/;"	l
+f0102c54	obj/kern/kernel.asm	/^f0102c54:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	f0 $/;"	l
+f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)$/;"	l
+f0102c63	obj/kern/kernel.asm	/^f0102c63:	00 $/;"	l
+f0102c64	obj/kern/kernel.asm	/^f0102c64:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102c6b	obj/kern/kernel.asm	/^f0102c6b:	e8 41 d4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102c70	obj/kern/kernel.asm	/^f0102c70:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
+f0102c77	obj/kern/kernel.asm	/^f0102c77:	01 01 01 $/;"	l
+f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	74 24                	je     f0102ca0 <mem_init+0x1af1>$/;"	l
+f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	c7 44 24 0c 2c 59 10 	movl   $0xf010592c,0xc(%esp)$/;"	l
+f0102c83	obj/kern/kernel.asm	/^f0102c83:	f0 $/;"	l
+f0102c84	obj/kern/kernel.asm	/^f0102c84:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	f0 $/;"	l
+f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	c7 44 24 04 0d 04 00 	movl   $0x40d,0x4(%esp)$/;"	l
+f0102c93	obj/kern/kernel.asm	/^f0102c93:	00 $/;"	l
+f0102c94	obj/kern/kernel.asm	/^f0102c94:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	e8 11 d4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
+f0102ca7	obj/kern/kernel.asm	/^f0102ca7:	00 $/;"	l
+f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0102caf	obj/kern/kernel.asm	/^f0102caf:	00 $/;"	l
+f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0102cb4	obj/kern/kernel.asm	/^f0102cb4:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102cb9	obj/kern/kernel.asm	/^f0102cb9:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	e8 65 e4 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
+f0102cc8	obj/kern/kernel.asm	/^f0102cc8:	02 02 02 $/;"	l
+f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	74 24                	je     f0102cf1 <mem_init+0x1b42>$/;"	l
+f0102ccd	obj/kern/kernel.asm	/^f0102ccd:	c7 44 24 0c 50 59 10 	movl   $0xf0105950,0xc(%esp)$/;"	l
+f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	f0 $/;"	l
+f0102cd5	obj/kern/kernel.asm	/^f0102cd5:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	f0 $/;"	l
+f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	c7 44 24 04 0f 04 00 	movl   $0x40f,0x4(%esp)$/;"	l
+f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	00 $/;"	l
+f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102cec	obj/kern/kernel.asm	/^f0102cec:	e8 c0 d3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
+f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	74 24                	je     f0102d1c <mem_init+0x1b6d>$/;"	l
+f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	c7 44 24 0c 06 5c 10 	movl   $0xf0105c06,0xc(%esp)$/;"	l
+f0102cff	obj/kern/kernel.asm	/^f0102cff:	f0 $/;"	l
+f0102d00	obj/kern/kernel.asm	/^f0102d00:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102d07	obj/kern/kernel.asm	/^f0102d07:	f0 $/;"	l
+f0102d08	obj/kern/kernel.asm	/^f0102d08:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)$/;"	l
+f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	00 $/;"	l
+f0102d10	obj/kern/kernel.asm	/^f0102d10:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102d17	obj/kern/kernel.asm	/^f0102d17:	e8 95 d3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
+f0102d21	obj/kern/kernel.asm	/^f0102d21:	74 24                	je     f0102d47 <mem_init+0x1b98>$/;"	l
+f0102d23	obj/kern/kernel.asm	/^f0102d23:	c7 44 24 0c 70 5c 10 	movl   $0xf0105c70,0xc(%esp)$/;"	l
+f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	f0 $/;"	l
+f0102d2b	obj/kern/kernel.asm	/^f0102d2b:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102d32	obj/kern/kernel.asm	/^f0102d32:	f0 $/;"	l
+f0102d33	obj/kern/kernel.asm	/^f0102d33:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)$/;"	l
+f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	00 $/;"	l
+f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102d42	obj/kern/kernel.asm	/^f0102d42:	e8 6a d3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102d47	obj/kern/kernel.asm	/^f0102d47:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
+f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	03 03 03 $/;"	l
+f0102d51	obj/kern/kernel.asm	/^f0102d51:	89 d8                	mov    %ebx,%eax$/;"	l
+f0102d53	obj/kern/kernel.asm	/^f0102d53:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f0102d59	obj/kern/kernel.asm	/^f0102d59:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	89 c2                	mov    %eax,%edx$/;"	l
+f0102d61	obj/kern/kernel.asm	/^f0102d61:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f0102d64	obj/kern/kernel.asm	/^f0102d64:	3b 15 44 5e 1e f0    	cmp    0xf01e5e44,%edx$/;"	l
+f0102d6a	obj/kern/kernel.asm	/^f0102d6a:	72 20                	jb     f0102d8c <mem_init+0x1bdd>$/;"	l
+f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0102d70	obj/kern/kernel.asm	/^f0102d70:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0102d77	obj/kern/kernel.asm	/^f0102d77:	f0 $/;"	l
+f0102d78	obj/kern/kernel.asm	/^f0102d78:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	00 $/;"	l
+f0102d80	obj/kern/kernel.asm	/^f0102d80:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0102d87	obj/kern/kernel.asm	/^f0102d87:	e8 25 d3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102d8c	obj/kern/kernel.asm	/^f0102d8c:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
+f0102d93	obj/kern/kernel.asm	/^f0102d93:	03 03 03 $/;"	l
+f0102d96	obj/kern/kernel.asm	/^f0102d96:	74 24                	je     f0102dbc <mem_init+0x1c0d>$/;"	l
+f0102d98	obj/kern/kernel.asm	/^f0102d98:	c7 44 24 0c 74 59 10 	movl   $0xf0105974,0xc(%esp)$/;"	l
+f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	f0 $/;"	l
+f0102da0	obj/kern/kernel.asm	/^f0102da0:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102da7	obj/kern/kernel.asm	/^f0102da7:	f0 $/;"	l
+f0102da8	obj/kern/kernel.asm	/^f0102da8:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
+f0102daf	obj/kern/kernel.asm	/^f0102daf:	00 $/;"	l
+f0102db0	obj/kern/kernel.asm	/^f0102db0:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102db7	obj/kern/kernel.asm	/^f0102db7:	e8 f5 d2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102dbc	obj/kern/kernel.asm	/^f0102dbc:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
+f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	00 $/;"	l
+f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	e8 e8 e2 ff ff       	call   f01010b9 <page_remove>$/;"	l
+f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
+f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	74 24                	je     f0102dfc <mem_init+0x1c4d>$/;"	l
+f0102dd8	obj/kern/kernel.asm	/^f0102dd8:	c7 44 24 0c 3e 5c 10 	movl   $0xf0105c3e,0xc(%esp)$/;"	l
+f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	f0 $/;"	l
+f0102de0	obj/kern/kernel.asm	/^f0102de0:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102de7	obj/kern/kernel.asm	/^f0102de7:	f0 $/;"	l
+f0102de8	obj/kern/kernel.asm	/^f0102de8:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
+f0102def	obj/kern/kernel.asm	/^f0102def:	00 $/;"	l
+f0102df0	obj/kern/kernel.asm	/^f0102df0:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102df7	obj/kern/kernel.asm	/^f0102df7:	e8 b5 d2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0102e01	obj/kern/kernel.asm	/^f0102e01:	8b 08                	mov    (%eax),%ecx$/;"	l
+f0102e03	obj/kern/kernel.asm	/^f0102e03:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
+f0102e09	obj/kern/kernel.asm	/^f0102e09:	89 f2                	mov    %esi,%edx$/;"	l
+f0102e0b	obj/kern/kernel.asm	/^f0102e0b:	2b 15 4c 5e 1e f0    	sub    0xf01e5e4c,%edx$/;"	l
+f0102e11	obj/kern/kernel.asm	/^f0102e11:	c1 fa 03             	sar    $0x3,%edx$/;"	l
+f0102e14	obj/kern/kernel.asm	/^f0102e14:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
+f0102e17	obj/kern/kernel.asm	/^f0102e17:	39 d1                	cmp    %edx,%ecx$/;"	l
+f0102e19	obj/kern/kernel.asm	/^f0102e19:	74 24                	je     f0102e3f <mem_init+0x1c90>$/;"	l
+f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	c7 44 24 0c 84 54 10 	movl   $0xf0105484,0xc(%esp)$/;"	l
+f0102e22	obj/kern/kernel.asm	/^f0102e22:	f0 $/;"	l
+f0102e23	obj/kern/kernel.asm	/^f0102e23:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	f0 $/;"	l
+f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	c7 44 24 04 18 04 00 	movl   $0x418,0x4(%esp)$/;"	l
+f0102e32	obj/kern/kernel.asm	/^f0102e32:	00 $/;"	l
+f0102e33	obj/kern/kernel.asm	/^f0102e33:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	e8 72 d2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
+f0102e45	obj/kern/kernel.asm	/^f0102e45:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
+f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	74 24                	je     f0102e70 <mem_init+0x1cc1>$/;"	l
+f0102e4c	obj/kern/kernel.asm	/^f0102e4c:	c7 44 24 0c f5 5b 10 	movl   $0xf0105bf5,0xc(%esp)$/;"	l
+f0102e53	obj/kern/kernel.asm	/^f0102e53:	f0 $/;"	l
+f0102e54	obj/kern/kernel.asm	/^f0102e54:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0102e5b	obj/kern/kernel.asm	/^f0102e5b:	f0 $/;"	l
+f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	c7 44 24 04 1a 04 00 	movl   $0x41a,0x4(%esp)$/;"	l
+f0102e63	obj/kern/kernel.asm	/^f0102e63:	00 $/;"	l
+f0102e64	obj/kern/kernel.asm	/^f0102e64:	c7 04 24 01 5a 10 f0 	movl   $0xf0105a01,(%esp)$/;"	l
+f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	e8 41 d2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102e70	obj/kern/kernel.asm	/^f0102e70:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
+f0102e76	obj/kern/kernel.asm	/^f0102e76:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f0102e79	obj/kern/kernel.asm	/^f0102e79:	e8 f7 df ff ff       	call   f0100e75 <page_free>$/;"	l
+f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	c7 04 24 a0 59 10 f0 	movl   $0xf01059a0,(%esp)$/;"	l
+f0102e85	obj/kern/kernel.asm	/^f0102e85:	e8 9c 08 00 00       	call   f0103726 <cprintf>$/;"	l
+f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	83 c4 3c             	add    $0x3c,%esp$/;"	l
+f0102e8d	obj/kern/kernel.asm	/^f0102e8d:	5b                   	pop    %ebx$/;"	l
+f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	5e                   	pop    %esi$/;"	l
+f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	5f                   	pop    %edi$/;"	l
+f0102e90	obj/kern/kernel.asm	/^f0102e90:	5d                   	pop    %ebp$/;"	l
+f0102e91	obj/kern/kernel.asm	/^f0102e91:	c3                   	ret    $/;"	l
+f0102e92	obj/kern/kernel.asm	/^f0102e92 <user_mem_check>:$/;"	l
+f0102e92	obj/kern/kernel.asm	/^f0102e92:	55                   	push   %ebp$/;"	l
+f0102e93	obj/kern/kernel.asm	/^f0102e93:	89 e5                	mov    %esp,%ebp$/;"	l
+f0102e95	obj/kern/kernel.asm	/^f0102e95:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	5d                   	pop    %ebp$/;"	l
+f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	c3                   	ret    $/;"	l
+f0102e9c	obj/kern/kernel.asm	/^f0102e9c <user_mem_assert>:$/;"	l
+f0102e9c	obj/kern/kernel.asm	/^f0102e9c:	55                   	push   %ebp$/;"	l
+f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	89 e5                	mov    %esp,%ebp$/;"	l
+f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	53                   	push   %ebx$/;"	l
+f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
+f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f0102ea9	obj/kern/kernel.asm	/^f0102ea9:	83 c8 04             	or     $0x4,%eax$/;"	l
+f0102eac	obj/kern/kernel.asm	/^f0102eac:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f0102eba	obj/kern/kernel.asm	/^f0102eba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	e8 cc ff ff ff       	call   f0102e92 <user_mem_check>$/;"	l
+f0102ec6	obj/kern/kernel.asm	/^f0102ec6:	85 c0                	test   %eax,%eax$/;"	l
+f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	79 23                	jns    f0102eed <user_mem_assert+0x51>$/;"	l
+f0102eca	obj/kern/kernel.asm	/^f0102eca:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
+f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	00 $/;"	l
+f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
+f0102ed5	obj/kern/kernel.asm	/^f0102ed5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0102ed9	obj/kern/kernel.asm	/^f0102ed9:	c7 04 24 cc 59 10 f0 	movl   $0xf01059cc,(%esp)$/;"	l
+f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	e8 41 08 00 00       	call   f0103726 <cprintf>$/;"	l
+f0102ee5	obj/kern/kernel.asm	/^f0102ee5:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	e8 d9 06 00 00       	call   f01035c6 <env_destroy>$/;"	l
+f0102eed	obj/kern/kernel.asm	/^f0102eed:	83 c4 14             	add    $0x14,%esp$/;"	l
+f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	5b                   	pop    %ebx$/;"	l
+f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	5d                   	pop    %ebp$/;"	l
+f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	c3                   	ret    $/;"	l
+f0102ef4	obj/kern/kernel.asm	/^f0102ef4 <region_alloc>:$/;"	l
+f0102ef4	obj/kern/kernel.asm	/^f0102ef4:	55                   	push   %ebp$/;"	l
+f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	89 e5                	mov    %esp,%ebp$/;"	l
+f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	57                   	push   %edi$/;"	l
+f0102ef8	obj/kern/kernel.asm	/^f0102ef8:	56                   	push   %esi$/;"	l
+f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	53                   	push   %ebx$/;"	l
+f0102efa	obj/kern/kernel.asm	/^f0102efa:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
+f0102efd	obj/kern/kernel.asm	/^f0102efd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
+f0102f00	obj/kern/kernel.asm	/^f0102f00:	89 d3                	mov    %edx,%ebx$/;"	l
+f0102f02	obj/kern/kernel.asm	/^f0102f02:	89 ce                	mov    %ecx,%esi$/;"	l
+f0102f04	obj/kern/kernel.asm	/^f0102f04:	c7 04 24 f9 5c 10 f0 	movl   $0xf0105cf9,(%esp)$/;"	l
+f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	e8 16 08 00 00       	call   f0103726 <cprintf>$/;"	l
+f0102f10	obj/kern/kernel.asm	/^f0102f10:	89 df                	mov    %ebx,%edi$/;"	l
+f0102f12	obj/kern/kernel.asm	/^f0102f12:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
+f0102f18	obj/kern/kernel.asm	/^f0102f18:	8d 9c 33 ff 0f 00 00 	lea    0xfff(%ebx,%esi,1),%ebx$/;"	l
+f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
+f0102f25	obj/kern/kernel.asm	/^f0102f25:	eb 50                	jmp    f0102f77 <region_alloc+0x83>$/;"	l
+f0102f27	obj/kern/kernel.asm	/^f0102f27:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	e8 be de ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f0102f33	obj/kern/kernel.asm	/^f0102f33:	85 c0                	test   %eax,%eax$/;"	l
+f0102f35	obj/kern/kernel.asm	/^f0102f35:	75 1c                	jne    f0102f53 <region_alloc+0x5f>$/;"	l
+f0102f37	obj/kern/kernel.asm	/^f0102f37:	c7 44 24 08 07 5d 10 	movl   $0xf0105d07,0x8(%esp)$/;"	l
+f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	f0 $/;"	l
+f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	c7 44 24 04 2b 01 00 	movl   $0x12b,0x4(%esp)$/;"	l
+f0102f46	obj/kern/kernel.asm	/^f0102f46:	00 $/;"	l
+f0102f47	obj/kern/kernel.asm	/^f0102f47:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	e8 5e d1 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0102f53	obj/kern/kernel.asm	/^f0102f53:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
+f0102f5a	obj/kern/kernel.asm	/^f0102f5a:	00 $/;"	l
+f0102f5b	obj/kern/kernel.asm	/^f0102f5b:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
+f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0102f63	obj/kern/kernel.asm	/^f0102f63:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
+f0102f66	obj/kern/kernel.asm	/^f0102f66:	8b 42 5c             	mov    0x5c(%edx),%eax$/;"	l
+f0102f69	obj/kern/kernel.asm	/^f0102f69:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	e8 b5 e1 ff ff       	call   f0101126 <page_insert>$/;"	l
+f0102f71	obj/kern/kernel.asm	/^f0102f71:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
+f0102f77	obj/kern/kernel.asm	/^f0102f77:	39 df                	cmp    %ebx,%edi$/;"	l
+f0102f79	obj/kern/kernel.asm	/^f0102f79:	72 ac                	jb     f0102f27 <region_alloc+0x33>$/;"	l
+f0102f7b	obj/kern/kernel.asm	/^f0102f7b:	83 c4 2c             	add    $0x2c,%esp$/;"	l
+f0102f7e	obj/kern/kernel.asm	/^f0102f7e:	5b                   	pop    %ebx$/;"	l
+f0102f7f	obj/kern/kernel.asm	/^f0102f7f:	5e                   	pop    %esi$/;"	l
+f0102f80	obj/kern/kernel.asm	/^f0102f80:	5f                   	pop    %edi$/;"	l
+f0102f81	obj/kern/kernel.asm	/^f0102f81:	5d                   	pop    %ebp$/;"	l
+f0102f82	obj/kern/kernel.asm	/^f0102f82:	c3                   	ret    $/;"	l
+f0102f83	obj/kern/kernel.asm	/^f0102f83 <envid2env>:$/;"	l
+f0102f83	obj/kern/kernel.asm	/^f0102f83:	55                   	push   %ebp$/;"	l
+f0102f84	obj/kern/kernel.asm	/^f0102f84:	89 e5                	mov    %esp,%ebp$/;"	l
+f0102f86	obj/kern/kernel.asm	/^f0102f86:	53                   	push   %ebx$/;"	l
+f0102f87	obj/kern/kernel.asm	/^f0102f87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
+f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	8a 5d 10             	mov    0x10(%ebp),%bl$/;"	l
+f0102f90	obj/kern/kernel.asm	/^f0102f90:	85 c0                	test   %eax,%eax$/;"	l
+f0102f92	obj/kern/kernel.asm	/^f0102f92:	75 0e                	jne    f0102fa2 <envid2env+0x1f>$/;"	l
+f0102f94	obj/kern/kernel.asm	/^f0102f94:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0102f99	obj/kern/kernel.asm	/^f0102f99:	89 01                	mov    %eax,(%ecx)$/;"	l
+f0102f9b	obj/kern/kernel.asm	/^f0102f9b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0102fa0	obj/kern/kernel.asm	/^f0102fa0:	eb 55                	jmp    f0102ff7 <envid2env+0x74>$/;"	l
+f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	89 c2                	mov    %eax,%edx$/;"	l
+f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
+f0102faa	obj/kern/kernel.asm	/^f0102faa:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
+f0102fad	obj/kern/kernel.asm	/^f0102fad:	c1 e2 05             	shl    $0x5,%edx$/;"	l
+f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	03 15 a8 51 1e f0    	add    0xf01e51a8,%edx$/;"	l
+f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	83 7a 54 00          	cmpl   $0x0,0x54(%edx)$/;"	l
+f0102fba	obj/kern/kernel.asm	/^f0102fba:	74 05                	je     f0102fc1 <envid2env+0x3e>$/;"	l
+f0102fbc	obj/kern/kernel.asm	/^f0102fbc:	39 42 48             	cmp    %eax,0x48(%edx)$/;"	l
+f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	74 0d                	je     f0102fce <envid2env+0x4b>$/;"	l
+f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
+f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
+f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	eb 29                	jmp    f0102ff7 <envid2env+0x74>$/;"	l
+f0102fce	obj/kern/kernel.asm	/^f0102fce:	84 db                	test   %bl,%bl$/;"	l
+f0102fd0	obj/kern/kernel.asm	/^f0102fd0:	74 1e                	je     f0102ff0 <envid2env+0x6d>$/;"	l
+f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	39 c2                	cmp    %eax,%edx$/;"	l
+f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	74 15                	je     f0102ff0 <envid2env+0x6d>$/;"	l
+f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
+f0102fde	obj/kern/kernel.asm	/^f0102fde:	39 5a 4c             	cmp    %ebx,0x4c(%edx)$/;"	l
+f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	74 0d                	je     f0102ff0 <envid2env+0x6d>$/;"	l
+f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
+f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
+f0102fee	obj/kern/kernel.asm	/^f0102fee:	eb 07                	jmp    f0102ff7 <envid2env+0x74>$/;"	l
+f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	89 11                	mov    %edx,(%ecx)$/;"	l
+f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	5b                   	pop    %ebx$/;"	l
+f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	5d                   	pop    %ebp$/;"	l
+f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	c3                   	ret    $/;"	l
+f0102ffa	obj/kern/kernel.asm	/^f0102ffa <env_init_percpu>:$/;"	l
+f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	55                   	push   %ebp$/;"	l
+f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	89 e5                	mov    %esp,%ebp$/;"	l
+f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	b8 00 33 12 f0       	mov    $0xf0123300,%eax$/;"	l
+f0103002	obj/kern/kernel.asm	/^f0103002:	0f 01 10             	lgdtl  (%eax)$/;"	l
+f0103005	obj/kern/kernel.asm	/^f0103005:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
+f010300a	obj/kern/kernel.asm	/^f010300a:	8e e8                	mov    %eax,%gs$/;"	l
+f010300c	obj/kern/kernel.asm	/^f010300c:	8e e0                	mov    %eax,%fs$/;"	l
+f010300e	obj/kern/kernel.asm	/^f010300e:	b0 10                	mov    $0x10,%al$/;"	l
+f0103010	obj/kern/kernel.asm	/^f0103010:	8e c0                	mov    %eax,%es$/;"	l
+f0103012	obj/kern/kernel.asm	/^f0103012:	8e d8                	mov    %eax,%ds$/;"	l
+f0103014	obj/kern/kernel.asm	/^f0103014:	8e d0                	mov    %eax,%ss$/;"	l
+f0103016	obj/kern/kernel.asm	/^f0103016:	ea 1d 30 10 f0 08 00 	ljmp   $0x8,$0xf010301d$/;"	l
+f010301d	obj/kern/kernel.asm	/^f010301d:	b0 00                	mov    $0x0,%al$/;"	l
+f010301f	obj/kern/kernel.asm	/^f010301f:	0f 00 d0             	lldt   %ax$/;"	l
+f0103022	obj/kern/kernel.asm	/^f0103022:	5d                   	pop    %ebp$/;"	l
+f0103023	obj/kern/kernel.asm	/^f0103023:	c3                   	ret    $/;"	l
+f0103024	obj/kern/kernel.asm	/^f0103024 <env_init>:$/;"	l
+f0103024	obj/kern/kernel.asm	/^f0103024:	55                   	push   %ebp$/;"	l
+f0103025	obj/kern/kernel.asm	/^f0103025:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103027	obj/kern/kernel.asm	/^f0103027:	56                   	push   %esi$/;"	l
+f0103028	obj/kern/kernel.asm	/^f0103028:	53                   	push   %ebx$/;"	l
+f0103029	obj/kern/kernel.asm	/^f0103029:	83 ec 10             	sub    $0x10,%esp$/;"	l
+f010302c	obj/kern/kernel.asm	/^f010302c:	c7 04 24 27 5d 10 f0 	movl   $0xf0105d27,(%esp)$/;"	l
+f0103033	obj/kern/kernel.asm	/^f0103033:	e8 ee 06 00 00       	call   f0103726 <cprintf>$/;"	l
+f0103038	obj/kern/kernel.asm	/^f0103038:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
+f010303f	obj/kern/kernel.asm	/^f010303f:	00 $/;"	l
+f0103040	obj/kern/kernel.asm	/^f0103040:	c7 04 24 32 5d 10 f0 	movl   $0xf0105d32,(%esp)$/;"	l
+f0103047	obj/kern/kernel.asm	/^f0103047:	e8 da 06 00 00       	call   f0103726 <cprintf>$/;"	l
+f010304c	obj/kern/kernel.asm	/^f010304c:	8b 35 a8 51 1e f0    	mov    0xf01e51a8,%esi$/;"	l
+f0103052	obj/kern/kernel.asm	/^f0103052:	8b 0d ac 51 1e f0    	mov    0xf01e51ac,%ecx$/;"	l
+f0103058	obj/kern/kernel.asm	/^f0103058:	8d 86 a0 7f 01 00    	lea    0x17fa0(%esi),%eax$/;"	l
+f010305e	obj/kern/kernel.asm	/^f010305e:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
+f0103063	obj/kern/kernel.asm	/^f0103063:	eb 02                	jmp    f0103067 <env_init+0x43>$/;"	l
+f0103065	obj/kern/kernel.asm	/^f0103065:	89 d9                	mov    %ebx,%ecx$/;"	l
+f0103067	obj/kern/kernel.asm	/^f0103067:	89 c3                	mov    %eax,%ebx$/;"	l
+f0103069	obj/kern/kernel.asm	/^f0103069:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
+f0103070	obj/kern/kernel.asm	/^f0103070:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
+f0103073	obj/kern/kernel.asm	/^f0103073:	4a                   	dec    %edx$/;"	l
+f0103074	obj/kern/kernel.asm	/^f0103074:	83 e8 60             	sub    $0x60,%eax$/;"	l
+f0103077	obj/kern/kernel.asm	/^f0103077:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
+f010307a	obj/kern/kernel.asm	/^f010307a:	75 e9                	jne    f0103065 <env_init+0x41>$/;"	l
+f010307c	obj/kern/kernel.asm	/^f010307c:	89 35 ac 51 1e f0    	mov    %esi,0xf01e51ac$/;"	l
+f0103082	obj/kern/kernel.asm	/^f0103082:	e8 73 ff ff ff       	call   f0102ffa <env_init_percpu>$/;"	l
+f0103087	obj/kern/kernel.asm	/^f0103087:	83 c4 10             	add    $0x10,%esp$/;"	l
+f010308a	obj/kern/kernel.asm	/^f010308a:	5b                   	pop    %ebx$/;"	l
+f010308b	obj/kern/kernel.asm	/^f010308b:	5e                   	pop    %esi$/;"	l
+f010308c	obj/kern/kernel.asm	/^f010308c:	5d                   	pop    %ebp$/;"	l
+f010308d	obj/kern/kernel.asm	/^f010308d:	c3                   	ret    $/;"	l
+f010308e	obj/kern/kernel.asm	/^f010308e <env_alloc>:$/;"	l
+f010308e	obj/kern/kernel.asm	/^f010308e:	55                   	push   %ebp$/;"	l
+f010308f	obj/kern/kernel.asm	/^f010308f:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103091	obj/kern/kernel.asm	/^f0103091:	56                   	push   %esi$/;"	l
+f0103092	obj/kern/kernel.asm	/^f0103092:	53                   	push   %ebx$/;"	l
+f0103093	obj/kern/kernel.asm	/^f0103093:	83 ec 10             	sub    $0x10,%esp$/;"	l
+f0103096	obj/kern/kernel.asm	/^f0103096:	8b 1d ac 51 1e f0    	mov    0xf01e51ac,%ebx$/;"	l
+f010309c	obj/kern/kernel.asm	/^f010309c:	85 db                	test   %ebx,%ebx$/;"	l
+f010309e	obj/kern/kernel.asm	/^f010309e:	0f 84 7d 01 00 00    	je     f0103221 <env_alloc+0x193>$/;"	l
+f01030a4	obj/kern/kernel.asm	/^f01030a4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
+f01030ab	obj/kern/kernel.asm	/^f01030ab:	e8 41 dd ff ff       	call   f0100df1 <page_alloc>$/;"	l
+f01030b0	obj/kern/kernel.asm	/^f01030b0:	85 c0                	test   %eax,%eax$/;"	l
+f01030b2	obj/kern/kernel.asm	/^f01030b2:	0f 84 70 01 00 00    	je     f0103228 <env_alloc+0x19a>$/;"	l
+f01030b8	obj/kern/kernel.asm	/^f01030b8:	66 ff 40 04          	incw   0x4(%eax)$/;"	l
+f01030bc	obj/kern/kernel.asm	/^f01030bc:	2b 05 4c 5e 1e f0    	sub    0xf01e5e4c,%eax$/;"	l
+f01030c2	obj/kern/kernel.asm	/^f01030c2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
+f01030c5	obj/kern/kernel.asm	/^f01030c5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f01030c8	obj/kern/kernel.asm	/^f01030c8:	89 c2                	mov    %eax,%edx$/;"	l
+f01030ca	obj/kern/kernel.asm	/^f01030ca:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
+f01030cd	obj/kern/kernel.asm	/^f01030cd:	3b 15 44 5e 1e f0    	cmp    0xf01e5e44,%edx$/;"	l
+f01030d3	obj/kern/kernel.asm	/^f01030d3:	72 20                	jb     f01030f5 <env_alloc+0x67>$/;"	l
+f01030d5	obj/kern/kernel.asm	/^f01030d5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f01030d9	obj/kern/kernel.asm	/^f01030d9:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f01030e0	obj/kern/kernel.asm	/^f01030e0:	f0 $/;"	l
+f01030e1	obj/kern/kernel.asm	/^f01030e1:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
+f01030e8	obj/kern/kernel.asm	/^f01030e8:	00 $/;"	l
+f01030e9	obj/kern/kernel.asm	/^f01030e9:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f01030f0	obj/kern/kernel.asm	/^f01030f0:	e8 bc cf ff ff       	call   f01000b1 <_panic>$/;"	l
+f01030f5	obj/kern/kernel.asm	/^f01030f5:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
+f01030fa	obj/kern/kernel.asm	/^f01030fa:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
+f01030fd	obj/kern/kernel.asm	/^f01030fd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
+f0103104	obj/kern/kernel.asm	/^f0103104:	00 $/;"	l
+f0103105	obj/kern/kernel.asm	/^f0103105:	8b 15 48 5e 1e f0    	mov    0xf01e5e48,%edx$/;"	l
+f010310b	obj/kern/kernel.asm	/^f010310b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
+f010310f	obj/kern/kernel.asm	/^f010310f:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0103112	obj/kern/kernel.asm	/^f0103112:	e8 af 18 00 00       	call   f01049c6 <memcpy>$/;"	l
+f0103117	obj/kern/kernel.asm	/^f0103117:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
+f010311a	obj/kern/kernel.asm	/^f010311a:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f010311f	obj/kern/kernel.asm	/^f010311f:	77 20                	ja     f0103141 <env_alloc+0xb3>$/;"	l
+f0103121	obj/kern/kernel.asm	/^f0103121:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0103125	obj/kern/kernel.asm	/^f0103125:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f010312c	obj/kern/kernel.asm	/^f010312c:	f0 $/;"	l
+f010312d	obj/kern/kernel.asm	/^f010312d:	c7 44 24 04 c5 00 00 	movl   $0xc5,0x4(%esp)$/;"	l
+f0103134	obj/kern/kernel.asm	/^f0103134:	00 $/;"	l
+f0103135	obj/kern/kernel.asm	/^f0103135:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f010313c	obj/kern/kernel.asm	/^f010313c:	e8 70 cf ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103141	obj/kern/kernel.asm	/^f0103141:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
+f0103147	obj/kern/kernel.asm	/^f0103147:	83 ca 05             	or     $0x5,%edx$/;"	l
+f010314a	obj/kern/kernel.asm	/^f010314a:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
+f0103150	obj/kern/kernel.asm	/^f0103150:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
+f0103153	obj/kern/kernel.asm	/^f0103153:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
+f0103158	obj/kern/kernel.asm	/^f0103158:	89 c1                	mov    %eax,%ecx$/;"	l
+f010315a	obj/kern/kernel.asm	/^f010315a:	81 e1 00 fc ff ff    	and    $0xfffffc00,%ecx$/;"	l
+f0103160	obj/kern/kernel.asm	/^f0103160:	7f 05                	jg     f0103167 <env_alloc+0xd9>$/;"	l
+f0103162	obj/kern/kernel.asm	/^f0103162:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
+f0103167	obj/kern/kernel.asm	/^f0103167:	89 d8                	mov    %ebx,%eax$/;"	l
+f0103169	obj/kern/kernel.asm	/^f0103169:	2b 05 a8 51 1e f0    	sub    0xf01e51a8,%eax$/;"	l
+f010316f	obj/kern/kernel.asm	/^f010316f:	c1 f8 05             	sar    $0x5,%eax$/;"	l
+f0103172	obj/kern/kernel.asm	/^f0103172:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
+f0103175	obj/kern/kernel.asm	/^f0103175:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
+f0103178	obj/kern/kernel.asm	/^f0103178:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
+f010317b	obj/kern/kernel.asm	/^f010317b:	89 d6                	mov    %edx,%esi$/;"	l
+f010317d	obj/kern/kernel.asm	/^f010317d:	c1 e6 08             	shl    $0x8,%esi$/;"	l
+f0103180	obj/kern/kernel.asm	/^f0103180:	01 f2                	add    %esi,%edx$/;"	l
+f0103182	obj/kern/kernel.asm	/^f0103182:	89 d6                	mov    %edx,%esi$/;"	l
+f0103184	obj/kern/kernel.asm	/^f0103184:	c1 e6 10             	shl    $0x10,%esi$/;"	l
+f0103187	obj/kern/kernel.asm	/^f0103187:	01 f2                	add    %esi,%edx$/;"	l
+f0103189	obj/kern/kernel.asm	/^f0103189:	8d 04 50             	lea    (%eax,%edx,2),%eax$/;"	l
+f010318c	obj/kern/kernel.asm	/^f010318c:	09 c1                	or     %eax,%ecx$/;"	l
+f010318e	obj/kern/kernel.asm	/^f010318e:	89 4b 48             	mov    %ecx,0x48(%ebx)$/;"	l
+f0103191	obj/kern/kernel.asm	/^f0103191:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f0103194	obj/kern/kernel.asm	/^f0103194:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
+f0103197	obj/kern/kernel.asm	/^f0103197:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
+f010319e	obj/kern/kernel.asm	/^f010319e:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
+f01031a5	obj/kern/kernel.asm	/^f01031a5:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
+f01031ac	obj/kern/kernel.asm	/^f01031ac:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
+f01031b3	obj/kern/kernel.asm	/^f01031b3:	00 $/;"	l
+f01031b4	obj/kern/kernel.asm	/^f01031b4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f01031bb	obj/kern/kernel.asm	/^f01031bb:	00 $/;"	l
+f01031bc	obj/kern/kernel.asm	/^f01031bc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f01031bf	obj/kern/kernel.asm	/^f01031bf:	e8 4e 17 00 00       	call   f0104912 <memset>$/;"	l
+f01031c4	obj/kern/kernel.asm	/^f01031c4:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
+f01031ca	obj/kern/kernel.asm	/^f01031ca:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
+f01031d0	obj/kern/kernel.asm	/^f01031d0:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
+f01031d6	obj/kern/kernel.asm	/^f01031d6:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
+f01031dd	obj/kern/kernel.asm	/^f01031dd:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
+f01031e3	obj/kern/kernel.asm	/^f01031e3:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
+f01031e6	obj/kern/kernel.asm	/^f01031e6:	a3 ac 51 1e f0       	mov    %eax,0xf01e51ac$/;"	l
+f01031eb	obj/kern/kernel.asm	/^f01031eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01031ee	obj/kern/kernel.asm	/^f01031ee:	89 18                	mov    %ebx,(%eax)$/;"	l
+f01031f0	obj/kern/kernel.asm	/^f01031f0:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
+f01031f3	obj/kern/kernel.asm	/^f01031f3:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f01031f8	obj/kern/kernel.asm	/^f01031f8:	85 c0                	test   %eax,%eax$/;"	l
+f01031fa	obj/kern/kernel.asm	/^f01031fa:	74 05                	je     f0103201 <env_alloc+0x173>$/;"	l
+f01031fc	obj/kern/kernel.asm	/^f01031fc:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
+f01031ff	obj/kern/kernel.asm	/^f01031ff:	eb 05                	jmp    f0103206 <env_alloc+0x178>$/;"	l
+f0103201	obj/kern/kernel.asm	/^f0103201:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0103206	obj/kern/kernel.asm	/^f0103206:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
+f010320a	obj/kern/kernel.asm	/^f010320a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f010320e	obj/kern/kernel.asm	/^f010320e:	c7 04 24 3c 5d 10 f0 	movl   $0xf0105d3c,(%esp)$/;"	l
+f0103215	obj/kern/kernel.asm	/^f0103215:	e8 0c 05 00 00       	call   f0103726 <cprintf>$/;"	l
+f010321a	obj/kern/kernel.asm	/^f010321a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f010321f	obj/kern/kernel.asm	/^f010321f:	eb 0c                	jmp    f010322d <env_alloc+0x19f>$/;"	l
+f0103221	obj/kern/kernel.asm	/^f0103221:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
+f0103226	obj/kern/kernel.asm	/^f0103226:	eb 05                	jmp    f010322d <env_alloc+0x19f>$/;"	l
+f0103228	obj/kern/kernel.asm	/^f0103228:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
+f010322d	obj/kern/kernel.asm	/^f010322d:	83 c4 10             	add    $0x10,%esp$/;"	l
+f0103230	obj/kern/kernel.asm	/^f0103230:	5b                   	pop    %ebx$/;"	l
+f0103231	obj/kern/kernel.asm	/^f0103231:	5e                   	pop    %esi$/;"	l
+f0103232	obj/kern/kernel.asm	/^f0103232:	5d                   	pop    %ebp$/;"	l
+f0103233	obj/kern/kernel.asm	/^f0103233:	c3                   	ret    $/;"	l
+f0103234	obj/kern/kernel.asm	/^f0103234 <env_create>:$/;"	l
+f0103234	obj/kern/kernel.asm	/^f0103234:	55                   	push   %ebp$/;"	l
+f0103235	obj/kern/kernel.asm	/^f0103235:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103237	obj/kern/kernel.asm	/^f0103237:	57                   	push   %edi$/;"	l
+f0103238	obj/kern/kernel.asm	/^f0103238:	56                   	push   %esi$/;"	l
+f0103239	obj/kern/kernel.asm	/^f0103239:	53                   	push   %ebx$/;"	l
+f010323a	obj/kern/kernel.asm	/^f010323a:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
+f010323d	obj/kern/kernel.asm	/^f010323d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f0103240	obj/kern/kernel.asm	/^f0103240:	c7 04 24 51 5d 10 f0 	movl   $0xf0105d51,(%esp)$/;"	l
+f0103247	obj/kern/kernel.asm	/^f0103247:	e8 da 04 00 00       	call   f0103726 <cprintf>$/;"	l
+f010324c	obj/kern/kernel.asm	/^f010324c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f0103253	obj/kern/kernel.asm	/^f0103253:	00 $/;"	l
+f0103254	obj/kern/kernel.asm	/^f0103254:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
+f0103257	obj/kern/kernel.asm	/^f0103257:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f010325a	obj/kern/kernel.asm	/^f010325a:	e8 2f fe ff ff       	call   f010308e <env_alloc>$/;"	l
+f010325f	obj/kern/kernel.asm	/^f010325f:	85 c0                	test   %eax,%eax$/;"	l
+f0103261	obj/kern/kernel.asm	/^f0103261:	79 1c                	jns    f010327f <env_create+0x4b>$/;"	l
+f0103263	obj/kern/kernel.asm	/^f0103263:	c7 44 24 08 d4 5d 10 	movl   $0xf0105dd4,0x8(%esp)$/;"	l
+f010326a	obj/kern/kernel.asm	/^f010326a:	f0 $/;"	l
+f010326b	obj/kern/kernel.asm	/^f010326b:	c7 44 24 04 96 01 00 	movl   $0x196,0x4(%esp)$/;"	l
+f0103272	obj/kern/kernel.asm	/^f0103272:	00 $/;"	l
+f0103273	obj/kern/kernel.asm	/^f0103273:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f010327a	obj/kern/kernel.asm	/^f010327a:	e8 32 ce ff ff       	call   f01000b1 <_panic>$/;"	l
+f010327f	obj/kern/kernel.asm	/^f010327f:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0103284	obj/kern/kernel.asm	/^f0103284:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103288	obj/kern/kernel.asm	/^f0103288:	c7 04 24 5d 5d 10 f0 	movl   $0xf0105d5d,(%esp)$/;"	l
+f010328f	obj/kern/kernel.asm	/^f010328f:	e8 92 04 00 00       	call   f0103726 <cprintf>$/;"	l
+f0103294	obj/kern/kernel.asm	/^f0103294:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
+f0103297	obj/kern/kernel.asm	/^f0103297:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f010329a	obj/kern/kernel.asm	/^f010329a:	c7 04 24 74 5d 10 f0 	movl   $0xf0105d74,(%esp)$/;"	l
+f01032a1	obj/kern/kernel.asm	/^f01032a1:	e8 80 04 00 00       	call   f0103726 <cprintf>$/;"	l
+f01032a6	obj/kern/kernel.asm	/^f01032a6:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
+f01032ac	obj/kern/kernel.asm	/^f01032ac:	74 1c                	je     f01032ca <env_create+0x96>$/;"	l
+f01032ae	obj/kern/kernel.asm	/^f01032ae:	c7 44 24 08 80 5d 10 	movl   $0xf0105d80,0x8(%esp)$/;"	l
+f01032b5	obj/kern/kernel.asm	/^f01032b5:	f0 $/;"	l
+f01032b6	obj/kern/kernel.asm	/^f01032b6:	c7 44 24 04 6c 01 00 	movl   $0x16c,0x4(%esp)$/;"	l
+f01032bd	obj/kern/kernel.asm	/^f01032bd:	00 $/;"	l
+f01032be	obj/kern/kernel.asm	/^f01032be:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f01032c5	obj/kern/kernel.asm	/^f01032c5:	e8 e7 cd ff ff       	call   f01000b1 <_panic>$/;"	l
+f01032ca	obj/kern/kernel.asm	/^f01032ca:	89 fb                	mov    %edi,%ebx$/;"	l
+f01032cc	obj/kern/kernel.asm	/^f01032cc:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
+f01032cf	obj/kern/kernel.asm	/^f01032cf:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
+f01032d3	obj/kern/kernel.asm	/^f01032d3:	c1 e6 05             	shl    $0x5,%esi$/;"	l
+f01032d6	obj/kern/kernel.asm	/^f01032d6:	01 de                	add    %ebx,%esi$/;"	l
+f01032d8	obj/kern/kernel.asm	/^f01032d8:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
+f01032db	obj/kern/kernel.asm	/^f01032db:	8b 42 5c             	mov    0x5c(%edx),%eax$/;"	l
+f01032de	obj/kern/kernel.asm	/^f01032de:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f01032e3	obj/kern/kernel.asm	/^f01032e3:	77 20                	ja     f0103305 <env_create+0xd1>$/;"	l
+f01032e5	obj/kern/kernel.asm	/^f01032e5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f01032e9	obj/kern/kernel.asm	/^f01032e9:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f01032f0	obj/kern/kernel.asm	/^f01032f0:	f0 $/;"	l
+f01032f1	obj/kern/kernel.asm	/^f01032f1:	c7 44 24 04 71 01 00 	movl   $0x171,0x4(%esp)$/;"	l
+f01032f8	obj/kern/kernel.asm	/^f01032f8:	00 $/;"	l
+f01032f9	obj/kern/kernel.asm	/^f01032f9:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f0103300	obj/kern/kernel.asm	/^f0103300:	e8 ac cd ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103305	obj/kern/kernel.asm	/^f0103305:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
+f010330a	obj/kern/kernel.asm	/^f010330a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
+f010330d	obj/kern/kernel.asm	/^f010330d:	eb 6c                	jmp    f010337b <env_create+0x147>$/;"	l
+f010330f	obj/kern/kernel.asm	/^f010330f:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
+f0103312	obj/kern/kernel.asm	/^f0103312:	75 64                	jne    f0103378 <env_create+0x144>$/;"	l
+f0103314	obj/kern/kernel.asm	/^f0103314:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
+f0103317	obj/kern/kernel.asm	/^f0103317:	39 4b 10             	cmp    %ecx,0x10(%ebx)$/;"	l
+f010331a	obj/kern/kernel.asm	/^f010331a:	76 1c                	jbe    f0103338 <env_create+0x104>$/;"	l
+f010331c	obj/kern/kernel.asm	/^f010331c:	c7 44 24 08 f4 5d 10 	movl   $0xf0105df4,0x8(%esp)$/;"	l
+f0103323	obj/kern/kernel.asm	/^f0103323:	f0 $/;"	l
+f0103324	obj/kern/kernel.asm	/^f0103324:	c7 44 24 04 76 01 00 	movl   $0x176,0x4(%esp)$/;"	l
+f010332b	obj/kern/kernel.asm	/^f010332b:	00 $/;"	l
+f010332c	obj/kern/kernel.asm	/^f010332c:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f0103333	obj/kern/kernel.asm	/^f0103333:	e8 79 cd ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103338	obj/kern/kernel.asm	/^f0103338:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
+f010333b	obj/kern/kernel.asm	/^f010333b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f010333e	obj/kern/kernel.asm	/^f010333e:	e8 b1 fb ff ff       	call   f0102ef4 <region_alloc>$/;"	l
+f0103343	obj/kern/kernel.asm	/^f0103343:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
+f0103346	obj/kern/kernel.asm	/^f0103346:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f010334a	obj/kern/kernel.asm	/^f010334a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
+f0103351	obj/kern/kernel.asm	/^f0103351:	00 $/;"	l
+f0103352	obj/kern/kernel.asm	/^f0103352:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
+f0103355	obj/kern/kernel.asm	/^f0103355:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0103358	obj/kern/kernel.asm	/^f0103358:	e8 b5 15 00 00       	call   f0104912 <memset>$/;"	l
+f010335d	obj/kern/kernel.asm	/^f010335d:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
+f0103360	obj/kern/kernel.asm	/^f0103360:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f0103364	obj/kern/kernel.asm	/^f0103364:	89 f8                	mov    %edi,%eax$/;"	l
+f0103366	obj/kern/kernel.asm	/^f0103366:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
+f0103369	obj/kern/kernel.asm	/^f0103369:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f010336d	obj/kern/kernel.asm	/^f010336d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
+f0103370	obj/kern/kernel.asm	/^f0103370:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0103373	obj/kern/kernel.asm	/^f0103373:	e8 e4 15 00 00       	call   f010495c <memmove>$/;"	l
+f0103378	obj/kern/kernel.asm	/^f0103378:	83 c3 20             	add    $0x20,%ebx$/;"	l
+f010337b	obj/kern/kernel.asm	/^f010337b:	39 de                	cmp    %ebx,%esi$/;"	l
+f010337d	obj/kern/kernel.asm	/^f010337d:	77 90                	ja     f010330f <env_create+0xdb>$/;"	l
+f010337f	obj/kern/kernel.asm	/^f010337f:	a1 48 5e 1e f0       	mov    0xf01e5e48,%eax$/;"	l
+f0103384	obj/kern/kernel.asm	/^f0103384:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f0103389	obj/kern/kernel.asm	/^f0103389:	77 20                	ja     f01033ab <env_create+0x177>$/;"	l
+f010338b	obj/kern/kernel.asm	/^f010338b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f010338f	obj/kern/kernel.asm	/^f010338f:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f0103396	obj/kern/kernel.asm	/^f0103396:	f0 $/;"	l
+f0103397	obj/kern/kernel.asm	/^f0103397:	c7 44 24 04 7d 01 00 	movl   $0x17d,0x4(%esp)$/;"	l
+f010339e	obj/kern/kernel.asm	/^f010339e:	00 $/;"	l
+f010339f	obj/kern/kernel.asm	/^f010339f:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f01033a6	obj/kern/kernel.asm	/^f01033a6:	e8 06 cd ff ff       	call   f01000b1 <_panic>$/;"	l
+f01033ab	obj/kern/kernel.asm	/^f01033ab:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
+f01033b0	obj/kern/kernel.asm	/^f01033b0:	0f 22 d8             	mov    %eax,%cr3$/;"	l
+f01033b3	obj/kern/kernel.asm	/^f01033b3:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
+f01033b6	obj/kern/kernel.asm	/^f01033b6:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
+f01033b9	obj/kern/kernel.asm	/^f01033b9:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
+f01033bc	obj/kern/kernel.asm	/^f01033bc:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
+f01033c1	obj/kern/kernel.asm	/^f01033c1:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
+f01033c6	obj/kern/kernel.asm	/^f01033c6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f01033c9	obj/kern/kernel.asm	/^f01033c9:	e8 26 fb ff ff       	call   f0102ef4 <region_alloc>$/;"	l
+f01033ce	obj/kern/kernel.asm	/^f01033ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
+f01033d1	obj/kern/kernel.asm	/^f01033d1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
+f01033d4	obj/kern/kernel.asm	/^f01033d4:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
+f01033d7	obj/kern/kernel.asm	/^f01033d7:	83 c4 3c             	add    $0x3c,%esp$/;"	l
+f01033da	obj/kern/kernel.asm	/^f01033da:	5b                   	pop    %ebx$/;"	l
+f01033db	obj/kern/kernel.asm	/^f01033db:	5e                   	pop    %esi$/;"	l
+f01033dc	obj/kern/kernel.asm	/^f01033dc:	5f                   	pop    %edi$/;"	l
+f01033dd	obj/kern/kernel.asm	/^f01033dd:	5d                   	pop    %ebp$/;"	l
+f01033de	obj/kern/kernel.asm	/^f01033de:	c3                   	ret    $/;"	l
+f01033df	obj/kern/kernel.asm	/^f01033df <env_free>:$/;"	l
+f01033df	obj/kern/kernel.asm	/^f01033df:	55                   	push   %ebp$/;"	l
+f01033e0	obj/kern/kernel.asm	/^f01033e0:	89 e5                	mov    %esp,%ebp$/;"	l
+f01033e2	obj/kern/kernel.asm	/^f01033e2:	57                   	push   %edi$/;"	l
+f01033e3	obj/kern/kernel.asm	/^f01033e3:	56                   	push   %esi$/;"	l
+f01033e4	obj/kern/kernel.asm	/^f01033e4:	53                   	push   %ebx$/;"	l
+f01033e5	obj/kern/kernel.asm	/^f01033e5:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
+f01033e8	obj/kern/kernel.asm	/^f01033e8:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f01033eb	obj/kern/kernel.asm	/^f01033eb:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f01033f0	obj/kern/kernel.asm	/^f01033f0:	39 c7                	cmp    %eax,%edi$/;"	l
+f01033f2	obj/kern/kernel.asm	/^f01033f2:	75 37                	jne    f010342b <env_free+0x4c>$/;"	l
+f01033f4	obj/kern/kernel.asm	/^f01033f4:	8b 15 48 5e 1e f0    	mov    0xf01e5e48,%edx$/;"	l
+f01033fa	obj/kern/kernel.asm	/^f01033fa:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
+f0103400	obj/kern/kernel.asm	/^f0103400:	77 20                	ja     f0103422 <env_free+0x43>$/;"	l
+f0103402	obj/kern/kernel.asm	/^f0103402:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
+f0103406	obj/kern/kernel.asm	/^f0103406:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f010340d	obj/kern/kernel.asm	/^f010340d:	f0 $/;"	l
+f010340e	obj/kern/kernel.asm	/^f010340e:	c7 44 24 04 ab 01 00 	movl   $0x1ab,0x4(%esp)$/;"	l
+f0103415	obj/kern/kernel.asm	/^f0103415:	00 $/;"	l
+f0103416	obj/kern/kernel.asm	/^f0103416:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f010341d	obj/kern/kernel.asm	/^f010341d:	e8 8f cc ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103422	obj/kern/kernel.asm	/^f0103422:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
+f0103428	obj/kern/kernel.asm	/^f0103428:	0f 22 da             	mov    %edx,%cr3$/;"	l
+f010342b	obj/kern/kernel.asm	/^f010342b:	8b 57 48             	mov    0x48(%edi),%edx$/;"	l
+f010342e	obj/kern/kernel.asm	/^f010342e:	85 c0                	test   %eax,%eax$/;"	l
+f0103430	obj/kern/kernel.asm	/^f0103430:	74 05                	je     f0103437 <env_free+0x58>$/;"	l
+f0103432	obj/kern/kernel.asm	/^f0103432:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
+f0103435	obj/kern/kernel.asm	/^f0103435:	eb 05                	jmp    f010343c <env_free+0x5d>$/;"	l
+f0103437	obj/kern/kernel.asm	/^f0103437:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f010343c	obj/kern/kernel.asm	/^f010343c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
+f0103440	obj/kern/kernel.asm	/^f0103440:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103444	obj/kern/kernel.asm	/^f0103444:	c7 04 24 98 5d 10 f0 	movl   $0xf0105d98,(%esp)$/;"	l
+f010344b	obj/kern/kernel.asm	/^f010344b:	e8 d6 02 00 00       	call   f0103726 <cprintf>$/;"	l
+f0103450	obj/kern/kernel.asm	/^f0103450:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
+f0103457	obj/kern/kernel.asm	/^f0103457:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f010345a	obj/kern/kernel.asm	/^f010345a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
+f010345d	obj/kern/kernel.asm	/^f010345d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
+f0103460	obj/kern/kernel.asm	/^f0103460:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
+f0103463	obj/kern/kernel.asm	/^f0103463:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
+f0103466	obj/kern/kernel.asm	/^f0103466:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
+f0103469	obj/kern/kernel.asm	/^f0103469:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
+f010346f	obj/kern/kernel.asm	/^f010346f:	0f 84 b6 00 00 00    	je     f010352b <env_free+0x14c>$/;"	l
+f0103475	obj/kern/kernel.asm	/^f0103475:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
+f010347b	obj/kern/kernel.asm	/^f010347b:	89 f0                	mov    %esi,%eax$/;"	l
+f010347d	obj/kern/kernel.asm	/^f010347d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
+f0103480	obj/kern/kernel.asm	/^f0103480:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
+f0103483	obj/kern/kernel.asm	/^f0103483:	3b 05 44 5e 1e f0    	cmp    0xf01e5e44,%eax$/;"	l
+f0103489	obj/kern/kernel.asm	/^f0103489:	72 20                	jb     f01034ab <env_free+0xcc>$/;"	l
+f010348b	obj/kern/kernel.asm	/^f010348b:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
+f010348f	obj/kern/kernel.asm	/^f010348f:	c7 44 24 08 44 52 10 	movl   $0xf0105244,0x8(%esp)$/;"	l
+f0103496	obj/kern/kernel.asm	/^f0103496:	f0 $/;"	l
+f0103497	obj/kern/kernel.asm	/^f0103497:	c7 44 24 04 ba 01 00 	movl   $0x1ba,0x4(%esp)$/;"	l
+f010349e	obj/kern/kernel.asm	/^f010349e:	00 $/;"	l
+f010349f	obj/kern/kernel.asm	/^f010349f:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f01034a6	obj/kern/kernel.asm	/^f01034a6:	e8 06 cc ff ff       	call   f01000b1 <_panic>$/;"	l
+f01034ab	obj/kern/kernel.asm	/^f01034ab:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
+f01034ae	obj/kern/kernel.asm	/^f01034ae:	c1 e2 16             	shl    $0x16,%edx$/;"	l
+f01034b1	obj/kern/kernel.asm	/^f01034b1:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
+f01034b4	obj/kern/kernel.asm	/^f01034b4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
+f01034b9	obj/kern/kernel.asm	/^f01034b9:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
+f01034c0	obj/kern/kernel.asm	/^f01034c0:	01 $/;"	l
+f01034c1	obj/kern/kernel.asm	/^f01034c1:	74 17                	je     f01034da <env_free+0xfb>$/;"	l
+f01034c3	obj/kern/kernel.asm	/^f01034c3:	89 d8                	mov    %ebx,%eax$/;"	l
+f01034c5	obj/kern/kernel.asm	/^f01034c5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
+f01034c8	obj/kern/kernel.asm	/^f01034c8:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
+f01034cb	obj/kern/kernel.asm	/^f01034cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f01034cf	obj/kern/kernel.asm	/^f01034cf:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
+f01034d2	obj/kern/kernel.asm	/^f01034d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01034d5	obj/kern/kernel.asm	/^f01034d5:	e8 df db ff ff       	call   f01010b9 <page_remove>$/;"	l
+f01034da	obj/kern/kernel.asm	/^f01034da:	43                   	inc    %ebx$/;"	l
+f01034db	obj/kern/kernel.asm	/^f01034db:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
+f01034e1	obj/kern/kernel.asm	/^f01034e1:	75 d6                	jne    f01034b9 <env_free+0xda>$/;"	l
+f01034e3	obj/kern/kernel.asm	/^f01034e3:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
+f01034e6	obj/kern/kernel.asm	/^f01034e6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
+f01034e9	obj/kern/kernel.asm	/^f01034e9:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
+f01034f0	obj/kern/kernel.asm	/^f01034f0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
+f01034f3	obj/kern/kernel.asm	/^f01034f3:	3b 05 44 5e 1e f0    	cmp    0xf01e5e44,%eax$/;"	l
+f01034f9	obj/kern/kernel.asm	/^f01034f9:	72 1c                	jb     f0103517 <env_free+0x138>$/;"	l
+f01034fb	obj/kern/kernel.asm	/^f01034fb:	c7 44 24 08 2c 53 10 	movl   $0xf010532c,0x8(%esp)$/;"	l
+f0103502	obj/kern/kernel.asm	/^f0103502:	f0 $/;"	l
+f0103503	obj/kern/kernel.asm	/^f0103503:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
+f010350a	obj/kern/kernel.asm	/^f010350a:	00 $/;"	l
+f010350b	obj/kern/kernel.asm	/^f010350b:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0103512	obj/kern/kernel.asm	/^f0103512:	e8 9a cb ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103517	obj/kern/kernel.asm	/^f0103517:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
+f010351a	obj/kern/kernel.asm	/^f010351a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
+f010351d	obj/kern/kernel.asm	/^f010351d:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f0103523	obj/kern/kernel.asm	/^f0103523:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0103526	obj/kern/kernel.asm	/^f0103526:	e8 8a d9 ff ff       	call   f0100eb5 <page_decref>$/;"	l
+f010352b	obj/kern/kernel.asm	/^f010352b:	ff 45 e0             	incl   -0x20(%ebp)$/;"	l
+f010352e	obj/kern/kernel.asm	/^f010352e:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
+f0103535	obj/kern/kernel.asm	/^f0103535:	0f 85 1c ff ff ff    	jne    f0103457 <env_free+0x78>$/;"	l
+f010353b	obj/kern/kernel.asm	/^f010353b:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
+f010353e	obj/kern/kernel.asm	/^f010353e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f0103543	obj/kern/kernel.asm	/^f0103543:	77 20                	ja     f0103565 <env_free+0x186>$/;"	l
+f0103545	obj/kern/kernel.asm	/^f0103545:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0103549	obj/kern/kernel.asm	/^f0103549:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f0103550	obj/kern/kernel.asm	/^f0103550:	f0 $/;"	l
+f0103551	obj/kern/kernel.asm	/^f0103551:	c7 44 24 04 c8 01 00 	movl   $0x1c8,0x4(%esp)$/;"	l
+f0103558	obj/kern/kernel.asm	/^f0103558:	00 $/;"	l
+f0103559	obj/kern/kernel.asm	/^f0103559:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f0103560	obj/kern/kernel.asm	/^f0103560:	e8 4c cb ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103565	obj/kern/kernel.asm	/^f0103565:	c7 47 5c 00 00 00 00 	movl   $0x0,0x5c(%edi)$/;"	l
+f010356c	obj/kern/kernel.asm	/^f010356c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
+f0103571	obj/kern/kernel.asm	/^f0103571:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
+f0103574	obj/kern/kernel.asm	/^f0103574:	3b 05 44 5e 1e f0    	cmp    0xf01e5e44,%eax$/;"	l
+f010357a	obj/kern/kernel.asm	/^f010357a:	72 1c                	jb     f0103598 <env_free+0x1b9>$/;"	l
+f010357c	obj/kern/kernel.asm	/^f010357c:	c7 44 24 08 2c 53 10 	movl   $0xf010532c,0x8(%esp)$/;"	l
+f0103583	obj/kern/kernel.asm	/^f0103583:	f0 $/;"	l
+f0103584	obj/kern/kernel.asm	/^f0103584:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
+f010358b	obj/kern/kernel.asm	/^f010358b:	00 $/;"	l
+f010358c	obj/kern/kernel.asm	/^f010358c:	c7 04 24 0d 5a 10 f0 	movl   $0xf0105a0d,(%esp)$/;"	l
+f0103593	obj/kern/kernel.asm	/^f0103593:	e8 19 cb ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103598	obj/kern/kernel.asm	/^f0103598:	c1 e0 03             	shl    $0x3,%eax$/;"	l
+f010359b	obj/kern/kernel.asm	/^f010359b:	03 05 4c 5e 1e f0    	add    0xf01e5e4c,%eax$/;"	l
+f01035a1	obj/kern/kernel.asm	/^f01035a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01035a4	obj/kern/kernel.asm	/^f01035a4:	e8 0c d9 ff ff       	call   f0100eb5 <page_decref>$/;"	l
+f01035a9	obj/kern/kernel.asm	/^f01035a9:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
+f01035b0	obj/kern/kernel.asm	/^f01035b0:	a1 ac 51 1e f0       	mov    0xf01e51ac,%eax$/;"	l
+f01035b5	obj/kern/kernel.asm	/^f01035b5:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
+f01035b8	obj/kern/kernel.asm	/^f01035b8:	89 3d ac 51 1e f0    	mov    %edi,0xf01e51ac$/;"	l
+f01035be	obj/kern/kernel.asm	/^f01035be:	83 c4 2c             	add    $0x2c,%esp$/;"	l
+f01035c1	obj/kern/kernel.asm	/^f01035c1:	5b                   	pop    %ebx$/;"	l
+f01035c2	obj/kern/kernel.asm	/^f01035c2:	5e                   	pop    %esi$/;"	l
+f01035c3	obj/kern/kernel.asm	/^f01035c3:	5f                   	pop    %edi$/;"	l
+f01035c4	obj/kern/kernel.asm	/^f01035c4:	5d                   	pop    %ebp$/;"	l
+f01035c5	obj/kern/kernel.asm	/^f01035c5:	c3                   	ret    $/;"	l
+f01035c6	obj/kern/kernel.asm	/^f01035c6 <env_destroy>:$/;"	l
+f01035c6	obj/kern/kernel.asm	/^f01035c6:	55                   	push   %ebp$/;"	l
+f01035c7	obj/kern/kernel.asm	/^f01035c7:	89 e5                	mov    %esp,%ebp$/;"	l
+f01035c9	obj/kern/kernel.asm	/^f01035c9:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f01035cc	obj/kern/kernel.asm	/^f01035cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01035cf	obj/kern/kernel.asm	/^f01035cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01035d2	obj/kern/kernel.asm	/^f01035d2:	e8 08 fe ff ff       	call   f01033df <env_free>$/;"	l
+f01035d7	obj/kern/kernel.asm	/^f01035d7:	c7 04 24 24 5e 10 f0 	movl   $0xf0105e24,(%esp)$/;"	l
+f01035de	obj/kern/kernel.asm	/^f01035de:	e8 43 01 00 00       	call   f0103726 <cprintf>$/;"	l
+f01035e3	obj/kern/kernel.asm	/^f01035e3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f01035ea	obj/kern/kernel.asm	/^f01035ea:	e8 e6 d1 ff ff       	call   f01007d5 <monitor>$/;"	l
+f01035ef	obj/kern/kernel.asm	/^f01035ef:	eb f2                	jmp    f01035e3 <env_destroy+0x1d>$/;"	l
+f01035f1	obj/kern/kernel.asm	/^f01035f1 <env_pop_tf>:$/;"	l
+f01035f1	obj/kern/kernel.asm	/^f01035f1:	55                   	push   %ebp$/;"	l
+f01035f2	obj/kern/kernel.asm	/^f01035f2:	89 e5                	mov    %esp,%ebp$/;"	l
+f01035f4	obj/kern/kernel.asm	/^f01035f4:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f01035f7	obj/kern/kernel.asm	/^f01035f7:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
+f01035fa	obj/kern/kernel.asm	/^f01035fa:	61                   	popa   $/;"	l
+f01035fb	obj/kern/kernel.asm	/^f01035fb:	07                   	pop    %es$/;"	l
+f01035fc	obj/kern/kernel.asm	/^f01035fc:	1f                   	pop    %ds$/;"	l
+f01035fd	obj/kern/kernel.asm	/^f01035fd:	83 c4 08             	add    $0x8,%esp$/;"	l
+f0103600	obj/kern/kernel.asm	/^f0103600:	cf                   	iret   $/;"	l
+f0103601	obj/kern/kernel.asm	/^f0103601:	c7 44 24 08 ae 5d 10 	movl   $0xf0105dae,0x8(%esp)$/;"	l
+f0103608	obj/kern/kernel.asm	/^f0103608:	f0 $/;"	l
+f0103609	obj/kern/kernel.asm	/^f0103609:	c7 44 24 04 f0 01 00 	movl   $0x1f0,0x4(%esp)$/;"	l
+f0103610	obj/kern/kernel.asm	/^f0103610:	00 $/;"	l
+f0103611	obj/kern/kernel.asm	/^f0103611:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f0103618	obj/kern/kernel.asm	/^f0103618:	e8 94 ca ff ff       	call   f01000b1 <_panic>$/;"	l
+f010361d	obj/kern/kernel.asm	/^f010361d <env_run>:$/;"	l
+f010361d	obj/kern/kernel.asm	/^f010361d:	55                   	push   %ebp$/;"	l
+f010361e	obj/kern/kernel.asm	/^f010361e:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103620	obj/kern/kernel.asm	/^f0103620:	53                   	push   %ebx$/;"	l
+f0103621	obj/kern/kernel.asm	/^f0103621:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0103624	obj/kern/kernel.asm	/^f0103624:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
+f0103627	obj/kern/kernel.asm	/^f0103627:	c7 04 24 ba 5d 10 f0 	movl   $0xf0105dba,(%esp)$/;"	l
+f010362e	obj/kern/kernel.asm	/^f010362e:	e8 f3 00 00 00       	call   f0103726 <cprintf>$/;"	l
+f0103633	obj/kern/kernel.asm	/^f0103633:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
+f0103637	obj/kern/kernel.asm	/^f0103637:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f010363c	obj/kern/kernel.asm	/^f010363c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103640	obj/kern/kernel.asm	/^f0103640:	c7 04 24 c3 5d 10 f0 	movl   $0xf0105dc3,(%esp)$/;"	l
+f0103647	obj/kern/kernel.asm	/^f0103647:	e8 da 00 00 00       	call   f0103726 <cprintf>$/;"	l
+f010364c	obj/kern/kernel.asm	/^f010364c:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0103651	obj/kern/kernel.asm	/^f0103651:	39 d8                	cmp    %ebx,%eax$/;"	l
+f0103653	obj/kern/kernel.asm	/^f0103653:	74 53                	je     f01036a8 <env_run+0x8b>$/;"	l
+f0103655	obj/kern/kernel.asm	/^f0103655:	85 c0                	test   %eax,%eax$/;"	l
+f0103657	obj/kern/kernel.asm	/^f0103657:	74 0d                	je     f0103666 <env_run+0x49>$/;"	l
+f0103659	obj/kern/kernel.asm	/^f0103659:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
+f010365d	obj/kern/kernel.asm	/^f010365d:	75 07                	jne    f0103666 <env_run+0x49>$/;"	l
+f010365f	obj/kern/kernel.asm	/^f010365f:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
+f0103666	obj/kern/kernel.asm	/^f0103666:	89 1d a4 51 1e f0    	mov    %ebx,0xf01e51a4$/;"	l
+f010366c	obj/kern/kernel.asm	/^f010366c:	c7 43 54 03 00 00 00 	movl   $0x3,0x54(%ebx)$/;"	l
+f0103673	obj/kern/kernel.asm	/^f0103673:	ff 43 58             	incl   0x58(%ebx)$/;"	l
+f0103676	obj/kern/kernel.asm	/^f0103676:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
+f0103679	obj/kern/kernel.asm	/^f0103679:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
+f010367e	obj/kern/kernel.asm	/^f010367e:	77 20                	ja     f01036a0 <env_run+0x83>$/;"	l
+f0103680	obj/kern/kernel.asm	/^f0103680:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0103684	obj/kern/kernel.asm	/^f0103684:	c7 44 24 08 88 53 10 	movl   $0xf0105388,0x8(%esp)$/;"	l
+f010368b	obj/kern/kernel.asm	/^f010368b:	f0 $/;"	l
+f010368c	obj/kern/kernel.asm	/^f010368c:	c7 44 24 04 19 02 00 	movl   $0x219,0x4(%esp)$/;"	l
+f0103693	obj/kern/kernel.asm	/^f0103693:	00 $/;"	l
+f0103694	obj/kern/kernel.asm	/^f0103694:	c7 04 24 1c 5d 10 f0 	movl   $0xf0105d1c,(%esp)$/;"	l
+f010369b	obj/kern/kernel.asm	/^f010369b:	e8 11 ca ff ff       	call   f01000b1 <_panic>$/;"	l
+f01036a0	obj/kern/kernel.asm	/^f01036a0:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
+f01036a5	obj/kern/kernel.asm	/^f01036a5:	0f 22 d8             	mov    %eax,%cr3$/;"	l
+f01036a8	obj/kern/kernel.asm	/^f01036a8:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f01036ad	obj/kern/kernel.asm	/^f01036ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01036b0	obj/kern/kernel.asm	/^f01036b0:	e8 3c ff ff ff       	call   f01035f1 <env_pop_tf>$/;"	l
+f01036b5	obj/kern/kernel.asm	/^f01036b5:	00 00                	add    %al,(%eax)$/;"	l
+f01036b8	obj/kern/kernel.asm	/^f01036b8 <mc146818_read>:$/;"	l
+f01036b8	obj/kern/kernel.asm	/^f01036b8:	55                   	push   %ebp$/;"	l
+f01036b9	obj/kern/kernel.asm	/^f01036b9:	89 e5                	mov    %esp,%ebp$/;"	l
+f01036bb	obj/kern/kernel.asm	/^f01036bb:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
+f01036c0	obj/kern/kernel.asm	/^f01036c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01036c3	obj/kern/kernel.asm	/^f01036c3:	ee                   	out    %al,(%dx)$/;"	l
+f01036c4	obj/kern/kernel.asm	/^f01036c4:	b2 71                	mov    $0x71,%dl$/;"	l
+f01036c6	obj/kern/kernel.asm	/^f01036c6:	ec                   	in     (%dx),%al$/;"	l
+f01036c7	obj/kern/kernel.asm	/^f01036c7:	0f b6 c0             	movzbl %al,%eax$/;"	l
+f01036ca	obj/kern/kernel.asm	/^f01036ca:	5d                   	pop    %ebp$/;"	l
+f01036cb	obj/kern/kernel.asm	/^f01036cb:	c3                   	ret    $/;"	l
+f01036cc	obj/kern/kernel.asm	/^f01036cc <mc146818_write>:$/;"	l
+f01036cc	obj/kern/kernel.asm	/^f01036cc:	55                   	push   %ebp$/;"	l
+f01036cd	obj/kern/kernel.asm	/^f01036cd:	89 e5                	mov    %esp,%ebp$/;"	l
+f01036cf	obj/kern/kernel.asm	/^f01036cf:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
+f01036d4	obj/kern/kernel.asm	/^f01036d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01036d7	obj/kern/kernel.asm	/^f01036d7:	ee                   	out    %al,(%dx)$/;"	l
+f01036d8	obj/kern/kernel.asm	/^f01036d8:	b2 71                	mov    $0x71,%dl$/;"	l
+f01036da	obj/kern/kernel.asm	/^f01036da:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f01036dd	obj/kern/kernel.asm	/^f01036dd:	ee                   	out    %al,(%dx)$/;"	l
+f01036de	obj/kern/kernel.asm	/^f01036de:	5d                   	pop    %ebp$/;"	l
+f01036df	obj/kern/kernel.asm	/^f01036df:	c3                   	ret    $/;"	l
+f01036e0	obj/kern/kernel.asm	/^f01036e0 <putch>:$/;"	l
+f01036e0	obj/kern/kernel.asm	/^f01036e0:	55                   	push   %ebp$/;"	l
+f01036e1	obj/kern/kernel.asm	/^f01036e1:	89 e5                	mov    %esp,%ebp$/;"	l
+f01036e3	obj/kern/kernel.asm	/^f01036e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f01036e6	obj/kern/kernel.asm	/^f01036e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01036e9	obj/kern/kernel.asm	/^f01036e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01036ec	obj/kern/kernel.asm	/^f01036ec:	e8 d5 ce ff ff       	call   f01005c6 <cputchar>$/;"	l
+f01036f1	obj/kern/kernel.asm	/^f01036f1:	c9                   	leave  $/;"	l
+f01036f2	obj/kern/kernel.asm	/^f01036f2:	c3                   	ret    $/;"	l
+f01036f3	obj/kern/kernel.asm	/^f01036f3 <vcprintf>:$/;"	l
+f01036f3	obj/kern/kernel.asm	/^f01036f3:	55                   	push   %ebp$/;"	l
+f01036f4	obj/kern/kernel.asm	/^f01036f4:	89 e5                	mov    %esp,%ebp$/;"	l
+f01036f6	obj/kern/kernel.asm	/^f01036f6:	83 ec 28             	sub    $0x28,%esp$/;"	l
+f01036f9	obj/kern/kernel.asm	/^f01036f9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
+f0103700	obj/kern/kernel.asm	/^f0103700:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f0103703	obj/kern/kernel.asm	/^f0103703:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0103707	obj/kern/kernel.asm	/^f0103707:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f010370a	obj/kern/kernel.asm	/^f010370a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f010370e	obj/kern/kernel.asm	/^f010370e:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
+f0103711	obj/kern/kernel.asm	/^f0103711:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103715	obj/kern/kernel.asm	/^f0103715:	c7 04 24 e0 36 10 f0 	movl   $0xf01036e0,(%esp)$/;"	l
+f010371c	obj/kern/kernel.asm	/^f010371c:	e8 b1 0b 00 00       	call   f01042d2 <vprintfmt>$/;"	l
+f0103721	obj/kern/kernel.asm	/^f0103721:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
+f0103724	obj/kern/kernel.asm	/^f0103724:	c9                   	leave  $/;"	l
+f0103725	obj/kern/kernel.asm	/^f0103725:	c3                   	ret    $/;"	l
+f0103726	obj/kern/kernel.asm	/^f0103726 <cprintf>:$/;"	l
+f0103726	obj/kern/kernel.asm	/^f0103726:	55                   	push   %ebp$/;"	l
+f0103727	obj/kern/kernel.asm	/^f0103727:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103729	obj/kern/kernel.asm	/^f0103729:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f010372c	obj/kern/kernel.asm	/^f010372c:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
+f010372f	obj/kern/kernel.asm	/^f010372f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103733	obj/kern/kernel.asm	/^f0103733:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0103736	obj/kern/kernel.asm	/^f0103736:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0103739	obj/kern/kernel.asm	/^f0103739:	e8 b5 ff ff ff       	call   f01036f3 <vcprintf>$/;"	l
+f010373e	obj/kern/kernel.asm	/^f010373e:	c9                   	leave  $/;"	l
+f010373f	obj/kern/kernel.asm	/^f010373f:	c3                   	ret    $/;"	l
+f0103740	obj/kern/kernel.asm	/^f0103740 <trap_init_percpu>:$/;"	l
+f0103740	obj/kern/kernel.asm	/^f0103740:	55                   	push   %ebp$/;"	l
+f0103741	obj/kern/kernel.asm	/^f0103741:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103743	obj/kern/kernel.asm	/^f0103743:	c7 05 c4 59 1e f0 00 	movl   $0xf0000000,0xf01e59c4$/;"	l
+f010374a	obj/kern/kernel.asm	/^f010374a:	00 00 f0 $/;"	l
+f010374d	obj/kern/kernel.asm	/^f010374d:	66 c7 05 c8 59 1e f0 	movw   $0x10,0xf01e59c8$/;"	l
+f0103754	obj/kern/kernel.asm	/^f0103754:	10 00 $/;"	l
+f0103756	obj/kern/kernel.asm	/^f0103756:	66 c7 05 48 33 12 f0 	movw   $0x67,0xf0123348$/;"	l
+f010375d	obj/kern/kernel.asm	/^f010375d:	67 00 $/;"	l
+f010375f	obj/kern/kernel.asm	/^f010375f:	b8 c0 59 1e f0       	mov    $0xf01e59c0,%eax$/;"	l
+f0103764	obj/kern/kernel.asm	/^f0103764:	66 a3 4a 33 12 f0    	mov    %ax,0xf012334a$/;"	l
+f010376a	obj/kern/kernel.asm	/^f010376a:	89 c2                	mov    %eax,%edx$/;"	l
+f010376c	obj/kern/kernel.asm	/^f010376c:	c1 ea 10             	shr    $0x10,%edx$/;"	l
+f010376f	obj/kern/kernel.asm	/^f010376f:	88 15 4c 33 12 f0    	mov    %dl,0xf012334c$/;"	l
+f0103775	obj/kern/kernel.asm	/^f0103775:	c6 05 4e 33 12 f0 40 	movb   $0x40,0xf012334e$/;"	l
+f010377c	obj/kern/kernel.asm	/^f010377c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
+f010377f	obj/kern/kernel.asm	/^f010377f:	a2 4f 33 12 f0       	mov    %al,0xf012334f$/;"	l
+f0103784	obj/kern/kernel.asm	/^f0103784:	c6 05 4d 33 12 f0 89 	movb   $0x89,0xf012334d$/;"	l
+f010378b	obj/kern/kernel.asm	/^f010378b:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
+f0103790	obj/kern/kernel.asm	/^f0103790:	0f 00 d8             	ltr    %ax$/;"	l
+f0103793	obj/kern/kernel.asm	/^f0103793:	b8 50 33 12 f0       	mov    $0xf0123350,%eax$/;"	l
+f0103798	obj/kern/kernel.asm	/^f0103798:	0f 01 18             	lidtl  (%eax)$/;"	l
+f010379b	obj/kern/kernel.asm	/^f010379b:	5d                   	pop    %ebp$/;"	l
+f010379c	obj/kern/kernel.asm	/^f010379c:	c3                   	ret    $/;"	l
+f010379d	obj/kern/kernel.asm	/^f010379d <trap_init>:$/;"	l
+f010379d	obj/kern/kernel.asm	/^f010379d:	55                   	push   %ebp$/;"	l
+f010379e	obj/kern/kernel.asm	/^f010379e:	89 e5                	mov    %esp,%ebp$/;"	l
+f01037a0	obj/kern/kernel.asm	/^f01037a0:	b8 a8 3d 10 f0       	mov    $0xf0103da8,%eax$/;"	l
+f01037a5	obj/kern/kernel.asm	/^f01037a5:	66 a3 c0 51 1e f0    	mov    %ax,0xf01e51c0$/;"	l
+f01037ab	obj/kern/kernel.asm	/^f01037ab:	66 c7 05 c2 51 1e f0 	movw   $0x8,0xf01e51c2$/;"	l
+f01037b2	obj/kern/kernel.asm	/^f01037b2:	08 00 $/;"	l
+f01037b4	obj/kern/kernel.asm	/^f01037b4:	c6 05 c4 51 1e f0 00 	movb   $0x0,0xf01e51c4$/;"	l
+f01037bb	obj/kern/kernel.asm	/^f01037bb:	c6 05 c5 51 1e f0 8e 	movb   $0x8e,0xf01e51c5$/;"	l
+f01037c2	obj/kern/kernel.asm	/^f01037c2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f01037c5	obj/kern/kernel.asm	/^f01037c5:	66 a3 c6 51 1e f0    	mov    %ax,0xf01e51c6$/;"	l
+f01037cb	obj/kern/kernel.asm	/^f01037cb:	b8 ae 3d 10 f0       	mov    $0xf0103dae,%eax$/;"	l
+f01037d0	obj/kern/kernel.asm	/^f01037d0:	66 a3 c8 51 1e f0    	mov    %ax,0xf01e51c8$/;"	l
+f01037d6	obj/kern/kernel.asm	/^f01037d6:	66 c7 05 ca 51 1e f0 	movw   $0x8,0xf01e51ca$/;"	l
+f01037dd	obj/kern/kernel.asm	/^f01037dd:	08 00 $/;"	l
+f01037df	obj/kern/kernel.asm	/^f01037df:	c6 05 cc 51 1e f0 00 	movb   $0x0,0xf01e51cc$/;"	l
+f01037e6	obj/kern/kernel.asm	/^f01037e6:	c6 05 cd 51 1e f0 8e 	movb   $0x8e,0xf01e51cd$/;"	l
+f01037ed	obj/kern/kernel.asm	/^f01037ed:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f01037f0	obj/kern/kernel.asm	/^f01037f0:	66 a3 ce 51 1e f0    	mov    %ax,0xf01e51ce$/;"	l
+f01037f6	obj/kern/kernel.asm	/^f01037f6:	b8 ba 3d 10 f0       	mov    $0xf0103dba,%eax$/;"	l
+f01037fb	obj/kern/kernel.asm	/^f01037fb:	66 a3 d8 51 1e f0    	mov    %ax,0xf01e51d8$/;"	l
+f0103801	obj/kern/kernel.asm	/^f0103801:	66 c7 05 da 51 1e f0 	movw   $0x8,0xf01e51da$/;"	l
+f0103808	obj/kern/kernel.asm	/^f0103808:	08 00 $/;"	l
+f010380a	obj/kern/kernel.asm	/^f010380a:	c6 05 dc 51 1e f0 00 	movb   $0x0,0xf01e51dc$/;"	l
+f0103811	obj/kern/kernel.asm	/^f0103811:	c6 05 dd 51 1e f0 8e 	movb   $0x8e,0xf01e51dd$/;"	l
+f0103818	obj/kern/kernel.asm	/^f0103818:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f010381b	obj/kern/kernel.asm	/^f010381b:	66 a3 de 51 1e f0    	mov    %ax,0xf01e51de$/;"	l
+f0103821	obj/kern/kernel.asm	/^f0103821:	b8 c0 3d 10 f0       	mov    $0xf0103dc0,%eax$/;"	l
+f0103826	obj/kern/kernel.asm	/^f0103826:	66 a3 e0 51 1e f0    	mov    %ax,0xf01e51e0$/;"	l
+f010382c	obj/kern/kernel.asm	/^f010382c:	66 c7 05 e2 51 1e f0 	movw   $0x8,0xf01e51e2$/;"	l
+f0103833	obj/kern/kernel.asm	/^f0103833:	08 00 $/;"	l
+f0103835	obj/kern/kernel.asm	/^f0103835:	c6 05 e4 51 1e f0 00 	movb   $0x0,0xf01e51e4$/;"	l
+f010383c	obj/kern/kernel.asm	/^f010383c:	c6 05 e5 51 1e f0 8e 	movb   $0x8e,0xf01e51e5$/;"	l
+f0103843	obj/kern/kernel.asm	/^f0103843:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f0103846	obj/kern/kernel.asm	/^f0103846:	66 a3 e6 51 1e f0    	mov    %ax,0xf01e51e6$/;"	l
+f010384c	obj/kern/kernel.asm	/^f010384c:	b8 c6 3d 10 f0       	mov    $0xf0103dc6,%eax$/;"	l
+f0103851	obj/kern/kernel.asm	/^f0103851:	66 a3 e8 51 1e f0    	mov    %ax,0xf01e51e8$/;"	l
+f0103857	obj/kern/kernel.asm	/^f0103857:	66 c7 05 ea 51 1e f0 	movw   $0x8,0xf01e51ea$/;"	l
+f010385e	obj/kern/kernel.asm	/^f010385e:	08 00 $/;"	l
+f0103860	obj/kern/kernel.asm	/^f0103860:	c6 05 ec 51 1e f0 00 	movb   $0x0,0xf01e51ec$/;"	l
+f0103867	obj/kern/kernel.asm	/^f0103867:	c6 05 ed 51 1e f0 8e 	movb   $0x8e,0xf01e51ed$/;"	l
+f010386e	obj/kern/kernel.asm	/^f010386e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f0103871	obj/kern/kernel.asm	/^f0103871:	66 a3 ee 51 1e f0    	mov    %ax,0xf01e51ee$/;"	l
+f0103877	obj/kern/kernel.asm	/^f0103877:	b8 cc 3d 10 f0       	mov    $0xf0103dcc,%eax$/;"	l
+f010387c	obj/kern/kernel.asm	/^f010387c:	66 a3 f0 51 1e f0    	mov    %ax,0xf01e51f0$/;"	l
+f0103882	obj/kern/kernel.asm	/^f0103882:	66 c7 05 f2 51 1e f0 	movw   $0x8,0xf01e51f2$/;"	l
+f0103889	obj/kern/kernel.asm	/^f0103889:	08 00 $/;"	l
+f010388b	obj/kern/kernel.asm	/^f010388b:	c6 05 f4 51 1e f0 00 	movb   $0x0,0xf01e51f4$/;"	l
+f0103892	obj/kern/kernel.asm	/^f0103892:	c6 05 f5 51 1e f0 8e 	movb   $0x8e,0xf01e51f5$/;"	l
+f0103899	obj/kern/kernel.asm	/^f0103899:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f010389c	obj/kern/kernel.asm	/^f010389c:	66 a3 f6 51 1e f0    	mov    %ax,0xf01e51f6$/;"	l
+f01038a2	obj/kern/kernel.asm	/^f01038a2:	b8 d2 3d 10 f0       	mov    $0xf0103dd2,%eax$/;"	l
+f01038a7	obj/kern/kernel.asm	/^f01038a7:	66 a3 f8 51 1e f0    	mov    %ax,0xf01e51f8$/;"	l
+f01038ad	obj/kern/kernel.asm	/^f01038ad:	66 c7 05 fa 51 1e f0 	movw   $0x8,0xf01e51fa$/;"	l
+f01038b4	obj/kern/kernel.asm	/^f01038b4:	08 00 $/;"	l
+f01038b6	obj/kern/kernel.asm	/^f01038b6:	c6 05 fc 51 1e f0 00 	movb   $0x0,0xf01e51fc$/;"	l
+f01038bd	obj/kern/kernel.asm	/^f01038bd:	c6 05 fd 51 1e f0 8e 	movb   $0x8e,0xf01e51fd$/;"	l
+f01038c4	obj/kern/kernel.asm	/^f01038c4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f01038c7	obj/kern/kernel.asm	/^f01038c7:	66 a3 fe 51 1e f0    	mov    %ax,0xf01e51fe$/;"	l
+f01038cd	obj/kern/kernel.asm	/^f01038cd:	b8 d8 3d 10 f0       	mov    $0xf0103dd8,%eax$/;"	l
+f01038d2	obj/kern/kernel.asm	/^f01038d2:	66 a3 00 52 1e f0    	mov    %ax,0xf01e5200$/;"	l
+f01038d8	obj/kern/kernel.asm	/^f01038d8:	66 c7 05 02 52 1e f0 	movw   $0x8,0xf01e5202$/;"	l
+f01038df	obj/kern/kernel.asm	/^f01038df:	08 00 $/;"	l
+f01038e1	obj/kern/kernel.asm	/^f01038e1:	c6 05 04 52 1e f0 00 	movb   $0x0,0xf01e5204$/;"	l
+f01038e8	obj/kern/kernel.asm	/^f01038e8:	c6 05 05 52 1e f0 8e 	movb   $0x8e,0xf01e5205$/;"	l
+f01038ef	obj/kern/kernel.asm	/^f01038ef:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f01038f2	obj/kern/kernel.asm	/^f01038f2:	66 a3 06 52 1e f0    	mov    %ax,0xf01e5206$/;"	l
+f01038f8	obj/kern/kernel.asm	/^f01038f8:	b8 dc 3d 10 f0       	mov    $0xf0103ddc,%eax$/;"	l
+f01038fd	obj/kern/kernel.asm	/^f01038fd:	66 a3 08 52 1e f0    	mov    %ax,0xf01e5208$/;"	l
+f0103903	obj/kern/kernel.asm	/^f0103903:	66 c7 05 0a 52 1e f0 	movw   $0x8,0xf01e520a$/;"	l
+f010390a	obj/kern/kernel.asm	/^f010390a:	08 00 $/;"	l
+f010390c	obj/kern/kernel.asm	/^f010390c:	c6 05 0c 52 1e f0 00 	movb   $0x0,0xf01e520c$/;"	l
+f0103913	obj/kern/kernel.asm	/^f0103913:	c6 05 0d 52 1e f0 8e 	movb   $0x8e,0xf01e520d$/;"	l
+f010391a	obj/kern/kernel.asm	/^f010391a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f010391d	obj/kern/kernel.asm	/^f010391d:	66 a3 0e 52 1e f0    	mov    %ax,0xf01e520e$/;"	l
+f0103923	obj/kern/kernel.asm	/^f0103923:	b8 e2 3d 10 f0       	mov    $0xf0103de2,%eax$/;"	l
+f0103928	obj/kern/kernel.asm	/^f0103928:	66 a3 10 52 1e f0    	mov    %ax,0xf01e5210$/;"	l
+f010392e	obj/kern/kernel.asm	/^f010392e:	66 c7 05 12 52 1e f0 	movw   $0x8,0xf01e5212$/;"	l
+f0103935	obj/kern/kernel.asm	/^f0103935:	08 00 $/;"	l
+f0103937	obj/kern/kernel.asm	/^f0103937:	c6 05 14 52 1e f0 00 	movb   $0x0,0xf01e5214$/;"	l
+f010393e	obj/kern/kernel.asm	/^f010393e:	c6 05 15 52 1e f0 8e 	movb   $0x8e,0xf01e5215$/;"	l
+f0103945	obj/kern/kernel.asm	/^f0103945:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f0103948	obj/kern/kernel.asm	/^f0103948:	66 a3 16 52 1e f0    	mov    %ax,0xf01e5216$/;"	l
+f010394e	obj/kern/kernel.asm	/^f010394e:	b8 e6 3d 10 f0       	mov    $0xf0103de6,%eax$/;"	l
+f0103953	obj/kern/kernel.asm	/^f0103953:	66 a3 18 52 1e f0    	mov    %ax,0xf01e5218$/;"	l
+f0103959	obj/kern/kernel.asm	/^f0103959:	66 c7 05 1a 52 1e f0 	movw   $0x8,0xf01e521a$/;"	l
+f0103960	obj/kern/kernel.asm	/^f0103960:	08 00 $/;"	l
+f0103962	obj/kern/kernel.asm	/^f0103962:	c6 05 1c 52 1e f0 00 	movb   $0x0,0xf01e521c$/;"	l
+f0103969	obj/kern/kernel.asm	/^f0103969:	c6 05 1d 52 1e f0 8e 	movb   $0x8e,0xf01e521d$/;"	l
+f0103970	obj/kern/kernel.asm	/^f0103970:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f0103973	obj/kern/kernel.asm	/^f0103973:	66 a3 1e 52 1e f0    	mov    %ax,0xf01e521e$/;"	l
+f0103979	obj/kern/kernel.asm	/^f0103979:	b8 ea 3d 10 f0       	mov    $0xf0103dea,%eax$/;"	l
+f010397e	obj/kern/kernel.asm	/^f010397e:	66 a3 20 52 1e f0    	mov    %ax,0xf01e5220$/;"	l
+f0103984	obj/kern/kernel.asm	/^f0103984:	66 c7 05 22 52 1e f0 	movw   $0x8,0xf01e5222$/;"	l
+f010398b	obj/kern/kernel.asm	/^f010398b:	08 00 $/;"	l
+f010398d	obj/kern/kernel.asm	/^f010398d:	c6 05 24 52 1e f0 00 	movb   $0x0,0xf01e5224$/;"	l
+f0103994	obj/kern/kernel.asm	/^f0103994:	c6 05 25 52 1e f0 8e 	movb   $0x8e,0xf01e5225$/;"	l
+f010399b	obj/kern/kernel.asm	/^f010399b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f010399e	obj/kern/kernel.asm	/^f010399e:	66 a3 26 52 1e f0    	mov    %ax,0xf01e5226$/;"	l
+f01039a4	obj/kern/kernel.asm	/^f01039a4:	b8 ee 3d 10 f0       	mov    $0xf0103dee,%eax$/;"	l
+f01039a9	obj/kern/kernel.asm	/^f01039a9:	66 a3 28 52 1e f0    	mov    %ax,0xf01e5228$/;"	l
+f01039af	obj/kern/kernel.asm	/^f01039af:	66 c7 05 2a 52 1e f0 	movw   $0x8,0xf01e522a$/;"	l
+f01039b6	obj/kern/kernel.asm	/^f01039b6:	08 00 $/;"	l
+f01039b8	obj/kern/kernel.asm	/^f01039b8:	c6 05 2c 52 1e f0 00 	movb   $0x0,0xf01e522c$/;"	l
+f01039bf	obj/kern/kernel.asm	/^f01039bf:	c6 05 2d 52 1e f0 8e 	movb   $0x8e,0xf01e522d$/;"	l
+f01039c6	obj/kern/kernel.asm	/^f01039c6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f01039c9	obj/kern/kernel.asm	/^f01039c9:	66 a3 2e 52 1e f0    	mov    %ax,0xf01e522e$/;"	l
+f01039cf	obj/kern/kernel.asm	/^f01039cf:	b8 f2 3d 10 f0       	mov    $0xf0103df2,%eax$/;"	l
+f01039d4	obj/kern/kernel.asm	/^f01039d4:	66 a3 30 52 1e f0    	mov    %ax,0xf01e5230$/;"	l
+f01039da	obj/kern/kernel.asm	/^f01039da:	66 c7 05 32 52 1e f0 	movw   $0x8,0xf01e5232$/;"	l
+f01039e1	obj/kern/kernel.asm	/^f01039e1:	08 00 $/;"	l
+f01039e3	obj/kern/kernel.asm	/^f01039e3:	c6 05 34 52 1e f0 00 	movb   $0x0,0xf01e5234$/;"	l
+f01039ea	obj/kern/kernel.asm	/^f01039ea:	c6 05 35 52 1e f0 8e 	movb   $0x8e,0xf01e5235$/;"	l
+f01039f1	obj/kern/kernel.asm	/^f01039f1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f01039f4	obj/kern/kernel.asm	/^f01039f4:	66 a3 36 52 1e f0    	mov    %ax,0xf01e5236$/;"	l
+f01039fa	obj/kern/kernel.asm	/^f01039fa:	b8 f6 3d 10 f0       	mov    $0xf0103df6,%eax$/;"	l
+f01039ff	obj/kern/kernel.asm	/^f01039ff:	66 a3 40 52 1e f0    	mov    %ax,0xf01e5240$/;"	l
+f0103a05	obj/kern/kernel.asm	/^f0103a05:	66 c7 05 42 52 1e f0 	movw   $0x8,0xf01e5242$/;"	l
+f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	08 00 $/;"	l
+f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	c6 05 44 52 1e f0 00 	movb   $0x0,0xf01e5244$/;"	l
+f0103a15	obj/kern/kernel.asm	/^f0103a15:	c6 05 45 52 1e f0 8e 	movb   $0x8e,0xf01e5245$/;"	l
+f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
+f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	66 a3 46 52 1e f0    	mov    %ax,0xf01e5246$/;"	l
+f0103a25	obj/kern/kernel.asm	/^f0103a25:	e8 16 fd ff ff       	call   f0103740 <trap_init_percpu>$/;"	l
+f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	5d                   	pop    %ebp$/;"	l
+f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	c3                   	ret    $/;"	l
+f0103a2c	obj/kern/kernel.asm	/^f0103a2c <print_regs>:$/;"	l
+f0103a2c	obj/kern/kernel.asm	/^f0103a2c:	55                   	push   %ebp$/;"	l
+f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	53                   	push   %ebx$/;"	l
+f0103a30	obj/kern/kernel.asm	/^f0103a30:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0103a33	obj/kern/kernel.asm	/^f0103a33:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
+f0103a36	obj/kern/kernel.asm	/^f0103a36:	8b 03                	mov    (%ebx),%eax$/;"	l
+f0103a38	obj/kern/kernel.asm	/^f0103a38:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103a3c	obj/kern/kernel.asm	/^f0103a3c:	c7 04 24 5a 5e 10 f0 	movl   $0xf0105e5a,(%esp)$/;"	l
+f0103a43	obj/kern/kernel.asm	/^f0103a43:	e8 de fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103a48	obj/kern/kernel.asm	/^f0103a48:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
+f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103a4f	obj/kern/kernel.asm	/^f0103a4f:	c7 04 24 69 5e 10 f0 	movl   $0xf0105e69,(%esp)$/;"	l
+f0103a56	obj/kern/kernel.asm	/^f0103a56:	e8 cb fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
+f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103a62	obj/kern/kernel.asm	/^f0103a62:	c7 04 24 78 5e 10 f0 	movl   $0xf0105e78,(%esp)$/;"	l
+f0103a69	obj/kern/kernel.asm	/^f0103a69:	e8 b8 fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103a6e	obj/kern/kernel.asm	/^f0103a6e:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
+f0103a71	obj/kern/kernel.asm	/^f0103a71:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103a75	obj/kern/kernel.asm	/^f0103a75:	c7 04 24 87 5e 10 f0 	movl   $0xf0105e87,(%esp)$/;"	l
+f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	e8 a5 fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103a81	obj/kern/kernel.asm	/^f0103a81:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
+f0103a84	obj/kern/kernel.asm	/^f0103a84:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103a88	obj/kern/kernel.asm	/^f0103a88:	c7 04 24 96 5e 10 f0 	movl   $0xf0105e96,(%esp)$/;"	l
+f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	e8 92 fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103a94	obj/kern/kernel.asm	/^f0103a94:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
+f0103a97	obj/kern/kernel.asm	/^f0103a97:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103a9b	obj/kern/kernel.asm	/^f0103a9b:	c7 04 24 a5 5e 10 f0 	movl   $0xf0105ea5,(%esp)$/;"	l
+f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	e8 7f fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103aa7	obj/kern/kernel.asm	/^f0103aa7:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
+f0103aaa	obj/kern/kernel.asm	/^f0103aaa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103aae	obj/kern/kernel.asm	/^f0103aae:	c7 04 24 b4 5e 10 f0 	movl   $0xf0105eb4,(%esp)$/;"	l
+f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	e8 6c fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103aba	obj/kern/kernel.asm	/^f0103aba:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
+f0103abd	obj/kern/kernel.asm	/^f0103abd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	c7 04 24 c3 5e 10 f0 	movl   $0xf0105ec3,(%esp)$/;"	l
+f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	e8 59 fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103acd	obj/kern/kernel.asm	/^f0103acd:	83 c4 14             	add    $0x14,%esp$/;"	l
+f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	5b                   	pop    %ebx$/;"	l
+f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	5d                   	pop    %ebp$/;"	l
+f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	c3                   	ret    $/;"	l
+f0103ad3	obj/kern/kernel.asm	/^f0103ad3 <print_trapframe>:$/;"	l
+f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	55                   	push   %ebp$/;"	l
+f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	53                   	push   %ebx$/;"	l
+f0103ad7	obj/kern/kernel.asm	/^f0103ad7:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0103ada	obj/kern/kernel.asm	/^f0103ada:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
+f0103add	obj/kern/kernel.asm	/^f0103add:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0103ae1	obj/kern/kernel.asm	/^f0103ae1:	c7 04 24 f9 5f 10 f0 	movl   $0xf0105ff9,(%esp)$/;"	l
+f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	e8 39 fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103aed	obj/kern/kernel.asm	/^f0103aed:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f0103af0	obj/kern/kernel.asm	/^f0103af0:	e8 37 ff ff ff       	call   f0103a2c <print_regs>$/;"	l
+f0103af5	obj/kern/kernel.asm	/^f0103af5:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
+f0103af9	obj/kern/kernel.asm	/^f0103af9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103afd	obj/kern/kernel.asm	/^f0103afd:	c7 04 24 14 5f 10 f0 	movl   $0xf0105f14,(%esp)$/;"	l
+f0103b04	obj/kern/kernel.asm	/^f0103b04:	e8 1d fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103b09	obj/kern/kernel.asm	/^f0103b09:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
+f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103b11	obj/kern/kernel.asm	/^f0103b11:	c7 04 24 27 5f 10 f0 	movl   $0xf0105f27,(%esp)$/;"	l
+f0103b18	obj/kern/kernel.asm	/^f0103b18:	e8 09 fc ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
+f0103b20	obj/kern/kernel.asm	/^f0103b20:	83 f8 13             	cmp    $0x13,%eax$/;"	l
+f0103b23	obj/kern/kernel.asm	/^f0103b23:	77 09                	ja     f0103b2e <print_trapframe+0x5b>$/;"	l
+f0103b25	obj/kern/kernel.asm	/^f0103b25:	8b 14 85 c0 61 10 f0 	mov    -0xfef9e40(,%eax,4),%edx$/;"	l
+f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	eb 11                	jmp    f0103b3f <print_trapframe+0x6c>$/;"	l
+f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	83 f8 30             	cmp    $0x30,%eax$/;"	l
+f0103b31	obj/kern/kernel.asm	/^f0103b31:	75 07                	jne    f0103b3a <print_trapframe+0x67>$/;"	l
+f0103b33	obj/kern/kernel.asm	/^f0103b33:	ba d2 5e 10 f0       	mov    $0xf0105ed2,%edx$/;"	l
+f0103b38	obj/kern/kernel.asm	/^f0103b38:	eb 05                	jmp    f0103b3f <print_trapframe+0x6c>$/;"	l
+f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	ba de 5e 10 f0       	mov    $0xf0105ede,%edx$/;"	l
+f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
+f0103b43	obj/kern/kernel.asm	/^f0103b43:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103b47	obj/kern/kernel.asm	/^f0103b47:	c7 04 24 3a 5f 10 f0 	movl   $0xf0105f3a,(%esp)$/;"	l
+f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	e8 d3 fb ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103b53	obj/kern/kernel.asm	/^f0103b53:	3b 1d 28 5a 1e f0    	cmp    0xf01e5a28,%ebx$/;"	l
+f0103b59	obj/kern/kernel.asm	/^f0103b59:	75 19                	jne    f0103b74 <print_trapframe+0xa1>$/;"	l
+f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
+f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	75 13                	jne    f0103b74 <print_trapframe+0xa1>$/;"	l
+f0103b61	obj/kern/kernel.asm	/^f0103b61:	0f 20 d0             	mov    %cr2,%eax$/;"	l
+f0103b64	obj/kern/kernel.asm	/^f0103b64:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103b68	obj/kern/kernel.asm	/^f0103b68:	c7 04 24 4c 5f 10 f0 	movl   $0xf0105f4c,(%esp)$/;"	l
+f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	e8 b2 fb ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103b74	obj/kern/kernel.asm	/^f0103b74:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
+f0103b77	obj/kern/kernel.asm	/^f0103b77:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	c7 04 24 5b 5f 10 f0 	movl   $0xf0105f5b,(%esp)$/;"	l
+f0103b82	obj/kern/kernel.asm	/^f0103b82:	e8 9f fb ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103b87	obj/kern/kernel.asm	/^f0103b87:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
+f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	75 4d                	jne    f0103bda <print_trapframe+0x107>$/;"	l
+f0103b8d	obj/kern/kernel.asm	/^f0103b8d:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
+f0103b90	obj/kern/kernel.asm	/^f0103b90:	a8 01                	test   $0x1,%al$/;"	l
+f0103b92	obj/kern/kernel.asm	/^f0103b92:	74 07                	je     f0103b9b <print_trapframe+0xc8>$/;"	l
+f0103b94	obj/kern/kernel.asm	/^f0103b94:	b9 ed 5e 10 f0       	mov    $0xf0105eed,%ecx$/;"	l
+f0103b99	obj/kern/kernel.asm	/^f0103b99:	eb 05                	jmp    f0103ba0 <print_trapframe+0xcd>$/;"	l
+f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	b9 f8 5e 10 f0       	mov    $0xf0105ef8,%ecx$/;"	l
+f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	a8 02                	test   $0x2,%al$/;"	l
+f0103ba2	obj/kern/kernel.asm	/^f0103ba2:	74 07                	je     f0103bab <print_trapframe+0xd8>$/;"	l
+f0103ba4	obj/kern/kernel.asm	/^f0103ba4:	ba 04 5f 10 f0       	mov    $0xf0105f04,%edx$/;"	l
+f0103ba9	obj/kern/kernel.asm	/^f0103ba9:	eb 05                	jmp    f0103bb0 <print_trapframe+0xdd>$/;"	l
+f0103bab	obj/kern/kernel.asm	/^f0103bab:	ba 0a 5f 10 f0       	mov    $0xf0105f0a,%edx$/;"	l
+f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	a8 04                	test   $0x4,%al$/;"	l
+f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	74 07                	je     f0103bbb <print_trapframe+0xe8>$/;"	l
+f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	b8 0f 5f 10 f0       	mov    $0xf0105f0f,%eax$/;"	l
+f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	eb 05                	jmp    f0103bc0 <print_trapframe+0xed>$/;"	l
+f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	b8 24 60 10 f0       	mov    $0xf0106024,%eax$/;"	l
+f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
+f0103bc4	obj/kern/kernel.asm	/^f0103bc4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
+f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	c7 04 24 69 5f 10 f0 	movl   $0xf0105f69,(%esp)$/;"	l
+f0103bd3	obj/kern/kernel.asm	/^f0103bd3:	e8 4e fb ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	eb 0c                	jmp    f0103be6 <print_trapframe+0x113>$/;"	l
+f0103bda	obj/kern/kernel.asm	/^f0103bda:	c7 04 24 c7 5c 10 f0 	movl   $0xf0105cc7,(%esp)$/;"	l
+f0103be1	obj/kern/kernel.asm	/^f0103be1:	e8 40 fb ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103be6	obj/kern/kernel.asm	/^f0103be6:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
+f0103be9	obj/kern/kernel.asm	/^f0103be9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103bed	obj/kern/kernel.asm	/^f0103bed:	c7 04 24 78 5f 10 f0 	movl   $0xf0105f78,(%esp)$/;"	l
+f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	e8 2d fb ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
+f0103bfd	obj/kern/kernel.asm	/^f0103bfd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103c01	obj/kern/kernel.asm	/^f0103c01:	c7 04 24 87 5f 10 f0 	movl   $0xf0105f87,(%esp)$/;"	l
+f0103c08	obj/kern/kernel.asm	/^f0103c08:	e8 19 fb ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
+f0103c10	obj/kern/kernel.asm	/^f0103c10:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103c14	obj/kern/kernel.asm	/^f0103c14:	c7 04 24 9a 5f 10 f0 	movl   $0xf0105f9a,(%esp)$/;"	l
+f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	e8 06 fb ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103c20	obj/kern/kernel.asm	/^f0103c20:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
+f0103c24	obj/kern/kernel.asm	/^f0103c24:	74 27                	je     f0103c4d <print_trapframe+0x17a>$/;"	l
+f0103c26	obj/kern/kernel.asm	/^f0103c26:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
+f0103c29	obj/kern/kernel.asm	/^f0103c29:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	c7 04 24 a9 5f 10 f0 	movl   $0xf0105fa9,(%esp)$/;"	l
+f0103c34	obj/kern/kernel.asm	/^f0103c34:	e8 ed fa ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103c39	obj/kern/kernel.asm	/^f0103c39:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
+f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103c41	obj/kern/kernel.asm	/^f0103c41:	c7 04 24 b8 5f 10 f0 	movl   $0xf0105fb8,(%esp)$/;"	l
+f0103c48	obj/kern/kernel.asm	/^f0103c48:	e8 d9 fa ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103c4d	obj/kern/kernel.asm	/^f0103c4d:	83 c4 14             	add    $0x14,%esp$/;"	l
+f0103c50	obj/kern/kernel.asm	/^f0103c50:	5b                   	pop    %ebx$/;"	l
+f0103c51	obj/kern/kernel.asm	/^f0103c51:	5d                   	pop    %ebp$/;"	l
+f0103c52	obj/kern/kernel.asm	/^f0103c52:	c3                   	ret    $/;"	l
+f0103c53	obj/kern/kernel.asm	/^f0103c53 <trap>:$/;"	l
+f0103c53	obj/kern/kernel.asm	/^f0103c53:	55                   	push   %ebp$/;"	l
+f0103c54	obj/kern/kernel.asm	/^f0103c54:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103c56	obj/kern/kernel.asm	/^f0103c56:	57                   	push   %edi$/;"	l
+f0103c57	obj/kern/kernel.asm	/^f0103c57:	56                   	push   %esi$/;"	l
+f0103c58	obj/kern/kernel.asm	/^f0103c58:	83 ec 10             	sub    $0x10,%esp$/;"	l
+f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
+f0103c5e	obj/kern/kernel.asm	/^f0103c5e:	fc                   	cld    $/;"	l
+f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	9c                   	pushf  $/;"	l
+f0103c60	obj/kern/kernel.asm	/^f0103c60:	58                   	pop    %eax$/;"	l
+f0103c61	obj/kern/kernel.asm	/^f0103c61:	f6 c4 02             	test   $0x2,%ah$/;"	l
+f0103c64	obj/kern/kernel.asm	/^f0103c64:	74 24                	je     f0103c8a <trap+0x37>$/;"	l
+f0103c66	obj/kern/kernel.asm	/^f0103c66:	c7 44 24 0c cb 5f 10 	movl   $0xf0105fcb,0xc(%esp)$/;"	l
+f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	f0 $/;"	l
+f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0103c75	obj/kern/kernel.asm	/^f0103c75:	f0 $/;"	l
+f0103c76	obj/kern/kernel.asm	/^f0103c76:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
+f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	00 $/;"	l
+f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	c7 04 24 e4 5f 10 f0 	movl   $0xf0105fe4,(%esp)$/;"	l
+f0103c85	obj/kern/kernel.asm	/^f0103c85:	e8 27 c4 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	c7 04 24 f0 5f 10 f0 	movl   $0xf0105ff0,(%esp)$/;"	l
+f0103c95	obj/kern/kernel.asm	/^f0103c95:	e8 8c fa ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103c9a	obj/kern/kernel.asm	/^f0103c9a:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
+f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	83 e0 03             	and    $0x3,%eax$/;"	l
+f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	83 f8 03             	cmp    $0x3,%eax$/;"	l
+f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	75 3c                	jne    f0103ce2 <trap+0x8f>$/;"	l
+f0103ca6	obj/kern/kernel.asm	/^f0103ca6:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0103cab	obj/kern/kernel.asm	/^f0103cab:	85 c0                	test   %eax,%eax$/;"	l
+f0103cad	obj/kern/kernel.asm	/^f0103cad:	75 24                	jne    f0103cd3 <trap+0x80>$/;"	l
+f0103caf	obj/kern/kernel.asm	/^f0103caf:	c7 44 24 0c 0b 60 10 	movl   $0xf010600b,0xc(%esp)$/;"	l
+f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	f0 $/;"	l
+f0103cb7	obj/kern/kernel.asm	/^f0103cb7:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	f0 $/;"	l
+f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	c7 44 24 04 cc 00 00 	movl   $0xcc,0x4(%esp)$/;"	l
+f0103cc6	obj/kern/kernel.asm	/^f0103cc6:	00 $/;"	l
+f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	c7 04 24 e4 5f 10 f0 	movl   $0xf0105fe4,(%esp)$/;"	l
+f0103cce	obj/kern/kernel.asm	/^f0103cce:	e8 de c3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
+f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	89 c7                	mov    %eax,%edi$/;"	l
+f0103cda	obj/kern/kernel.asm	/^f0103cda:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
+f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	8b 35 a4 51 1e f0    	mov    0xf01e51a4,%esi$/;"	l
+f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	89 35 28 5a 1e f0    	mov    %esi,0xf01e5a28$/;"	l
+f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	e8 e3 fd ff ff       	call   f0103ad3 <print_trapframe>$/;"	l
+f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
+f0103cf5	obj/kern/kernel.asm	/^f0103cf5:	75 1c                	jne    f0103d13 <trap+0xc0>$/;"	l
+f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	c7 44 24 08 12 60 10 	movl   $0xf0106012,0x8(%esp)$/;"	l
+f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	f0 $/;"	l
+f0103cff	obj/kern/kernel.asm	/^f0103cff:	c7 44 24 04 b5 00 00 	movl   $0xb5,0x4(%esp)$/;"	l
+f0103d06	obj/kern/kernel.asm	/^f0103d06:	00 $/;"	l
+f0103d07	obj/kern/kernel.asm	/^f0103d07:	c7 04 24 e4 5f 10 f0 	movl   $0xf0105fe4,(%esp)$/;"	l
+f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	e8 9e c3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103d13	obj/kern/kernel.asm	/^f0103d13:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0103d18	obj/kern/kernel.asm	/^f0103d18:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0103d1b	obj/kern/kernel.asm	/^f0103d1b:	e8 a6 f8 ff ff       	call   f01035c6 <env_destroy>$/;"	l
+f0103d20	obj/kern/kernel.asm	/^f0103d20:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0103d25	obj/kern/kernel.asm	/^f0103d25:	85 c0                	test   %eax,%eax$/;"	l
+f0103d27	obj/kern/kernel.asm	/^f0103d27:	74 06                	je     f0103d2f <trap+0xdc>$/;"	l
+f0103d29	obj/kern/kernel.asm	/^f0103d29:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
+f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	74 24                	je     f0103d53 <trap+0x100>$/;"	l
+f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	c7 44 24 0c 70 61 10 	movl   $0xf0106170,0xc(%esp)$/;"	l
+f0103d36	obj/kern/kernel.asm	/^f0103d36:	f0 $/;"	l
+f0103d37	obj/kern/kernel.asm	/^f0103d37:	c7 44 24 08 27 5a 10 	movl   $0xf0105a27,0x8(%esp)$/;"	l
+f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	f0 $/;"	l
+f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	c7 44 24 04 de 00 00 	movl   $0xde,0x4(%esp)$/;"	l
+f0103d46	obj/kern/kernel.asm	/^f0103d46:	00 $/;"	l
+f0103d47	obj/kern/kernel.asm	/^f0103d47:	c7 04 24 e4 5f 10 f0 	movl   $0xf0105fe4,(%esp)$/;"	l
+f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	e8 5e c3 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103d53	obj/kern/kernel.asm	/^f0103d53:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0103d56	obj/kern/kernel.asm	/^f0103d56:	e8 c2 f8 ff ff       	call   f010361d <env_run>$/;"	l
+f0103d5b	obj/kern/kernel.asm	/^f0103d5b <page_fault_handler>:$/;"	l
+f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	55                   	push   %ebp$/;"	l
+f0103d5c	obj/kern/kernel.asm	/^f0103d5c:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	53                   	push   %ebx$/;"	l
+f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0103d62	obj/kern/kernel.asm	/^f0103d62:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
+f0103d65	obj/kern/kernel.asm	/^f0103d65:	0f 20 d0             	mov    %cr2,%eax$/;"	l
+f0103d68	obj/kern/kernel.asm	/^f0103d68:	8b 53 30             	mov    0x30(%ebx),%edx$/;"	l
+f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
+f0103d6f	obj/kern/kernel.asm	/^f0103d6f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f0103d73	obj/kern/kernel.asm	/^f0103d73:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0103d78	obj/kern/kernel.asm	/^f0103d78:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
+f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	c7 04 24 9c 61 10 f0 	movl   $0xf010619c,(%esp)$/;"	l
+f0103d86	obj/kern/kernel.asm	/^f0103d86:	e8 9b f9 ff ff       	call   f0103726 <cprintf>$/;"	l
+f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	e8 40 fd ff ff       	call   f0103ad3 <print_trapframe>$/;"	l
+f0103d93	obj/kern/kernel.asm	/^f0103d93:	a1 a4 51 1e f0       	mov    0xf01e51a4,%eax$/;"	l
+f0103d98	obj/kern/kernel.asm	/^f0103d98:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	e8 26 f8 ff ff       	call   f01035c6 <env_destroy>$/;"	l
+f0103da0	obj/kern/kernel.asm	/^f0103da0:	83 c4 14             	add    $0x14,%esp$/;"	l
+f0103da3	obj/kern/kernel.asm	/^f0103da3:	5b                   	pop    %ebx$/;"	l
+f0103da4	obj/kern/kernel.asm	/^f0103da4:	5d                   	pop    %ebp$/;"	l
+f0103da5	obj/kern/kernel.asm	/^f0103da5:	c3                   	ret    $/;"	l
+f0103da8	obj/kern/kernel.asm	/^f0103da8 <th0>:$/;"	l
+f0103da8	obj/kern/kernel.asm	/^f0103da8:	6a 00                	push   $0x0$/;"	l
+f0103daa	obj/kern/kernel.asm	/^f0103daa:	6a 00                	push   $0x0$/;"	l
+f0103dac	obj/kern/kernel.asm	/^f0103dac:	eb 4e                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dae	obj/kern/kernel.asm	/^f0103dae <th1>:$/;"	l
+f0103dae	obj/kern/kernel.asm	/^f0103dae:	6a 00                	push   $0x0$/;"	l
+f0103db0	obj/kern/kernel.asm	/^f0103db0:	6a 01                	push   $0x1$/;"	l
+f0103db2	obj/kern/kernel.asm	/^f0103db2:	eb 48                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103db4	obj/kern/kernel.asm	/^f0103db4 <th2>:$/;"	l
+f0103db4	obj/kern/kernel.asm	/^f0103db4:	6a 00                	push   $0x0$/;"	l
+f0103db6	obj/kern/kernel.asm	/^f0103db6:	6a 02                	push   $0x2$/;"	l
+f0103db8	obj/kern/kernel.asm	/^f0103db8:	eb 42                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dba	obj/kern/kernel.asm	/^f0103dba <th3>:$/;"	l
+f0103dba	obj/kern/kernel.asm	/^f0103dba:	6a 00                	push   $0x0$/;"	l
+f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	6a 03                	push   $0x3$/;"	l
+f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	eb 3c                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dc0	obj/kern/kernel.asm	/^f0103dc0 <th4>:$/;"	l
+f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	6a 00                	push   $0x0$/;"	l
+f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	6a 04                	push   $0x4$/;"	l
+f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	eb 36                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dc6	obj/kern/kernel.asm	/^f0103dc6 <th5>:$/;"	l
+f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	6a 00                	push   $0x0$/;"	l
+f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	6a 05                	push   $0x5$/;"	l
+f0103dca	obj/kern/kernel.asm	/^f0103dca:	eb 30                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dcc	obj/kern/kernel.asm	/^f0103dcc <th6>:$/;"	l
+f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	6a 00                	push   $0x0$/;"	l
+f0103dce	obj/kern/kernel.asm	/^f0103dce:	6a 06                	push   $0x6$/;"	l
+f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	eb 2a                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dd2	obj/kern/kernel.asm	/^f0103dd2 <th7>:$/;"	l
+f0103dd2	obj/kern/kernel.asm	/^f0103dd2:	6a 00                	push   $0x0$/;"	l
+f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	6a 07                	push   $0x7$/;"	l
+f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	eb 24                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dd8	obj/kern/kernel.asm	/^f0103dd8 <th8>:$/;"	l
+f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	6a 08                	push   $0x8$/;"	l
+f0103dda	obj/kern/kernel.asm	/^f0103dda:	eb 20                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103ddc	obj/kern/kernel.asm	/^f0103ddc <th9>:$/;"	l
+f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	6a 00                	push   $0x0$/;"	l
+f0103dde	obj/kern/kernel.asm	/^f0103dde:	6a 09                	push   $0x9$/;"	l
+f0103de0	obj/kern/kernel.asm	/^f0103de0:	eb 1a                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103de2	obj/kern/kernel.asm	/^f0103de2 <th10>:$/;"	l
+f0103de2	obj/kern/kernel.asm	/^f0103de2:	6a 0a                	push   $0xa$/;"	l
+f0103de4	obj/kern/kernel.asm	/^f0103de4:	eb 16                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103de6	obj/kern/kernel.asm	/^f0103de6 <th11>:$/;"	l
+f0103de6	obj/kern/kernel.asm	/^f0103de6:	6a 0b                	push   $0xb$/;"	l
+f0103de8	obj/kern/kernel.asm	/^f0103de8:	eb 12                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dea	obj/kern/kernel.asm	/^f0103dea <th12>:$/;"	l
+f0103dea	obj/kern/kernel.asm	/^f0103dea:	6a 0c                	push   $0xc$/;"	l
+f0103dec	obj/kern/kernel.asm	/^f0103dec:	eb 0e                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dee	obj/kern/kernel.asm	/^f0103dee <th13>:$/;"	l
+f0103dee	obj/kern/kernel.asm	/^f0103dee:	6a 0d                	push   $0xd$/;"	l
+f0103df0	obj/kern/kernel.asm	/^f0103df0:	eb 0a                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103df2	obj/kern/kernel.asm	/^f0103df2 <th14>:$/;"	l
+f0103df2	obj/kern/kernel.asm	/^f0103df2:	6a 0e                	push   $0xe$/;"	l
+f0103df4	obj/kern/kernel.asm	/^f0103df4:	eb 06                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103df6	obj/kern/kernel.asm	/^f0103df6 <th16>:$/;"	l
+f0103df6	obj/kern/kernel.asm	/^f0103df6:	6a 00                	push   $0x0$/;"	l
+f0103df8	obj/kern/kernel.asm	/^f0103df8:	6a 10                	push   $0x10$/;"	l
+f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	eb 00                	jmp    f0103dfc <_alltraps>$/;"	l
+f0103dfc	obj/kern/kernel.asm	/^f0103dfc <_alltraps>:$/;"	l
+f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	1e                   	push   %ds$/;"	l
+f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	06                   	push   %es$/;"	l
+f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	60                   	pusha  $/;"	l
+f0103dff	obj/kern/kernel.asm	/^f0103dff:	6a 10                	push   $0x10$/;"	l
+f0103e01	obj/kern/kernel.asm	/^f0103e01:	1f                   	pop    %ds$/;"	l
+f0103e02	obj/kern/kernel.asm	/^f0103e02:	6a 10                	push   $0x10$/;"	l
+f0103e04	obj/kern/kernel.asm	/^f0103e04:	07                   	pop    %es$/;"	l
+f0103e05	obj/kern/kernel.asm	/^f0103e05:	54                   	push   %esp$/;"	l
+f0103e06	obj/kern/kernel.asm	/^f0103e06:	e8 48 fe ff ff       	call   f0103c53 <trap>$/;"	l
+f0103e0c	obj/kern/kernel.asm	/^f0103e0c <syscall>:$/;"	l
+f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	55                   	push   %ebp$/;"	l
+f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f0103e12	obj/kern/kernel.asm	/^f0103e12:	c7 44 24 08 10 62 10 	movl   $0xf0106210,0x8(%esp)$/;"	l
+f0103e19	obj/kern/kernel.asm	/^f0103e19:	f0 $/;"	l
+f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
+f0103e21	obj/kern/kernel.asm	/^f0103e21:	00 $/;"	l
+f0103e22	obj/kern/kernel.asm	/^f0103e22:	c7 04 24 28 62 10 f0 	movl   $0xf0106228,(%esp)$/;"	l
+f0103e29	obj/kern/kernel.asm	/^f0103e29:	e8 83 c2 ff ff       	call   f01000b1 <_panic>$/;"	l
+f0103e30	obj/kern/kernel.asm	/^f0103e30 <stab_binsearch>:$/;"	l
+f0103e30	obj/kern/kernel.asm	/^f0103e30:	55                   	push   %ebp$/;"	l
+f0103e31	obj/kern/kernel.asm	/^f0103e31:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103e33	obj/kern/kernel.asm	/^f0103e33:	57                   	push   %edi$/;"	l
+f0103e34	obj/kern/kernel.asm	/^f0103e34:	56                   	push   %esi$/;"	l
+f0103e35	obj/kern/kernel.asm	/^f0103e35:	53                   	push   %ebx$/;"	l
+f0103e36	obj/kern/kernel.asm	/^f0103e36:	83 ec 14             	sub    $0x14,%esp$/;"	l
+f0103e39	obj/kern/kernel.asm	/^f0103e39:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
+f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
+f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
+f0103e42	obj/kern/kernel.asm	/^f0103e42:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
+f0103e45	obj/kern/kernel.asm	/^f0103e45:	8b 1a                	mov    (%edx),%ebx$/;"	l
+f0103e47	obj/kern/kernel.asm	/^f0103e47:	8b 01                	mov    (%ecx),%eax$/;"	l
+f0103e49	obj/kern/kernel.asm	/^f0103e49:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
+f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
+f0103e53	obj/kern/kernel.asm	/^f0103e53:	e9 83 00 00 00       	jmp    f0103edb <stab_binsearch+0xab>$/;"	l
+f0103e58	obj/kern/kernel.asm	/^f0103e58:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
+f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	01 d8                	add    %ebx,%eax$/;"	l
+f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	89 c7                	mov    %eax,%edi$/;"	l
+f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
+f0103e62	obj/kern/kernel.asm	/^f0103e62:	01 c7                	add    %eax,%edi$/;"	l
+f0103e64	obj/kern/kernel.asm	/^f0103e64:	d1 ff                	sar    %edi$/;"	d
+f0103e66	obj/kern/kernel.asm	/^f0103e66:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
+f0103e69	obj/kern/kernel.asm	/^f0103e69:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
+f0103e6c	obj/kern/kernel.asm	/^f0103e6c:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edx$/;"	l
+f0103e70	obj/kern/kernel.asm	/^f0103e70:	89 f8                	mov    %edi,%eax$/;"	l
+f0103e72	obj/kern/kernel.asm	/^f0103e72:	eb 01                	jmp    f0103e75 <stab_binsearch+0x45>$/;"	l
+f0103e74	obj/kern/kernel.asm	/^f0103e74:	48                   	dec    %eax$/;"	l
+f0103e75	obj/kern/kernel.asm	/^f0103e75:	39 c3                	cmp    %eax,%ebx$/;"	l
+f0103e77	obj/kern/kernel.asm	/^f0103e77:	7f 1e                	jg     f0103e97 <stab_binsearch+0x67>$/;"	l
+f0103e79	obj/kern/kernel.asm	/^f0103e79:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
+f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
+f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	39 f1                	cmp    %esi,%ecx$/;"	l
+f0103e81	obj/kern/kernel.asm	/^f0103e81:	75 f1                	jne    f0103e74 <stab_binsearch+0x44>$/;"	l
+f0103e83	obj/kern/kernel.asm	/^f0103e83:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
+f0103e86	obj/kern/kernel.asm	/^f0103e86:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
+f0103e89	obj/kern/kernel.asm	/^f0103e89:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
+f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
+f0103e90	obj/kern/kernel.asm	/^f0103e90:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
+f0103e93	obj/kern/kernel.asm	/^f0103e93:	76 18                	jbe    f0103ead <stab_binsearch+0x7d>$/;"	l
+f0103e95	obj/kern/kernel.asm	/^f0103e95:	eb 05                	jmp    f0103e9c <stab_binsearch+0x6c>$/;"	l
+f0103e97	obj/kern/kernel.asm	/^f0103e97:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
+f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	eb 3f                	jmp    f0103edb <stab_binsearch+0xab>$/;"	l
+f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
+f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	89 02                	mov    %eax,(%edx)$/;"	l
+f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
+f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
+f0103eab	obj/kern/kernel.asm	/^f0103eab:	eb 2e                	jmp    f0103edb <stab_binsearch+0xab>$/;"	l
+f0103ead	obj/kern/kernel.asm	/^f0103ead:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
+f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	73 15                	jae    f0103ec7 <stab_binsearch+0x97>$/;"	l
+f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
+f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	49                   	dec    %ecx$/;"	l
+f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
+f0103eb9	obj/kern/kernel.asm	/^f0103eb9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	89 08                	mov    %ecx,(%eax)$/;"	l
+f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
+f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	eb 14                	jmp    f0103edb <stab_binsearch+0xab>$/;"	l
+f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
+f0103eca	obj/kern/kernel.asm	/^f0103eca:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
+f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	89 0a                	mov    %ecx,(%edx)$/;"	l
+f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
+f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	89 c3                	mov    %eax,%ebx$/;"	l
+f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
+f0103edb	obj/kern/kernel.asm	/^f0103edb:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
+f0103ede	obj/kern/kernel.asm	/^f0103ede:	0f 8e 74 ff ff ff    	jle    f0103e58 <stab_binsearch+0x28>$/;"	l
+f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
+f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	75 0d                	jne    f0103ef7 <stab_binsearch+0xc7>$/;"	l
+f0103eea	obj/kern/kernel.asm	/^f0103eea:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
+f0103eed	obj/kern/kernel.asm	/^f0103eed:	8b 02                	mov    (%edx),%eax$/;"	l
+f0103eef	obj/kern/kernel.asm	/^f0103eef:	48                   	dec    %eax$/;"	l
+f0103ef0	obj/kern/kernel.asm	/^f0103ef0:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
+f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	89 01                	mov    %eax,(%ecx)$/;"	l
+f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	eb 2a                	jmp    f0103f21 <stab_binsearch+0xf1>$/;"	l
+f0103ef7	obj/kern/kernel.asm	/^f0103ef7:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
+f0103efa	obj/kern/kernel.asm	/^f0103efa:	8b 01                	mov    (%ecx),%eax$/;"	l
+f0103efc	obj/kern/kernel.asm	/^f0103efc:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
+f0103eff	obj/kern/kernel.asm	/^f0103eff:	8b 0a                	mov    (%edx),%ecx$/;"	l
+f0103f01	obj/kern/kernel.asm	/^f0103f01:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
+f0103f04	obj/kern/kernel.asm	/^f0103f04:	8b 5d ec             	mov    -0x14(%ebp),%ebx$/;"	l
+f0103f07	obj/kern/kernel.asm	/^f0103f07:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
+f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	eb 01                	jmp    f0103f0e <stab_binsearch+0xde>$/;"	l
+f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	48                   	dec    %eax$/;"	l
+f0103f0e	obj/kern/kernel.asm	/^f0103f0e:	39 c8                	cmp    %ecx,%eax$/;"	l
+f0103f10	obj/kern/kernel.asm	/^f0103f10:	7e 0a                	jle    f0103f1c <stab_binsearch+0xec>$/;"	l
+f0103f12	obj/kern/kernel.asm	/^f0103f12:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
+f0103f15	obj/kern/kernel.asm	/^f0103f15:	83 ea 0c             	sub    $0xc,%edx$/;"	l
+f0103f18	obj/kern/kernel.asm	/^f0103f18:	39 f3                	cmp    %esi,%ebx$/;"	l
+f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	75 f1                	jne    f0103f0d <stab_binsearch+0xdd>$/;"	l
+f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
+f0103f1f	obj/kern/kernel.asm	/^f0103f1f:	89 02                	mov    %eax,(%edx)$/;"	l
+f0103f21	obj/kern/kernel.asm	/^f0103f21:	83 c4 14             	add    $0x14,%esp$/;"	l
+f0103f24	obj/kern/kernel.asm	/^f0103f24:	5b                   	pop    %ebx$/;"	l
+f0103f25	obj/kern/kernel.asm	/^f0103f25:	5e                   	pop    %esi$/;"	l
+f0103f26	obj/kern/kernel.asm	/^f0103f26:	5f                   	pop    %edi$/;"	l
+f0103f27	obj/kern/kernel.asm	/^f0103f27:	5d                   	pop    %ebp$/;"	l
+f0103f28	obj/kern/kernel.asm	/^f0103f28:	c3                   	ret    $/;"	l
+f0103f29	obj/kern/kernel.asm	/^f0103f29 <debuginfo_eip>:$/;"	l
+f0103f29	obj/kern/kernel.asm	/^f0103f29:	55                   	push   %ebp$/;"	l
+f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	89 e5                	mov    %esp,%ebp$/;"	l
+f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	57                   	push   %edi$/;"	l
+f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	56                   	push   %esi$/;"	l
+f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	53                   	push   %ebx$/;"	l
+f0103f2f	obj/kern/kernel.asm	/^f0103f2f:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
+f0103f32	obj/kern/kernel.asm	/^f0103f32:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
+f0103f35	obj/kern/kernel.asm	/^f0103f35:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
+f0103f38	obj/kern/kernel.asm	/^f0103f38:	c7 03 37 62 10 f0    	movl   $0xf0106237,(%ebx)$/;"	l
+f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
+f0103f45	obj/kern/kernel.asm	/^f0103f45:	c7 43 08 37 62 10 f0 	movl   $0xf0106237,0x8(%ebx)$/;"	l
+f0103f4c	obj/kern/kernel.asm	/^f0103f4c:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
+f0103f53	obj/kern/kernel.asm	/^f0103f53:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
+f0103f56	obj/kern/kernel.asm	/^f0103f56:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
+f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
+f0103f63	obj/kern/kernel.asm	/^f0103f63:	77 22                	ja     f0103f87 <debuginfo_eip+0x5e>$/;"	l
+f0103f65	obj/kern/kernel.asm	/^f0103f65:	8b 3d 00 00 20 00    	mov    0x200000,%edi$/;"	l
+f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
+f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
+f0103f73	obj/kern/kernel.asm	/^f0103f73:	8b 3d 08 00 20 00    	mov    0x200008,%edi$/;"	l
+f0103f79	obj/kern/kernel.asm	/^f0103f79:	89 7d bc             	mov    %edi,-0x44(%ebp)$/;"	l
+f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	8b 3d 0c 00 20 00    	mov    0x20000c,%edi$/;"	l
+f0103f82	obj/kern/kernel.asm	/^f0103f82:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
+f0103f85	obj/kern/kernel.asm	/^f0103f85:	eb 1a                	jmp    f0103fa1 <debuginfo_eip+0x78>$/;"	l
+f0103f87	obj/kern/kernel.asm	/^f0103f87:	c7 45 c0 5c 8b 11 f0 	movl   $0xf0118b5c,-0x40(%ebp)$/;"	l
+f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	c7 45 bc 2d ed 10 f0 	movl   $0xf010ed2d,-0x44(%ebp)$/;"	l
+f0103f95	obj/kern/kernel.asm	/^f0103f95:	b8 2c ed 10 f0       	mov    $0xf010ed2c,%eax$/;"	l
+f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	c7 45 c4 70 64 10 f0 	movl   $0xf0106470,-0x3c(%ebp)$/;"	l
+f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
+f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	39 7d bc             	cmp    %edi,-0x44(%ebp)$/;"	l
+f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	0f 83 8b 01 00 00    	jae    f0104138 <debuginfo_eip+0x20f>$/;"	l
+f0103fad	obj/kern/kernel.asm	/^f0103fad:	80 7f ff 00          	cmpb   $0x0,-0x1(%edi)$/;"	l
+f0103fb1	obj/kern/kernel.asm	/^f0103fb1:	0f 85 88 01 00 00    	jne    f010413f <debuginfo_eip+0x216>$/;"	l
+f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
+f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	2b 45 c4             	sub    -0x3c(%ebp),%eax$/;"	l
+f0103fc1	obj/kern/kernel.asm	/^f0103fc1:	c1 f8 02             	sar    $0x2,%eax$/;"	l
+f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
+f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
+f0103fca	obj/kern/kernel.asm	/^f0103fca:	8d 14 90             	lea    (%eax,%edx,4),%edx$/;"	l
+f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	89 d1                	mov    %edx,%ecx$/;"	l
+f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
+f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	01 ca                	add    %ecx,%edx$/;"	l
+f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	89 d1                	mov    %edx,%ecx$/;"	l
+f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
+f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	01 ca                	add    %ecx,%edx$/;"	l
+f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	8d 44 50 ff          	lea    -0x1(%eax,%edx,2),%eax$/;"	l
+f0103fdf	obj/kern/kernel.asm	/^f0103fdf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
+f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
+f0103fed	obj/kern/kernel.asm	/^f0103fed:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
+f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
+f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
+f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	e8 35 fe ff ff       	call   f0103e30 <stab_binsearch>$/;"	l
+f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
+f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	85 c0                	test   %eax,%eax$/;"	l
+f0104000	obj/kern/kernel.asm	/^f0104000:	0f 84 40 01 00 00    	je     f0104146 <debuginfo_eip+0x21d>$/;"	l
+f0104006	obj/kern/kernel.asm	/^f0104006:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
+f0104009	obj/kern/kernel.asm	/^f0104009:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f010400c	obj/kern/kernel.asm	/^f010400c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
+f010400f	obj/kern/kernel.asm	/^f010400f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0104013	obj/kern/kernel.asm	/^f0104013:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
+f010401a	obj/kern/kernel.asm	/^f010401a:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
+f010401d	obj/kern/kernel.asm	/^f010401d:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
+f0104020	obj/kern/kernel.asm	/^f0104020:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
+f0104023	obj/kern/kernel.asm	/^f0104023:	e8 08 fe ff ff       	call   f0103e30 <stab_binsearch>$/;"	l
+f0104028	obj/kern/kernel.asm	/^f0104028:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
+f010402b	obj/kern/kernel.asm	/^f010402b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
+f010402e	obj/kern/kernel.asm	/^f010402e:	39 d0                	cmp    %edx,%eax$/;"	l
+f0104030	obj/kern/kernel.asm	/^f0104030:	7f 32                	jg     f0104064 <debuginfo_eip+0x13b>$/;"	l
+f0104032	obj/kern/kernel.asm	/^f0104032:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
+f0104035	obj/kern/kernel.asm	/^f0104035:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
+f0104038	obj/kern/kernel.asm	/^f0104038:	8d 0c 8f             	lea    (%edi,%ecx,4),%ecx$/;"	l
+f010403b	obj/kern/kernel.asm	/^f010403b:	8b 39                	mov    (%ecx),%edi$/;"	l
+f010403d	obj/kern/kernel.asm	/^f010403d:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
+f0104040	obj/kern/kernel.asm	/^f0104040:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
+f0104043	obj/kern/kernel.asm	/^f0104043:	2b 7d bc             	sub    -0x44(%ebp),%edi$/;"	l
+f0104046	obj/kern/kernel.asm	/^f0104046:	39 7d b4             	cmp    %edi,-0x4c(%ebp)$/;"	l
+f0104049	obj/kern/kernel.asm	/^f0104049:	73 09                	jae    f0104054 <debuginfo_eip+0x12b>$/;"	l
+f010404b	obj/kern/kernel.asm	/^f010404b:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
+f010404e	obj/kern/kernel.asm	/^f010404e:	03 7d bc             	add    -0x44(%ebp),%edi$/;"	l
+f0104051	obj/kern/kernel.asm	/^f0104051:	89 7b 08             	mov    %edi,0x8(%ebx)$/;"	l
+f0104054	obj/kern/kernel.asm	/^f0104054:	8b 49 08             	mov    0x8(%ecx),%ecx$/;"	l
+f0104057	obj/kern/kernel.asm	/^f0104057:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
+f010405a	obj/kern/kernel.asm	/^f010405a:	29 ce                	sub    %ecx,%esi$/;"	l
+f010405c	obj/kern/kernel.asm	/^f010405c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f010405f	obj/kern/kernel.asm	/^f010405f:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
+f0104062	obj/kern/kernel.asm	/^f0104062:	eb 0f                	jmp    f0104073 <debuginfo_eip+0x14a>$/;"	l
+f0104064	obj/kern/kernel.asm	/^f0104064:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
+f0104067	obj/kern/kernel.asm	/^f0104067:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
+f010406a	obj/kern/kernel.asm	/^f010406a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f010406d	obj/kern/kernel.asm	/^f010406d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f0104070	obj/kern/kernel.asm	/^f0104070:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
+f0104073	obj/kern/kernel.asm	/^f0104073:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
+f010407a	obj/kern/kernel.asm	/^f010407a:	00 $/;"	l
+f010407b	obj/kern/kernel.asm	/^f010407b:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
+f010407e	obj/kern/kernel.asm	/^f010407e:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0104081	obj/kern/kernel.asm	/^f0104081:	e8 74 08 00 00       	call   f01048fa <strfind>$/;"	l
+f0104086	obj/kern/kernel.asm	/^f0104086:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
+f0104089	obj/kern/kernel.asm	/^f0104089:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
+f010408c	obj/kern/kernel.asm	/^f010408c:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0104090	obj/kern/kernel.asm	/^f0104090:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
+f0104097	obj/kern/kernel.asm	/^f0104097:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
+f010409a	obj/kern/kernel.asm	/^f010409a:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
+f010409d	obj/kern/kernel.asm	/^f010409d:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
+f01040a0	obj/kern/kernel.asm	/^f01040a0:	e8 8b fd ff ff       	call   f0103e30 <stab_binsearch>$/;"	l
+f01040a5	obj/kern/kernel.asm	/^f01040a5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
+f01040a8	obj/kern/kernel.asm	/^f01040a8:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
+f01040ab	obj/kern/kernel.asm	/^f01040ab:	0f 8f 9c 00 00 00    	jg     f010414d <debuginfo_eip+0x224>$/;"	l
+f01040b1	obj/kern/kernel.asm	/^f01040b1:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
+f01040b4	obj/kern/kernel.asm	/^f01040b4:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
+f01040b7	obj/kern/kernel.asm	/^f01040b7:	0f b7 44 87 06       	movzwl 0x6(%edi,%eax,4),%eax$/;"	l
+f01040bc	obj/kern/kernel.asm	/^f01040bc:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
+f01040bf	obj/kern/kernel.asm	/^f01040bf:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
+f01040c2	obj/kern/kernel.asm	/^f01040c2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
+f01040c5	obj/kern/kernel.asm	/^f01040c5:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
+f01040c8	obj/kern/kernel.asm	/^f01040c8:	8d 54 97 08          	lea    0x8(%edi,%edx,4),%edx$/;"	l
+f01040cc	obj/kern/kernel.asm	/^f01040cc:	89 5d b8             	mov    %ebx,-0x48(%ebp)$/;"	l
+f01040cf	obj/kern/kernel.asm	/^f01040cf:	eb 04                	jmp    f01040d5 <debuginfo_eip+0x1ac>$/;"	l
+f01040d1	obj/kern/kernel.asm	/^f01040d1:	48                   	dec    %eax$/;"	l
+f01040d2	obj/kern/kernel.asm	/^f01040d2:	83 ea 0c             	sub    $0xc,%edx$/;"	l
+f01040d5	obj/kern/kernel.asm	/^f01040d5:	89 c7                	mov    %eax,%edi$/;"	l
+f01040d7	obj/kern/kernel.asm	/^f01040d7:	39 c6                	cmp    %eax,%esi$/;"	l
+f01040d9	obj/kern/kernel.asm	/^f01040d9:	7f 25                	jg     f0104100 <debuginfo_eip+0x1d7>$/;"	l
+f01040db	obj/kern/kernel.asm	/^f01040db:	8a 4a fc             	mov    -0x4(%edx),%cl$/;"	l
+f01040de	obj/kern/kernel.asm	/^f01040de:	80 f9 84             	cmp    $0x84,%cl$/;"	l
+f01040e1	obj/kern/kernel.asm	/^f01040e1:	0f 84 81 00 00 00    	je     f0104168 <debuginfo_eip+0x23f>$/;"	l
+f01040e7	obj/kern/kernel.asm	/^f01040e7:	80 f9 64             	cmp    $0x64,%cl$/;"	l
+f01040ea	obj/kern/kernel.asm	/^f01040ea:	75 e5                	jne    f01040d1 <debuginfo_eip+0x1a8>$/;"	l
+f01040ec	obj/kern/kernel.asm	/^f01040ec:	83 3a 00             	cmpl   $0x0,(%edx)$/;"	l
+f01040ef	obj/kern/kernel.asm	/^f01040ef:	74 e0                	je     f01040d1 <debuginfo_eip+0x1a8>$/;"	l
+f01040f1	obj/kern/kernel.asm	/^f01040f1:	8b 5d b8             	mov    -0x48(%ebp),%ebx$/;"	l
+f01040f4	obj/kern/kernel.asm	/^f01040f4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f01040f7	obj/kern/kernel.asm	/^f01040f7:	eb 75                	jmp    f010416e <debuginfo_eip+0x245>$/;"	l
+f01040f9	obj/kern/kernel.asm	/^f01040f9:	03 45 bc             	add    -0x44(%ebp),%eax$/;"	l
+f01040fc	obj/kern/kernel.asm	/^f01040fc:	89 03                	mov    %eax,(%ebx)$/;"	l
+f01040fe	obj/kern/kernel.asm	/^f01040fe:	eb 03                	jmp    f0104103 <debuginfo_eip+0x1da>$/;"	l
+f0104100	obj/kern/kernel.asm	/^f0104100:	8b 5d b8             	mov    -0x48(%ebp),%ebx$/;"	l
+f0104103	obj/kern/kernel.asm	/^f0104103:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
+f0104106	obj/kern/kernel.asm	/^f0104106:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
+f0104109	obj/kern/kernel.asm	/^f0104109:	39 f2                	cmp    %esi,%edx$/;"	l
+f010410b	obj/kern/kernel.asm	/^f010410b:	7d 47                	jge    f0104154 <debuginfo_eip+0x22b>$/;"	l
+f010410d	obj/kern/kernel.asm	/^f010410d:	42                   	inc    %edx$/;"	l
+f010410e	obj/kern/kernel.asm	/^f010410e:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
+f0104111	obj/kern/kernel.asm	/^f0104111:	89 d0                	mov    %edx,%eax$/;"	l
+f0104113	obj/kern/kernel.asm	/^f0104113:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
+f0104116	obj/kern/kernel.asm	/^f0104116:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
+f0104119	obj/kern/kernel.asm	/^f0104119:	8d 54 97 04          	lea    0x4(%edi,%edx,4),%edx$/;"	l
+f010411d	obj/kern/kernel.asm	/^f010411d:	eb 03                	jmp    f0104122 <debuginfo_eip+0x1f9>$/;"	l
+f010411f	obj/kern/kernel.asm	/^f010411f:	ff 43 14             	incl   0x14(%ebx)$/;"	l
+f0104122	obj/kern/kernel.asm	/^f0104122:	39 f0                	cmp    %esi,%eax$/;"	l
+f0104124	obj/kern/kernel.asm	/^f0104124:	7d 35                	jge    f010415b <debuginfo_eip+0x232>$/;"	l
+f0104126	obj/kern/kernel.asm	/^f0104126:	8a 0a                	mov    (%edx),%cl$/;"	l
+f0104128	obj/kern/kernel.asm	/^f0104128:	40                   	inc    %eax$/;"	l
+f0104129	obj/kern/kernel.asm	/^f0104129:	83 c2 0c             	add    $0xc,%edx$/;"	l
+f010412c	obj/kern/kernel.asm	/^f010412c:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
+f010412f	obj/kern/kernel.asm	/^f010412f:	74 ee                	je     f010411f <debuginfo_eip+0x1f6>$/;"	l
+f0104131	obj/kern/kernel.asm	/^f0104131:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0104136	obj/kern/kernel.asm	/^f0104136:	eb 28                	jmp    f0104160 <debuginfo_eip+0x237>$/;"	l
+f0104138	obj/kern/kernel.asm	/^f0104138:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
+f010413d	obj/kern/kernel.asm	/^f010413d:	eb 21                	jmp    f0104160 <debuginfo_eip+0x237>$/;"	l
+f010413f	obj/kern/kernel.asm	/^f010413f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
+f0104144	obj/kern/kernel.asm	/^f0104144:	eb 1a                	jmp    f0104160 <debuginfo_eip+0x237>$/;"	l
+f0104146	obj/kern/kernel.asm	/^f0104146:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
+f010414b	obj/kern/kernel.asm	/^f010414b:	eb 13                	jmp    f0104160 <debuginfo_eip+0x237>$/;"	l
+f010414d	obj/kern/kernel.asm	/^f010414d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
+f0104152	obj/kern/kernel.asm	/^f0104152:	eb 0c                	jmp    f0104160 <debuginfo_eip+0x237>$/;"	l
+f0104154	obj/kern/kernel.asm	/^f0104154:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0104159	obj/kern/kernel.asm	/^f0104159:	eb 05                	jmp    f0104160 <debuginfo_eip+0x237>$/;"	l
+f010415b	obj/kern/kernel.asm	/^f010415b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0104160	obj/kern/kernel.asm	/^f0104160:	83 c4 5c             	add    $0x5c,%esp$/;"	l
+f0104163	obj/kern/kernel.asm	/^f0104163:	5b                   	pop    %ebx$/;"	l
+f0104164	obj/kern/kernel.asm	/^f0104164:	5e                   	pop    %esi$/;"	l
+f0104165	obj/kern/kernel.asm	/^f0104165:	5f                   	pop    %edi$/;"	l
+f0104166	obj/kern/kernel.asm	/^f0104166:	5d                   	pop    %ebp$/;"	l
+f0104167	obj/kern/kernel.asm	/^f0104167:	c3                   	ret    $/;"	l
+f0104168	obj/kern/kernel.asm	/^f0104168:	8b 5d b8             	mov    -0x48(%ebp),%ebx$/;"	l
+f010416b	obj/kern/kernel.asm	/^f010416b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f010416e	obj/kern/kernel.asm	/^f010416e:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
+f0104171	obj/kern/kernel.asm	/^f0104171:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
+f0104174	obj/kern/kernel.asm	/^f0104174:	8b 04 87             	mov    (%edi,%eax,4),%eax$/;"	l
+f0104177	obj/kern/kernel.asm	/^f0104177:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
+f010417a	obj/kern/kernel.asm	/^f010417a:	2b 55 bc             	sub    -0x44(%ebp),%edx$/;"	l
+f010417d	obj/kern/kernel.asm	/^f010417d:	39 d0                	cmp    %edx,%eax$/;"	l
+f010417f	obj/kern/kernel.asm	/^f010417f:	0f 82 74 ff ff ff    	jb     f01040f9 <debuginfo_eip+0x1d0>$/;"	l
+f0104185	obj/kern/kernel.asm	/^f0104185:	e9 79 ff ff ff       	jmp    f0104103 <debuginfo_eip+0x1da>$/;"	l
+f010418c	obj/kern/kernel.asm	/^f010418c <printnum>:$/;"	l
+f010418c	obj/kern/kernel.asm	/^f010418c:	55                   	push   %ebp$/;"	l
+f010418d	obj/kern/kernel.asm	/^f010418d:	89 e5                	mov    %esp,%ebp$/;"	l
+f010418f	obj/kern/kernel.asm	/^f010418f:	57                   	push   %edi$/;"	l
+f0104190	obj/kern/kernel.asm	/^f0104190:	56                   	push   %esi$/;"	l
+f0104191	obj/kern/kernel.asm	/^f0104191:	53                   	push   %ebx$/;"	l
+f0104192	obj/kern/kernel.asm	/^f0104192:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
+f0104195	obj/kern/kernel.asm	/^f0104195:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
+f0104198	obj/kern/kernel.asm	/^f0104198:	89 d7                	mov    %edx,%edi$/;"	l
+f010419a	obj/kern/kernel.asm	/^f010419a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f010419d	obj/kern/kernel.asm	/^f010419d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
+f01041a0	obj/kern/kernel.asm	/^f01041a0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f01041a3	obj/kern/kernel.asm	/^f01041a3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
+f01041a6	obj/kern/kernel.asm	/^f01041a6:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
+f01041a9	obj/kern/kernel.asm	/^f01041a9:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
+f01041ac	obj/kern/kernel.asm	/^f01041ac:	85 c0                	test   %eax,%eax$/;"	l
+f01041ae	obj/kern/kernel.asm	/^f01041ae:	75 08                	jne    f01041b8 <printnum+0x2c>$/;"	l
+f01041b0	obj/kern/kernel.asm	/^f01041b0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
+f01041b3	obj/kern/kernel.asm	/^f01041b3:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
+f01041b6	obj/kern/kernel.asm	/^f01041b6:	77 57                	ja     f010420f <printnum+0x83>$/;"	l
+f01041b8	obj/kern/kernel.asm	/^f01041b8:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
+f01041bc	obj/kern/kernel.asm	/^f01041bc:	4b                   	dec    %ebx$/;"	l
+f01041bd	obj/kern/kernel.asm	/^f01041bd:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
+f01041c1	obj/kern/kernel.asm	/^f01041c1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f01041c4	obj/kern/kernel.asm	/^f01041c4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f01041c8	obj/kern/kernel.asm	/^f01041c8:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
+f01041cc	obj/kern/kernel.asm	/^f01041cc:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
+f01041d0	obj/kern/kernel.asm	/^f01041d0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
+f01041d7	obj/kern/kernel.asm	/^f01041d7:	00 $/;"	l
+f01041d8	obj/kern/kernel.asm	/^f01041d8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
+f01041db	obj/kern/kernel.asm	/^f01041db:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01041de	obj/kern/kernel.asm	/^f01041de:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f01041e1	obj/kern/kernel.asm	/^f01041e1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f01041e5	obj/kern/kernel.asm	/^f01041e5:	e8 1e 09 00 00       	call   f0104b08 <__udivdi3>$/;"	l
+f01041ea	obj/kern/kernel.asm	/^f01041ea:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
+f01041ee	obj/kern/kernel.asm	/^f01041ee:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
+f01041f2	obj/kern/kernel.asm	/^f01041f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01041f5	obj/kern/kernel.asm	/^f01041f5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
+f01041f9	obj/kern/kernel.asm	/^f01041f9:	89 fa                	mov    %edi,%edx$/;"	l
+f01041fb	obj/kern/kernel.asm	/^f01041fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
+f01041fe	obj/kern/kernel.asm	/^f01041fe:	e8 89 ff ff ff       	call   f010418c <printnum>$/;"	l
+f0104203	obj/kern/kernel.asm	/^f0104203:	eb 0f                	jmp    f0104214 <printnum+0x88>$/;"	l
+f0104205	obj/kern/kernel.asm	/^f0104205:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
+f0104209	obj/kern/kernel.asm	/^f0104209:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f010420c	obj/kern/kernel.asm	/^f010420c:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
+f010420f	obj/kern/kernel.asm	/^f010420f:	4b                   	dec    %ebx$/;"	l
+f0104210	obj/kern/kernel.asm	/^f0104210:	85 db                	test   %ebx,%ebx$/;"	l
+f0104212	obj/kern/kernel.asm	/^f0104212:	7f f1                	jg     f0104205 <printnum+0x79>$/;"	l
+f0104214	obj/kern/kernel.asm	/^f0104214:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
+f0104218	obj/kern/kernel.asm	/^f0104218:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
+f010421c	obj/kern/kernel.asm	/^f010421c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f010421f	obj/kern/kernel.asm	/^f010421f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f0104223	obj/kern/kernel.asm	/^f0104223:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
+f010422a	obj/kern/kernel.asm	/^f010422a:	00 $/;"	l
+f010422b	obj/kern/kernel.asm	/^f010422b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
+f010422e	obj/kern/kernel.asm	/^f010422e:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f0104231	obj/kern/kernel.asm	/^f0104231:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
+f0104234	obj/kern/kernel.asm	/^f0104234:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0104238	obj/kern/kernel.asm	/^f0104238:	e8 eb 09 00 00       	call   f0104c28 <__umoddi3>$/;"	l
+f010423d	obj/kern/kernel.asm	/^f010423d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
+f0104241	obj/kern/kernel.asm	/^f0104241:	0f be 80 41 62 10 f0 	movsbl -0xfef9dbf(%eax),%eax$/;"	l
+f0104248	obj/kern/kernel.asm	/^f0104248:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f010424b	obj/kern/kernel.asm	/^f010424b:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
+f010424e	obj/kern/kernel.asm	/^f010424e:	83 c4 3c             	add    $0x3c,%esp$/;"	l
+f0104251	obj/kern/kernel.asm	/^f0104251:	5b                   	pop    %ebx$/;"	l
+f0104252	obj/kern/kernel.asm	/^f0104252:	5e                   	pop    %esi$/;"	l
+f0104253	obj/kern/kernel.asm	/^f0104253:	5f                   	pop    %edi$/;"	l
+f0104254	obj/kern/kernel.asm	/^f0104254:	5d                   	pop    %ebp$/;"	l
+f0104255	obj/kern/kernel.asm	/^f0104255:	c3                   	ret    $/;"	l
+f0104256	obj/kern/kernel.asm	/^f0104256 <getuint>:$/;"	l
+f0104256	obj/kern/kernel.asm	/^f0104256:	55                   	push   %ebp$/;"	l
+f0104257	obj/kern/kernel.asm	/^f0104257:	89 e5                	mov    %esp,%ebp$/;"	l
+f0104259	obj/kern/kernel.asm	/^f0104259:	83 fa 01             	cmp    $0x1,%edx$/;"	l
+f010425c	obj/kern/kernel.asm	/^f010425c:	7e 0e                	jle    f010426c <getuint+0x16>$/;"	l
+f010425e	obj/kern/kernel.asm	/^f010425e:	8b 10                	mov    (%eax),%edx$/;"	l
+f0104260	obj/kern/kernel.asm	/^f0104260:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
+f0104263	obj/kern/kernel.asm	/^f0104263:	89 08                	mov    %ecx,(%eax)$/;"	l
+f0104265	obj/kern/kernel.asm	/^f0104265:	8b 02                	mov    (%edx),%eax$/;"	l
+f0104267	obj/kern/kernel.asm	/^f0104267:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
+f010426a	obj/kern/kernel.asm	/^f010426a:	eb 22                	jmp    f010428e <getuint+0x38>$/;"	l
+f010426c	obj/kern/kernel.asm	/^f010426c:	85 d2                	test   %edx,%edx$/;"	l
+f010426e	obj/kern/kernel.asm	/^f010426e:	74 10                	je     f0104280 <getuint+0x2a>$/;"	l
+f0104270	obj/kern/kernel.asm	/^f0104270:	8b 10                	mov    (%eax),%edx$/;"	l
+f0104272	obj/kern/kernel.asm	/^f0104272:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
+f0104275	obj/kern/kernel.asm	/^f0104275:	89 08                	mov    %ecx,(%eax)$/;"	l
+f0104277	obj/kern/kernel.asm	/^f0104277:	8b 02                	mov    (%edx),%eax$/;"	l
+f0104279	obj/kern/kernel.asm	/^f0104279:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f010427e	obj/kern/kernel.asm	/^f010427e:	eb 0e                	jmp    f010428e <getuint+0x38>$/;"	l
+f0104280	obj/kern/kernel.asm	/^f0104280:	8b 10                	mov    (%eax),%edx$/;"	l
+f0104282	obj/kern/kernel.asm	/^f0104282:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
+f0104285	obj/kern/kernel.asm	/^f0104285:	89 08                	mov    %ecx,(%eax)$/;"	l
+f0104287	obj/kern/kernel.asm	/^f0104287:	8b 02                	mov    (%edx),%eax$/;"	l
+f0104289	obj/kern/kernel.asm	/^f0104289:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f010428e	obj/kern/kernel.asm	/^f010428e:	5d                   	pop    %ebp$/;"	l
+f010428f	obj/kern/kernel.asm	/^f010428f:	c3                   	ret    $/;"	l
+f0104290	obj/kern/kernel.asm	/^f0104290 <sprintputch>:$/;"	l
+f0104290	obj/kern/kernel.asm	/^f0104290:	55                   	push   %ebp$/;"	l
+f0104291	obj/kern/kernel.asm	/^f0104291:	89 e5                	mov    %esp,%ebp$/;"	l
+f0104293	obj/kern/kernel.asm	/^f0104293:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f0104296	obj/kern/kernel.asm	/^f0104296:	ff 40 08             	incl   0x8(%eax)$/;"	l
+f0104299	obj/kern/kernel.asm	/^f0104299:	8b 10                	mov    (%eax),%edx$/;"	l
+f010429b	obj/kern/kernel.asm	/^f010429b:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
+f010429e	obj/kern/kernel.asm	/^f010429e:	73 08                	jae    f01042a8 <sprintputch+0x18>$/;"	l
+f01042a0	obj/kern/kernel.asm	/^f01042a0:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
+f01042a3	obj/kern/kernel.asm	/^f01042a3:	88 0a                	mov    %cl,(%edx)$/;"	l
+f01042a5	obj/kern/kernel.asm	/^f01042a5:	42                   	inc    %edx$/;"	l
+f01042a6	obj/kern/kernel.asm	/^f01042a6:	89 10                	mov    %edx,(%eax)$/;"	l
+f01042a8	obj/kern/kernel.asm	/^f01042a8:	5d                   	pop    %ebp$/;"	l
+f01042a9	obj/kern/kernel.asm	/^f01042a9:	c3                   	ret    $/;"	l
+f01042aa	obj/kern/kernel.asm	/^f01042aa <printfmt>:$/;"	l
+f01042aa	obj/kern/kernel.asm	/^f01042aa:	55                   	push   %ebp$/;"	l
+f01042ab	obj/kern/kernel.asm	/^f01042ab:	89 e5                	mov    %esp,%ebp$/;"	l
+f01042ad	obj/kern/kernel.asm	/^f01042ad:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f01042b0	obj/kern/kernel.asm	/^f01042b0:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
+f01042b3	obj/kern/kernel.asm	/^f01042b3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f01042b7	obj/kern/kernel.asm	/^f01042b7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f01042ba	obj/kern/kernel.asm	/^f01042ba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f01042be	obj/kern/kernel.asm	/^f01042be:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f01042c1	obj/kern/kernel.asm	/^f01042c1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f01042c5	obj/kern/kernel.asm	/^f01042c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01042c8	obj/kern/kernel.asm	/^f01042c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01042cb	obj/kern/kernel.asm	/^f01042cb:	e8 02 00 00 00       	call   f01042d2 <vprintfmt>$/;"	l
+f01042d0	obj/kern/kernel.asm	/^f01042d0:	c9                   	leave  $/;"	l
+f01042d1	obj/kern/kernel.asm	/^f01042d1:	c3                   	ret    $/;"	l
+f01042d2	obj/kern/kernel.asm	/^f01042d2 <vprintfmt>:$/;"	l
+f01042d2	obj/kern/kernel.asm	/^f01042d2:	55                   	push   %ebp$/;"	l
+f01042d3	obj/kern/kernel.asm	/^f01042d3:	89 e5                	mov    %esp,%ebp$/;"	l
+f01042d5	obj/kern/kernel.asm	/^f01042d5:	57                   	push   %edi$/;"	l
+f01042d6	obj/kern/kernel.asm	/^f01042d6:	56                   	push   %esi$/;"	l
+f01042d7	obj/kern/kernel.asm	/^f01042d7:	53                   	push   %ebx$/;"	l
+f01042d8	obj/kern/kernel.asm	/^f01042d8:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
+f01042db	obj/kern/kernel.asm	/^f01042db:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
+f01042de	obj/kern/kernel.asm	/^f01042de:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
+f01042e1	obj/kern/kernel.asm	/^f01042e1:	eb 12                	jmp    f01042f5 <vprintfmt+0x23>$/;"	l
+f01042e3	obj/kern/kernel.asm	/^f01042e3:	85 c0                	test   %eax,%eax$/;"	l
+f01042e5	obj/kern/kernel.asm	/^f01042e5:	0f 84 6b 03 00 00    	je     f0104656 <vprintfmt+0x384>$/;"	l
+f01042eb	obj/kern/kernel.asm	/^f01042eb:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01042ef	obj/kern/kernel.asm	/^f01042ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01042f2	obj/kern/kernel.asm	/^f01042f2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f01042f5	obj/kern/kernel.asm	/^f01042f5:	0f b6 06             	movzbl (%esi),%eax$/;"	l
+f01042f8	obj/kern/kernel.asm	/^f01042f8:	46                   	inc    %esi$/;"	l
+f01042f9	obj/kern/kernel.asm	/^f01042f9:	83 f8 25             	cmp    $0x25,%eax$/;"	l
+f01042fc	obj/kern/kernel.asm	/^f01042fc:	75 e5                	jne    f01042e3 <vprintfmt+0x11>$/;"	l
+f01042fe	obj/kern/kernel.asm	/^f01042fe:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
+f0104302	obj/kern/kernel.asm	/^f0104302:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
+f0104309	obj/kern/kernel.asm	/^f0104309:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
+f010430e	obj/kern/kernel.asm	/^f010430e:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
+f0104315	obj/kern/kernel.asm	/^f0104315:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
+f010431a	obj/kern/kernel.asm	/^f010431a:	eb 26                	jmp    f0104342 <vprintfmt+0x70>$/;"	l
+f010431c	obj/kern/kernel.asm	/^f010431c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f010431f	obj/kern/kernel.asm	/^f010431f:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
+f0104323	obj/kern/kernel.asm	/^f0104323:	eb 1d                	jmp    f0104342 <vprintfmt+0x70>$/;"	l
+f0104325	obj/kern/kernel.asm	/^f0104325:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104328	obj/kern/kernel.asm	/^f0104328:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
+f010432c	obj/kern/kernel.asm	/^f010432c:	eb 14                	jmp    f0104342 <vprintfmt+0x70>$/;"	l
+f010432e	obj/kern/kernel.asm	/^f010432e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104331	obj/kern/kernel.asm	/^f0104331:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
+f0104338	obj/kern/kernel.asm	/^f0104338:	eb 08                	jmp    f0104342 <vprintfmt+0x70>$/;"	l
+f010433a	obj/kern/kernel.asm	/^f010433a:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
+f010433d	obj/kern/kernel.asm	/^f010433d:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
+f0104342	obj/kern/kernel.asm	/^f0104342:	0f b6 06             	movzbl (%esi),%eax$/;"	l
+f0104345	obj/kern/kernel.asm	/^f0104345:	8d 56 01             	lea    0x1(%esi),%edx$/;"	l
+f0104348	obj/kern/kernel.asm	/^f0104348:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
+f010434b	obj/kern/kernel.asm	/^f010434b:	8a 16                	mov    (%esi),%dl$/;"	l
+f010434d	obj/kern/kernel.asm	/^f010434d:	83 ea 23             	sub    $0x23,%edx$/;"	l
+f0104350	obj/kern/kernel.asm	/^f0104350:	80 fa 55             	cmp    $0x55,%dl$/;"	l
+f0104353	obj/kern/kernel.asm	/^f0104353:	0f 87 e1 02 00 00    	ja     f010463a <vprintfmt+0x368>$/;"	l
+f0104359	obj/kern/kernel.asm	/^f0104359:	0f b6 d2             	movzbl %dl,%edx$/;"	l
+f010435c	obj/kern/kernel.asm	/^f010435c:	ff 24 95 e0 62 10 f0 	jmp    *-0xfef9d20(,%edx,4)$/;"	l
+f0104363	obj/kern/kernel.asm	/^f0104363:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104366	obj/kern/kernel.asm	/^f0104366:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
+f010436b	obj/kern/kernel.asm	/^f010436b:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
+f010436e	obj/kern/kernel.asm	/^f010436e:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
+f0104372	obj/kern/kernel.asm	/^f0104372:	0f be 06             	movsbl (%esi),%eax$/;"	l
+f0104375	obj/kern/kernel.asm	/^f0104375:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
+f0104378	obj/kern/kernel.asm	/^f0104378:	83 fa 09             	cmp    $0x9,%edx$/;"	l
+f010437b	obj/kern/kernel.asm	/^f010437b:	77 2a                	ja     f01043a7 <vprintfmt+0xd5>$/;"	l
+f010437d	obj/kern/kernel.asm	/^f010437d:	46                   	inc    %esi$/;"	l
+f010437e	obj/kern/kernel.asm	/^f010437e:	eb eb                	jmp    f010436b <vprintfmt+0x99>$/;"	l
+f0104380	obj/kern/kernel.asm	/^f0104380:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f0104383	obj/kern/kernel.asm	/^f0104383:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
+f0104386	obj/kern/kernel.asm	/^f0104386:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
+f0104389	obj/kern/kernel.asm	/^f0104389:	8b 38                	mov    (%eax),%edi$/;"	l
+f010438b	obj/kern/kernel.asm	/^f010438b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f010438e	obj/kern/kernel.asm	/^f010438e:	eb 17                	jmp    f01043a7 <vprintfmt+0xd5>$/;"	l
+f0104390	obj/kern/kernel.asm	/^f0104390:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
+f0104394	obj/kern/kernel.asm	/^f0104394:	78 98                	js     f010432e <vprintfmt+0x5c>$/;"	l
+f0104396	obj/kern/kernel.asm	/^f0104396:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104399	obj/kern/kernel.asm	/^f0104399:	eb a7                	jmp    f0104342 <vprintfmt+0x70>$/;"	l
+f010439b	obj/kern/kernel.asm	/^f010439b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f010439e	obj/kern/kernel.asm	/^f010439e:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
+f01043a5	obj/kern/kernel.asm	/^f01043a5:	eb 9b                	jmp    f0104342 <vprintfmt+0x70>$/;"	l
+f01043a7	obj/kern/kernel.asm	/^f01043a7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
+f01043ab	obj/kern/kernel.asm	/^f01043ab:	79 95                	jns    f0104342 <vprintfmt+0x70>$/;"	l
+f01043ad	obj/kern/kernel.asm	/^f01043ad:	eb 8b                	jmp    f010433a <vprintfmt+0x68>$/;"	l
+f01043af	obj/kern/kernel.asm	/^f01043af:	41                   	inc    %ecx$/;"	l
+f01043b0	obj/kern/kernel.asm	/^f01043b0:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f01043b3	obj/kern/kernel.asm	/^f01043b3:	eb 8d                	jmp    f0104342 <vprintfmt+0x70>$/;"	l
+f01043b5	obj/kern/kernel.asm	/^f01043b5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f01043b8	obj/kern/kernel.asm	/^f01043b8:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
+f01043bb	obj/kern/kernel.asm	/^f01043bb:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
+f01043be	obj/kern/kernel.asm	/^f01043be:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01043c2	obj/kern/kernel.asm	/^f01043c2:	8b 00                	mov    (%eax),%eax$/;"	l
+f01043c4	obj/kern/kernel.asm	/^f01043c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01043c7	obj/kern/kernel.asm	/^f01043c7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f01043ca	obj/kern/kernel.asm	/^f01043ca:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f01043cd	obj/kern/kernel.asm	/^f01043cd:	e9 23 ff ff ff       	jmp    f01042f5 <vprintfmt+0x23>$/;"	l
+f01043d2	obj/kern/kernel.asm	/^f01043d2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f01043d5	obj/kern/kernel.asm	/^f01043d5:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
+f01043d8	obj/kern/kernel.asm	/^f01043d8:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
+f01043db	obj/kern/kernel.asm	/^f01043db:	8b 00                	mov    (%eax),%eax$/;"	l
+f01043dd	obj/kern/kernel.asm	/^f01043dd:	85 c0                	test   %eax,%eax$/;"	l
+f01043df	obj/kern/kernel.asm	/^f01043df:	79 02                	jns    f01043e3 <vprintfmt+0x111>$/;"	l
+f01043e1	obj/kern/kernel.asm	/^f01043e1:	f7 d8                	neg    %eax$/;"	l
+f01043e3	obj/kern/kernel.asm	/^f01043e3:	89 c2                	mov    %eax,%edx$/;"	l
+f01043e5	obj/kern/kernel.asm	/^f01043e5:	83 f8 07             	cmp    $0x7,%eax$/;"	l
+f01043e8	obj/kern/kernel.asm	/^f01043e8:	7f 0b                	jg     f01043f5 <vprintfmt+0x123>$/;"	l
+f01043ea	obj/kern/kernel.asm	/^f01043ea:	8b 04 85 40 64 10 f0 	mov    -0xfef9bc0(,%eax,4),%eax$/;"	l
+f01043f1	obj/kern/kernel.asm	/^f01043f1:	85 c0                	test   %eax,%eax$/;"	l
+f01043f3	obj/kern/kernel.asm	/^f01043f3:	75 23                	jne    f0104418 <vprintfmt+0x146>$/;"	l
+f01043f5	obj/kern/kernel.asm	/^f01043f5:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
+f01043f9	obj/kern/kernel.asm	/^f01043f9:	c7 44 24 08 59 62 10 	movl   $0xf0106259,0x8(%esp)$/;"	l
+f0104400	obj/kern/kernel.asm	/^f0104400:	f0 $/;"	l
+f0104401	obj/kern/kernel.asm	/^f0104401:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0104405	obj/kern/kernel.asm	/^f0104405:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0104408	obj/kern/kernel.asm	/^f0104408:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f010440b	obj/kern/kernel.asm	/^f010440b:	e8 9a fe ff ff       	call   f01042aa <printfmt>$/;"	l
+f0104410	obj/kern/kernel.asm	/^f0104410:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104413	obj/kern/kernel.asm	/^f0104413:	e9 dd fe ff ff       	jmp    f01042f5 <vprintfmt+0x23>$/;"	l
+f0104418	obj/kern/kernel.asm	/^f0104418:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f010441c	obj/kern/kernel.asm	/^f010441c:	c7 44 24 08 39 5a 10 	movl   $0xf0105a39,0x8(%esp)$/;"	l
+f0104423	obj/kern/kernel.asm	/^f0104423:	f0 $/;"	l
+f0104424	obj/kern/kernel.asm	/^f0104424:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0104428	obj/kern/kernel.asm	/^f0104428:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
+f010442b	obj/kern/kernel.asm	/^f010442b:	89 14 24             	mov    %edx,(%esp)$/;"	l
+f010442e	obj/kern/kernel.asm	/^f010442e:	e8 77 fe ff ff       	call   f01042aa <printfmt>$/;"	l
+f0104433	obj/kern/kernel.asm	/^f0104433:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104436	obj/kern/kernel.asm	/^f0104436:	e9 ba fe ff ff       	jmp    f01042f5 <vprintfmt+0x23>$/;"	l
+f010443b	obj/kern/kernel.asm	/^f010443b:	89 f9                	mov    %edi,%ecx$/;"	l
+f010443d	obj/kern/kernel.asm	/^f010443d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
+f0104440	obj/kern/kernel.asm	/^f0104440:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
+f0104443	obj/kern/kernel.asm	/^f0104443:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f0104446	obj/kern/kernel.asm	/^f0104446:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
+f0104449	obj/kern/kernel.asm	/^f0104449:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
+f010444c	obj/kern/kernel.asm	/^f010444c:	8b 30                	mov    (%eax),%esi$/;"	l
+f010444e	obj/kern/kernel.asm	/^f010444e:	85 f6                	test   %esi,%esi$/;"	l
+f0104450	obj/kern/kernel.asm	/^f0104450:	75 05                	jne    f0104457 <vprintfmt+0x185>$/;"	l
+f0104452	obj/kern/kernel.asm	/^f0104452:	be 52 62 10 f0       	mov    $0xf0106252,%esi$/;"	l
+f0104457	obj/kern/kernel.asm	/^f0104457:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
+f010445b	obj/kern/kernel.asm	/^f010445b:	0f 8e 84 00 00 00    	jle    f01044e5 <vprintfmt+0x213>$/;"	l
+f0104461	obj/kern/kernel.asm	/^f0104461:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
+f0104465	obj/kern/kernel.asm	/^f0104465:	74 7e                	je     f01044e5 <vprintfmt+0x213>$/;"	l
+f0104467	obj/kern/kernel.asm	/^f0104467:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
+f010446b	obj/kern/kernel.asm	/^f010446b:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f010446e	obj/kern/kernel.asm	/^f010446e:	e8 53 03 00 00       	call   f01047c6 <strnlen>$/;"	l
+f0104473	obj/kern/kernel.asm	/^f0104473:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
+f0104476	obj/kern/kernel.asm	/^f0104476:	29 c2                	sub    %eax,%edx$/;"	l
+f0104478	obj/kern/kernel.asm	/^f0104478:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
+f010447b	obj/kern/kernel.asm	/^f010447b:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
+f010447f	obj/kern/kernel.asm	/^f010447f:	89 75 d0             	mov    %esi,-0x30(%ebp)$/;"	l
+f0104482	obj/kern/kernel.asm	/^f0104482:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
+f0104485	obj/kern/kernel.asm	/^f0104485:	89 de                	mov    %ebx,%esi$/;"	l
+f0104487	obj/kern/kernel.asm	/^f0104487:	89 d3                	mov    %edx,%ebx$/;"	l
+f0104489	obj/kern/kernel.asm	/^f0104489:	89 c7                	mov    %eax,%edi$/;"	l
+f010448b	obj/kern/kernel.asm	/^f010448b:	eb 0b                	jmp    f0104498 <vprintfmt+0x1c6>$/;"	l
+f010448d	obj/kern/kernel.asm	/^f010448d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0104491	obj/kern/kernel.asm	/^f0104491:	89 3c 24             	mov    %edi,(%esp)$/;"	l
+f0104494	obj/kern/kernel.asm	/^f0104494:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f0104497	obj/kern/kernel.asm	/^f0104497:	4b                   	dec    %ebx$/;"	l
+f0104498	obj/kern/kernel.asm	/^f0104498:	85 db                	test   %ebx,%ebx$/;"	l
+f010449a	obj/kern/kernel.asm	/^f010449a:	7f f1                	jg     f010448d <vprintfmt+0x1bb>$/;"	l
+f010449c	obj/kern/kernel.asm	/^f010449c:	8b 7d cc             	mov    -0x34(%ebp),%edi$/;"	l
+f010449f	obj/kern/kernel.asm	/^f010449f:	89 f3                	mov    %esi,%ebx$/;"	l
+f01044a1	obj/kern/kernel.asm	/^f01044a1:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
+f01044a4	obj/kern/kernel.asm	/^f01044a4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
+f01044a7	obj/kern/kernel.asm	/^f01044a7:	85 c0                	test   %eax,%eax$/;"	l
+f01044a9	obj/kern/kernel.asm	/^f01044a9:	79 05                	jns    f01044b0 <vprintfmt+0x1de>$/;"	l
+f01044ab	obj/kern/kernel.asm	/^f01044ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01044b0	obj/kern/kernel.asm	/^f01044b0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
+f01044b3	obj/kern/kernel.asm	/^f01044b3:	29 c2                	sub    %eax,%edx$/;"	l
+f01044b5	obj/kern/kernel.asm	/^f01044b5:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
+f01044b8	obj/kern/kernel.asm	/^f01044b8:	eb 2b                	jmp    f01044e5 <vprintfmt+0x213>$/;"	l
+f01044ba	obj/kern/kernel.asm	/^f01044ba:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
+f01044be	obj/kern/kernel.asm	/^f01044be:	74 18                	je     f01044d8 <vprintfmt+0x206>$/;"	l
+f01044c0	obj/kern/kernel.asm	/^f01044c0:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
+f01044c3	obj/kern/kernel.asm	/^f01044c3:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
+f01044c6	obj/kern/kernel.asm	/^f01044c6:	76 10                	jbe    f01044d8 <vprintfmt+0x206>$/;"	l
+f01044c8	obj/kern/kernel.asm	/^f01044c8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01044cc	obj/kern/kernel.asm	/^f01044cc:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
+f01044d3	obj/kern/kernel.asm	/^f01044d3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f01044d6	obj/kern/kernel.asm	/^f01044d6:	eb 0a                	jmp    f01044e2 <vprintfmt+0x210>$/;"	l
+f01044d8	obj/kern/kernel.asm	/^f01044d8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01044dc	obj/kern/kernel.asm	/^f01044dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01044df	obj/kern/kernel.asm	/^f01044df:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f01044e2	obj/kern/kernel.asm	/^f01044e2:	ff 4d e4             	decl   -0x1c(%ebp)$/;"	l
+f01044e5	obj/kern/kernel.asm	/^f01044e5:	0f be 06             	movsbl (%esi),%eax$/;"	l
+f01044e8	obj/kern/kernel.asm	/^f01044e8:	46                   	inc    %esi$/;"	l
+f01044e9	obj/kern/kernel.asm	/^f01044e9:	85 c0                	test   %eax,%eax$/;"	l
+f01044eb	obj/kern/kernel.asm	/^f01044eb:	74 21                	je     f010450e <vprintfmt+0x23c>$/;"	l
+f01044ed	obj/kern/kernel.asm	/^f01044ed:	85 ff                	test   %edi,%edi$/;"	l
+f01044ef	obj/kern/kernel.asm	/^f01044ef:	78 c9                	js     f01044ba <vprintfmt+0x1e8>$/;"	l
+f01044f1	obj/kern/kernel.asm	/^f01044f1:	4f                   	dec    %edi$/;"	l
+f01044f2	obj/kern/kernel.asm	/^f01044f2:	79 c6                	jns    f01044ba <vprintfmt+0x1e8>$/;"	l
+f01044f4	obj/kern/kernel.asm	/^f01044f4:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f01044f7	obj/kern/kernel.asm	/^f01044f7:	89 de                	mov    %ebx,%esi$/;"	l
+f01044f9	obj/kern/kernel.asm	/^f01044f9:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
+f01044fc	obj/kern/kernel.asm	/^f01044fc:	eb 18                	jmp    f0104516 <vprintfmt+0x244>$/;"	l
+f01044fe	obj/kern/kernel.asm	/^f01044fe:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0104502	obj/kern/kernel.asm	/^f0104502:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
+f0104509	obj/kern/kernel.asm	/^f0104509:	ff d7                	call   *%edi$/;"	l
+f010450b	obj/kern/kernel.asm	/^f010450b:	4b                   	dec    %ebx$/;"	l
+f010450c	obj/kern/kernel.asm	/^f010450c:	eb 08                	jmp    f0104516 <vprintfmt+0x244>$/;"	l
+f010450e	obj/kern/kernel.asm	/^f010450e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f0104511	obj/kern/kernel.asm	/^f0104511:	89 de                	mov    %ebx,%esi$/;"	l
+f0104513	obj/kern/kernel.asm	/^f0104513:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
+f0104516	obj/kern/kernel.asm	/^f0104516:	85 db                	test   %ebx,%ebx$/;"	l
+f0104518	obj/kern/kernel.asm	/^f0104518:	7f e4                	jg     f01044fe <vprintfmt+0x22c>$/;"	l
+f010451a	obj/kern/kernel.asm	/^f010451a:	89 7d 08             	mov    %edi,0x8(%ebp)$/;"	l
+f010451d	obj/kern/kernel.asm	/^f010451d:	89 f3                	mov    %esi,%ebx$/;"	l
+f010451f	obj/kern/kernel.asm	/^f010451f:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104522	obj/kern/kernel.asm	/^f0104522:	e9 ce fd ff ff       	jmp    f01042f5 <vprintfmt+0x23>$/;"	l
+f0104527	obj/kern/kernel.asm	/^f0104527:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
+f010452a	obj/kern/kernel.asm	/^f010452a:	7e 10                	jle    f010453c <vprintfmt+0x26a>$/;"	l
+f010452c	obj/kern/kernel.asm	/^f010452c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f010452f	obj/kern/kernel.asm	/^f010452f:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
+f0104532	obj/kern/kernel.asm	/^f0104532:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
+f0104535	obj/kern/kernel.asm	/^f0104535:	8b 30                	mov    (%eax),%esi$/;"	l
+f0104537	obj/kern/kernel.asm	/^f0104537:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
+f010453a	obj/kern/kernel.asm	/^f010453a:	eb 26                	jmp    f0104562 <vprintfmt+0x290>$/;"	l
+f010453c	obj/kern/kernel.asm	/^f010453c:	85 c9                	test   %ecx,%ecx$/;"	l
+f010453e	obj/kern/kernel.asm	/^f010453e:	74 12                	je     f0104552 <vprintfmt+0x280>$/;"	l
+f0104540	obj/kern/kernel.asm	/^f0104540:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f0104543	obj/kern/kernel.asm	/^f0104543:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
+f0104546	obj/kern/kernel.asm	/^f0104546:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
+f0104549	obj/kern/kernel.asm	/^f0104549:	8b 30                	mov    (%eax),%esi$/;"	l
+f010454b	obj/kern/kernel.asm	/^f010454b:	89 f7                	mov    %esi,%edi$/;"	l
+f010454d	obj/kern/kernel.asm	/^f010454d:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
+f0104550	obj/kern/kernel.asm	/^f0104550:	eb 10                	jmp    f0104562 <vprintfmt+0x290>$/;"	l
+f0104552	obj/kern/kernel.asm	/^f0104552:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f0104555	obj/kern/kernel.asm	/^f0104555:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
+f0104558	obj/kern/kernel.asm	/^f0104558:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
+f010455b	obj/kern/kernel.asm	/^f010455b:	8b 30                	mov    (%eax),%esi$/;"	l
+f010455d	obj/kern/kernel.asm	/^f010455d:	89 f7                	mov    %esi,%edi$/;"	l
+f010455f	obj/kern/kernel.asm	/^f010455f:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
+f0104562	obj/kern/kernel.asm	/^f0104562:	85 ff                	test   %edi,%edi$/;"	l
+f0104564	obj/kern/kernel.asm	/^f0104564:	78 0a                	js     f0104570 <vprintfmt+0x29e>$/;"	l
+f0104566	obj/kern/kernel.asm	/^f0104566:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
+f010456b	obj/kern/kernel.asm	/^f010456b:	e9 8c 00 00 00       	jmp    f01045fc <vprintfmt+0x32a>$/;"	l
+f0104570	obj/kern/kernel.asm	/^f0104570:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f0104574	obj/kern/kernel.asm	/^f0104574:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
+f010457b	obj/kern/kernel.asm	/^f010457b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f010457e	obj/kern/kernel.asm	/^f010457e:	f7 de                	neg    %esi$/;"	l
+f0104580	obj/kern/kernel.asm	/^f0104580:	83 d7 00             	adc    $0x0,%edi$/;"	l
+f0104583	obj/kern/kernel.asm	/^f0104583:	f7 df                	neg    %edi$/;"	l
+f0104585	obj/kern/kernel.asm	/^f0104585:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
+f010458a	obj/kern/kernel.asm	/^f010458a:	eb 70                	jmp    f01045fc <vprintfmt+0x32a>$/;"	l
+f010458c	obj/kern/kernel.asm	/^f010458c:	89 ca                	mov    %ecx,%edx$/;"	l
+f010458e	obj/kern/kernel.asm	/^f010458e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
+f0104591	obj/kern/kernel.asm	/^f0104591:	e8 c0 fc ff ff       	call   f0104256 <getuint>$/;"	l
+f0104596	obj/kern/kernel.asm	/^f0104596:	89 c6                	mov    %eax,%esi$/;"	l
+f0104598	obj/kern/kernel.asm	/^f0104598:	89 d7                	mov    %edx,%edi$/;"	l
+f010459a	obj/kern/kernel.asm	/^f010459a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
+f010459f	obj/kern/kernel.asm	/^f010459f:	eb 5b                	jmp    f01045fc <vprintfmt+0x32a>$/;"	l
+f01045a1	obj/kern/kernel.asm	/^f01045a1:	89 ca                	mov    %ecx,%edx$/;"	l
+f01045a3	obj/kern/kernel.asm	/^f01045a3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
+f01045a6	obj/kern/kernel.asm	/^f01045a6:	e8 ab fc ff ff       	call   f0104256 <getuint>$/;"	l
+f01045ab	obj/kern/kernel.asm	/^f01045ab:	89 c6                	mov    %eax,%esi$/;"	l
+f01045ad	obj/kern/kernel.asm	/^f01045ad:	89 d7                	mov    %edx,%edi$/;"	l
+f01045af	obj/kern/kernel.asm	/^f01045af:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
+f01045b4	obj/kern/kernel.asm	/^f01045b4:	eb 46                	jmp    f01045fc <vprintfmt+0x32a>$/;"	l
+f01045b6	obj/kern/kernel.asm	/^f01045b6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01045ba	obj/kern/kernel.asm	/^f01045ba:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
+f01045c1	obj/kern/kernel.asm	/^f01045c1:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f01045c4	obj/kern/kernel.asm	/^f01045c4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f01045c8	obj/kern/kernel.asm	/^f01045c8:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
+f01045cf	obj/kern/kernel.asm	/^f01045cf:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f01045d2	obj/kern/kernel.asm	/^f01045d2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f01045d5	obj/kern/kernel.asm	/^f01045d5:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
+f01045d8	obj/kern/kernel.asm	/^f01045d8:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
+f01045db	obj/kern/kernel.asm	/^f01045db:	8b 30                	mov    (%eax),%esi$/;"	l
+f01045dd	obj/kern/kernel.asm	/^f01045dd:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
+f01045e2	obj/kern/kernel.asm	/^f01045e2:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
+f01045e7	obj/kern/kernel.asm	/^f01045e7:	eb 13                	jmp    f01045fc <vprintfmt+0x32a>$/;"	l
+f01045e9	obj/kern/kernel.asm	/^f01045e9:	89 ca                	mov    %ecx,%edx$/;"	l
+f01045eb	obj/kern/kernel.asm	/^f01045eb:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
+f01045ee	obj/kern/kernel.asm	/^f01045ee:	e8 63 fc ff ff       	call   f0104256 <getuint>$/;"	l
+f01045f3	obj/kern/kernel.asm	/^f01045f3:	89 c6                	mov    %eax,%esi$/;"	l
+f01045f5	obj/kern/kernel.asm	/^f01045f5:	89 d7                	mov    %edx,%edi$/;"	l
+f01045f7	obj/kern/kernel.asm	/^f01045f7:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
+f01045fc	obj/kern/kernel.asm	/^f01045fc:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
+f0104600	obj/kern/kernel.asm	/^f0104600:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
+f0104604	obj/kern/kernel.asm	/^f0104604:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
+f0104607	obj/kern/kernel.asm	/^f0104607:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
+f010460b	obj/kern/kernel.asm	/^f010460b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f010460f	obj/kern/kernel.asm	/^f010460f:	89 34 24             	mov    %esi,(%esp)$/;"	l
+f0104612	obj/kern/kernel.asm	/^f0104612:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
+f0104616	obj/kern/kernel.asm	/^f0104616:	89 da                	mov    %ebx,%edx$/;"	l
+f0104618	obj/kern/kernel.asm	/^f0104618:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f010461b	obj/kern/kernel.asm	/^f010461b:	e8 6c fb ff ff       	call   f010418c <printnum>$/;"	l
+f0104620	obj/kern/kernel.asm	/^f0104620:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104623	obj/kern/kernel.asm	/^f0104623:	e9 cd fc ff ff       	jmp    f01042f5 <vprintfmt+0x23>$/;"	l
+f0104628	obj/kern/kernel.asm	/^f0104628:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f010462c	obj/kern/kernel.asm	/^f010462c:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f010462f	obj/kern/kernel.asm	/^f010462f:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f0104632	obj/kern/kernel.asm	/^f0104632:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
+f0104635	obj/kern/kernel.asm	/^f0104635:	e9 bb fc ff ff       	jmp    f01042f5 <vprintfmt+0x23>$/;"	l
+f010463a	obj/kern/kernel.asm	/^f010463a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
+f010463e	obj/kern/kernel.asm	/^f010463e:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
+f0104645	obj/kern/kernel.asm	/^f0104645:	ff 55 08             	call   *0x8(%ebp)$/;"	l
+f0104648	obj/kern/kernel.asm	/^f0104648:	eb 01                	jmp    f010464b <vprintfmt+0x379>$/;"	l
+f010464a	obj/kern/kernel.asm	/^f010464a:	4e                   	dec    %esi$/;"	l
+f010464b	obj/kern/kernel.asm	/^f010464b:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
+f010464f	obj/kern/kernel.asm	/^f010464f:	75 f9                	jne    f010464a <vprintfmt+0x378>$/;"	l
+f0104651	obj/kern/kernel.asm	/^f0104651:	e9 9f fc ff ff       	jmp    f01042f5 <vprintfmt+0x23>$/;"	l
+f0104656	obj/kern/kernel.asm	/^f0104656:	83 c4 4c             	add    $0x4c,%esp$/;"	l
+f0104659	obj/kern/kernel.asm	/^f0104659:	5b                   	pop    %ebx$/;"	l
+f010465a	obj/kern/kernel.asm	/^f010465a:	5e                   	pop    %esi$/;"	l
+f010465b	obj/kern/kernel.asm	/^f010465b:	5f                   	pop    %edi$/;"	l
+f010465c	obj/kern/kernel.asm	/^f010465c:	5d                   	pop    %ebp$/;"	l
+f010465d	obj/kern/kernel.asm	/^f010465d:	c3                   	ret    $/;"	l
+f010465e	obj/kern/kernel.asm	/^f010465e <vsnprintf>:$/;"	l
+f010465e	obj/kern/kernel.asm	/^f010465e:	55                   	push   %ebp$/;"	l
+f010465f	obj/kern/kernel.asm	/^f010465f:	89 e5                	mov    %esp,%ebp$/;"	l
+f0104661	obj/kern/kernel.asm	/^f0104661:	83 ec 28             	sub    $0x28,%esp$/;"	l
+f0104664	obj/kern/kernel.asm	/^f0104664:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0104667	obj/kern/kernel.asm	/^f0104667:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
+f010466a	obj/kern/kernel.asm	/^f010466a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
+f010466d	obj/kern/kernel.asm	/^f010466d:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
+f0104671	obj/kern/kernel.asm	/^f0104671:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
+f0104674	obj/kern/kernel.asm	/^f0104674:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
+f010467b	obj/kern/kernel.asm	/^f010467b:	85 c0                	test   %eax,%eax$/;"	l
+f010467d	obj/kern/kernel.asm	/^f010467d:	74 30                	je     f01046af <vsnprintf+0x51>$/;"	l
+f010467f	obj/kern/kernel.asm	/^f010467f:	85 d2                	test   %edx,%edx$/;"	l
+f0104681	obj/kern/kernel.asm	/^f0104681:	7e 33                	jle    f01046b6 <vsnprintf+0x58>$/;"	l
+f0104683	obj/kern/kernel.asm	/^f0104683:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
+f0104686	obj/kern/kernel.asm	/^f0104686:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f010468a	obj/kern/kernel.asm	/^f010468a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f010468d	obj/kern/kernel.asm	/^f010468d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f0104691	obj/kern/kernel.asm	/^f0104691:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
+f0104694	obj/kern/kernel.asm	/^f0104694:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f0104698	obj/kern/kernel.asm	/^f0104698:	c7 04 24 90 42 10 f0 	movl   $0xf0104290,(%esp)$/;"	l
+f010469f	obj/kern/kernel.asm	/^f010469f:	e8 2e fc ff ff       	call   f01042d2 <vprintfmt>$/;"	l
+f01046a4	obj/kern/kernel.asm	/^f01046a4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
+f01046a7	obj/kern/kernel.asm	/^f01046a7:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
+f01046aa	obj/kern/kernel.asm	/^f01046aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
+f01046ad	obj/kern/kernel.asm	/^f01046ad:	eb 0c                	jmp    f01046bb <vsnprintf+0x5d>$/;"	l
+f01046af	obj/kern/kernel.asm	/^f01046af:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
+f01046b4	obj/kern/kernel.asm	/^f01046b4:	eb 05                	jmp    f01046bb <vsnprintf+0x5d>$/;"	l
+f01046b6	obj/kern/kernel.asm	/^f01046b6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
+f01046bb	obj/kern/kernel.asm	/^f01046bb:	c9                   	leave  $/;"	l
+f01046bc	obj/kern/kernel.asm	/^f01046bc:	c3                   	ret    $/;"	l
+f01046bd	obj/kern/kernel.asm	/^f01046bd <snprintf>:$/;"	l
+f01046bd	obj/kern/kernel.asm	/^f01046bd:	55                   	push   %ebp$/;"	l
+f01046be	obj/kern/kernel.asm	/^f01046be:	89 e5                	mov    %esp,%ebp$/;"	l
+f01046c0	obj/kern/kernel.asm	/^f01046c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
+f01046c3	obj/kern/kernel.asm	/^f01046c3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
+f01046c6	obj/kern/kernel.asm	/^f01046c6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f01046ca	obj/kern/kernel.asm	/^f01046ca:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f01046cd	obj/kern/kernel.asm	/^f01046cd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f01046d1	obj/kern/kernel.asm	/^f01046d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f01046d4	obj/kern/kernel.asm	/^f01046d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f01046d8	obj/kern/kernel.asm	/^f01046d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01046db	obj/kern/kernel.asm	/^f01046db:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01046de	obj/kern/kernel.asm	/^f01046de:	e8 7b ff ff ff       	call   f010465e <vsnprintf>$/;"	l
+f01046e3	obj/kern/kernel.asm	/^f01046e3:	c9                   	leave  $/;"	l
+f01046e4	obj/kern/kernel.asm	/^f01046e4:	c3                   	ret    $/;"	l
+f01046e5	obj/kern/kernel.asm	/^f01046e5:	00 00                	add    %al,(%eax)$/;"	l
+f01046e8	obj/kern/kernel.asm	/^f01046e8 <readline>:$/;"	l
+f01046e8	obj/kern/kernel.asm	/^f01046e8:	55                   	push   %ebp$/;"	l
+f01046e9	obj/kern/kernel.asm	/^f01046e9:	89 e5                	mov    %esp,%ebp$/;"	l
+f01046eb	obj/kern/kernel.asm	/^f01046eb:	57                   	push   %edi$/;"	l
+f01046ec	obj/kern/kernel.asm	/^f01046ec:	56                   	push   %esi$/;"	l
+f01046ed	obj/kern/kernel.asm	/^f01046ed:	53                   	push   %ebx$/;"	l
+f01046ee	obj/kern/kernel.asm	/^f01046ee:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
+f01046f1	obj/kern/kernel.asm	/^f01046f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01046f4	obj/kern/kernel.asm	/^f01046f4:	85 c0                	test   %eax,%eax$/;"	l
+f01046f6	obj/kern/kernel.asm	/^f01046f6:	74 10                	je     f0104708 <readline+0x20>$/;"	l
+f01046f8	obj/kern/kernel.asm	/^f01046f8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f01046fc	obj/kern/kernel.asm	/^f01046fc:	c7 04 24 39 5a 10 f0 	movl   $0xf0105a39,(%esp)$/;"	l
+f0104703	obj/kern/kernel.asm	/^f0104703:	e8 1e f0 ff ff       	call   f0103726 <cprintf>$/;"	l
+f0104708	obj/kern/kernel.asm	/^f0104708:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
+f010470f	obj/kern/kernel.asm	/^f010470f:	e8 d3 be ff ff       	call   f01005e7 <iscons>$/;"	l
+f0104714	obj/kern/kernel.asm	/^f0104714:	89 c7                	mov    %eax,%edi$/;"	l
+f0104716	obj/kern/kernel.asm	/^f0104716:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
+f010471b	obj/kern/kernel.asm	/^f010471b:	e8 b6 be ff ff       	call   f01005d6 <getchar>$/;"	l
+f0104720	obj/kern/kernel.asm	/^f0104720:	89 c3                	mov    %eax,%ebx$/;"	l
+f0104722	obj/kern/kernel.asm	/^f0104722:	85 c0                	test   %eax,%eax$/;"	l
+f0104724	obj/kern/kernel.asm	/^f0104724:	79 17                	jns    f010473d <readline+0x55>$/;"	l
+f0104726	obj/kern/kernel.asm	/^f0104726:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f010472a	obj/kern/kernel.asm	/^f010472a:	c7 04 24 60 64 10 f0 	movl   $0xf0106460,(%esp)$/;"	l
+f0104731	obj/kern/kernel.asm	/^f0104731:	e8 f0 ef ff ff       	call   f0103726 <cprintf>$/;"	l
+f0104736	obj/kern/kernel.asm	/^f0104736:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f010473b	obj/kern/kernel.asm	/^f010473b:	eb 69                	jmp    f01047a6 <readline+0xbe>$/;"	l
+f010473d	obj/kern/kernel.asm	/^f010473d:	83 f8 08             	cmp    $0x8,%eax$/;"	l
+f0104740	obj/kern/kernel.asm	/^f0104740:	74 05                	je     f0104747 <readline+0x5f>$/;"	l
+f0104742	obj/kern/kernel.asm	/^f0104742:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
+f0104745	obj/kern/kernel.asm	/^f0104745:	75 17                	jne    f010475e <readline+0x76>$/;"	l
+f0104747	obj/kern/kernel.asm	/^f0104747:	85 f6                	test   %esi,%esi$/;"	l
+f0104749	obj/kern/kernel.asm	/^f0104749:	7e 13                	jle    f010475e <readline+0x76>$/;"	l
+f010474b	obj/kern/kernel.asm	/^f010474b:	85 ff                	test   %edi,%edi$/;"	l
+f010474d	obj/kern/kernel.asm	/^f010474d:	74 0c                	je     f010475b <readline+0x73>$/;"	l
+f010474f	obj/kern/kernel.asm	/^f010474f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
+f0104756	obj/kern/kernel.asm	/^f0104756:	e8 6b be ff ff       	call   f01005c6 <cputchar>$/;"	l
+f010475b	obj/kern/kernel.asm	/^f010475b:	4e                   	dec    %esi$/;"	l
+f010475c	obj/kern/kernel.asm	/^f010475c:	eb bd                	jmp    f010471b <readline+0x33>$/;"	l
+f010475e	obj/kern/kernel.asm	/^f010475e:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
+f0104761	obj/kern/kernel.asm	/^f0104761:	7e 1d                	jle    f0104780 <readline+0x98>$/;"	l
+f0104763	obj/kern/kernel.asm	/^f0104763:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
+f0104769	obj/kern/kernel.asm	/^f0104769:	7f 15                	jg     f0104780 <readline+0x98>$/;"	l
+f010476b	obj/kern/kernel.asm	/^f010476b:	85 ff                	test   %edi,%edi$/;"	l
+f010476d	obj/kern/kernel.asm	/^f010476d:	74 08                	je     f0104777 <readline+0x8f>$/;"	l
+f010476f	obj/kern/kernel.asm	/^f010476f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f0104772	obj/kern/kernel.asm	/^f0104772:	e8 4f be ff ff       	call   f01005c6 <cputchar>$/;"	l
+f0104777	obj/kern/kernel.asm	/^f0104777:	88 9e 40 5a 1e f0    	mov    %bl,-0xfe1a5c0(%esi)$/;"	l
+f010477d	obj/kern/kernel.asm	/^f010477d:	46                   	inc    %esi$/;"	l
+f010477e	obj/kern/kernel.asm	/^f010477e:	eb 9b                	jmp    f010471b <readline+0x33>$/;"	l
+f0104780	obj/kern/kernel.asm	/^f0104780:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
+f0104783	obj/kern/kernel.asm	/^f0104783:	74 05                	je     f010478a <readline+0xa2>$/;"	l
+f0104785	obj/kern/kernel.asm	/^f0104785:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
+f0104788	obj/kern/kernel.asm	/^f0104788:	75 91                	jne    f010471b <readline+0x33>$/;"	l
+f010478a	obj/kern/kernel.asm	/^f010478a:	85 ff                	test   %edi,%edi$/;"	l
+f010478c	obj/kern/kernel.asm	/^f010478c:	74 0c                	je     f010479a <readline+0xb2>$/;"	l
+f010478e	obj/kern/kernel.asm	/^f010478e:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
+f0104795	obj/kern/kernel.asm	/^f0104795:	e8 2c be ff ff       	call   f01005c6 <cputchar>$/;"	l
+f010479a	obj/kern/kernel.asm	/^f010479a:	c6 86 40 5a 1e f0 00 	movb   $0x0,-0xfe1a5c0(%esi)$/;"	l
+f01047a1	obj/kern/kernel.asm	/^f01047a1:	b8 40 5a 1e f0       	mov    $0xf01e5a40,%eax$/;"	l
+f01047a6	obj/kern/kernel.asm	/^f01047a6:	83 c4 1c             	add    $0x1c,%esp$/;"	l
+f01047a9	obj/kern/kernel.asm	/^f01047a9:	5b                   	pop    %ebx$/;"	l
+f01047aa	obj/kern/kernel.asm	/^f01047aa:	5e                   	pop    %esi$/;"	l
+f01047ab	obj/kern/kernel.asm	/^f01047ab:	5f                   	pop    %edi$/;"	l
+f01047ac	obj/kern/kernel.asm	/^f01047ac:	5d                   	pop    %ebp$/;"	l
+f01047ad	obj/kern/kernel.asm	/^f01047ad:	c3                   	ret    $/;"	l
+f01047b0	obj/kern/kernel.asm	/^f01047b0 <strlen>:$/;"	l
+f01047b0	obj/kern/kernel.asm	/^f01047b0:	55                   	push   %ebp$/;"	l
+f01047b1	obj/kern/kernel.asm	/^f01047b1:	89 e5                	mov    %esp,%ebp$/;"	l
+f01047b3	obj/kern/kernel.asm	/^f01047b3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
+f01047b6	obj/kern/kernel.asm	/^f01047b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01047bb	obj/kern/kernel.asm	/^f01047bb:	eb 01                	jmp    f01047be <strlen+0xe>$/;"	l
+f01047bd	obj/kern/kernel.asm	/^f01047bd:	40                   	inc    %eax$/;"	l
+f01047be	obj/kern/kernel.asm	/^f01047be:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
+f01047c2	obj/kern/kernel.asm	/^f01047c2:	75 f9                	jne    f01047bd <strlen+0xd>$/;"	l
+f01047c4	obj/kern/kernel.asm	/^f01047c4:	5d                   	pop    %ebp$/;"	l
+f01047c5	obj/kern/kernel.asm	/^f01047c5:	c3                   	ret    $/;"	l
+f01047c6	obj/kern/kernel.asm	/^f01047c6 <strnlen>:$/;"	l
+f01047c6	obj/kern/kernel.asm	/^f01047c6:	55                   	push   %ebp$/;"	l
+f01047c7	obj/kern/kernel.asm	/^f01047c7:	89 e5                	mov    %esp,%ebp$/;"	l
+f01047c9	obj/kern/kernel.asm	/^f01047c9:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
+f01047cc	obj/kern/kernel.asm	/^f01047cc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
+f01047cf	obj/kern/kernel.asm	/^f01047cf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01047d4	obj/kern/kernel.asm	/^f01047d4:	eb 01                	jmp    f01047d7 <strnlen+0x11>$/;"	l
+f01047d6	obj/kern/kernel.asm	/^f01047d6:	40                   	inc    %eax$/;"	l
+f01047d7	obj/kern/kernel.asm	/^f01047d7:	39 d0                	cmp    %edx,%eax$/;"	l
+f01047d9	obj/kern/kernel.asm	/^f01047d9:	74 06                	je     f01047e1 <strnlen+0x1b>$/;"	l
+f01047db	obj/kern/kernel.asm	/^f01047db:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
+f01047df	obj/kern/kernel.asm	/^f01047df:	75 f5                	jne    f01047d6 <strnlen+0x10>$/;"	l
+f01047e1	obj/kern/kernel.asm	/^f01047e1:	5d                   	pop    %ebp$/;"	l
+f01047e2	obj/kern/kernel.asm	/^f01047e2:	c3                   	ret    $/;"	l
+f01047e3	obj/kern/kernel.asm	/^f01047e3 <strcpy>:$/;"	l
+f01047e3	obj/kern/kernel.asm	/^f01047e3:	55                   	push   %ebp$/;"	l
+f01047e4	obj/kern/kernel.asm	/^f01047e4:	89 e5                	mov    %esp,%ebp$/;"	l
+f01047e6	obj/kern/kernel.asm	/^f01047e6:	53                   	push   %ebx$/;"	l
+f01047e7	obj/kern/kernel.asm	/^f01047e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01047ea	obj/kern/kernel.asm	/^f01047ea:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
+f01047ed	obj/kern/kernel.asm	/^f01047ed:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f01047f2	obj/kern/kernel.asm	/^f01047f2:	8a 0c 13             	mov    (%ebx,%edx,1),%cl$/;"	l
+f01047f5	obj/kern/kernel.asm	/^f01047f5:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
+f01047f8	obj/kern/kernel.asm	/^f01047f8:	42                   	inc    %edx$/;"	l
+f01047f9	obj/kern/kernel.asm	/^f01047f9:	84 c9                	test   %cl,%cl$/;"	l
+f01047fb	obj/kern/kernel.asm	/^f01047fb:	75 f5                	jne    f01047f2 <strcpy+0xf>$/;"	l
+f01047fd	obj/kern/kernel.asm	/^f01047fd:	5b                   	pop    %ebx$/;"	l
+f01047fe	obj/kern/kernel.asm	/^f01047fe:	5d                   	pop    %ebp$/;"	l
+f01047ff	obj/kern/kernel.asm	/^f01047ff:	c3                   	ret    $/;"	l
+f0104800	obj/kern/kernel.asm	/^f0104800 <strcat>:$/;"	l
+f0104800	obj/kern/kernel.asm	/^f0104800:	55                   	push   %ebp$/;"	l
+f0104801	obj/kern/kernel.asm	/^f0104801:	89 e5                	mov    %esp,%ebp$/;"	l
+f0104803	obj/kern/kernel.asm	/^f0104803:	53                   	push   %ebx$/;"	l
+f0104804	obj/kern/kernel.asm	/^f0104804:	83 ec 08             	sub    $0x8,%esp$/;"	l
+f0104807	obj/kern/kernel.asm	/^f0104807:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
+f010480a	obj/kern/kernel.asm	/^f010480a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
+f010480d	obj/kern/kernel.asm	/^f010480d:	e8 9e ff ff ff       	call   f01047b0 <strlen>$/;"	l
+f0104812	obj/kern/kernel.asm	/^f0104812:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
+f0104815	obj/kern/kernel.asm	/^f0104815:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
+f0104819	obj/kern/kernel.asm	/^f0104819:	01 d8                	add    %ebx,%eax$/;"	l
+f010481b	obj/kern/kernel.asm	/^f010481b:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f010481e	obj/kern/kernel.asm	/^f010481e:	e8 c0 ff ff ff       	call   f01047e3 <strcpy>$/;"	l
+f0104823	obj/kern/kernel.asm	/^f0104823:	89 d8                	mov    %ebx,%eax$/;"	l
+f0104825	obj/kern/kernel.asm	/^f0104825:	83 c4 08             	add    $0x8,%esp$/;"	l
+f0104828	obj/kern/kernel.asm	/^f0104828:	5b                   	pop    %ebx$/;"	l
+f0104829	obj/kern/kernel.asm	/^f0104829:	5d                   	pop    %ebp$/;"	l
+f010482a	obj/kern/kernel.asm	/^f010482a:	c3                   	ret    $/;"	l
+f010482b	obj/kern/kernel.asm	/^f010482b <strncpy>:$/;"	l
+f010482b	obj/kern/kernel.asm	/^f010482b:	55                   	push   %ebp$/;"	l
+f010482c	obj/kern/kernel.asm	/^f010482c:	89 e5                	mov    %esp,%ebp$/;"	l
+f010482e	obj/kern/kernel.asm	/^f010482e:	56                   	push   %esi$/;"	l
+f010482f	obj/kern/kernel.asm	/^f010482f:	53                   	push   %ebx$/;"	l
+f0104830	obj/kern/kernel.asm	/^f0104830:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0104833	obj/kern/kernel.asm	/^f0104833:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
+f0104836	obj/kern/kernel.asm	/^f0104836:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
+f0104839	obj/kern/kernel.asm	/^f0104839:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
+f010483e	obj/kern/kernel.asm	/^f010483e:	eb 0c                	jmp    f010484c <strncpy+0x21>$/;"	l
+f0104840	obj/kern/kernel.asm	/^f0104840:	8a 1a                	mov    (%edx),%bl$/;"	l
+f0104842	obj/kern/kernel.asm	/^f0104842:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
+f0104845	obj/kern/kernel.asm	/^f0104845:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
+f0104848	obj/kern/kernel.asm	/^f0104848:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
+f010484b	obj/kern/kernel.asm	/^f010484b:	41                   	inc    %ecx$/;"	l
+f010484c	obj/kern/kernel.asm	/^f010484c:	39 f1                	cmp    %esi,%ecx$/;"	l
+f010484e	obj/kern/kernel.asm	/^f010484e:	75 f0                	jne    f0104840 <strncpy+0x15>$/;"	l
+f0104850	obj/kern/kernel.asm	/^f0104850:	5b                   	pop    %ebx$/;"	l
+f0104851	obj/kern/kernel.asm	/^f0104851:	5e                   	pop    %esi$/;"	l
+f0104852	obj/kern/kernel.asm	/^f0104852:	5d                   	pop    %ebp$/;"	l
+f0104853	obj/kern/kernel.asm	/^f0104853:	c3                   	ret    $/;"	l
+f0104854	obj/kern/kernel.asm	/^f0104854 <strlcpy>:$/;"	l
+f0104854	obj/kern/kernel.asm	/^f0104854:	55                   	push   %ebp$/;"	l
+f0104855	obj/kern/kernel.asm	/^f0104855:	89 e5                	mov    %esp,%ebp$/;"	l
+f0104857	obj/kern/kernel.asm	/^f0104857:	56                   	push   %esi$/;"	l
+f0104858	obj/kern/kernel.asm	/^f0104858:	53                   	push   %ebx$/;"	l
+f0104859	obj/kern/kernel.asm	/^f0104859:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
+f010485c	obj/kern/kernel.asm	/^f010485c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
+f010485f	obj/kern/kernel.asm	/^f010485f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
+f0104862	obj/kern/kernel.asm	/^f0104862:	85 d2                	test   %edx,%edx$/;"	l
+f0104864	obj/kern/kernel.asm	/^f0104864:	75 0a                	jne    f0104870 <strlcpy+0x1c>$/;"	l
+f0104866	obj/kern/kernel.asm	/^f0104866:	89 f0                	mov    %esi,%eax$/;"	l
+f0104868	obj/kern/kernel.asm	/^f0104868:	eb 1a                	jmp    f0104884 <strlcpy+0x30>$/;"	l
+f010486a	obj/kern/kernel.asm	/^f010486a:	88 18                	mov    %bl,(%eax)$/;"	l
+f010486c	obj/kern/kernel.asm	/^f010486c:	40                   	inc    %eax$/;"	l
+f010486d	obj/kern/kernel.asm	/^f010486d:	41                   	inc    %ecx$/;"	l
+f010486e	obj/kern/kernel.asm	/^f010486e:	eb 02                	jmp    f0104872 <strlcpy+0x1e>$/;"	l
+f0104870	obj/kern/kernel.asm	/^f0104870:	89 f0                	mov    %esi,%eax$/;"	l
+f0104872	obj/kern/kernel.asm	/^f0104872:	4a                   	dec    %edx$/;"	l
+f0104873	obj/kern/kernel.asm	/^f0104873:	74 0a                	je     f010487f <strlcpy+0x2b>$/;"	l
+f0104875	obj/kern/kernel.asm	/^f0104875:	8a 19                	mov    (%ecx),%bl$/;"	l
+f0104877	obj/kern/kernel.asm	/^f0104877:	84 db                	test   %bl,%bl$/;"	l
+f0104879	obj/kern/kernel.asm	/^f0104879:	75 ef                	jne    f010486a <strlcpy+0x16>$/;"	l
+f010487b	obj/kern/kernel.asm	/^f010487b:	89 c2                	mov    %eax,%edx$/;"	l
+f010487d	obj/kern/kernel.asm	/^f010487d:	eb 02                	jmp    f0104881 <strlcpy+0x2d>$/;"	l
+f010487f	obj/kern/kernel.asm	/^f010487f:	89 c2                	mov    %eax,%edx$/;"	l
+f0104881	obj/kern/kernel.asm	/^f0104881:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
+f0104884	obj/kern/kernel.asm	/^f0104884:	29 f0                	sub    %esi,%eax$/;"	l
+f0104886	obj/kern/kernel.asm	/^f0104886:	5b                   	pop    %ebx$/;"	l
+f0104887	obj/kern/kernel.asm	/^f0104887:	5e                   	pop    %esi$/;"	l
+f0104888	obj/kern/kernel.asm	/^f0104888:	5d                   	pop    %ebp$/;"	l
+f0104889	obj/kern/kernel.asm	/^f0104889:	c3                   	ret    $/;"	l
+f010488a	obj/kern/kernel.asm	/^f010488a <strcmp>:$/;"	l
+f010488a	obj/kern/kernel.asm	/^f010488a:	55                   	push   %ebp$/;"	l
+f010488b	obj/kern/kernel.asm	/^f010488b:	89 e5                	mov    %esp,%ebp$/;"	l
+f010488d	obj/kern/kernel.asm	/^f010488d:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
+f0104890	obj/kern/kernel.asm	/^f0104890:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
+f0104893	obj/kern/kernel.asm	/^f0104893:	eb 02                	jmp    f0104897 <strcmp+0xd>$/;"	l
+f0104895	obj/kern/kernel.asm	/^f0104895:	41                   	inc    %ecx$/;"	l
+f0104896	obj/kern/kernel.asm	/^f0104896:	42                   	inc    %edx$/;"	l
+f0104897	obj/kern/kernel.asm	/^f0104897:	8a 01                	mov    (%ecx),%al$/;"	l
+f0104899	obj/kern/kernel.asm	/^f0104899:	84 c0                	test   %al,%al$/;"	l
+f010489b	obj/kern/kernel.asm	/^f010489b:	74 04                	je     f01048a1 <strcmp+0x17>$/;"	l
+f010489d	obj/kern/kernel.asm	/^f010489d:	3a 02                	cmp    (%edx),%al$/;"	l
+f010489f	obj/kern/kernel.asm	/^f010489f:	74 f4                	je     f0104895 <strcmp+0xb>$/;"	l
+f01048a1	obj/kern/kernel.asm	/^f01048a1:	0f b6 c0             	movzbl %al,%eax$/;"	l
+f01048a4	obj/kern/kernel.asm	/^f01048a4:	0f b6 12             	movzbl (%edx),%edx$/;"	l
+f01048a7	obj/kern/kernel.asm	/^f01048a7:	29 d0                	sub    %edx,%eax$/;"	l
+f01048a9	obj/kern/kernel.asm	/^f01048a9:	5d                   	pop    %ebp$/;"	l
+f01048aa	obj/kern/kernel.asm	/^f01048aa:	c3                   	ret    $/;"	l
+f01048ab	obj/kern/kernel.asm	/^f01048ab <strncmp>:$/;"	l
+f01048ab	obj/kern/kernel.asm	/^f01048ab:	55                   	push   %ebp$/;"	l
+f01048ac	obj/kern/kernel.asm	/^f01048ac:	89 e5                	mov    %esp,%ebp$/;"	l
+f01048ae	obj/kern/kernel.asm	/^f01048ae:	53                   	push   %ebx$/;"	l
+f01048af	obj/kern/kernel.asm	/^f01048af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01048b2	obj/kern/kernel.asm	/^f01048b2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
+f01048b5	obj/kern/kernel.asm	/^f01048b5:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
+f01048b8	obj/kern/kernel.asm	/^f01048b8:	eb 03                	jmp    f01048bd <strncmp+0x12>$/;"	l
+f01048ba	obj/kern/kernel.asm	/^f01048ba:	4a                   	dec    %edx$/;"	l
+f01048bb	obj/kern/kernel.asm	/^f01048bb:	40                   	inc    %eax$/;"	l
+f01048bc	obj/kern/kernel.asm	/^f01048bc:	41                   	inc    %ecx$/;"	l
+f01048bd	obj/kern/kernel.asm	/^f01048bd:	85 d2                	test   %edx,%edx$/;"	l
+f01048bf	obj/kern/kernel.asm	/^f01048bf:	74 14                	je     f01048d5 <strncmp+0x2a>$/;"	l
+f01048c1	obj/kern/kernel.asm	/^f01048c1:	8a 18                	mov    (%eax),%bl$/;"	l
+f01048c3	obj/kern/kernel.asm	/^f01048c3:	84 db                	test   %bl,%bl$/;"	l
+f01048c5	obj/kern/kernel.asm	/^f01048c5:	74 04                	je     f01048cb <strncmp+0x20>$/;"	l
+f01048c7	obj/kern/kernel.asm	/^f01048c7:	3a 19                	cmp    (%ecx),%bl$/;"	l
+f01048c9	obj/kern/kernel.asm	/^f01048c9:	74 ef                	je     f01048ba <strncmp+0xf>$/;"	l
+f01048cb	obj/kern/kernel.asm	/^f01048cb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
+f01048ce	obj/kern/kernel.asm	/^f01048ce:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
+f01048d1	obj/kern/kernel.asm	/^f01048d1:	29 d0                	sub    %edx,%eax$/;"	l
+f01048d3	obj/kern/kernel.asm	/^f01048d3:	eb 05                	jmp    f01048da <strncmp+0x2f>$/;"	l
+f01048d5	obj/kern/kernel.asm	/^f01048d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01048da	obj/kern/kernel.asm	/^f01048da:	5b                   	pop    %ebx$/;"	l
+f01048db	obj/kern/kernel.asm	/^f01048db:	5d                   	pop    %ebp$/;"	l
+f01048dc	obj/kern/kernel.asm	/^f01048dc:	c3                   	ret    $/;"	l
+f01048dd	obj/kern/kernel.asm	/^f01048dd <strchr>:$/;"	l
+f01048dd	obj/kern/kernel.asm	/^f01048dd:	55                   	push   %ebp$/;"	l
+f01048de	obj/kern/kernel.asm	/^f01048de:	89 e5                	mov    %esp,%ebp$/;"	l
+f01048e0	obj/kern/kernel.asm	/^f01048e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01048e3	obj/kern/kernel.asm	/^f01048e3:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
+f01048e6	obj/kern/kernel.asm	/^f01048e6:	eb 05                	jmp    f01048ed <strchr+0x10>$/;"	l
+f01048e8	obj/kern/kernel.asm	/^f01048e8:	38 ca                	cmp    %cl,%dl$/;"	l
+f01048ea	obj/kern/kernel.asm	/^f01048ea:	74 0c                	je     f01048f8 <strchr+0x1b>$/;"	l
+f01048ec	obj/kern/kernel.asm	/^f01048ec:	40                   	inc    %eax$/;"	l
+f01048ed	obj/kern/kernel.asm	/^f01048ed:	8a 10                	mov    (%eax),%dl$/;"	l
+f01048ef	obj/kern/kernel.asm	/^f01048ef:	84 d2                	test   %dl,%dl$/;"	l
+f01048f1	obj/kern/kernel.asm	/^f01048f1:	75 f5                	jne    f01048e8 <strchr+0xb>$/;"	l
+f01048f3	obj/kern/kernel.asm	/^f01048f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f01048f8	obj/kern/kernel.asm	/^f01048f8:	5d                   	pop    %ebp$/;"	l
+f01048f9	obj/kern/kernel.asm	/^f01048f9:	c3                   	ret    $/;"	l
+f01048fa	obj/kern/kernel.asm	/^f01048fa <strfind>:$/;"	l
+f01048fa	obj/kern/kernel.asm	/^f01048fa:	55                   	push   %ebp$/;"	l
+f01048fb	obj/kern/kernel.asm	/^f01048fb:	89 e5                	mov    %esp,%ebp$/;"	l
+f01048fd	obj/kern/kernel.asm	/^f01048fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0104900	obj/kern/kernel.asm	/^f0104900:	8a 4d 0c             	mov    0xc(%ebp),%cl$/;"	l
+f0104903	obj/kern/kernel.asm	/^f0104903:	eb 05                	jmp    f010490a <strfind+0x10>$/;"	l
+f0104905	obj/kern/kernel.asm	/^f0104905:	38 ca                	cmp    %cl,%dl$/;"	l
+f0104907	obj/kern/kernel.asm	/^f0104907:	74 07                	je     f0104910 <strfind+0x16>$/;"	l
+f0104909	obj/kern/kernel.asm	/^f0104909:	40                   	inc    %eax$/;"	l
+f010490a	obj/kern/kernel.asm	/^f010490a:	8a 10                	mov    (%eax),%dl$/;"	l
+f010490c	obj/kern/kernel.asm	/^f010490c:	84 d2                	test   %dl,%dl$/;"	l
+f010490e	obj/kern/kernel.asm	/^f010490e:	75 f5                	jne    f0104905 <strfind+0xb>$/;"	l
+f0104910	obj/kern/kernel.asm	/^f0104910:	5d                   	pop    %ebp$/;"	l
+f0104911	obj/kern/kernel.asm	/^f0104911:	c3                   	ret    $/;"	l
+f0104912	obj/kern/kernel.asm	/^f0104912 <memset>:$/;"	l
+f0104912	obj/kern/kernel.asm	/^f0104912:	55                   	push   %ebp$/;"	l
+f0104913	obj/kern/kernel.asm	/^f0104913:	89 e5                	mov    %esp,%ebp$/;"	l
+f0104915	obj/kern/kernel.asm	/^f0104915:	57                   	push   %edi$/;"	l
+f0104916	obj/kern/kernel.asm	/^f0104916:	56                   	push   %esi$/;"	l
+f0104917	obj/kern/kernel.asm	/^f0104917:	53                   	push   %ebx$/;"	l
+f0104918	obj/kern/kernel.asm	/^f0104918:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f010491b	obj/kern/kernel.asm	/^f010491b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f010491e	obj/kern/kernel.asm	/^f010491e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
+f0104921	obj/kern/kernel.asm	/^f0104921:	85 c9                	test   %ecx,%ecx$/;"	l
+f0104923	obj/kern/kernel.asm	/^f0104923:	74 30                	je     f0104955 <memset+0x43>$/;"	l
+f0104925	obj/kern/kernel.asm	/^f0104925:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
+f010492b	obj/kern/kernel.asm	/^f010492b:	75 25                	jne    f0104952 <memset+0x40>$/;"	l
+f010492d	obj/kern/kernel.asm	/^f010492d:	f6 c1 03             	test   $0x3,%cl$/;"	l
+f0104930	obj/kern/kernel.asm	/^f0104930:	75 20                	jne    f0104952 <memset+0x40>$/;"	l
+f0104932	obj/kern/kernel.asm	/^f0104932:	0f b6 d0             	movzbl %al,%edx$/;"	l
+f0104935	obj/kern/kernel.asm	/^f0104935:	89 d3                	mov    %edx,%ebx$/;"	l
+f0104937	obj/kern/kernel.asm	/^f0104937:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
+f010493a	obj/kern/kernel.asm	/^f010493a:	89 d6                	mov    %edx,%esi$/;"	l
+f010493c	obj/kern/kernel.asm	/^f010493c:	c1 e6 18             	shl    $0x18,%esi$/;"	l
+f010493f	obj/kern/kernel.asm	/^f010493f:	89 d0                	mov    %edx,%eax$/;"	l
+f0104941	obj/kern/kernel.asm	/^f0104941:	c1 e0 10             	shl    $0x10,%eax$/;"	l
+f0104944	obj/kern/kernel.asm	/^f0104944:	09 f0                	or     %esi,%eax$/;"	l
+f0104946	obj/kern/kernel.asm	/^f0104946:	09 d0                	or     %edx,%eax$/;"	l
+f0104948	obj/kern/kernel.asm	/^f0104948:	09 d8                	or     %ebx,%eax$/;"	l
+f010494a	obj/kern/kernel.asm	/^f010494a:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
+f010494d	obj/kern/kernel.asm	/^f010494d:	fc                   	cld    $/;"	l
+f010494e	obj/kern/kernel.asm	/^f010494e:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
+f0104950	obj/kern/kernel.asm	/^f0104950:	eb 03                	jmp    f0104955 <memset+0x43>$/;"	l
+f0104952	obj/kern/kernel.asm	/^f0104952:	fc                   	cld    $/;"	l
+f0104953	obj/kern/kernel.asm	/^f0104953:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
+f0104955	obj/kern/kernel.asm	/^f0104955:	89 f8                	mov    %edi,%eax$/;"	l
+f0104957	obj/kern/kernel.asm	/^f0104957:	5b                   	pop    %ebx$/;"	l
+f0104958	obj/kern/kernel.asm	/^f0104958:	5e                   	pop    %esi$/;"	l
+f0104959	obj/kern/kernel.asm	/^f0104959:	5f                   	pop    %edi$/;"	l
+f010495a	obj/kern/kernel.asm	/^f010495a:	5d                   	pop    %ebp$/;"	l
+f010495b	obj/kern/kernel.asm	/^f010495b:	c3                   	ret    $/;"	l
+f010495c	obj/kern/kernel.asm	/^f010495c <memmove>:$/;"	l
+f010495c	obj/kern/kernel.asm	/^f010495c:	55                   	push   %ebp$/;"	l
+f010495d	obj/kern/kernel.asm	/^f010495d:	89 e5                	mov    %esp,%ebp$/;"	l
+f010495f	obj/kern/kernel.asm	/^f010495f:	57                   	push   %edi$/;"	l
+f0104960	obj/kern/kernel.asm	/^f0104960:	56                   	push   %esi$/;"	l
+f0104961	obj/kern/kernel.asm	/^f0104961:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0104964	obj/kern/kernel.asm	/^f0104964:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
+f0104967	obj/kern/kernel.asm	/^f0104967:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
+f010496a	obj/kern/kernel.asm	/^f010496a:	39 c6                	cmp    %eax,%esi$/;"	l
+f010496c	obj/kern/kernel.asm	/^f010496c:	73 34                	jae    f01049a2 <memmove+0x46>$/;"	l
+f010496e	obj/kern/kernel.asm	/^f010496e:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
+f0104971	obj/kern/kernel.asm	/^f0104971:	39 d0                	cmp    %edx,%eax$/;"	l
+f0104973	obj/kern/kernel.asm	/^f0104973:	73 2d                	jae    f01049a2 <memmove+0x46>$/;"	l
+f0104975	obj/kern/kernel.asm	/^f0104975:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
+f0104978	obj/kern/kernel.asm	/^f0104978:	f6 c2 03             	test   $0x3,%dl$/;"	l
+f010497b	obj/kern/kernel.asm	/^f010497b:	75 1b                	jne    f0104998 <memmove+0x3c>$/;"	l
+f010497d	obj/kern/kernel.asm	/^f010497d:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
+f0104983	obj/kern/kernel.asm	/^f0104983:	75 13                	jne    f0104998 <memmove+0x3c>$/;"	l
+f0104985	obj/kern/kernel.asm	/^f0104985:	f6 c1 03             	test   $0x3,%cl$/;"	l
+f0104988	obj/kern/kernel.asm	/^f0104988:	75 0e                	jne    f0104998 <memmove+0x3c>$/;"	l
+f010498a	obj/kern/kernel.asm	/^f010498a:	83 ef 04             	sub    $0x4,%edi$/;"	l
+f010498d	obj/kern/kernel.asm	/^f010498d:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
+f0104990	obj/kern/kernel.asm	/^f0104990:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
+f0104993	obj/kern/kernel.asm	/^f0104993:	fd                   	std    $/;"	l
+f0104994	obj/kern/kernel.asm	/^f0104994:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
+f0104996	obj/kern/kernel.asm	/^f0104996:	eb 07                	jmp    f010499f <memmove+0x43>$/;"	l
+f0104998	obj/kern/kernel.asm	/^f0104998:	4f                   	dec    %edi$/;"	l
+f0104999	obj/kern/kernel.asm	/^f0104999:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
+f010499c	obj/kern/kernel.asm	/^f010499c:	fd                   	std    $/;"	l
+f010499d	obj/kern/kernel.asm	/^f010499d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
+f010499f	obj/kern/kernel.asm	/^f010499f:	fc                   	cld    $/;"	l
+f01049a0	obj/kern/kernel.asm	/^f01049a0:	eb 20                	jmp    f01049c2 <memmove+0x66>$/;"	l
+f01049a2	obj/kern/kernel.asm	/^f01049a2:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
+f01049a8	obj/kern/kernel.asm	/^f01049a8:	75 13                	jne    f01049bd <memmove+0x61>$/;"	l
+f01049aa	obj/kern/kernel.asm	/^f01049aa:	a8 03                	test   $0x3,%al$/;"	l
+f01049ac	obj/kern/kernel.asm	/^f01049ac:	75 0f                	jne    f01049bd <memmove+0x61>$/;"	l
+f01049ae	obj/kern/kernel.asm	/^f01049ae:	f6 c1 03             	test   $0x3,%cl$/;"	l
+f01049b1	obj/kern/kernel.asm	/^f01049b1:	75 0a                	jne    f01049bd <memmove+0x61>$/;"	l
+f01049b3	obj/kern/kernel.asm	/^f01049b3:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
+f01049b6	obj/kern/kernel.asm	/^f01049b6:	89 c7                	mov    %eax,%edi$/;"	l
+f01049b8	obj/kern/kernel.asm	/^f01049b8:	fc                   	cld    $/;"	l
+f01049b9	obj/kern/kernel.asm	/^f01049b9:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
+f01049bb	obj/kern/kernel.asm	/^f01049bb:	eb 05                	jmp    f01049c2 <memmove+0x66>$/;"	l
+f01049bd	obj/kern/kernel.asm	/^f01049bd:	89 c7                	mov    %eax,%edi$/;"	l
+f01049bf	obj/kern/kernel.asm	/^f01049bf:	fc                   	cld    $/;"	l
+f01049c0	obj/kern/kernel.asm	/^f01049c0:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
+f01049c2	obj/kern/kernel.asm	/^f01049c2:	5e                   	pop    %esi$/;"	l
+f01049c3	obj/kern/kernel.asm	/^f01049c3:	5f                   	pop    %edi$/;"	l
+f01049c4	obj/kern/kernel.asm	/^f01049c4:	5d                   	pop    %ebp$/;"	l
+f01049c5	obj/kern/kernel.asm	/^f01049c5:	c3                   	ret    $/;"	l
+f01049c6	obj/kern/kernel.asm	/^f01049c6 <memcpy>:$/;"	l
+f01049c6	obj/kern/kernel.asm	/^f01049c6:	55                   	push   %ebp$/;"	l
+f01049c7	obj/kern/kernel.asm	/^f01049c7:	89 e5                	mov    %esp,%ebp$/;"	l
+f01049c9	obj/kern/kernel.asm	/^f01049c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
+f01049cc	obj/kern/kernel.asm	/^f01049cc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
+f01049cf	obj/kern/kernel.asm	/^f01049cf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
+f01049d3	obj/kern/kernel.asm	/^f01049d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
+f01049d6	obj/kern/kernel.asm	/^f01049d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
+f01049da	obj/kern/kernel.asm	/^f01049da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f01049dd	obj/kern/kernel.asm	/^f01049dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
+f01049e0	obj/kern/kernel.asm	/^f01049e0:	e8 77 ff ff ff       	call   f010495c <memmove>$/;"	l
+f01049e5	obj/kern/kernel.asm	/^f01049e5:	c9                   	leave  $/;"	l
+f01049e6	obj/kern/kernel.asm	/^f01049e6:	c3                   	ret    $/;"	l
+f01049e7	obj/kern/kernel.asm	/^f01049e7 <memcmp>:$/;"	l
+f01049e7	obj/kern/kernel.asm	/^f01049e7:	55                   	push   %ebp$/;"	l
+f01049e8	obj/kern/kernel.asm	/^f01049e8:	89 e5                	mov    %esp,%ebp$/;"	l
+f01049ea	obj/kern/kernel.asm	/^f01049ea:	57                   	push   %edi$/;"	l
+f01049eb	obj/kern/kernel.asm	/^f01049eb:	56                   	push   %esi$/;"	l
+f01049ec	obj/kern/kernel.asm	/^f01049ec:	53                   	push   %ebx$/;"	l
+f01049ed	obj/kern/kernel.asm	/^f01049ed:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
+f01049f0	obj/kern/kernel.asm	/^f01049f0:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
+f01049f3	obj/kern/kernel.asm	/^f01049f3:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
+f01049f6	obj/kern/kernel.asm	/^f01049f6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
+f01049fb	obj/kern/kernel.asm	/^f01049fb:	eb 16                	jmp    f0104a13 <memcmp+0x2c>$/;"	l
+f01049fd	obj/kern/kernel.asm	/^f01049fd:	8a 04 17             	mov    (%edi,%edx,1),%al$/;"	l
+f0104a00	obj/kern/kernel.asm	/^f0104a00:	42                   	inc    %edx$/;"	l
+f0104a01	obj/kern/kernel.asm	/^f0104a01:	8a 4c 16 ff          	mov    -0x1(%esi,%edx,1),%cl$/;"	l
+f0104a05	obj/kern/kernel.asm	/^f0104a05:	38 c8                	cmp    %cl,%al$/;"	l
+f0104a07	obj/kern/kernel.asm	/^f0104a07:	74 0a                	je     f0104a13 <memcmp+0x2c>$/;"	l
+f0104a09	obj/kern/kernel.asm	/^f0104a09:	0f b6 c0             	movzbl %al,%eax$/;"	l
+f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
+f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	29 c8                	sub    %ecx,%eax$/;"	l
+f0104a11	obj/kern/kernel.asm	/^f0104a11:	eb 09                	jmp    f0104a1c <memcmp+0x35>$/;"	l
+f0104a13	obj/kern/kernel.asm	/^f0104a13:	39 da                	cmp    %ebx,%edx$/;"	l
+f0104a15	obj/kern/kernel.asm	/^f0104a15:	75 e6                	jne    f01049fd <memcmp+0x16>$/;"	l
+f0104a17	obj/kern/kernel.asm	/^f0104a17:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	5b                   	pop    %ebx$/;"	l
+f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	5e                   	pop    %esi$/;"	l
+f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	5f                   	pop    %edi$/;"	l
+f0104a1f	obj/kern/kernel.asm	/^f0104a1f:	5d                   	pop    %ebp$/;"	l
+f0104a20	obj/kern/kernel.asm	/^f0104a20:	c3                   	ret    $/;"	l
+f0104a21	obj/kern/kernel.asm	/^f0104a21 <memfind>:$/;"	l
+f0104a21	obj/kern/kernel.asm	/^f0104a21:	55                   	push   %ebp$/;"	l
+f0104a22	obj/kern/kernel.asm	/^f0104a22:	89 e5                	mov    %esp,%ebp$/;"	l
+f0104a24	obj/kern/kernel.asm	/^f0104a24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
+f0104a27	obj/kern/kernel.asm	/^f0104a27:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
+f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	89 c2                	mov    %eax,%edx$/;"	l
+f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
+f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	eb 05                	jmp    f0104a36 <memfind+0x15>$/;"	l
+f0104a31	obj/kern/kernel.asm	/^f0104a31:	38 08                	cmp    %cl,(%eax)$/;"	l
+f0104a33	obj/kern/kernel.asm	/^f0104a33:	74 05                	je     f0104a3a <memfind+0x19>$/;"	l
+f0104a35	obj/kern/kernel.asm	/^f0104a35:	40                   	inc    %eax$/;"	l
+f0104a36	obj/kern/kernel.asm	/^f0104a36:	39 d0                	cmp    %edx,%eax$/;"	l
+f0104a38	obj/kern/kernel.asm	/^f0104a38:	72 f7                	jb     f0104a31 <memfind+0x10>$/;"	l
+f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	5d                   	pop    %ebp$/;"	l
+f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	c3                   	ret    $/;"	l
+f0104a3c	obj/kern/kernel.asm	/^f0104a3c <strtol>:$/;"	l
+f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	55                   	push   %ebp$/;"	l
+f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	89 e5                	mov    %esp,%ebp$/;"	l
+f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	57                   	push   %edi$/;"	l
+f0104a40	obj/kern/kernel.asm	/^f0104a40:	56                   	push   %esi$/;"	l
+f0104a41	obj/kern/kernel.asm	/^f0104a41:	53                   	push   %ebx$/;"	l
+f0104a42	obj/kern/kernel.asm	/^f0104a42:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
+f0104a45	obj/kern/kernel.asm	/^f0104a45:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
+f0104a48	obj/kern/kernel.asm	/^f0104a48:	eb 01                	jmp    f0104a4b <strtol+0xf>$/;"	l
+f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	42                   	inc    %edx$/;"	l
+f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	8a 02                	mov    (%edx),%al$/;"	l
+f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	3c 20                	cmp    $0x20,%al$/;"	l
+f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	74 f9                	je     f0104a4a <strtol+0xe>$/;"	l
+f0104a51	obj/kern/kernel.asm	/^f0104a51:	3c 09                	cmp    $0x9,%al$/;"	l
+f0104a53	obj/kern/kernel.asm	/^f0104a53:	74 f5                	je     f0104a4a <strtol+0xe>$/;"	l
+f0104a55	obj/kern/kernel.asm	/^f0104a55:	3c 2b                	cmp    $0x2b,%al$/;"	l
+f0104a57	obj/kern/kernel.asm	/^f0104a57:	75 08                	jne    f0104a61 <strtol+0x25>$/;"	l
+f0104a59	obj/kern/kernel.asm	/^f0104a59:	42                   	inc    %edx$/;"	l
+f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
+f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	eb 13                	jmp    f0104a74 <strtol+0x38>$/;"	l
+f0104a61	obj/kern/kernel.asm	/^f0104a61:	3c 2d                	cmp    $0x2d,%al$/;"	l
+f0104a63	obj/kern/kernel.asm	/^f0104a63:	75 0a                	jne    f0104a6f <strtol+0x33>$/;"	l
+f0104a65	obj/kern/kernel.asm	/^f0104a65:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
+f0104a68	obj/kern/kernel.asm	/^f0104a68:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
+f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	eb 05                	jmp    f0104a74 <strtol+0x38>$/;"	l
+f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
+f0104a74	obj/kern/kernel.asm	/^f0104a74:	85 db                	test   %ebx,%ebx$/;"	l
+f0104a76	obj/kern/kernel.asm	/^f0104a76:	74 05                	je     f0104a7d <strtol+0x41>$/;"	l
+f0104a78	obj/kern/kernel.asm	/^f0104a78:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
+f0104a7b	obj/kern/kernel.asm	/^f0104a7b:	75 28                	jne    f0104aa5 <strtol+0x69>$/;"	l
+f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	8a 02                	mov    (%edx),%al$/;"	l
+f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	3c 30                	cmp    $0x30,%al$/;"	l
+f0104a81	obj/kern/kernel.asm	/^f0104a81:	75 10                	jne    f0104a93 <strtol+0x57>$/;"	l
+f0104a83	obj/kern/kernel.asm	/^f0104a83:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
+f0104a87	obj/kern/kernel.asm	/^f0104a87:	75 0a                	jne    f0104a93 <strtol+0x57>$/;"	l
+f0104a89	obj/kern/kernel.asm	/^f0104a89:	83 c2 02             	add    $0x2,%edx$/;"	l
+f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
+f0104a91	obj/kern/kernel.asm	/^f0104a91:	eb 12                	jmp    f0104aa5 <strtol+0x69>$/;"	l
+f0104a93	obj/kern/kernel.asm	/^f0104a93:	85 db                	test   %ebx,%ebx$/;"	l
+f0104a95	obj/kern/kernel.asm	/^f0104a95:	75 0e                	jne    f0104aa5 <strtol+0x69>$/;"	l
+f0104a97	obj/kern/kernel.asm	/^f0104a97:	3c 30                	cmp    $0x30,%al$/;"	l
+f0104a99	obj/kern/kernel.asm	/^f0104a99:	75 05                	jne    f0104aa0 <strtol+0x64>$/;"	l
+f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	42                   	inc    %edx$/;"	l
+f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	b3 08                	mov    $0x8,%bl$/;"	l
+f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	eb 05                	jmp    f0104aa5 <strtol+0x69>$/;"	l
+f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
+f0104aa5	obj/kern/kernel.asm	/^f0104aa5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
+f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	89 de                	mov    %ebx,%esi$/;"	l
+f0104aac	obj/kern/kernel.asm	/^f0104aac:	8a 0a                	mov    (%edx),%cl$/;"	l
+f0104aae	obj/kern/kernel.asm	/^f0104aae:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
+f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	80 fb 09             	cmp    $0x9,%bl$/;"	l
+f0104ab4	obj/kern/kernel.asm	/^f0104ab4:	77 08                	ja     f0104abe <strtol+0x82>$/;"	l
+f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	0f be c9             	movsbl %cl,%ecx$/;"	l
+f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	83 e9 30             	sub    $0x30,%ecx$/;"	l
+f0104abc	obj/kern/kernel.asm	/^f0104abc:	eb 1e                	jmp    f0104adc <strtol+0xa0>$/;"	l
+f0104abe	obj/kern/kernel.asm	/^f0104abe:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
+f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	80 fb 19             	cmp    $0x19,%bl$/;"	l
+f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	77 08                	ja     f0104ace <strtol+0x92>$/;"	l
+f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	0f be c9             	movsbl %cl,%ecx$/;"	l
+f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	83 e9 57             	sub    $0x57,%ecx$/;"	l
+f0104acc	obj/kern/kernel.asm	/^f0104acc:	eb 0e                	jmp    f0104adc <strtol+0xa0>$/;"	l
+f0104ace	obj/kern/kernel.asm	/^f0104ace:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
+f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	80 fb 19             	cmp    $0x19,%bl$/;"	l
+f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	77 12                	ja     f0104ae8 <strtol+0xac>$/;"	l
+f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	0f be c9             	movsbl %cl,%ecx$/;"	l
+f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	83 e9 37             	sub    $0x37,%ecx$/;"	l
+f0104adc	obj/kern/kernel.asm	/^f0104adc:	39 f1                	cmp    %esi,%ecx$/;"	l
+f0104ade	obj/kern/kernel.asm	/^f0104ade:	7d 0c                	jge    f0104aec <strtol+0xb0>$/;"	l
+f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	42                   	inc    %edx$/;"	l
+f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	0f af c6             	imul   %esi,%eax$/;"	l
+f0104ae4	obj/kern/kernel.asm	/^f0104ae4:	01 c8                	add    %ecx,%eax$/;"	l
+f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	eb c4                	jmp    f0104aac <strtol+0x70>$/;"	l
+f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	89 c1                	mov    %eax,%ecx$/;"	l
+f0104aea	obj/kern/kernel.asm	/^f0104aea:	eb 02                	jmp    f0104aee <strtol+0xb2>$/;"	l
+f0104aec	obj/kern/kernel.asm	/^f0104aec:	89 c1                	mov    %eax,%ecx$/;"	l
+f0104aee	obj/kern/kernel.asm	/^f0104aee:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
+f0104af2	obj/kern/kernel.asm	/^f0104af2:	74 05                	je     f0104af9 <strtol+0xbd>$/;"	l
+f0104af4	obj/kern/kernel.asm	/^f0104af4:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
+f0104af7	obj/kern/kernel.asm	/^f0104af7:	89 13                	mov    %edx,(%ebx)$/;"	l
+f0104af9	obj/kern/kernel.asm	/^f0104af9:	85 ff                	test   %edi,%edi$/;"	l
+f0104afb	obj/kern/kernel.asm	/^f0104afb:	74 04                	je     f0104b01 <strtol+0xc5>$/;"	l
+f0104afd	obj/kern/kernel.asm	/^f0104afd:	89 c8                	mov    %ecx,%eax$/;"	l
+f0104aff	obj/kern/kernel.asm	/^f0104aff:	f7 d8                	neg    %eax$/;"	l
+f0104b01	obj/kern/kernel.asm	/^f0104b01:	5b                   	pop    %ebx$/;"	l
+f0104b02	obj/kern/kernel.asm	/^f0104b02:	5e                   	pop    %esi$/;"	l
+f0104b03	obj/kern/kernel.asm	/^f0104b03:	5f                   	pop    %edi$/;"	l
+f0104b04	obj/kern/kernel.asm	/^f0104b04:	5d                   	pop    %ebp$/;"	l
+f0104b05	obj/kern/kernel.asm	/^f0104b05:	c3                   	ret    $/;"	l
+f0104b08	obj/kern/kernel.asm	/^f0104b08 <__udivdi3>:$/;"	l
+f0104b08	obj/kern/kernel.asm	/^f0104b08:	55                   	push   %ebp$/;"	l
+f0104b09	obj/kern/kernel.asm	/^f0104b09:	57                   	push   %edi$/;"	l
+f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	56                   	push   %esi$/;"	l
+f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	83 ec 10             	sub    $0x10,%esp$/;"	l
+f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	8b 74 24 20          	mov    0x20(%esp),%esi$/;"	l
+f0104b12	obj/kern/kernel.asm	/^f0104b12:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
+f0104b16	obj/kern/kernel.asm	/^f0104b16:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
+f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	8b 7c 24 24          	mov    0x24(%esp),%edi$/;"	l
+f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	89 cd                	mov    %ecx,%ebp$/;"	l
+f0104b20	obj/kern/kernel.asm	/^f0104b20:	8b 44 24 2c          	mov    0x2c(%esp),%eax$/;"	l
+f0104b24	obj/kern/kernel.asm	/^f0104b24:	85 c0                	test   %eax,%eax$/;"	l
+f0104b26	obj/kern/kernel.asm	/^f0104b26:	75 2c                	jne    f0104b54 <__udivdi3+0x4c>$/;"	l
+f0104b28	obj/kern/kernel.asm	/^f0104b28:	39 f9                	cmp    %edi,%ecx$/;"	l
+f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	77 68                	ja     f0104b94 <__udivdi3+0x8c>$/;"	l
+f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	85 c9                	test   %ecx,%ecx$/;"	l
+f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	75 0b                	jne    f0104b3b <__udivdi3+0x33>$/;"	l
+f0104b30	obj/kern/kernel.asm	/^f0104b30:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
+f0104b35	obj/kern/kernel.asm	/^f0104b35:	31 d2                	xor    %edx,%edx$/;"	l
+f0104b37	obj/kern/kernel.asm	/^f0104b37:	f7 f1                	div    %ecx$/;"	l
+f0104b39	obj/kern/kernel.asm	/^f0104b39:	89 c1                	mov    %eax,%ecx$/;"	l
+f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	31 d2                	xor    %edx,%edx$/;"	l
+f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	89 f8                	mov    %edi,%eax$/;"	l
+f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	f7 f1                	div    %ecx$/;"	l
+f0104b41	obj/kern/kernel.asm	/^f0104b41:	89 c7                	mov    %eax,%edi$/;"	l
+f0104b43	obj/kern/kernel.asm	/^f0104b43:	89 f0                	mov    %esi,%eax$/;"	l
+f0104b45	obj/kern/kernel.asm	/^f0104b45:	f7 f1                	div    %ecx$/;"	l
+f0104b47	obj/kern/kernel.asm	/^f0104b47:	89 c6                	mov    %eax,%esi$/;"	l
+f0104b49	obj/kern/kernel.asm	/^f0104b49:	89 f0                	mov    %esi,%eax$/;"	l
+f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	89 fa                	mov    %edi,%edx$/;"	l
+f0104b4d	obj/kern/kernel.asm	/^f0104b4d:	83 c4 10             	add    $0x10,%esp$/;"	l
+f0104b50	obj/kern/kernel.asm	/^f0104b50:	5e                   	pop    %esi$/;"	l
+f0104b51	obj/kern/kernel.asm	/^f0104b51:	5f                   	pop    %edi$/;"	l
+f0104b52	obj/kern/kernel.asm	/^f0104b52:	5d                   	pop    %ebp$/;"	l
+f0104b53	obj/kern/kernel.asm	/^f0104b53:	c3                   	ret    $/;"	l
+f0104b54	obj/kern/kernel.asm	/^f0104b54:	39 f8                	cmp    %edi,%eax$/;"	l
+f0104b56	obj/kern/kernel.asm	/^f0104b56:	77 2c                	ja     f0104b84 <__udivdi3+0x7c>$/;"	l
+f0104b58	obj/kern/kernel.asm	/^f0104b58:	0f bd f0             	bsr    %eax,%esi$/;"	l
+f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	83 f6 1f             	xor    $0x1f,%esi$/;"	l
+f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	75 4c                	jne    f0104bac <__udivdi3+0xa4>$/;"	l
+f0104b60	obj/kern/kernel.asm	/^f0104b60:	39 f8                	cmp    %edi,%eax$/;"	l
+f0104b62	obj/kern/kernel.asm	/^f0104b62:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
+f0104b67	obj/kern/kernel.asm	/^f0104b67:	72 0a                	jb     f0104b73 <__udivdi3+0x6b>$/;"	l
+f0104b69	obj/kern/kernel.asm	/^f0104b69:	3b 4c 24 04          	cmp    0x4(%esp),%ecx$/;"	l
+f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	0f 87 ad 00 00 00    	ja     f0104c20 <__udivdi3+0x118>$/;"	l
+f0104b73	obj/kern/kernel.asm	/^f0104b73:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
+f0104b78	obj/kern/kernel.asm	/^f0104b78:	89 f0                	mov    %esi,%eax$/;"	l
+f0104b7a	obj/kern/kernel.asm	/^f0104b7a:	89 fa                	mov    %edi,%edx$/;"	l
+f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	83 c4 10             	add    $0x10,%esp$/;"	l
+f0104b7f	obj/kern/kernel.asm	/^f0104b7f:	5e                   	pop    %esi$/;"	l
+f0104b80	obj/kern/kernel.asm	/^f0104b80:	5f                   	pop    %edi$/;"	l
+f0104b81	obj/kern/kernel.asm	/^f0104b81:	5d                   	pop    %ebp$/;"	l
+f0104b82	obj/kern/kernel.asm	/^f0104b82:	c3                   	ret    $/;"	l
+f0104b83	obj/kern/kernel.asm	/^f0104b83:	90                   	nop$/;"	l
+f0104b84	obj/kern/kernel.asm	/^f0104b84:	31 ff                	xor    %edi,%edi$/;"	l
+f0104b86	obj/kern/kernel.asm	/^f0104b86:	31 f6                	xor    %esi,%esi$/;"	l
+f0104b88	obj/kern/kernel.asm	/^f0104b88:	89 f0                	mov    %esi,%eax$/;"	l
+f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	89 fa                	mov    %edi,%edx$/;"	l
+f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	83 c4 10             	add    $0x10,%esp$/;"	l
+f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	5e                   	pop    %esi$/;"	l
+f0104b90	obj/kern/kernel.asm	/^f0104b90:	5f                   	pop    %edi$/;"	l
+f0104b91	obj/kern/kernel.asm	/^f0104b91:	5d                   	pop    %ebp$/;"	l
+f0104b92	obj/kern/kernel.asm	/^f0104b92:	c3                   	ret    $/;"	l
+f0104b93	obj/kern/kernel.asm	/^f0104b93:	90                   	nop$/;"	l
+f0104b94	obj/kern/kernel.asm	/^f0104b94:	89 fa                	mov    %edi,%edx$/;"	l
+f0104b96	obj/kern/kernel.asm	/^f0104b96:	89 f0                	mov    %esi,%eax$/;"	l
+f0104b98	obj/kern/kernel.asm	/^f0104b98:	f7 f1                	div    %ecx$/;"	l
+f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	89 c6                	mov    %eax,%esi$/;"	l
+f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	31 ff                	xor    %edi,%edi$/;"	l
+f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	89 f0                	mov    %esi,%eax$/;"	l
+f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	89 fa                	mov    %edi,%edx$/;"	l
+f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	83 c4 10             	add    $0x10,%esp$/;"	l
+f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	5e                   	pop    %esi$/;"	l
+f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	5f                   	pop    %edi$/;"	l
+f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	5d                   	pop    %ebp$/;"	l
+f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	c3                   	ret    $/;"	l
+f0104ba9	obj/kern/kernel.asm	/^f0104ba9:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
+f0104bac	obj/kern/kernel.asm	/^f0104bac:	89 f1                	mov    %esi,%ecx$/;"	l
+f0104bae	obj/kern/kernel.asm	/^f0104bae:	d3 e0                	shl    %cl,%eax$/;"	d
+f0104bb0	obj/kern/kernel.asm	/^f0104bb0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
+f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	29 f0                	sub    %esi,%eax$/;"	l
+f0104bbb	obj/kern/kernel.asm	/^f0104bbb:	89 ea                	mov    %ebp,%edx$/;"	l
+f0104bbd	obj/kern/kernel.asm	/^f0104bbd:	88 c1                	mov    %al,%cl$/;"	l
+f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	d3 ea                	shr    %cl,%edx$/;"	d
+f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	8b 4c 24 0c          	mov    0xc(%esp),%ecx$/;"	l
+f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	09 ca                	or     %ecx,%edx$/;"	l
+f0104bc7	obj/kern/kernel.asm	/^f0104bc7:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
+f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	89 f1                	mov    %esi,%ecx$/;"	l
+f0104bcd	obj/kern/kernel.asm	/^f0104bcd:	d3 e5                	shl    %cl,%ebp$/;"	d
+f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	89 6c 24 0c          	mov    %ebp,0xc(%esp)$/;"	l
+f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	89 fd                	mov    %edi,%ebp$/;"	l
+f0104bd5	obj/kern/kernel.asm	/^f0104bd5:	88 c1                	mov    %al,%cl$/;"	l
+f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	d3 ed                	shr    %cl,%ebp$/;"	d
+f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	89 fa                	mov    %edi,%edx$/;"	l
+f0104bdb	obj/kern/kernel.asm	/^f0104bdb:	89 f1                	mov    %esi,%ecx$/;"	l
+f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	d3 e2                	shl    %cl,%edx$/;"	d
+f0104bdf	obj/kern/kernel.asm	/^f0104bdf:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
+f0104be3	obj/kern/kernel.asm	/^f0104be3:	88 c1                	mov    %al,%cl$/;"	l
+f0104be5	obj/kern/kernel.asm	/^f0104be5:	d3 ef                	shr    %cl,%edi$/;"	d
+f0104be7	obj/kern/kernel.asm	/^f0104be7:	09 d7                	or     %edx,%edi$/;"	l
+f0104be9	obj/kern/kernel.asm	/^f0104be9:	89 f8                	mov    %edi,%eax$/;"	l
+f0104beb	obj/kern/kernel.asm	/^f0104beb:	89 ea                	mov    %ebp,%edx$/;"	l
+f0104bed	obj/kern/kernel.asm	/^f0104bed:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
+f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	89 d1                	mov    %edx,%ecx$/;"	l
+f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	89 c7                	mov    %eax,%edi$/;"	l
+f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
+f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	39 d1                	cmp    %edx,%ecx$/;"	l
+f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	72 17                	jb     f0104c14 <__udivdi3+0x10c>$/;"	l
+f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	74 09                	je     f0104c08 <__udivdi3+0x100>$/;"	l
+f0104bff	obj/kern/kernel.asm	/^f0104bff:	89 fe                	mov    %edi,%esi$/;"	l
+f0104c01	obj/kern/kernel.asm	/^f0104c01:	31 ff                	xor    %edi,%edi$/;"	l
+f0104c03	obj/kern/kernel.asm	/^f0104c03:	e9 41 ff ff ff       	jmp    f0104b49 <__udivdi3+0x41>$/;"	l
+f0104c08	obj/kern/kernel.asm	/^f0104c08:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
+f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	89 f1                	mov    %esi,%ecx$/;"	l
+f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	d3 e2                	shl    %cl,%edx$/;"	d
+f0104c10	obj/kern/kernel.asm	/^f0104c10:	39 c2                	cmp    %eax,%edx$/;"	l
+f0104c12	obj/kern/kernel.asm	/^f0104c12:	73 eb                	jae    f0104bff <__udivdi3+0xf7>$/;"	l
+f0104c14	obj/kern/kernel.asm	/^f0104c14:	8d 77 ff             	lea    -0x1(%edi),%esi$/;"	l
+f0104c17	obj/kern/kernel.asm	/^f0104c17:	31 ff                	xor    %edi,%edi$/;"	l
+f0104c19	obj/kern/kernel.asm	/^f0104c19:	e9 2b ff ff ff       	jmp    f0104b49 <__udivdi3+0x41>$/;"	l
+f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	66 90                	xchg   %ax,%ax$/;"	l
+f0104c20	obj/kern/kernel.asm	/^f0104c20:	31 f6                	xor    %esi,%esi$/;"	l
+f0104c22	obj/kern/kernel.asm	/^f0104c22:	e9 22 ff ff ff       	jmp    f0104b49 <__udivdi3+0x41>$/;"	l
+f0104c28	obj/kern/kernel.asm	/^f0104c28 <__umoddi3>:$/;"	l
+f0104c28	obj/kern/kernel.asm	/^f0104c28:	55                   	push   %ebp$/;"	l
+f0104c29	obj/kern/kernel.asm	/^f0104c29:	57                   	push   %edi$/;"	l
+f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	56                   	push   %esi$/;"	l
+f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	83 ec 20             	sub    $0x20,%esp$/;"	l
+f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
+f0104c32	obj/kern/kernel.asm	/^f0104c32:	8b 4c 24 38          	mov    0x38(%esp),%ecx$/;"	l
+f0104c36	obj/kern/kernel.asm	/^f0104c36:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
+f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
+f0104c3e	obj/kern/kernel.asm	/^f0104c3e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
+f0104c42	obj/kern/kernel.asm	/^f0104c42:	8b 6c 24 3c          	mov    0x3c(%esp),%ebp$/;"	l
+f0104c46	obj/kern/kernel.asm	/^f0104c46:	89 c7                	mov    %eax,%edi$/;"	l
+f0104c48	obj/kern/kernel.asm	/^f0104c48:	89 f2                	mov    %esi,%edx$/;"	l
+f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	85 ed                	test   %ebp,%ebp$/;"	l
+f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	75 16                	jne    f0104c64 <__umoddi3+0x3c>$/;"	l
+f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	39 f1                	cmp    %esi,%ecx$/;"	l
+f0104c50	obj/kern/kernel.asm	/^f0104c50:	0f 86 a6 00 00 00    	jbe    f0104cfc <__umoddi3+0xd4>$/;"	l
+f0104c56	obj/kern/kernel.asm	/^f0104c56:	f7 f1                	div    %ecx$/;"	l
+f0104c58	obj/kern/kernel.asm	/^f0104c58:	89 d0                	mov    %edx,%eax$/;"	l
+f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	31 d2                	xor    %edx,%edx$/;"	l
+f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	83 c4 20             	add    $0x20,%esp$/;"	l
+f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	5e                   	pop    %esi$/;"	l
+f0104c60	obj/kern/kernel.asm	/^f0104c60:	5f                   	pop    %edi$/;"	l
+f0104c61	obj/kern/kernel.asm	/^f0104c61:	5d                   	pop    %ebp$/;"	l
+f0104c62	obj/kern/kernel.asm	/^f0104c62:	c3                   	ret    $/;"	l
+f0104c63	obj/kern/kernel.asm	/^f0104c63:	90                   	nop$/;"	l
+f0104c64	obj/kern/kernel.asm	/^f0104c64:	39 f5                	cmp    %esi,%ebp$/;"	l
+f0104c66	obj/kern/kernel.asm	/^f0104c66:	0f 87 ac 00 00 00    	ja     f0104d18 <__umoddi3+0xf0>$/;"	l
+f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	0f bd c5             	bsr    %ebp,%eax$/;"	l
+f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
+f0104c72	obj/kern/kernel.asm	/^f0104c72:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
+f0104c76	obj/kern/kernel.asm	/^f0104c76:	0f 84 a8 00 00 00    	je     f0104d24 <__umoddi3+0xfc>$/;"	l
+f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
+f0104c80	obj/kern/kernel.asm	/^f0104c80:	d3 e5                	shl    %cl,%ebp$/;"	d
+f0104c82	obj/kern/kernel.asm	/^f0104c82:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
+f0104c87	obj/kern/kernel.asm	/^f0104c87:	2b 7c 24 10          	sub    0x10(%esp),%edi$/;"	l
+f0104c8b	obj/kern/kernel.asm	/^f0104c8b:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
+f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	89 f9                	mov    %edi,%ecx$/;"	l
+f0104c91	obj/kern/kernel.asm	/^f0104c91:	d3 e8                	shr    %cl,%eax$/;"	d
+f0104c93	obj/kern/kernel.asm	/^f0104c93:	09 e8                	or     %ebp,%eax$/;"	l
+f0104c95	obj/kern/kernel.asm	/^f0104c95:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
+f0104c99	obj/kern/kernel.asm	/^f0104c99:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
+f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
+f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	d3 e0                	shl    %cl,%eax$/;"	d
+f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
+f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	89 f2                	mov    %esi,%edx$/;"	l
+f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	d3 e2                	shl    %cl,%edx$/;"	d
+f0104cab	obj/kern/kernel.asm	/^f0104cab:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
+f0104caf	obj/kern/kernel.asm	/^f0104caf:	d3 e0                	shl    %cl,%eax$/;"	d
+f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
+f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	8b 44 24 14          	mov    0x14(%esp),%eax$/;"	l
+f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	89 f9                	mov    %edi,%ecx$/;"	l
+f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	d3 e8                	shr    %cl,%eax$/;"	d
+f0104cbd	obj/kern/kernel.asm	/^f0104cbd:	09 d0                	or     %edx,%eax$/;"	l
+f0104cbf	obj/kern/kernel.asm	/^f0104cbf:	d3 ee                	shr    %cl,%esi$/;"	d
+f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	89 f2                	mov    %esi,%edx$/;"	l
+f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	f7 74 24 18          	divl   0x18(%esp)$/;"	l
+f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	89 d6                	mov    %edx,%esi$/;"	l
+f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
+f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	89 c5                	mov    %eax,%ebp$/;"	l
+f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	89 d1                	mov    %edx,%ecx$/;"	l
+f0104cd1	obj/kern/kernel.asm	/^f0104cd1:	39 d6                	cmp    %edx,%esi$/;"	l
+f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	72 67                	jb     f0104d3c <__umoddi3+0x114>$/;"	l
+f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	74 75                	je     f0104d4c <__umoddi3+0x124>$/;"	l
+f0104cd7	obj/kern/kernel.asm	/^f0104cd7:	8b 44 24 1c          	mov    0x1c(%esp),%eax$/;"	l
+f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	29 e8                	sub    %ebp,%eax$/;"	l
+f0104cdd	obj/kern/kernel.asm	/^f0104cdd:	19 ce                	sbb    %ecx,%esi$/;"	l
+f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
+f0104ce3	obj/kern/kernel.asm	/^f0104ce3:	d3 e8                	shr    %cl,%eax$/;"	d
+f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	89 f2                	mov    %esi,%edx$/;"	l
+f0104ce7	obj/kern/kernel.asm	/^f0104ce7:	89 f9                	mov    %edi,%ecx$/;"	l
+f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	d3 e2                	shl    %cl,%edx$/;"	d
+f0104ceb	obj/kern/kernel.asm	/^f0104ceb:	09 d0                	or     %edx,%eax$/;"	l
+f0104ced	obj/kern/kernel.asm	/^f0104ced:	89 f2                	mov    %esi,%edx$/;"	l
+f0104cef	obj/kern/kernel.asm	/^f0104cef:	8a 4c 24 10          	mov    0x10(%esp),%cl$/;"	l
+f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	d3 ea                	shr    %cl,%edx$/;"	d
+f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	83 c4 20             	add    $0x20,%esp$/;"	l
+f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	5e                   	pop    %esi$/;"	l
+f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	5f                   	pop    %edi$/;"	l
+f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	5d                   	pop    %ebp$/;"	l
+f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	c3                   	ret    $/;"	l
+f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	85 c9                	test   %ecx,%ecx$/;"	l
+f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	75 0b                	jne    f0104d0b <__umoddi3+0xe3>$/;"	l
+f0104d00	obj/kern/kernel.asm	/^f0104d00:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
+f0104d05	obj/kern/kernel.asm	/^f0104d05:	31 d2                	xor    %edx,%edx$/;"	l
+f0104d07	obj/kern/kernel.asm	/^f0104d07:	f7 f1                	div    %ecx$/;"	l
+f0104d09	obj/kern/kernel.asm	/^f0104d09:	89 c1                	mov    %eax,%ecx$/;"	l
+f0104d0b	obj/kern/kernel.asm	/^f0104d0b:	89 f0                	mov    %esi,%eax$/;"	l
+f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	31 d2                	xor    %edx,%edx$/;"	l
+f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	f7 f1                	div    %ecx$/;"	l
+f0104d11	obj/kern/kernel.asm	/^f0104d11:	89 f8                	mov    %edi,%eax$/;"	l
+f0104d13	obj/kern/kernel.asm	/^f0104d13:	e9 3e ff ff ff       	jmp    f0104c56 <__umoddi3+0x2e>$/;"	l
+f0104d18	obj/kern/kernel.asm	/^f0104d18:	89 f2                	mov    %esi,%edx$/;"	l
+f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	83 c4 20             	add    $0x20,%esp$/;"	l
+f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	5e                   	pop    %esi$/;"	l
+f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	5f                   	pop    %edi$/;"	l
+f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	5d                   	pop    %ebp$/;"	l
+f0104d20	obj/kern/kernel.asm	/^f0104d20:	c3                   	ret    $/;"	l
+f0104d21	obj/kern/kernel.asm	/^f0104d21:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
+f0104d24	obj/kern/kernel.asm	/^f0104d24:	39 f5                	cmp    %esi,%ebp$/;"	l
+f0104d26	obj/kern/kernel.asm	/^f0104d26:	72 04                	jb     f0104d2c <__umoddi3+0x104>$/;"	l
+f0104d28	obj/kern/kernel.asm	/^f0104d28:	39 f9                	cmp    %edi,%ecx$/;"	l
+f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	77 06                	ja     f0104d32 <__umoddi3+0x10a>$/;"	l
+f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	89 f2                	mov    %esi,%edx$/;"	l
+f0104d2e	obj/kern/kernel.asm	/^f0104d2e:	29 cf                	sub    %ecx,%edi$/;"	l
+f0104d30	obj/kern/kernel.asm	/^f0104d30:	19 ea                	sbb    %ebp,%edx$/;"	l
+f0104d32	obj/kern/kernel.asm	/^f0104d32:	89 f8                	mov    %edi,%eax$/;"	l
+f0104d34	obj/kern/kernel.asm	/^f0104d34:	83 c4 20             	add    $0x20,%esp$/;"	l
+f0104d37	obj/kern/kernel.asm	/^f0104d37:	5e                   	pop    %esi$/;"	l
+f0104d38	obj/kern/kernel.asm	/^f0104d38:	5f                   	pop    %edi$/;"	l
+f0104d39	obj/kern/kernel.asm	/^f0104d39:	5d                   	pop    %ebp$/;"	l
+f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	c3                   	ret    $/;"	l
+f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	90                   	nop$/;"	l
+f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	89 d1                	mov    %edx,%ecx$/;"	l
+f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	89 c5                	mov    %eax,%ebp$/;"	l
+f0104d40	obj/kern/kernel.asm	/^f0104d40:	2b 6c 24 0c          	sub    0xc(%esp),%ebp$/;"	l
+f0104d44	obj/kern/kernel.asm	/^f0104d44:	1b 4c 24 18          	sbb    0x18(%esp),%ecx$/;"	l
+f0104d48	obj/kern/kernel.asm	/^f0104d48:	eb 8d                	jmp    f0104cd7 <__umoddi3+0xaf>$/;"	l
+f0104d4a	obj/kern/kernel.asm	/^f0104d4a:	66 90                	xchg   %ax,%ax$/;"	l
+f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	39 44 24 1c          	cmp    %eax,0x1c(%esp)$/;"	l
+f0104d50	obj/kern/kernel.asm	/^f0104d50:	72 ea                	jb     f0104d3c <__umoddi3+0x114>$/;"	l
+f0104d52	obj/kern/kernel.asm	/^f0104d52:	89 f1                	mov    %esi,%ecx$/;"	l
+f0104d54	obj/kern/kernel.asm	/^f0104d54:	eb 81                	jmp    f0104cd7 <__umoddi3+0xaf>$/;"	l
+false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
+fileno	gradelib.py	/^    def fileno(self):$/;"	f
+fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
+first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
+fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
+func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
+gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
+gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
+gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
+gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
+gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
+gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
+gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
+gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
+gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
+gdt	boot/boot.S	/^gdt:$/;"	l
+gdt	kern/env.c	/^struct Segdesc gdt[] =$/;"	v	typeref:struct:Segdesc
+gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
+gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
+generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
+generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
+get_current_test	gradelib.py	/^def get_current_test():$/;"	f
+get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
+getchar	kern/console.c	/^getchar(void)$/;"	f
+getchar	lib/console.c	/^getchar(void)$/;"	f
+getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
+getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
+handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
+handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
+handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
+hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
+i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
+i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
+i386_init	kern/init.c	/^i386_init(void)$/;"	f
+idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
+idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
+idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
+inb	inc/x86.h	/^inb(int port)$/;"	f
+inl	inc/x86.h	/^inl(int port)$/;"	f
+insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
+insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
+insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
+int	obj/kern/kernel.asm	/^int$/;"	l
+int	obj/user/badsegment.asm	/^int$/;"	l
+int	obj/user/breakpoint.asm	/^int$/;"	l
+int	obj/user/buggyhello.asm	/^int$/;"	l
+int	obj/user/buggyhello2.asm	/^int$/;"	l
+int	obj/user/divzero.asm	/^int zero;$/;"	l
+int	obj/user/divzero.asm	/^int$/;"	l
+int	obj/user/evilhello.asm	/^int$/;"	l
+int	obj/user/faultread.asm	/^int$/;"	l
+int	obj/user/faultreadkernel.asm	/^int$/;"	l
+int	obj/user/faultwrite.asm	/^int$/;"	l
+int	obj/user/faultwritekernel.asm	/^int$/;"	l
+int	obj/user/hello.asm	/^int$/;"	l
+int	obj/user/softint.asm	/^int$/;"	l
+int	obj/user/testbss.asm	/^int$/;"	l
+int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
+int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
+int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
+int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
+int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
+intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
+invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
+inw	inc/x86.h	/^inw(int port)$/;"	f
+iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
+kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
+kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
+kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
+kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
+kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
+kill	gradelib.py	/^    def kill(self):$/;"	f
+l	obj/kern/kernel.asm	/^			l = m;$/;"	d
+l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
+last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
+last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
+lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
+lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
+lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
+lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
+lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
+lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
+lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
+lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
+libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
+lidt	inc/x86.h	/^lidt(void *p)$/;"	f
+lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
+lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
+lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
+load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
+long	obj/kern/kernel.asm	/^long$/;"	l
+long	obj/user/badsegment.asm	/^long$/;"	l
+long	obj/user/breakpoint.asm	/^long$/;"	l
+long	obj/user/buggyhello.asm	/^long$/;"	l
+long	obj/user/buggyhello2.asm	/^long$/;"	l
+long	obj/user/divzero.asm	/^long$/;"	l
+long	obj/user/evilhello.asm	/^long$/;"	l
+long	obj/user/faultread.asm	/^long$/;"	l
+long	obj/user/faultreadkernel.asm	/^long$/;"	l
+long	obj/user/faultwrite.asm	/^long$/;"	l
+long	obj/user/faultwritekernel.asm	/^long$/;"	l
+long	obj/user/hello.asm	/^long$/;"	l
+long	obj/user/softint.asm	/^long$/;"	l
+long	obj/user/testbss.asm	/^long$/;"	l
+lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
+ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
+make	gradelib.py	/^def make(*target):$/;"	f
+match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
+maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
+mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
+mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
+mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
+memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
+memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
+memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
+memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
+memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
+mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
+mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
+mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
+monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
+n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
+n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
+n0	obj/kern/kernel.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/kern/kernel.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/badsegment.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/badsegment.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/breakpoint.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/breakpoint.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/buggyhello.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/buggyhello.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/buggyhello2.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/buggyhello2.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/divzero.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/divzero.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/evilhello.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/evilhello.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/faultread.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/faultread.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/faultreadkernel.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/faultreadkernel.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/faultwrite.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/faultwrite.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/faultwritekernel.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/faultwritekernel.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/hello.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/hello.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/softint.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/softint.asm	/^  n0 = nn.s.low;$/;"	d
+n0	obj/user/testbss.asm	/^	      n0 = n0 << bm;$/;"	d
+n0	obj/user/testbss.asm	/^  n0 = nn.s.low;$/;"	d
+n1	obj/kern/kernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/kern/kernel.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/badsegment.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/badsegment.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/breakpoint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/breakpoint.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/buggyhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/buggyhello.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/buggyhello2.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/buggyhello2.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/divzero.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/divzero.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/evilhello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/evilhello.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/faultread.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/faultread.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/faultreadkernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/faultreadkernel.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/faultwrite.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/faultwrite.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/faultwritekernel.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/faultwritekernel.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/hello.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/hello.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/softint.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/softint.asm	/^  n1 = nn.s.high;$/;"	d
+n1	obj/user/testbss.asm	/^	      n1 = (n1 << bm) | (n0 >> b);$/;"	d
+n1	obj/user/testbss.asm	/^  n1 = nn.s.high;$/;"	d
+n2	obj/kern/kernel.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/badsegment.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/breakpoint.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/buggyhello.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/buggyhello2.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/divzero.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/evilhello.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/faultread.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/faultreadkernel.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/faultwrite.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/faultwritekernel.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/hello.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/softint.asm	/^	      n2 = n1 >> b;$/;"	d
+n2	obj/user/testbss.asm	/^	      n2 = n1 >> b;$/;"	d
+n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
+n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
+n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
+n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
+n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
+name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
+name	kern/trapentry.S	/^	name:								\\$/;"	l
+name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
+nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
+nextfree	obj/kern/kernel.asm	/^            nextfree = ROUNDUP((char *) nextfree, PGSIZE);$/;"	d
+normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
+npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
+npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
+npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
+npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
+npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
+npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
+num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
+num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/kern/kernel.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/badsegment.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/breakpoint.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/buggyhello.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/buggyhello2.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/divzero.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/evilhello.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/faultread.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/faultreadkernel.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/faultwrite.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/faultwritekernel.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/hello.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/softint.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
+num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
+num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
+num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
+num	obj/user/testbss.asm	/^                        num = getuint(&ap,lflag);$/;"	d
+number	obj/kern/kernel.asm	/^		number:$/;"	l
+number	obj/user/badsegment.asm	/^		number:$/;"	l
+number	obj/user/breakpoint.asm	/^		number:$/;"	l
+number	obj/user/buggyhello.asm	/^		number:$/;"	l
+number	obj/user/buggyhello2.asm	/^		number:$/;"	l
+number	obj/user/divzero.asm	/^		number:$/;"	l
+number	obj/user/evilhello.asm	/^		number:$/;"	l
+number	obj/user/faultread.asm	/^		number:$/;"	l
+number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
+number	obj/user/faultwrite.asm	/^		number:$/;"	l
+number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
+number	obj/user/hello.asm	/^		number:$/;"	l
+number	obj/user/softint.asm	/^		number:$/;"	l
+number	obj/user/testbss.asm	/^		number:$/;"	l
+nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
+off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
+offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
+offsetof	inc/types.h	/^#define offsetof(/;"	d
+old_ebp	obj/kern/kernel.asm	/^            old_ebp = *(uint32_t *) ebp;$/;"	d
+old_ret	obj/kern/kernel.asm	/^            old_ret = *(((uint32_t *) old_ebp) + 1);                                                         $/;"	d
+os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
+outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
+outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
+outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
+outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
+outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
+p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
+p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
+p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
+p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
+p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
+p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
+p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
+p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
+p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
+p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
+p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
+p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
+p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
+p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
+p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
+p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
+p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
+p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
+p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
+p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
+p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
+p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
+p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
+pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
+pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
+pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
+padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
+padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
+padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
+padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
+padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
+padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
+padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
+padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
+padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
+padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
+padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
+padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
+padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
+padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
+padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
+padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
+padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
+padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
+padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
+padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
+padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
+padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
+padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
+padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
+padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
+padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
+padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
+padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
+page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
+page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
+page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
+page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
+page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
+page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
+page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
+page_free_list	obj/kern/kernel.asm	/^		    page_free_list = &pages[i];$/;"	d
+page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
+page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
+page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
+page_free_list	obj/kern/kernel.asm	/^                page_free_list = &pages[i];$/;"	d
+page_free_list	obj/kern/kernel.asm	/^            page_free_list = pp;$/;"	d
+page_free_list	obj/kern/kernel.asm	/^        page_free_list = pagep->pp_link;$/;"	d
+page_init	kern/pmap.c	/^page_init(void)$/;"	f
+page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
+page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
+page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
+pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
+pages	obj/kern/kernel.asm	/^        pages = boot_alloc(npages * sizeof(struct PageInfo ));$/;"	d
+panic	inc/assert.h	/^#define panic(/;"	d
+panicstr	kern/init.c	/^const char *panicstr;$/;"	v
+panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
+pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
+pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
+pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
+pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
+pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
+pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
+ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
+ph	obj/kern/kernel.asm	/^        ph = (struct Proghdr *)((uint8_t *) elfhdr + elfhdr->e_phoff);$/;"	d
+physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
+pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
+post_make	gradelib.py	/^def post_make():$/;"	f
+pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
+pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
+pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
+pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
+ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
+pre_make	gradelib.py	/^def pre_make():$/;"	f
+precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
+precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
+precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
+precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
+precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
+precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
+precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
+precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
+precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
+precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
+precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
+precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
+precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
+precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
+precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
+precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
+print_function	gradelib.py	/^from __future__ import print_function$/;"	i
+print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
+print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
+printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
+printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
+printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
+process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
+process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
+protcseg	boot/boot.S	/^protcseg:$/;"	l
+protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
+pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
+pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
+pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
+ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
+ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
+ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
+ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
+ptpp	obj/kern/kernel.asm	/^            ptpp = page2kva(pa2page(PTE_ADDR(pgdir[PDX(va)])));   $/;"	d
+ptpp	obj/kern/kernel.asm	/^            ptpp = pgdir_walk(pgdir,(void *)temp_va,1);$/;"	d
+putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
+putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
+q0	obj/kern/kernel.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/badsegment.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/breakpoint.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/buggyhello.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/buggyhello2.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/divzero.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/evilhello.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/faultread.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/faultreadkernel.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/faultwrite.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/faultwritekernel.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/hello.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/softint.asm	/^		  q0 = 1;$/;"	d
+q0	obj/user/testbss.asm	/^		  q0 = 1;$/;"	d
+q1	obj/kern/kernel.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/badsegment.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/breakpoint.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/buggyhello.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/buggyhello2.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/divzero.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/evilhello.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/faultread.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/faultreadkernel.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/faultwrite.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/faultwritekernel.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/hello.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/softint.asm	/^	      q1 = 0;$/;"	d
+q1	obj/user/testbss.asm	/^	      q1 = 0;$/;"	d
+quote	gradelib.py	/^    from pipes import quote$/;"	i
+r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
+r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
+r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
+r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
+rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
+rcr0	inc/x86.h	/^rcr0(void)$/;"	f
+rcr2	inc/x86.h	/^rcr2(void)$/;"	f
+rcr3	inc/x86.h	/^rcr3(void)$/;"	f
+rcr4	inc/x86.h	/^rcr4(void)$/;"	f
+re	grade-lab1	/^import re$/;"	i
+re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
+read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
+read_esp	inc/x86.h	/^read_esp(void)$/;"	f
+read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
+readdeps	mergedep.pl	/^sub readdeps {$/;"	s
+readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
+readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
+readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
+reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
+reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
+reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
+reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
+reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
+reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
+reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
+reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
+region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
+register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
+relocated	kern/entry.S	/^relocated:$/;"	l
+relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
+reset_fs	gradelib.py	/^def reset_fs():$/;"	f
+result	obj/kern/kernel.asm	/^            result = nextfree;$/;"	d
+reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
+reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
+ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
+ret	obj/kern/kernel.asm	/^            ret = old_ret;$/;"	d
+ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
+ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
+ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
+ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
+ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
+ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
+ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
+ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
+ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
+ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
+ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
+ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
+ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
+rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
+rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
+rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
+rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
+rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon5	file:
+run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
+run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
+run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
+run_tests	gradelib.py	/^def run_tests():$/;"	f
+runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
+s	obj/kern/kernel.asm	/^	s = src;$/;"	d
+s	obj/user/badsegment.asm	/^	s = src;$/;"	d
+s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
+s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
+s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
+s	obj/user/divzero.asm	/^	s = src;$/;"	d
+s	obj/user/evilhello.asm	/^	s = src;$/;"	d
+s	obj/user/faultread.asm	/^	s = src;$/;"	d
+s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
+s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
+s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
+s	obj/user/hello.asm	/^	s = src;$/;"	d
+s	obj/user/softint.asm	/^	s = src;$/;"	d
+s	obj/user/testbss.asm	/^	s = src;$/;"	d
+save	gradelib.py	/^def save(path):$/;"	f
+save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
+sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
+sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
+sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
+sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
+sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
+sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
+sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
+sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
+sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
+sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
+sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
+sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
+sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
+select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
+serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
+serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
+serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
+serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
+serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
+setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
+setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
+setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
+sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
+sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
+sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
+sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
+sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
+sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
+sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
+sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
+sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
+sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
+shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
+shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
+show_command	gradelib.py	/^def show_command(cmd):$/;"	f
+show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
+shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
+size_t	obj/kern/kernel.asm	/^size_t$/;"	l
+size_t	obj/user/badsegment.asm	/^size_t$/;"	l
+size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
+size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
+size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
+size_t	obj/user/divzero.asm	/^size_t$/;"	l
+size_t	obj/user/evilhello.asm	/^size_t$/;"	l
+size_t	obj/user/faultread.asm	/^size_t$/;"	l
+size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
+size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
+size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
+size_t	obj/user/hello.asm	/^size_t$/;"	l
+size_t	obj/user/softint.asm	/^size_t$/;"	l
+size_t	obj/user/testbss.asm	/^size_t$/;"	l
+snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
+socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+spin	boot/boot.S	/^spin:$/;"	l
+spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
+spin	obj/boot/boot.asm	/^spin:$/;"	l
+spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
+sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
+sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
+ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
+stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
+stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
+stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
+stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
+stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
+stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
+stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
+stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
+stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
+stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
+stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
+stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
+stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
+start	boot/boot.S	/^start:$/;"	l
+start	obj/boot/boot.asm	/^start:$/;"	l
+static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
+static	obj/boot/boot.asm	/^static __inline void$/;"	l
+static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
+static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
+static	obj/kern/kernel.asm	/^static __inline void$/;"	l
+static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
+static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
+static	obj/kern/kernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
+static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
+static	obj/kern/kernel.asm	/^static inline void*$/;"	l
+static	obj/kern/kernel.asm	/^static int$/;"	l
+static	obj/kern/kernel.asm	/^static long long$/;"	l
+static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
+static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
+static	obj/kern/kernel.asm	/^static void *$/;"	l
+static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
+static	obj/kern/kernel.asm	/^static void$/;"	l
+static	obj/user/badsegment.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/badsegment.asm	/^static long long$/;"	l
+static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
+static	obj/user/badsegment.asm	/^static void$/;"	l
+static	obj/user/breakpoint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/breakpoint.asm	/^static long long$/;"	l
+static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
+static	obj/user/breakpoint.asm	/^static void$/;"	l
+static	obj/user/buggyhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/buggyhello.asm	/^static long long$/;"	l
+static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
+static	obj/user/buggyhello.asm	/^static void$/;"	l
+static	obj/user/buggyhello2.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/buggyhello2.asm	/^static long long$/;"	l
+static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
+static	obj/user/buggyhello2.asm	/^static void$/;"	l
+static	obj/user/divzero.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/divzero.asm	/^static long long$/;"	l
+static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
+static	obj/user/divzero.asm	/^static void$/;"	l
+static	obj/user/evilhello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/evilhello.asm	/^static long long$/;"	l
+static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
+static	obj/user/evilhello.asm	/^static void$/;"	l
+static	obj/user/faultread.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/faultread.asm	/^static long long$/;"	l
+static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
+static	obj/user/faultread.asm	/^static void$/;"	l
+static	obj/user/faultreadkernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
+static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
+static	obj/user/faultreadkernel.asm	/^static void$/;"	l
+static	obj/user/faultwrite.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/faultwrite.asm	/^static long long$/;"	l
+static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
+static	obj/user/faultwrite.asm	/^static void$/;"	l
+static	obj/user/faultwritekernel.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
+static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
+static	obj/user/faultwritekernel.asm	/^static void$/;"	l
+static	obj/user/hello.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/hello.asm	/^static long long$/;"	l
+static	obj/user/hello.asm	/^static unsigned long long$/;"	l
+static	obj/user/hello.asm	/^static void$/;"	l
+static	obj/user/softint.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/softint.asm	/^static long long$/;"	l
+static	obj/user/softint.asm	/^static unsigned long long$/;"	l
+static	obj/user/softint.asm	/^static void$/;"	l
+static	obj/user/testbss.asm	/^static inline __attribute__ ((__always_inline__))$/;"	l
+static	obj/user/testbss.asm	/^static long long$/;"	l
+static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
+static	obj/user/testbss.asm	/^static void$/;"	l
+static_assert	inc/assert.h	/^#define static_assert(/;"	d
+stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
+stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
+stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
+str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
+str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
+strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
+strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
+strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
+strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
+strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
+strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
+strlen	lib/string.c	/^strlen(const char *s)$/;"	f
+strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
+strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
+strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
+strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
+subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
+sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
+sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
+sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
+sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
+sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
+sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
+sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
+syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
+syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
+test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
+test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
+test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
+test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
+test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
+test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
+test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
+test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
+test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
+test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
+test_check_page	grade-lab2	/^def test_check_page():$/;"	f
+test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
+test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
+test_divzero	grade-lab3	/^def test_divzero():$/;"	f
+test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
+test_faultread	grade-lab3	/^def test_faultread():$/;"	f
+test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
+test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
+test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
+test_hello	grade-lab3	/^def test_hello():$/;"	f
+test_jos	grade-lab1	/^def test_jos():$/;"	f
+test_jos	grade-lab2	/^def test_jos():$/;"	f
+test_printf	grade-lab1	/^def test_printf():$/;"	f
+test_softint	grade-lab3	/^def test_softint():$/;"	f
+test_testbss	grade-lab3	/^def test_testbss():$/;"	f
+tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
+tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
+tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
+tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
+tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
+tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
+tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
+tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
+tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
+tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
+tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
+tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
+tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
+tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
+tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
+thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
+thisenv	obj/user/badsegment.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/breakpoint.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/buggyhello.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/buggyhello2.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/divzero.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/evilhello.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/faultread.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/faultreadkernel.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/faultwrite.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/faultwritekernel.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/hello.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/softint.asm	/^	thisenv = 0;$/;"	d
+thisenv	obj/user/testbss.asm	/^	thisenv = 0;$/;"	d
+time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
+tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
+tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
+togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
+trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
+trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
+trap_init	kern/trap.c	/^trap_init(void)$/;"	f
+trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
+trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
+true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
+ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
+ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
+ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
+ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
+ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
+ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
+ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
+ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
+ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
+ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
+ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
+ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
+ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
+ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
+ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
+ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
+ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
+ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
+ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
+ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
+ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
+ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
+ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
+ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
+ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
+ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
+ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
+ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
+ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
+ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
+ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
+ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
+ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
+ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
+ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
+ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
+ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
+ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
+uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
+uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
+uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
+uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
+uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
+uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
+umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
+umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
+unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
+user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
+user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
+user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
+user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
+va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
+va_arg	inc/stdarg.h	/^#define va_arg(/;"	d
+va_end	inc/stdarg.h	/^#define va_end(/;"	d
+va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
+va_start	inc/stdarg.h	/^#define va_start(/;"	d
+vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
+vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
+void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
+void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
+void	obj/boot/boot.asm	/^void$/;"	l
+void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
+void	obj/kern/kernel.asm	/^void *$/;"	l
+void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/kern/kernel.asm	/^void$/;"	l
+void	obj/user/badsegment.asm	/^void *$/;"	l
+void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/badsegment.asm	/^void$/;"	l
+void	obj/user/breakpoint.asm	/^void *$/;"	l
+void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/breakpoint.asm	/^void$/;"	l
+void	obj/user/buggyhello.asm	/^void *$/;"	l
+void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/buggyhello.asm	/^void$/;"	l
+void	obj/user/buggyhello2.asm	/^void *$/;"	l
+void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/buggyhello2.asm	/^void$/;"	l
+void	obj/user/divzero.asm	/^void *$/;"	l
+void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/divzero.asm	/^void$/;"	l
+void	obj/user/evilhello.asm	/^void *$/;"	l
+void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/evilhello.asm	/^void$/;"	l
+void	obj/user/faultread.asm	/^void *$/;"	l
+void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/faultread.asm	/^void$/;"	l
+void	obj/user/faultreadkernel.asm	/^void *$/;"	l
+void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/faultreadkernel.asm	/^void$/;"	l
+void	obj/user/faultwrite.asm	/^void *$/;"	l
+void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/faultwrite.asm	/^void$/;"	l
+void	obj/user/faultwritekernel.asm	/^void *$/;"	l
+void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/faultwritekernel.asm	/^void$/;"	l
+void	obj/user/hello.asm	/^void *$/;"	l
+void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/hello.asm	/^void$/;"	l
+void	obj/user/softint.asm	/^void *$/;"	l
+void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/softint.asm	/^void$/;"	l
+void	obj/user/testbss.asm	/^void *$/;"	l
+void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
+void	obj/user/testbss.asm	/^void$/;"	l
+vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
+vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
+wait	gradelib.py	/^    def wait(self):$/;"	f
+waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
+warn	inc/assert.h	/^#define warn(/;"	d
+was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
+width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
+width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
+width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
+width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
+width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
+width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
+width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
+width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
+width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
+width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
+width	obj/user/divzero.asm	/^				width = 0;$/;"	d
+width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/divzero.asm	/^		width = -1;$/;"	d
+width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
+width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
+width	obj/user/faultread.asm	/^				width = 0;$/;"	d
+width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/faultread.asm	/^		width = -1;$/;"	d
+width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
+width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
+width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
+width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
+width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
+width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
+width	obj/user/hello.asm	/^				width = 0;$/;"	d
+width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/hello.asm	/^		width = -1;$/;"	d
+width	obj/user/softint.asm	/^				width = 0;$/;"	d
+width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/softint.asm	/^		width = -1;$/;"	d
+width	obj/user/testbss.asm	/^				width = 0;$/;"	d
+width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
+width	obj/user/testbss.asm	/^		width = -1;$/;"	d
+wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon5	file:
+write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
+xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
+zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
+zero	user/divzero.c	/^int zero;$/;"	v
